{"version":3,"file":"static/js/920.9915533f.chunk.js","mappings":"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","sources":["../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/account.ts","../../src/bpf-loader-deprecated.ts","../../src/transaction-constants.ts","../../src/layout.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/util/assert.ts","../../src/transaction.ts","../../src/sysvar.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/nonce-account.ts","../../src/system-program.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../src/compute-budget.ts","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../node_modules/fast-stable-stringify/index.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/util/tx-expiry-custom-errors.ts","../../src/connection.ts","../../src/util/url.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/vote-program.ts","../../src/util/send-and-confirm-raw-transaction.ts","../../src/util/cluster.ts","../../src/index.ts","../node_modules/base64-js/index.js","../node_modules/bn.js/lib/bn.js","../node_modules/eventemitter3/index.js"],"sourcesContent":["import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return is_on_curve(pubkey.toBytes()) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import nacl from 'tweetnacl';\nimport type {SignKeyPair as KeyPair} from 'tweetnacl';\nimport type {Buffer} from 'buffer';\n\nimport {toBuffer} from './util/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return toBuffer(this._keypair.secretKey);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {\n  PACKET_DATA_SIZE,\n  SIGNATURE_LENGTH_IN_BYTES,\n} from './transaction-constants';\nimport {Connection} from './connection';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const newOpts = opts as TransactionBlockhashCtor;\n      Object.assign(this, newOpts);\n      this.recentBlockhash = newOpts.blockhash;\n      this.lastValidBlockHeight = newOpts.lastValidBlockHeight;\n    } else {\n      const oldOpts = opts as TransactionCtorFields_DEPRECATED;\n      Object.assign(this, oldOpts);\n      this.recentBlockhash = oldOpts.recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    accountMetas.sort(function (x, y) {\n      const pubkeySorting = x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58());\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable =\n        x.isWritable === y.isWritable ? pubkeySorting : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n    this._verifySignatures(message.serialize(), true);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {u64} from '@solana/buffer-layout-utils';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\nimport {IInstructionInputData} from './instruction';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'RequestUnits' | 'RequestHeapFrame';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n\n  /** Additional fee to pay */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport crossFetch from 'cross-fetch';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction, TransactionStatus} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {toBuffer} from './util/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './util/tx-expiry-custom-errors';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfimationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  customFetch?: typeof crossFetch,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : crossFetch;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware:\n    | ((url: string, options: any) => Promise<Response>)\n    | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (url: string, options: any) => {\n      const modifiedFetchArgs = await new Promise<[string, any]>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(url, options, (modifiedUrl, modifiedOptions) =>\n              resolve([modifiedUrl, modifiedOptions]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64) */\n  encoding?: 'base64' | 'jsonParsed';\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  url: string,\n  options: any,\n  fetch: (modifiedUrl: string, modifiedOptions: any) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: typeof crossFetch;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitment,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfimationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfimationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as BlockheightBasedTransactionConfimationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const checkBlockHeight = async () => {\n      try {\n        const blockHeight = await this.getBlockHeight(commitment);\n        return blockHeight;\n      } catch (_e) {\n        return -1;\n      }\n    };\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config = strategy as BlockheightBasedTransactionConfimationStrategy;\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitment?: Commitment,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get latest blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block height information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block production information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(TransactionResponse | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","export function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfimationStrategy,\n  Connection,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {BlockheightBasedTransactionConfimationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: BlockheightBasedTransactionConfimationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | BlockheightBasedTransactionConfimationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy:\n    | BlockheightBasedTransactionConfimationStrategy\n    | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfimationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './compute-budget';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './ed25519-program';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './publickey';\nexport * from './stake-program';\nexport * from './system-program';\nexport * from './secp256k1-program';\nexport * from './transaction';\nexport * from './transaction-constants';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './vote-program';\nexport * from './sysvar';\nexport * from './errors';\nexport * from './util/borsh-schema';\nexport * from './util/send-and-confirm-transaction';\nexport * from './util/send-and-confirm-raw-transaction';\nexport * from './util/cluster';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n"],"names":["toBuffer","arr","Buffer","Uint8Array","buffer","byteOffset","byteLength","minimalisticAssert","assert","val","msg","Error","equal","l","r","Object","create","inherits_browserModule","ctor","superCtor","super_","prototype","constructor","value","enumerable","writable","configurable","TempCtor","require$$0","inherits","require$$1","isSurrogatePair","i","charCodeAt","length","htonl","w","zero2","word","zero8","utils","enc","Array","isArray","slice","res","replace","push","parseInt","p","c","toString","endian","start","end","len","k","m","b","a","d","e","buf","pos","ah","al","bh","lo","hi","bl","ch","cl","dh","dl","carry","eh","el","num","BlockHash","this","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","common","update","toArray","concat","join32","_update","digest","_pad","_digest","bytes","t","rotr32","ch32","x","y","z","maj32","p32","s","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","call","h","W","_1","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","_256","f","g","T1","T2","SHA224","_224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","_512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","_384","sha","require$$4","sum32_3","RIPEMD160","j","K","Kh","ripemd","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","key","Hash","inner","outer","_init","hmac","exports","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","_normalizeError","missing","forEach","form","normalize","join","String","fromCharCode","message","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","version","defineProperty","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","hex","JSON","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","name","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","checkAbstract","censorship","permanent","globalLogger","logger","addSlice","array","arguments","isInteger","arrayify","options","result","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","v","isBytes","data","Struct","properties","assign","encode","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Enum","super","enum","map","Map","MAX_SEED_LENGTH","PublicKey","_bn","undefined","isPublicKeyData","decoded","bs58","BN","equals","publicKey","eq","toBase58","toBytes","toJSON","toArrayLike","zeroPad","copy","fromPublicKey","seed","programId","seeds","TypeError","publicKeyBytes","is_on_curve","createProgramAddressSync","nonce","address","seedsWithNonce","err","findProgramAddressSync","pubkeyData","default","set","fields","naclLowLevel","nacl","gf","chk","den","den2","den4","den6","neq25519","set25519","gf1","unpack25519","S","M","Z","pow2523","I","pack25519","crypto_verify_32","Account","secretKey","_keypair","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","SIGNATURE_LENGTH_IN_BYTES","property","BufferLayout","rustString","rsl","_decode","decode","bind","_encode","rslShim","offset","str","chars","alloc","span","decodeLength","size","elem","shift","encodeLength","rem_len","Message","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","programIdIndex","isAccountSigner","index","numRequiredSignatures","isAccountWritable","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","isProgramId","has","programIds","values","nonProgramIds","filter","_","numKeys","keyCount","shortvec","instruction","accounts","from","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","Layout","transaction","signData","byteArray","accountCount","dataSlice","messageArgs","TransactionStatus","DEFAULT_SIGNATURE","fill","TransactionInstruction","opts","pubkey","isSigner","isWritable","Transaction","signature","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","hasOwnProperty","newOpts","blockhash","oldOpts","nonceInstruction","signers","add","items","item","compileMessage","accountMetas","accountMeta","includes","sort","pubkeySorting","localeCompare","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","findIndex","feePayerIndex","payerMeta","splice","signedKeys","unsignedKeys","indexOf","meta","invariant","keyIndex","_compile","valid","every","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","Set","sign","uniqueSigners","signer","_partialSign","_verifySignatures","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","async","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","sleep","ms","Promise","resolve","setTimeout","encodeData","type","allocLength","layout","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","SystemInstruction","checkProgramId","typeIndex","ixType","entries","SYSTEM_INSTRUCTION_LAYOUTS","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","Transfer","toPubkey","TransferWithSeed","basePubkey","Allocate","accountPubkey","base","AllocateWithSeed","Assign","AssignWithSeed","CreateWithSeed","authorized","InitializeNonceAccount","noncePubkey","AdvanceNonceAccount","WithdrawNonceAccount","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","expectedLength","freeze","u64","BigInt","createAccountWithSeed","createAccount","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","Math","ceil","chunkSize","payer","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLength","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","BPF_LOADER_PROGRAM_ID","BpfLoader","getMinNumSignatures","elf","loaderProgramId","load","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","units","additionalFee","RequestUnits","RequestHeapFrame","ComputeBudgetProgram","global","self","__self__","F","fetch","DOMException","support","Symbol","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","normalizeName","test","normalizeValue","iteratorFor","iterator","next","done","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","rejected","arrayBuffer","then","text","readAsText","readBlobAsText","readArrayBufferAsText","formData","json","parse","oldValue","callback","thisArg","methods","Request","input","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","trim","split","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","stack","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","ctx","module","objToString","objKeys","isArrayProp","max","propVal","toStr","isFinite","returnVal","trailingZeros","n","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","floor","getFirstSlotInEpoch","pow","getLastSlotInEpoch","SendTransactionError","logs","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","PublicKeyFromString","coerce","instance","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","createRpcResult","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","schema","jsonRpcResultAndContext","context","number","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","state","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","endpoint","commitmentOrConfig","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","URL","protocol","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","client","confirmTransactionInitialTimeout","useHttps","host","port","Number","makeWebsocketUrl","customFetch","crossFetch","fetchWithMiddleware","modifiedFetchArgs","modifiedUrl","modifiedOptions","RpcClient","agent","too_many_requests_retries","waitTime","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","_buildArgs","unsafeRes","getBalanceAndContext","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","arg","mintAddress","getAccountInfoAndContext","publicKeys","getMultipleAccountsInfoAndContext","configOrCommitment","extra","encoding","filters","strategy","rawSignature","decodedSignature","subscriptionCommitment","timeoutId","subscriptionId","confirmationPromise","onSignature","__type","PROCESSED","checkBlockHeight","getBlockHeight","_e","expiryPromise","timeoutMs","TIMED_OUT","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","outcome","race","clearTimeout","removeSignatureListener","startSlot","limit","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","addresses","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","rest","block","endSlot","transactionDetails","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","getSlot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","getNonceAndContext","to","disableCache","timeSinceFetch","expired","Date","now","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","includeAccounts","originalTx","_blockhashWithExpiryBlockHeight","encodedTransaction","sigVerify","traceIndent","logTrace","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","clearInterval","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","delete","_handleServerNotification","callbackArgs","cb","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","skipValidation","TextEncoder","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","fromSecretKey","createInstructionWithPublicKey","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","lockup","Initialize","stakePubkey","Delegate","newAuthorized","stakeAuthorizationType","Authorize","o","custodianPubkey","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","Split","splitStakePubkey","Merge","sourceStakePubKey","Withdraw","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","splitInstruction","publicKeyCreate","ecdsaSign","secp256k1","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","sha3","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","startsWith","substr","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","recid","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","authorizedWithdrawer","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","authorizedVoter","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","idx","isEmpty","VoteInit","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","voteInit","InitializeAccount","voteAuthorizationType","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","http","devnet","testnet","https","clusterApiUrl","cluster","tls","LAMPORTS_PER_SOL","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","output","isBN","negative","words","red","wordSize","window","require","parseHex4Bits","parseHexByte","lowerBound","parseBase","mul","min","move","dest","src","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","_strip","limbLen","limbPow","mod","imuln","_iaddn","_move","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","out","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","outLen","prev","mod3","one","nOne","lpow","inv","wnd","currentLen","mont","u","prefix","Events","EE","fn","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","removeAllListeners","prefixed"],"sourceRoot":""}