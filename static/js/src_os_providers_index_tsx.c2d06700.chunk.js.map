{"version":3,"file":"static/js/src_os_providers_index_tsx.c2d06700.chunk.js","mappings":"6dA4BA,MAAMA,GAAUC,EAAAA,EAAAA,eAA0B,IAkD1C,EAtC0B,IAUnB,IAVoB,SACzBC,EADyB,MAEzBC,EAFyB,MAGzBC,EAAQ,GAHiB,KAIzBC,GAAO,GAMH,EACJ,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAKC,EAAAA,EAAAA,KAAiBC,GAAqBA,EAAMF,KACjDG,GAAgBC,EAAAA,EAAAA,cACpBC,iBAAA,aACQP,GAASQ,EAAAA,EAAAA,OAAkB,YAAOC,WAC1C,CAACT,IAEGU,GAAWC,EAAAA,EAAAA,UAAQ,MAAST,KAAIG,mBAAkB,CAACH,EAAIG,IACvDO,EAAiBb,EACnB,CACEc,kBAAmB,IAAMC,SAASC,eAAelB,MAC7B,kBAATE,EAAoBA,EAAO,SAExCiB,EAEJ,OACE,SAACtB,EAAQuB,SAAT,CAAkBC,MAAOR,EAAzB,UACE,oBAASS,GAAItB,EAAOC,MAAO,CAAEsB,gBAAiB,iBAAkBtB,GAAhE,SACGc,GACC,SAAC,EAAAS,eAAD,IAAoBT,EAApB,SAAqChB,IAErCA,OAWJ0B,EAAa,IAA8C,IAA7C,SAAE1B,GAA0C,EAC9D,OACE,SAACF,EAAQ6B,SAAT,UACIL,GACAM,EAAAA,SAAAA,IAAa5B,GAAW6B,IAAUC,EAAAA,EAAAA,cAAaD,EAAO,IAAKP,SAStDS,EAAUC,IACrB,MAAMC,UAAYC,EAAAA,UAChBC,SACE,MAAM,aAAEC,KAAiBC,GAASC,KAAKC,MACvC,OACE,SAACb,EAAD,WACE,SAACM,EAAD,CAAkBQ,IAAKJ,KAAkBC,OAKjD,OAAOI,EAAAA,EAAAA,aAA6B,CAACF,EAAOC,KAC1C,SAACP,EAAD,IAASM,EAAOC,IAAKA,OAOZE,EAAQ,KACZC,EAAAA,EAAAA,YAAuB7C,GCtG1BA,GAAUC,EAAAA,EAAAA,eAA4B,IAc5C,EAL4B,IAA4C,IAA3C,SAAEC,GAAwC,EACrE,MAAM4C,GAAQrC,EAAAA,EAAAA,KAAiBC,GAAqBA,EAAMoC,QACpD9B,GAAWC,EAAAA,EAAAA,UAAQ,MAAS6B,WAAU,CAACA,IAC7C,OAAO,SAAC,EAAQvB,SAAT,CAAkBC,MAAOR,EAAzB,SAAoCd,KAOvC6C,EAAsB,IAA8C,IAA7C,SAAE7C,GAA0C,EACvE,OACE,SAAC,EAAQ2B,SAAT,UACIL,GACAM,EAAAA,SAAAA,IAAa5B,GAAW6B,IAAUC,EAAAA,EAAAA,cAAaD,EAAO,IAAKP,SAStDwB,EAAYd,IACvB,MAAMC,UAAYC,EAAAA,UAChBC,SACE,MAAM,aAAEC,KAAiBC,GAASC,KAAKC,MACvC,OACE,SAACM,EAAD,WACE,SAACb,EAAD,CAAkBQ,IAAKJ,KAAkBC,OAKjD,OAAOI,EAAAA,EAAAA,aAA6B,CAACF,EAAOC,KAC1C,SAACP,EAAD,IAASM,EAAOC,IAAKA,OAOZO,EAAU,KACdJ,EAAAA,EAAAA,YAAyB7C,GCpD5BA,GAAUC,EAAAA,EAAAA,eAA8B,IAc9C,EAL8B,IAA4C,IAA3C,SAAEC,GAAwC,EACvE,MAAMgD,GAASzC,EAAAA,EAAAA,KAAiBC,GAAqBA,EAAMwC,SACrDlC,GAAWC,EAAAA,EAAAA,UAAQ,MAASiC,YAAW,CAACA,IAC9C,OAAO,SAAC,EAAQ3B,SAAT,CAAkBC,MAAOR,EAAzB,SAAoCd,KAOvCiD,EAAwB,IAA8C,IAA7C,SAAEjD,GAA0C,EACzE,OACE,SAAC,EAAQ2B,SAAT,UACIL,GACAM,EAAAA,SAAAA,IAAa5B,GAAW6B,IAAUC,EAAAA,EAAAA,cAAaD,EAAO,IAAKP,SAStD4B,EAAclB,IACzB,MAAMC,UAAYC,EAAAA,UAChBC,SACE,MAAM,aAAEC,KAAiBC,GAASC,KAAKC,MACvC,OACE,SAACU,EAAD,WACE,SAACjB,EAAD,CAAkBQ,IAAKJ,KAAkBC,OAKjD,OAAOI,EAAAA,EAAAA,aAA6B,CAACF,EAAOC,KAC1C,SAACP,EAAD,IAASM,EAAOC,IAAKA,OAOZW,EAAY,KAChBR,EAAAA,EAAAA,YAA2B7C,GCpD9BA,GAAUC,EAAAA,EAAAA,eAA+B,IAc/C,EAL+B,IAA4C,IAA3C,SAAEC,GAAwC,EACxE,MAAMoD,GAAW7C,EAAAA,EAAAA,KAAiBC,GAAqBA,EAAM4C,WACvDtC,GAAWC,EAAAA,EAAAA,UAAQ,MAASqC,cAAa,CAACA,IAChD,OAAO,SAAC,EAAQ/B,SAAT,CAAkBC,MAAOR,EAAzB,SAAoCd,KAOvCqD,EAAyB,IAA8C,IAA7C,SAAErD,GAA0C,EAC1E,OACE,SAAC,EAAQ2B,SAAT,UACIL,GACAM,EAAAA,SAAAA,IAAa5B,GAAW6B,IAAUC,EAAAA,EAAAA,cAAaD,EAAO,IAAKP,SAStDgC,EAAetB,IAC1B,MAAMC,UAAYC,EAAAA,UAChBC,SACE,MAAM,aAAEC,KAAiBC,GAASC,KAAKC,MACvC,OACE,SAACc,EAAD,WACE,SAACrB,EAAD,CAAkBQ,IAAKJ,KAAkBC,OAKjD,OAAOI,EAAAA,EAAAA,aAA6B,CAACF,EAAOC,KAC1C,SAACP,EAAD,IAASM,EAAOC,IAAKA,OAOZe,EAAa,KACjBZ,EAAAA,EAAAA,YAA4B7C,G,oEChE9B,MAAM0D,EAAOC,IAAD,CACjBC,OAAQ,MACRC,KAAM,SACNC,QAAS,mCACTC,SAAU,EACVJ,UACAK,WAAY,CACVC,YAAa,UAEfC,QACE,sIAKSC,EAAQR,IAAD,CAClBC,OAAQ,OACRC,KAAM,SACNC,QAAS,+CACTC,SAAU,EACVJ,UACAK,WAAY,CACVC,YAAa,UAEfC,QACE,sIAyDJ,EArDsB,CACpBR,EAAI,KACJS,EAAK,KACL,CACEP,OAAQ,OACRC,KAAM,kBACNC,QAAS,+CACTC,SAAU,EACVJ,QAAS,IACTK,WAAY,CACVC,YAAa,WAEfC,QACE,qIAEJ,CACEN,OAAQ,OACRC,KAAM,WACNC,QAAS,+CACTC,SAAU,EACVJ,QAAS,IACTK,WAAY,CACVC,YAAa,YAEfC,QACE,sIAEJ,CACEN,OAAQ,MACRC,KAAM,UACNC,QAAS,+CACTC,SAAU,EACVJ,QAAS,IACTK,WAAY,CACVC,YAAa,WAEfC,QACE,sIAEJ,CACEN,OAAQ,OACRC,KAAM,WACNC,QAAS,+CACTC,SAAU,EACVJ,QAAS,IACTK,WAAY,CACVC,YAAa,YAEfC,QACE,uICIN,MC9DME,EAAgB,IDhBtB,MAQEC,cAAe,IAAD,YAPNC,cAOM,OANNC,YAMM,OALLZ,aAKK,OAJLa,aAIK,OAHNC,aAGM,OAFNC,WAEM,OAWNC,MAAQ9D,SACV2B,KAAK8B,SAASM,MAAQpC,KAAK+B,OAAe,CAAC/B,KAAK8B,SAAU9B,KAAK+B,QAC5D,IAAIM,SAAQhE,UAEjB,GAAI2B,KAAKiC,QAAS,OAAOjC,KAAKkC,MAAMI,KAAKC,GAEzCvC,KAAKiC,SAAU,EAEf,IAAIO,cAAyB,IAAIC,EAAAA,IAAoBF,WAClDG,gBAAgB1C,KAAKmB,SACrBwB,UAiBH,IAhBqB,WAAjB3C,KAAKgC,UAAsBQ,EAAYA,EAAUI,OAAOC,IAE1DL,EADmB,YAAjBxC,KAAKgC,QACKQ,EAAUI,OAAO,CAACjB,EAAK,KAAMT,EAAI,OAC9BsB,EAAUI,OAAO,CAAC1B,EAAI,OAEvCsB,EAAUM,SAASC,GAAU/C,KAAK8B,SAASkB,IAAID,EAAMzB,QAASyB,KAE9D/C,KAAK+B,OAASkB,KAAK,WACjBjD,KAAKE,IAAI,WACTF,KAAKkD,MAAM,UACXlD,KAAKkD,MAAM,QACXV,EAAUM,SAASK,GAAQnD,KAAKoD,IAAID,QAGtCZ,EAAQ,CAACvC,KAAK8B,SAAU9B,KAAK+B,SAEtB/B,KAAKkC,MAAMmB,QAAQrD,KAAKkC,MAAMoB,OAAXtD,CAAmB,CAACA,KAAK8B,SAAU9B,KAAK+B,SAElE/B,KAAKiC,SAAU,KAxCL,KA4CdsB,IAAMlF,UACJ,MAAOyD,SAAkB9B,KAAKmC,QAC9B,OAAOqB,MAAMC,KAAK3B,EAAS4B,WA9Cf,KAiDdC,cAAgBtF,UACd,MAAOyD,SAAkB9B,KAAKmC,QAC9B,OAAOL,EAAS8B,IAAIC,IAnDR,KAsDdC,KAAOzF,eAAO0F,GAAuD,IAAtCC,EAAqC,uDAA7B,GACrC,MAAOlC,EAAUC,SAAgB,EAAKI,QACtC,IAAI8B,EAAsB,GAC1B,IAAKF,EAAS,MAAO,GACrB,MAAMG,EAAQH,EAAU,KAOxB,OANAhC,EAAOoC,OAAOD,GAAOpB,SAAQ,IAAc,IAAb,IAAE5C,GAAU,EACxC,GAAI+D,EAAOG,WAAU,QAAC,QAAE9C,GAAH,SAAiBA,IAAYpB,KAAO,EAAG,CAC1D,MAAM6C,EAAQjB,EAAS8B,IAAI1D,GACvB6C,GAAOkB,EAAO3B,KAAKS,OAGb,IAAViB,EAAoBC,EACjBA,EAAOI,MAAM,EAAGL,IAjEvBhE,KAAK8B,SAAW,IAAIwC,IACpBtE,KAAK+B,YAASjD,EACdkB,KAAKmB,QAAUA,EAAAA,GACfnB,KAAKgC,QAAUuC,EAAAA,GACfvE,KAAKiC,SAAU,EACfjC,KAAKkC,MAAQ,GAEblC,KAAKmC,UCCH3E,GAAUC,EAAAA,EAAAA,eAA4B,IA+C5C,EAnC4B,IAA4C,IAA3C,SAAEC,GAAwC,EACrE,MAAMI,GAAWC,EAAAA,EAAAA,MACXyG,GAAQvG,EAAAA,EAAAA,KAAiBC,GAAqBA,EAAMsG,QACpDlE,GAAQrC,EAAAA,EAAAA,KAAiBC,GAAqBA,EAAMoC,QACpDmE,GAAUrG,EAAAA,EAAAA,cACdC,iBAAA,aACQP,GAAS4G,EAAAA,EAAAA,OAAY,YAAOnG,WACpC,CAACT,IAEG6G,GAAcvG,EAAAA,EAAAA,cAClBC,UAAgC,IAAD,EAC7B,IAAKuG,EAAAA,QAAAA,UAAkBC,GACrB,MAAM,IAAIC,MAAM,wBAElB,MAAMC,QAAkBnD,EAAc+B,cAAckB,GACpD,QAA4B/F,KAAf,OAATiG,QAAS,IAATA,OAAA,EAAAA,EAAWxD,UAAwB,OAAOwD,EAAUxD,SAKxD,GAHcyD,OAAOtB,OAAOpD,GAAO8D,WACjC,QAAC,SAAEa,GAAH,SAAkBA,IAAaJ,MAEpB,EAAG,OAAO,EAEvB,MAAMK,QAAiBT,EAAQ,CAAEnD,QAASuD,IAC1C,aAAIK,EAASL,UAAb,OAAI,EAAuBtD,SAAU,OAAO2D,EAASL,GAAatD,SAClE,MAAM,IAAIuD,MAAM,+BAElB,CAACL,EAASnE,IAEN9B,GAAWC,EAAAA,EAAAA,UACf,MAAS+F,QAAOC,UAASE,cAAa/C,cAA/B,KACP,CAAC4C,EAAOC,EAASE,IAGnB,OAAO,SAAC,EAAQ5F,SAAT,CAAkBC,MAAOR,EAAzB,SAAoCd,KAOvCyH,EAAsB,IAA8C,IAA7C,SAAEzH,GAA0C,EACvE,OACE,SAAC,EAAQ2B,SAAT,UACIL,GACAM,EAAAA,SAAAA,IAAa5B,GAAW6B,IAAUC,EAAAA,EAAAA,cAAaD,EAAO,IAAKP,SAStDoG,EAAY1F,IACvB,MAAMC,UAAYC,EAAAA,UAChBC,SACE,MAAM,aAAEC,KAAiBC,GAASC,KAAKC,MACvC,OACE,SAACkF,EAAD,WACE,SAACzF,EAAD,CAAkBQ,IAAKJ,KAAkBC,OAKjD,OAAOI,EAAAA,EAAAA,aAA6B,CAACF,EAAOC,KAC1C,SAACP,EAAD,IAASM,EAAOC,IAAKA,OAOZmF,EAAU,KACdhF,EAAAA,EAAAA,YAAyB7C,I,4DC/FlC,MAAM8H,EAAO,WAOAC,GAAcC,EAAAA,EAAAA,kBACxB,GAAEF,iBACHjH,UAAyC,IAAlC,MAAEoH,GAA+B,EACtC,IAAKb,EAAAA,QAAAA,UAAkBa,GACrB,MAAM,IAAIX,MAAM,gCAClB,MAAM,KAAEY,GAASC,OAAOC,OAClBC,EAAiBjB,EAAAA,QAAAA,YAAoBa,IACrC,MAAEzG,SAAgB0G,EAAKI,WAAWC,wBACtCF,EACA,CAAEG,UAAWN,EAAKO,gBAEpB,IAAIC,EAAsB,GAM1B,OALAlH,EAAM8D,SAAQ,IAAyC,IAAxC,OAAEqD,EAAQvB,SAAWwB,KAAMC,IAAY,EACpD,MAAM/E,EAAU6E,EAAOG,WACjBF,EAAOV,EAAKa,iBAAiBF,GACnC,OAAQH,EAAK5E,GAAW8E,KAEnBF,KAIEM,GAAahB,EAAAA,EAAAA,kBAIvB,GAAEF,gBAAmBjH,MAAA,OAAsC,IAA/B,QAAEiD,GAA4B,GAAjB,SAAEmF,GAAe,EAC3D,IAAK7B,EAAAA,QAAAA,UAAkBtD,GAAU,MAAM,IAAIwD,MAAM,2BACjD,MACEhE,UAAY,CAACQ,GAAU8E,IACrBK,IACJ,GAAIL,EAAM,MAAO,CAAE,CAAC9E,GAAU8E,GAC9B,MAAM,KAAEV,GAASC,OAAOC,OAExB,MAAO,CAAE,CAACtE,SADQoE,EAAKgB,eAAepF,OAI3BqF,GAAenB,EAAAA,EAAAA,kBAIzB,GAAEF,kBAAqBjH,UAA8B,IAAvB,QAAEiD,EAAF,KAAW8E,GAAW,EACrD,IAAKxB,EAAAA,QAAAA,UAAkBtD,GAAU,MAAM,IAAIwD,MAAM,mBACjD,IAAKsB,EAAM,MAAM,IAAItB,MAAM,iBAC3B,MAAO,CAAE,CAACxD,GAAU8E,MAGTQ,GAAgBpB,EAAAA,EAAAA,kBAC1B,GAAEF,mBACHjH,UAA6C,IAAtC,QAAEiD,GAAmC,EAC1C,IAAKsD,EAAAA,QAAAA,UAAkBtD,GAAU,MAAM,IAAIwD,MAAM,mBACjD,MAAO,CAAExD,cA6Bb,GArBcuF,EAAAA,EAAAA,aAAY,CACxBxF,KAAMiE,EACNwB,aAlEkC,GAmElCC,SAAU,GACVC,cAAgBC,IACTA,EACFC,QAAQ3B,EAAY4B,WAAW,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,SAAwBA,KACvDF,QACCV,EAAWW,WACX,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCP,EAAaQ,WACb,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCN,EAAcO,WACd,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,SAAoClJ,EAAMkJ,EAAQ9F,eAI1D,S,qECjFA,MAAMgE,EAAO,QAUAgC,GAAc9B,EAAAA,EAAAA,kBAIxB,qBAAsBnH,MAAOkJ,EAAP,KAA4B,IAAlB,SAAEd,GAAe,EAClD,MACE/F,QAAUY,QAASkG,IACjBf,IACJ,IAAK7B,EAAAA,QAAAA,UAAkB4C,GACrB,MAAM,IAAI1C,MAAM,+BAClB,MAAM2C,EAAK,IAAIC,EAAAA,EAAIF,GAAeG,eAAe,UAEjD,MAAO,CAAEC,cADuBH,EAAGI,QAAQ,aAAe,MAI/CC,GAAgBtC,EAAAA,EAAAA,kBAI1B,uBAAwBnH,MAAOuJ,EAAP,KAAkC,IAAlB,SAAEnB,GAAe,EAC1D,MACE/F,QAAQ,QAAEY,IACRmF,IACJ,IAAK7B,EAAAA,QAAAA,UAAkBtD,GACrB,MAAM,IAAIwD,MAAM,+BAClB,MAAM2C,EAAK,IAAIC,EAAAA,EAAIpG,GAASqG,eAAe,UAE3C,aADMF,EAAGM,QAAQ,UAAWH,GACrB,CAAEA,cAGEI,GAAgBxC,EAAAA,EAAAA,kBAC1B,uBACDnH,UACS,CAAE4D,cA4Bb,GApBc4E,EAAAA,EAAAA,aAAY,CACxBxF,KAAMiE,EACNwB,aApD+B,CAC/Bc,SAAS,EACT3F,SAAS,GAmDT8E,SAAU,GACVC,cAAgBC,IACTA,EACFC,QACCI,EAAYH,WACZ,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCY,EAAcX,WACd,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCc,EAAcb,WACd,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,SAI1D,S,8LC3D4Ba,EAAAA,EAAAA,iBAAgBC,EAAAA,aAArC,MACMnK,GACXoK,EAAAA,EAAAA,oBAAmBD,EAAAA,aACRjK,GACXmK,EAAAA,EAAAA,oBAAmBF,EAAAA,cAKPG,EAAAA,EAAAA,gBAAe,CAC3BC,WAAaC,GACXA,EAAqBC,EAAAA,GACvBC,UAAUA,EAAAA,EAAAA,GAAS,UACnBC,QAAS,CACP1K,GADO,KAEP2K,MAFO,KAGPC,KAHO,KAIPlI,OAJO,KAKPI,SALO,KAMP0D,MANO,KAOPlE,MAPO,KAQP6D,OARO,KASP0E,YATO,S,4FCpCX,MACEC,UAAU,OAAEC,EAAF,MAAUC,EAAV,SAAiBC,IACzBC,EAAAA,EAWEC,EAAe,CAACL,EAAkBM,IACjCA,GAAW5F,MAAM6F,QAAQD,IAClB,gBAARE,EAAAA,IAA0BF,EAAOG,SAASN,IAC5CG,EAAOI,QAAQP,GACVG,EAAOK,QAAQ9L,GAAUmL,EAASnL,MAHK,GAkB1C2H,EAAO,OACPwB,EAA0B,CAC9BgC,SAAU,GACVM,OAAQ,IAQGM,GAAelE,EAAAA,EAAAA,kBACzB,qBACDnH,UAES,CAAEyK,SAAU,SA5BDzK,WACpB,IACE,MAAMsL,QAAYC,MAAMb,GACxB,aAAaY,EAAIE,OACjB,MAAOC,GACP,MAAO,KAsBgBC,MACcf,OAK5BgB,GAAkBxE,EAAAA,EAAAA,kBAI5B,wBAA0BnH,MAAO4L,EAAP,KAAmC,IAAlB,SAAExD,GAAe,EAC7D,MACE/F,QAAUY,QAASkG,GACnBoB,MAAM,OAAEQ,EAAF,SAAUN,IACdrC,IACJ,IAAK7B,EAAAA,QAAAA,UAAkB4C,GACrB,MAAM,IAAI1C,MAAM,gCAClB,GAAIsE,EAAOG,SAASU,EAAStM,OAC3B,MAAM,IAAImH,MAAM,oDAClB,MAAMoF,EAAoB,IAAId,GAC9Bc,EAAU5H,KAAK2H,EAAStM,OACxB,MAAMwM,EAAsB,IAAKrB,GAEjC,OADAqB,EAAYF,EAAStM,OAASsM,EACvB,CAAEb,OAAQc,EAAWpB,SAAUqB,MAM3BC,GAAW5E,EAAAA,EAAAA,kBAIrB,iBAAmBnH,MAAOkJ,EAAP,KAA4B,IAAlB,SAAEd,GAAe,EAC/C,MACE/F,QAAUY,QAASkG,GACnBoB,MAAM,SAAEE,IACNrC,IAEJ,IAAK7B,EAAAA,QAAAA,UAAkB4C,GACrB,MAAM,IAAI1C,MAAM,gCAElB,MAAM2C,EAAK,IAAIC,EAAAA,EAAIF,GAAeG,eAAe,UAKjD,MAAO,CAAEyB,OAJMD,EACbL,QACOrB,EAAGI,QAAQ,WAAcf,EAAasC,YAKpCiB,GAAa7E,EAAAA,EAAAA,kBAIvB,mBAAqBnH,MAAO+K,EAAP,KAAiC,IAAlB,SAAE3C,GAAe,EACtD,MACE/F,QAAUY,QAASkG,GACnBoB,MAAM,SAAEE,IACNrC,IACJ,IAAK7B,EAAAA,QAAAA,UAAkB4C,GACrB,MAAM,IAAI1C,MAAM,gCAClBsE,EAASD,EAAaL,EAAUM,GAChC,MAAM3B,EAAK,IAAIC,EAAAA,EAAIF,GAAeG,eAAe,UAEjD,aADMF,EAAGM,QAAQ,SAAUqB,GACpB,CAAEA,aAGEkB,GAAa9E,EAAAA,EAAAA,kBAIvB,mBAAqBnH,MAAOV,EAAP,KAAgC,IAAlB,SAAE8I,GAAe,EACrD,MACE/F,QAAUY,QAASkG,GACnBoB,MAAM,OAAEQ,IACN3C,IACJ,IAAK7B,EAAAA,QAAAA,UAAkB4C,GACrB,MAAM,IAAI1C,MAAM,gCAClB,GAAIsE,EAAOG,SAAS5L,GAAQ,MAAO,GACnC,MAAMuM,EAAoB,IAAId,GAC9Bc,EAAU5H,KAAK3E,GACf,MAAM8J,EAAK,IAAIC,EAAAA,EAAIF,GAAeG,eAAe,UAEjD,aADMF,EAAGM,QAAQ,SAAUmC,GACpB,CAAEd,OAAQc,MAGNK,GAAe/E,EAAAA,EAAAA,kBAIzB,qBAAuBnH,MAAOV,EAAP,KAAgC,IAAlB,SAAE8I,GAAe,EACvD,MACE/F,QAAUY,QAASkG,GACnBoB,MAAM,OAAEQ,IACN3C,IACJ,IAAK7B,EAAAA,QAAAA,UAAkB4C,GACrB,MAAM,IAAI1C,MAAM,gCAClB,IAAKsE,EAAOG,SAAS5L,GAAQ,MAAO,GACpC,MAAMuM,EAAYd,EAAOK,QAAQe,GAAmBA,IAAW7M,IACzD8M,EAAM,IAAI/C,EAAAA,EAAIF,GACdC,EAAKgD,EAAI9C,eAAe,UAG9B,aAFMF,EAAGM,QAAQ,SAAUmC,SACrBO,EAAIC,aAAa/M,GAChB,CAAEyL,OAAQc,MAuCnB,GAhCcrD,EAAAA,EAAAA,aAAY,CACxBxF,KAAMiE,EACNwB,eACAC,SAAU,GACVC,cAAgBC,IACTA,EACFC,QACCwC,EAAavC,WACb,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACC8C,EAAgB7C,WAChB,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCkD,EAASjD,WACT,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCmD,EAAWlD,WACX,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCoD,EAAWnD,WACX,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCqD,EAAapD,WACb,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,SAI1D,S,uEC9LA,MACElG,KAAK,cAAEyJ,IACLzB,EAAAA,EAYE5D,EAAO,QAOAsF,GAAWpF,EAAAA,EAAAA,kBAAkB,kBAAmBnH,UAC3D,MAAM,KAAEwM,GAASlF,OAAOC,OAElB5G,QACE6L,EAAK/E,WAAWgF,mBAAmBD,EAAKE,cAAe,CAC3DC,QAAS,CACP,CAAEC,SAAU,KACZ,CAAEC,OAAQ,CAAEC,MAAOR,EAAeS,OAAQ,QAGhD,IAAIlF,EAAmB,GAMvB,OALAlH,EAAM8D,SAAQ,IAAyC,IAAxC,OAAEqD,EAAQvB,SAAWwB,KAAMC,IAAY,EACpD,MAAM/E,EAAU6E,EAAOG,WACjBF,EAAOyE,EAAKQ,cAAchF,GAChCH,EAAK5E,GAAW8E,KAEXF,KAGIoF,GAAU9F,EAAAA,EAAAA,kBAIpB,iBAAkBnH,MAAA,OAAsC,IAA/B,QAAEiD,GAA4B,GAAjB,SAAEmF,GAAe,EACxD,IAAK7B,EAAAA,QAAAA,UAAkBtD,GAAU,MAAM,IAAIwD,MAAM,wBACjD,MACExE,OAAS,CAACgB,GAAU8E,IAClBK,IACJ,GAAIL,EAAM,MAAO,CAAE,CAAC9E,GAAU8E,GAC9B,MAAM,KAAEyE,GAASlF,OAAOC,OAExB,MAAO,CAAE,CAACtE,SADQuJ,EAAKU,YAAYjK,OAIxBkK,GAAYhG,EAAAA,EAAAA,kBAItB,mBAAoBnH,UAA8B,IAAvB,QAAEiD,EAAF,KAAW8E,GAAW,EAClD,IAAKxB,EAAAA,QAAAA,UAAkBtD,GAAU,MAAM,IAAIwD,MAAM,wBACjD,IAAKsB,EAAM,MAAM,IAAItB,MAAM,iBAC3B,MAAO,CAAE,CAACxD,GAAU8E,MAwBtB,GAjBcS,EAAAA,EAAAA,aAAY,CACxBxF,KAAMiE,EACNwB,aAxD+B,GAyD/BC,SAAU,GACVC,cAAgBC,IACTA,EACFC,QAAQ0D,EAASzD,WAAW,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,SAAwBA,KACpDF,QACCoE,EAAQnE,WACR,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCsE,EAAUrE,WACV,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,SAI1D,S,iDC1EA,MAAM9B,EAAO,SAYAmG,GAAajG,EAAAA,EAAAA,kBACvB,qBACDnH,UACS,CAAEqN,cAIAC,GAAWnG,EAAAA,EAAAA,kBACrB,mBACDnH,UACS,CAAEW,YAIA4M,GAAapG,EAAAA,EAAAA,kBACvB,qBACDnH,UACS,CAAE4D,cAIA4J,GAAcrG,EAAAA,EAAAA,kBACxB,sBACDnH,UACS,CAAEyN,eAgCb,GAxBcjF,EAAAA,EAAAA,aAAY,CACxBxF,KAAMiE,EACNwB,aA7CgC,CAChC4E,SAAS,EACT1M,MAAO,GACPiD,SAAS,EACT6J,UAAU,GA0CV/E,SAAU,GACVC,cAAgBC,IACTA,EACFC,QACCuE,EAAWtE,WACX,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCyE,EAASxE,WACT,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACC0E,EAAWzE,WACX,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACC2E,EAAY1E,WACZ,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,SAI1D,S,0DCjEA,MAAM2E,EAAW,KACf,MAAMC,EAAQrG,OAAOsG,WACrB,OAAID,EAAQ,IAAY,KACpBA,EAAQ,IAAY,KACpBA,EAAQ,IAAY,KACpBA,EAAQ,KAAa,KACrBA,EAAQ,KAAa,KAClB,OAcH1G,EAAO,KACPwB,EAAwB,CAC5BoF,MAVIvG,OAAOwG,WAAW,iCAAiCC,QAAgB,QAChE,OAUPJ,MAAOrG,OAAOsG,WACdI,MAAON,IACPO,UAhBO,iBAAkB3G,QAAU4G,UAAUC,eAAiB,EAiB9DC,qBAAqB,EACrBC,kBAAkB,EAClBC,WAAY,CACVC,MAAO,GACPC,KAAM,KAQGC,GAAWtH,EAAAA,EAAAA,kBACrB,eACDnH,UACS,CAAE6N,YAIAa,GAASvH,EAAAA,EAAAA,kBAAkB,aAAiBnH,UAGhD,CAAE2N,MAFKrG,OAAOsG,WAELI,MADFN,QAIHiB,GAAyBxH,EAAAA,EAAAA,kBACnC,6BACDnH,UACS,CAAEoO,oBAAqBf,MAIrBuB,GAAsBzH,EAAAA,EAAAA,kBAChC,0BACDnH,UACS,CAAEqO,iBAAkBhB,MAIlBvN,GAAgBqH,EAAAA,EAAAA,kBAC1B,oBACDnH,UACS,CAAEsO,iBAoCb,GA5Bc9F,EAAAA,EAAAA,aAAY,CACxBxF,KAAMiE,EACNwB,eACAC,SAAU,GACVC,cAAgBC,IACTA,EACFC,QACC4F,EAAS3F,WACT,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACC6F,EAAO5F,WACP,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACC8F,EAAuB7F,WACvB,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACC+F,EAAoB9F,WACpB,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACC/I,EAAcgJ,WACd,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,SAI1D,S,iDCxHO,IAAK8F,GAAZ,SAAYA,GAAAA,EAAAA,EAAAA,QAAAA,GAAAA,UAAAA,EAAAA,EAAAA,SAAAA,GAAAA,WAAZ,CAAYA,IAAAA,EAAAA,KAeZ,MAAM5H,EAAO,cACPwB,EAAiC,CACrCqG,KAAMD,EAAgBE,QACtBC,KAAK,EACLC,KAAM,GAOKC,GAAiB/H,EAAAA,EAAAA,kBAI3B,GAAEF,oBAAuBjH,UACnB,IAAKH,MAkBd,GAXc2I,EAAAA,EAAAA,aAAY,CACxBxF,KAAMiE,EACNwB,eACAC,SAAU,GACVC,cAAgBC,IACTA,EAAQC,QACXqG,EAAepG,WACf,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,SAIxD,S,kFCtCA,MAAMoG,EAAmBnP,UACvB,MACE6C,KAAK,KAAEuM,EAAF,YAAQC,EAAR,cAAqBC,EAArB,YAAoCC,IACvC1E,EAAAA,EACJvD,OAAOC,OAAS,CACdlF,OAAQA,GAAU,IAAImN,EAAAA,GACtBC,SAAU,IAAIC,EAAAA,SAASN,GACvB/H,KAAM,IAAIsI,EAAAA,KAAKN,EAAaC,EAAeF,GAC3C5C,KAAM,IAAIoD,EAAAA,KAAKL,EAAaF,EAAaC,EAAeF,KAatDnI,EAAO,SACPwB,EAA4B,CAChC4E,SAAS,EACTpK,QAAS,GACTwM,SAAUI,OAAO,IAONC,GAAa3I,EAAAA,EAAAA,kBAAkB,qBAAqBnH,UACxD,CAAEqN,SAAS,MAGP0C,GAAc5I,EAAAA,EAAAA,kBAAkB,sBAAsBnH,UAC1D,CAAEqN,SAAS,MAGP2C,GAAgB7I,EAAAA,EAAAA,kBAC1B,wBACDnH,UACE,IAAKqC,EAAQ,MAAM,IAAIoE,MAAM,iCACvB0I,EAAiB9M,GACvB,MAAMY,QAAgBZ,EAAO4N,aACvBR,QAAiBnI,OAAOC,OAAOkI,SAASS,YAAYjN,GAC1D,MAAO,CAAEA,UAASwM,SAAUI,OAAOJ,GAAWpC,SAAS,MAI9C8C,GAAehJ,EAAAA,EAAAA,kBACzB,uBACDnH,UAA+C,IAAxC,SAAEyP,GAAqC,EAC5C,MAAO,CAAEA,eAIAW,GAAmBjJ,EAAAA,EAAAA,kBAC7B,2BACDnH,eAhDoBA,WAAa,IAAD,EAChC,UAAIsH,OAAOC,cAAX,OAAI,EAAelF,QAAQiF,OAAOC,OAAOlF,OAAOgO,mBAC1ClB,KA+CEmB,GACNhJ,OAAOiJ,SAASC,YAoCpB,GA5BchI,EAAAA,EAAAA,aAAY,CACxBxF,KAAMiE,EACNwB,eACAC,SAAU,GACVC,cAAgBC,IACTA,EACFC,QACCiH,EAAWhH,WACX,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCkH,EAAYjH,WACZ,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCmH,EAAclH,WACd,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCsH,EAAarH,WACb,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,MAEnDF,QACCuH,EAAiBtH,WACjB,CAACjJ,EAAD,SAAQ,QAAEkJ,GAAV,EAA6BpC,OAAOqC,OAAOnJ,EAAOkJ,SAI1D,S,2FC9GA,MAAM0H,UAAuBC,EAAAA,EAC3BlN,YAAYmN,EAAoBC,GAC9BC,MAAMJ,EAAeK,iBAAiBH,EAAUC,GAAWA,IAFzDH,EAKGK,iBAAmB,CAACH,EAAoBC,KAC7C,MAAMG,EAAUxK,EAAAA,QAAAA,aAAqBoK,EAAUC,GAC/C,IAAKG,EAAS,MAAM,IAAItK,MAAM,gCAE9B,OADkBuK,EAAO5L,KAAK2L,EAAQE,WAAWC,SAAS,Q","sources":["os/providers/ui.provider.tsx","os/providers/pool.provider.tsx","os/providers/wallet.provider.tsx","os/providers/account.provider.tsx","shared/tokenProvider/supplementary.ts","shared/tokenProvider/index.ts","os/providers/mint.provider.tsx","os/store/accounts.reducer.ts","os/store/flags.reducer.ts","os/store/index.ts","os/store/page.reducer.ts","os/store/pools.reducer.ts","os/store/search.reducer.ts","os/store/ui.reducer.ts","os/store/walkthrough.reducer.ts","os/store/wallet.reducer.ts","os/view/wallet/lib/keystoreWallet.ts"],"sourcesContent":["import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n  CSSProperties,\n  useCallback,\n} from 'react'\n\nimport { ConfigProvider } from 'antd'\n\nimport {\n  useRootSelector,\n  RootState,\n  useRootDispatch,\n  RootDispatch,\n} from 'os/store'\nimport {\n  UIState,\n  setBackground as _setBackground,\n  Background,\n} from 'os/store/ui.reducer'\nimport { ConfigProviderProps } from 'antd/lib/config-provider'\n\nconst Context = createContext<UIProvider>({} as UIProvider)\n\nexport type UIProvider = {\n  ui: UIState\n  setBackground: (\n    ...args: Parameters<typeof _setBackground>\n  ) => Promise<{ background: Background }>\n}\n\n/**\n * UI Context Provider\n */\nconst UIContextProvider = ({\n  children,\n  appId,\n  style = {},\n  antd = false,\n}: {\n  children: ReactNode\n  appId: string\n  style?: CSSProperties\n  antd?: boolean | ConfigProviderProps\n}) => {\n  const dispatch = useRootDispatch<RootDispatch>()\n  const ui = useRootSelector((state: RootState) => state.ui)\n  const setBackground = useCallback(\n    async (...args: Parameters<typeof _setBackground>) =>\n      await dispatch(_setBackground(...args)).unwrap(),\n    [dispatch],\n  )\n  const provider = useMemo(() => ({ ui, setBackground }), [ui, setBackground])\n  const configProvider = antd\n    ? {\n        getPopupContainer: () => document.getElementById(appId) as HTMLElement,\n        ...(typeof antd === 'object' ? antd : {}),\n      }\n    : undefined\n\n  return (\n    <Context.Provider value={provider}>\n      <section id={appId} style={{ backgroundColor: 'transparent', ...style }}>\n        {configProvider ? (\n          <ConfigProvider {...configProvider}>{children}</ConfigProvider>\n        ) : (\n          children\n        )}\n      </section>\n    </Context.Provider>\n  )\n}\nexport default UIContextProvider\n\n/**\n * UI Context Consumer\n */\nconst UIComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * UI HOC\n */\nexport const withUI = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <UIComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </UIComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * UI Hook\n */\nexport const useUI = () => {\n  return useContext<UIProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { PoolsState } from 'os/store/pools.reducer'\n\nconst Context = createContext<PoolProvider>({} as PoolProvider)\n\nexport type PoolProvider = {\n  pools: PoolsState\n}\n\n/**\n * Pool Context Provider\n */\nconst PoolContextProvider = ({ children }: { children: ReactNode }) => {\n  const pools = useRootSelector((state: RootState) => state.pools)\n  const provider = useMemo(() => ({ pools }), [pools])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default PoolContextProvider\n\n/**\n * Pool Context Consumer\n */\nconst PoolContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Pool HOC\n */\nexport const withPool = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <PoolContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </PoolContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Pool Hook\n */\nexport const usePool = () => {\n  return useContext<PoolProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { WalletState } from 'os/store/wallet.reducer'\n\nconst Context = createContext<WalletProvider>({} as WalletProvider)\n\nexport type WalletProvider = {\n  wallet: WalletState\n}\n\n/**\n * Wallet Context Provider\n */\nconst WalletContextProvider = ({ children }: { children: ReactNode }) => {\n  const wallet = useRootSelector((state: RootState) => state.wallet)\n  const provider = useMemo(() => ({ wallet }), [wallet])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default WalletContextProvider\n\n/**\n * Wallet Context Consumer\n */\nconst WalletContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Wallet HOC\n */\nexport const withWallet = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <WalletContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </WalletContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Wallet Hook\n */\nexport const useWallet = () => {\n  return useContext<WalletProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { AccountsState } from 'os/store/accounts.reducer'\n\nconst Context = createContext<AccountProvider>({} as AccountProvider)\n\nexport type AccountProvider = {\n  accounts: AccountsState\n}\n\n/**\n * Account Context Provider\n */\nconst AccountContextProvider = ({ children }: { children: ReactNode }) => {\n  const accounts = useRootSelector((state: RootState) => state.accounts)\n  const provider = useMemo(() => ({ accounts }), [accounts])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default AccountContextProvider\n\n/**\n * Account Context Consumer\n */\nconst AccountContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Account HOC\n */\nexport const withAccount = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <AccountContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </AccountContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Account Hook\n */\nexport const useAccount = () => {\n  return useContext<AccountProvider>(Context)\n}\n","// Pseudo native sol info\n// It's for all networks\nexport const sol = (chainId: 101 | 102 | 103) => ({\n  symbol: 'SOL',\n  name: 'Solana',\n  address: '11111111111111111111111111111111',\n  decimals: 9,\n  chainId,\n  extensions: {\n    coingeckoId: 'solana',\n  },\n  logoURI:\n    'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png',\n})\n\n// Pseudo SNTR info\n// Only for devnet and testnet\nexport const sntr = (chainId: 102 | 103) => ({\n  symbol: 'SNTR',\n  name: 'Sentre',\n  address: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n  decimals: 9,\n  chainId,\n  extensions: {\n    coingeckoId: 'sentre',\n  },\n  logoURI:\n    'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M/logo.png',\n})\n\n// Pseudo token infos for devnet\nconst supplementary = [\n  sol(103),\n  sntr(103),\n  {\n    symbol: 'wBTC',\n    name: 'Wrapped Bitcoin',\n    address: '8jk4eJymMfNZV9mkRNxJEt2VJ3pRvdJvD5FE94GXGBPM',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'bitcoin',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/qfnqNqs3nCAHjnyCgLRDbBtq4p2MtHZxw8YjSyYhPoL/logo.png',\n  },\n  {\n    symbol: 'wETH',\n    name: 'Ethereum',\n    address: '27hdcZv7RtuMp75vupThR3T4KLsL61t476eosMdoec4c',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'ethereum',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/FeGn77dhg1KXRRFeSwwMiykZnZPw5JXW6naf2aQgZDQf/logo.png',\n  },\n  {\n    symbol: 'UNI',\n    name: 'Uniswap',\n    address: 'FVZFSXu3yn17YdcxLD72TFDUqkdE5xZvcW18EUpRQEbe',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'uniswap',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/3MVa4e32PaKmPxYUQ6n8vFkWtCma68Ld7e7fTktWDueQ/logo.png',\n  },\n  {\n    symbol: 'USDC',\n    name: 'USD Coin',\n    address: '2z6Ci38Cx6PyL3tFrT95vbEeB3izqpoLdxxBkJk2euyj',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'usd-coin',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v/logo.png',\n  },\n]\n\nexport default supplementary\n","import lunr, { Index } from 'lunr'\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry'\n\nimport { net, chainId, ChainId, Net } from 'shared/runtime'\nimport supplementary, { sntr, sol } from './supplementary'\n\nclass TokenProvider {\n  private tokenMap: Map<string, TokenInfo>\n  private engine: Index | undefined\n  readonly chainId: ChainId\n  readonly cluster: Net\n  private loading: boolean\n  private queue: Array<any>\n\n  constructor() {\n    this.tokenMap = new Map<string, TokenInfo>()\n    this.engine = undefined\n    this.chainId = chainId\n    this.cluster = net\n    this.loading = false\n    this.queue = []\n    // Init\n    this._init()\n  }\n\n  private _init = async (): Promise<[Map<string, TokenInfo>, Index]> => {\n    if (this.tokenMap.size && this.engine) return [this.tokenMap, this.engine]\n    return new Promise(async (resolve) => {\n      // Queue of getters to avoid race condition of multiple _init calling\n      if (this.loading) return this.queue.push(resolve)\n      // Start\n      this.loading = true\n      // Build token list\n      let tokenList = await (await new TokenListProvider().resolve())\n        .filterByChainId(this.chainId)\n        .getList()\n      if (this.cluster === 'devnet') tokenList = tokenList.concat(supplementary)\n      if (this.cluster === 'testnet')\n        tokenList = tokenList.concat([sntr(102), sol(102)])\n      else tokenList = tokenList.concat([sol(101)])\n      // Build token map\n      tokenList.forEach((token) => this.tokenMap.set(token.address, token))\n      // Build search engine\n      this.engine = lunr(function () {\n        this.ref('address')\n        this.field('symbol')\n        this.field('name')\n        tokenList.forEach((doc) => this.add(doc))\n      })\n      // Resolve the main getter\n      resolve([this.tokenMap, this.engine])\n      // Resolve the rest of getters\n      while (this.queue.length) this.queue.shift()([this.tokenMap, this.engine])\n      // Finish\n      this.loading = false\n    })\n  }\n\n  all = async (): Promise<TokenInfo[]> => {\n    const [tokenMap] = await this._init()\n    return Array.from(tokenMap.values())\n  }\n\n  findByAddress = async (addr: string): Promise<TokenInfo | undefined> => {\n    const [tokenMap] = await this._init()\n    return tokenMap.get(addr)\n  }\n\n  find = async (keyword: string, limit = 10): Promise<TokenInfo[]> => {\n    const [tokenMap, engine] = await this._init()\n    let tokens: TokenInfo[] = []\n    if (!keyword) return []\n    const fuzzy = keyword + '~1'\n    engine.search(fuzzy).forEach(({ ref }) => {\n      if (tokens.findIndex(({ address }) => address === ref) < 0) {\n        const token = tokenMap.get(ref)\n        if (token) tokens.push(token)\n      }\n    })\n    if (limit === 0) return tokens\n    return tokens.slice(0, limit)\n  }\n}\n\nexport default TokenProvider\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  useCallback,\n  ReactNode,\n  useMemo,\n} from 'react'\nimport { account } from '@senswap/sen-js'\n\nimport {\n  useRootDispatch,\n  useRootSelector,\n  RootState,\n  RootDispatch,\n} from 'os/store'\nimport { getMint as _getMint, MintsState } from 'os/store/mints.reducer'\nimport TokenProvider from 'shared/tokenProvider'\n\nconst tokenProvider = new TokenProvider()\nconst Context = createContext<MintProvider>({} as MintProvider)\n\nexport type MintProvider = {\n  mints: MintsState\n  getMint: (...args: Parameters<typeof _getMint>) => Promise<MintsState>\n  getDecimals: (mintAddress: string) => Promise<number>\n  tokenProvider: TokenProvider\n}\n\n/**\n * Mint Context Provider\n */\nconst MintContextProvider = ({ children }: { children: ReactNode }) => {\n  const dispatch = useRootDispatch<RootDispatch>()\n  const mints = useRootSelector((state: RootState) => state.mints)\n  const pools = useRootSelector((state: RootState) => state.pools)\n  const getMint = useCallback(\n    async (...args: Parameters<typeof _getMint>) =>\n      await dispatch(_getMint(...args)).unwrap(),\n    [dispatch],\n  )\n  const getDecimals = useCallback(\n    async (mintAddress: string) => {\n      if (!account.isAddress(mintAddress))\n        throw new Error('Invalid mint address')\n      // If the token is in token provider, return its decimals\n      const tokenInfo = await tokenProvider.findByAddress(mintAddress)\n      if (tokenInfo?.decimals !== undefined) return tokenInfo.decimals\n      // If the token is lp, return 9 as default\n      const index = Object.values(pools).findIndex(\n        ({ mint_lpt }) => mint_lpt === mintAddress,\n      )\n      if (index >= 0) return 9\n      // Fetch from the clustters\n      const mintData = await getMint({ address: mintAddress })\n      if (mintData[mintAddress]?.decimals) return mintData[mintAddress].decimals\n      throw new Error('Cannot find mint decimals')\n    },\n    [getMint, pools],\n  )\n  const provider = useMemo(\n    () => ({ mints, getMint, getDecimals, tokenProvider }),\n    [mints, getMint, getDecimals],\n  )\n  // Context provider\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default MintContextProvider\n\n/**\n * Mint Context Consumer\n */\nconst MintContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Mint HOC\n */\nexport const withMint = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <MintContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </MintContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Mint Hook\n */\nexport const useMint = () => {\n  return useContext<MintProvider>(Context)\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, AccountData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type AccountsState = Record<string, AccountData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'accounts'\nconst initialState: AccountsState = {}\n\n/**\n * Actions\n */\n\nexport const getAccounts = createAsyncThunk(\n  `${NAME}/getAccounts`,\n  async ({ owner }: { owner: string }) => {\n    if (!account.isAddress(owner))\n      throw new Error('Invalid owner/wallet address')\n    const { splt } = window.sentre\n    const ownerPublicKey = account.fromAddress(owner)\n    const { value } = await splt.connection.getTokenAccountsByOwner(\n      ownerPublicKey,\n      { programId: splt.spltProgramId },\n    )\n    let bulk: AccountsState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = splt.parseAccountData(buf)\n      return (bulk[address] = data)\n    })\n    return bulk\n  },\n)\n\nexport const getAccount = createAsyncThunk<\n  AccountsState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getAccount`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid account address')\n  const {\n    accounts: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { splt } = window.sentre\n  const raw = await splt.getAccountData(address)\n  return { [address]: raw }\n})\n\nexport const upsetAccount = createAsyncThunk<\n  AccountsState,\n  { address: string; data: AccountData },\n  { state: any }\n>(`${NAME}/upsetAccount`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteAccount = createAsyncThunk(\n  `${NAME}/deleteAccount`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getAccounts.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteAccount.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\nimport PDB from 'shared/pdb'\n\n/**\n * Interface & Utility\n */\n\ntype FlagsState = {\n  visited: boolean\n  loading: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'flags'\nconst initialState: FlagsState = {\n  visited: true,\n  loading: true,\n}\n\n/**\n * Actions\n */\n\nexport const loadVisited = createAsyncThunk<\n  Partial<FlagsState>,\n  void,\n  { state: any }\n>(`${NAME}/loadVisited`, async (_, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet')\n  const db = new PDB(walletAddress).createInstance('sentre')\n  const visited: boolean = (await db.getItem('visited')) || false\n  return { visited }\n})\n\nexport const updateVisited = createAsyncThunk<\n  Partial<FlagsState>,\n  boolean,\n  { state: any }\n>(`${NAME}/updateVisited`, async (visited, { getState }) => {\n  const {\n    wallet: { address },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  const db = new PDB(address).createInstance('sentre')\n  await db.setItem('visited', visited)\n  return { visited }\n})\n\nexport const updateLoading = createAsyncThunk(\n  `${NAME}/updateLoading`,\n  async (loading: boolean) => {\n    return { loading }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        loadVisited.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateVisited.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import {\n  createDispatchHook,\n  createSelectorHook,\n  createStoreHook,\n  useDispatch,\n  useSelector,\n} from 'react-redux'\nimport { configureStore } from '@reduxjs/toolkit'\nimport { RootContext } from '@senhub/context'\nimport { devTools, bigintSerializationMiddleware } from 'os/store/devTools'\n\nimport ui from './ui.reducer'\nimport flags from './flags.reducer'\nimport page from './page.reducer'\nimport wallet from './wallet.reducer'\nimport accounts from './accounts.reducer'\nimport mints from './mints.reducer'\nimport pools from './pools.reducer'\nimport search from './search.reducer'\nimport walkthrough from './walkthrough.reducer'\n\n/**\n * Root types\n */\nexport type RootState = ReturnType<typeof store.getState>\nexport type RootDispatch = typeof store.dispatch\n\n/**\n * Root hooks\n */\nexport const useRootStore = createStoreHook(RootContext)\nexport const useRootDispatch: typeof useDispatch =\n  createDispatchHook(RootContext)\nexport const useRootSelector: typeof useSelector =\n  createSelectorHook(RootContext)\n\n/**\n * Root store\n */\nconst store = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools('sentre'),\n  reducer: {\n    ui,\n    flags,\n    page,\n    wallet,\n    accounts,\n    mints,\n    pools,\n    search,\n    walkthrough,\n  },\n})\n\nexport default store\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\nimport PDB from 'shared/pdb'\nimport configs from 'os/configs'\nimport { env } from 'shared/runtime'\n\nconst {\n  register: { senreg, extra, devAppId },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type PageState = {\n  register: SenReg\n  appIds: AppIds\n}\n\nconst troubleshoot = (register: SenReg, appIds?: AppIds): AppIds => {\n  if (!appIds || !Array.isArray(appIds)) return []\n  if (env === 'development' && !appIds.includes(devAppId))\n    appIds.unshift(devAppId)\n  return appIds.filter((appId) => register[appId])\n}\nconst fetchRegister = async () => {\n  try {\n    const res = await fetch(senreg)\n    return await res.json()\n  } catch (er) {\n    return {}\n  }\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'page'\nconst initialState: PageState = {\n  register: {},\n  appIds: [],\n}\n\n/**\n * Actions\n */\n\n// Must fetch register at very first of the process\nexport const loadRegister = createAsyncThunk(\n  `${NAME}/loadRegister`,\n  async () => {\n    const register = await fetchRegister()\n    return { register: { ...register, ...extra } }\n  },\n)\n\n// For sandbox only\nexport const installManifest = createAsyncThunk<\n  Partial<PageState>,\n  ComponentManifest,\n  { state: any }\n>(`${NAME}/installManifest`, async (manifest, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { appIds, register },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (appIds.includes(manifest.appId))\n    throw new Error('Cannot run sandbox for an installed application.')\n  const newAppIds: AppIds = [...appIds]\n  newAppIds.push(manifest.appId)\n  const newRegister: SenReg = { ...register }\n  newRegister[manifest.appId] = manifest\n  return { appIds: newAppIds, register: newRegister }\n})\n\n/**\n * App Actions\n */\nexport const loadPage = createAsyncThunk<\n  Partial<PageState>,\n  void,\n  { state: any }\n>(`${NAME}/loadPage`, async (_, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { register },\n  } = getState()\n\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  // Fetch user's apps\n  const db = new PDB(walletAddress).createInstance('sentre')\n  const appIds = troubleshoot(\n    register,\n    (await db.getItem('appIds')) || initialState.appIds,\n  )\n  return { appIds }\n})\n\nexport const updatePage = createAsyncThunk<\n  Partial<PageState>,\n  AppIds,\n  { state: any }\n>(`${NAME}/updatePage`, async (appIds, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { register },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  appIds = troubleshoot(register, appIds)\n  const db = new PDB(walletAddress).createInstance('sentre')\n  await db.setItem('appIds', appIds)\n  return { appIds }\n})\n\nexport const installApp = createAsyncThunk<\n  Partial<PageState>,\n  string,\n  { state: any }\n>(`${NAME}/installApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { appIds },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (appIds.includes(appId)) return {}\n  const newAppIds: AppIds = [...appIds]\n  newAppIds.push(appId)\n  const db = new PDB(walletAddress).createInstance('sentre')\n  await db.setItem('appIds', newAppIds)\n  return { appIds: newAppIds }\n})\n\nexport const uninstallApp = createAsyncThunk<\n  Partial<PageState>,\n  string,\n  { state: any }\n>(`${NAME}/uninstallApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { appIds },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (!appIds.includes(appId)) return {}\n  const newAppIds = appIds.filter((_appId: string) => _appId !== appId)\n  const pdb = new PDB(walletAddress)\n  const db = pdb.createInstance('sentre')\n  await db.setItem('appIds', newAppIds)\n  await pdb.dropInstance(appId)\n  return { appIds: newAppIds }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        loadRegister.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        installManifest.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        loadPage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updatePage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        installApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        uninstallApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, PoolData } from '@senswap/sen-js'\nimport configs from 'os/configs'\n\nconst {\n  sol: { taxmanAddress },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type PoolsState = Record<string, PoolData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'pools'\nconst initialState: PoolsState = {}\n\n/**\n * Actions\n */\n\nexport const getPools = createAsyncThunk(`${NAME}/getPools`, async () => {\n  const { swap } = window.sentre\n  // Get all pools\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await swap.connection.getProgramAccounts(swap.swapProgramId, {\n      filters: [\n        { dataSize: 257 },\n        { memcmp: { bytes: taxmanAddress, offset: 65 } },\n      ],\n    })\n  let bulk: PoolsState = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = swap.parsePoolData(buf)\n    bulk[address] = data\n  })\n  return bulk\n})\n\nexport const getPool = createAsyncThunk<\n  PoolsState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getPool`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  const {\n    pools: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { swap } = window.sentre\n  const raw = await swap.getPoolData(address)\n  return { [address]: raw }\n})\n\nexport const upsetPool = createAsyncThunk<\n  PoolsState,\n  { address: string; data: PoolData },\n  { state: any }\n>(`${NAME}/upsetPool`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getPools.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\ntype SearchState = {\n  visible: boolean\n  value: string\n  loading: boolean\n  disabled: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'search'\nconst initialState: SearchState = {\n  visible: false,\n  value: '',\n  loading: false,\n  disabled: false,\n}\n\n/**\n * Actions\n */\n\nexport const setVisible = createAsyncThunk(\n  `${NAME}/setVisible`,\n  async (visible: boolean) => {\n    return { visible }\n  },\n)\n\nexport const setValue = createAsyncThunk(\n  `${NAME}/setValue`,\n  async (value: string) => {\n    return { value }\n  },\n)\n\nexport const setLoading = createAsyncThunk(\n  `${NAME}/setLoading`,\n  async (loading: boolean) => {\n    return { loading }\n  },\n)\n\nexport const setDisabled = createAsyncThunk(\n  `${NAME}/setDisabled`,\n  async (disabled: boolean) => {\n    return { disabled }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setVisible.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setValue.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setDisabled.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type Infix = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\nexport type Theme = 'light' | 'dark'\nexport type Background = Record<Theme, string | undefined>\n\nexport type UIState = {\n  theme: Theme\n  width: number\n  infix: Infix\n  touchable: boolean\n  visibleActionCenter: boolean\n  visibleInstaller: boolean\n  background: Background\n}\n\nconst getInfix = (): Infix => {\n  const width = window.innerWidth\n  if (width < 576) return 'xs'\n  if (width < 768) return 'sm'\n  if (width < 992) return 'md'\n  if (width < 1200) return 'lg'\n  if (width < 1400) return 'xl'\n  return 'xxl'\n}\nconst isTouchable = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0\n}\nconst getTheme = (): Theme => {\n  if (window.matchMedia('(prefers-color-scheme: light)').matches) return 'light'\n  return 'dark'\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'ui'\nconst initialState: UIState = {\n  theme: getTheme(),\n  width: window.innerWidth,\n  infix: getInfix(),\n  touchable: isTouchable(),\n  visibleActionCenter: false,\n  visibleInstaller: false,\n  background: {\n    light: '',\n    dark: '',\n  },\n}\n\n/**\n * Actions\n */\n\nexport const setTheme = createAsyncThunk(\n  `${NAME}/setTheme`,\n  async (theme: Theme) => {\n    return { theme }\n  },\n)\n\nexport const resize = createAsyncThunk(`${NAME}/resize`, async () => {\n  const width = window.innerWidth\n  const infix = getInfix()\n  return { width, infix }\n})\n\nexport const setVisibleActionCenter = createAsyncThunk(\n  `${NAME}/setVisibleActionCenter`,\n  async (visible: boolean) => {\n    return { visibleActionCenter: visible }\n  },\n)\n\nexport const setVisibleInstaller = createAsyncThunk(\n  `${NAME}/setVisibleInstaller`,\n  async (visible: boolean) => {\n    return { visibleInstaller: visible }\n  },\n)\n\nexport const setBackground = createAsyncThunk(\n  `${NAME}/setBackground`,\n  async (background: Background) => {\n    return { background }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setTheme.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        resize.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisibleActionCenter.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisibleInstaller.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setBackground.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\nexport enum WalkThroughType {\n  Default,\n  NewComer,\n}\n\ntype WalkThorughState = {\n  type: WalkThroughType\n  run: boolean\n  step: number\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'walkthrough'\nconst initialState: WalkThorughState = {\n  type: WalkThroughType.Default,\n  run: false,\n  step: 0,\n}\n\n/**\n * Actions\n */\n\nexport const setWalkthrough = createAsyncThunk<\n  Partial<WalkThorughState>,\n  Partial<WalkThorughState>,\n  { state: any }\n>(`${NAME}/setWalkthrough`, async (state) => {\n  return { ...state }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setWalkthrough.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { Lamports, SPLT, Swap, WalletInterface } from '@senswap/sen-js'\n\nimport configs from 'os/configs'\nimport { GuestWallet } from 'os/view/wallet/lib'\n\n/**\n * Interface & Utility\n */\n\nexport type WalletState = {\n  visible: boolean\n  address: string\n  lamports: bigint\n}\n\nconst initializeWindow = async (wallet?: WalletInterface) => {\n  const {\n    sol: { node, spltAddress, splataAddress, swapAddress },\n  } = configs\n  window.sentre = {\n    wallet: wallet || new GuestWallet(),\n    lamports: new Lamports(node),\n    splt: new SPLT(spltAddress, splataAddress, node),\n    swap: new Swap(swapAddress, spltAddress, splataAddress, node),\n  }\n}\n\nconst destroyWindow = async () => {\n  if (window.sentre?.wallet) window.sentre.wallet.disconnect()\n  await initializeWindow()\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'wallet'\nconst initialState: WalletState = {\n  visible: false,\n  address: '',\n  lamports: BigInt(0),\n}\n\n/**\n * Actions\n */\n\nexport const openWallet = createAsyncThunk(`${NAME}/openWallet`, async () => {\n  return { visible: true }\n})\n\nexport const closeWallet = createAsyncThunk(`${NAME}/closeWallet`, async () => {\n  return { visible: false }\n})\n\nexport const connectWallet = createAsyncThunk(\n  `${NAME}/connectWallet`,\n  async (wallet: any) => {\n    if (!wallet) throw new Error('Invalid wallet instance')\n    await initializeWindow(wallet)\n    const address = await wallet.getAddress()\n    const lamports = await window.sentre.lamports.getLamports(address)\n    return { address, lamports: BigInt(lamports), visible: false }\n  },\n)\n\nexport const updateWallet = createAsyncThunk(\n  `${NAME}/updateWallet`,\n  async ({ lamports }: Partial<WalletState>) => {\n    return { lamports }\n  },\n)\n\nexport const disconnectWallet = createAsyncThunk(\n  `${NAME}/disconnectWallet`,\n  async () => {\n    await destroyWindow()\n    window.location.reload() // Reset all redux store\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        openWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        closeWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        connectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        disconnectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { account, Keystore } from '@senswap/sen-js'\n\nimport SecretKeyWallet from './secretkeyWallet'\n\nclass KeystoreWallet extends SecretKeyWallet {\n  constructor(keystore: Keystore, password: string) {\n    super(KeystoreWallet.extractSecretKey(keystore, password), password)\n  }\n\n  static extractSecretKey = (keystore: Keystore, password: string): string => {\n    const keypair = account.fromKeystore(keystore, password)\n    if (!keypair) throw new Error('Invalid ketstore or password')\n    const secretKey = Buffer.from(keypair.secretKey).toString('hex')\n    return secretKey\n  }\n}\n\nexport default KeystoreWallet\n"],"names":["Context","createContext","children","appId","style","antd","dispatch","useRootDispatch","ui","useRootSelector","state","setBackground","useCallback","async","_setBackground","unwrap","provider","useMemo","configProvider","getPopupContainer","document","getElementById","undefined","Provider","value","id","backgroundColor","ConfigProvider","UIComsumer","Consumer","Children","child","cloneElement","withUI","WrappedComponent","HOC","Component","render","forwardedRef","rest","this","props","ref","forwardRef","useUI","useContext","pools","PoolContextComsumer","withPool","usePool","wallet","WalletContextComsumer","withWallet","useWallet","accounts","AccountContextComsumer","withAccount","useAccount","sol","chainId","symbol","name","address","decimals","extensions","coingeckoId","logoURI","sntr","tokenProvider","constructor","tokenMap","engine","cluster","loading","queue","_init","size","Promise","push","resolve","tokenList","TokenListProvider","filterByChainId","getList","concat","supplementary","forEach","token","set","lunr","field","doc","add","length","shift","all","Array","from","values","findByAddress","get","addr","find","keyword","limit","tokens","fuzzy","search","findIndex","slice","Map","net","mints","getMint","_getMint","getDecimals","account","mintAddress","Error","tokenInfo","Object","mint_lpt","mintData","MintContextComsumer","withMint","useMint","NAME","getAccounts","createAsyncThunk","owner","splt","window","sentre","ownerPublicKey","connection","getTokenAccountsByOwner","programId","spltProgramId","bulk","pubkey","data","buf","toBase58","parseAccountData","getAccount","getState","getAccountData","upsetAccount","deleteAccount","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","payload","assign","loadVisited","_","walletAddress","db","PDB","createInstance","visited","getItem","updateVisited","setItem","updateLoading","createStoreHook","RootContext","createDispatchHook","createSelectorHook","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","reducer","flags","page","walkthrough","register","senreg","extra","devAppId","configs","troubleshoot","appIds","isArray","env","includes","unshift","filter","loadRegister","res","fetch","json","er","fetchRegister","installManifest","manifest","newAppIds","newRegister","loadPage","updatePage","installApp","uninstallApp","_appId","pdb","dropInstance","taxmanAddress","getPools","swap","getProgramAccounts","swapProgramId","filters","dataSize","memcmp","bytes","offset","parsePoolData","getPool","getPoolData","upsetPool","setVisible","visible","setValue","setLoading","setDisabled","disabled","getInfix","width","innerWidth","theme","matchMedia","matches","infix","touchable","navigator","maxTouchPoints","visibleActionCenter","visibleInstaller","background","light","dark","setTheme","resize","setVisibleActionCenter","setVisibleInstaller","WalkThroughType","type","Default","run","step","setWalkthrough","initializeWindow","node","spltAddress","splataAddress","swapAddress","GuestWallet","lamports","Lamports","SPLT","Swap","BigInt","openWallet","closeWallet","connectWallet","getAddress","getLamports","updateWallet","disconnectWallet","disconnect","destroyWindow","location","reload","KeystoreWallet","SecretKeyWallet","keystore","password","super","extractSecretKey","keypair","Buffer","secretKey","toString"],"sourceRoot":""}