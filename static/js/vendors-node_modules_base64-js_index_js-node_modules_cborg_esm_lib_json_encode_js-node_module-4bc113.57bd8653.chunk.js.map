{"version":3,"file":"static/js/vendors-node_modules_base64-js_index_js-node_modules_cborg_esm_lib_json_encode_js-node_module-4bc113.57bd8653.chunk.js","mappings":"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","sources":["../../../src/index.ts","../node_modules/@vascosantos/moving-average/index.js","../node_modules/any-signal/index.js","../node_modules/array-shuffle/index.js","../node_modules/base64-js/index.js","../node_modules/blob-to-it/index.js","../node_modules/browser-readablestream-to-it/index.js","../node_modules/bytes/index.js","../../src/index.ts","../node_modules/debug/src/browser.js","../../index.js","../node_modules/err-code/index.js","../node_modules/events/events.js","../node_modules/hashlru/index.js","../node_modules/ipfs-core/node_modules/pako/index.js","../node_modules/ipfs-utils/src/env.js","../node_modules/ipfs-utils/src/http.js","../node_modules/is-domain-name/index.js","../node_modules/it-all/index.js","../node_modules/it-drain/index.js","../node_modules/it-first/index.js","../node_modules/it-last/index.js","../node_modules/it-length-prefixed/src/index.js","../node_modules/it-parallel-batch/index.js","../node_modules/it-parallel/index.js","../node_modules/it-peekable/index.js","../node_modules/it-pushable/index.js","../node_modules/it-sort/index.js","../node_modules/it-tar/index.js","../node_modules/it-tar/pack.js","../node_modules/it-to-buffer/index.js","../node_modules/just-debounce-it/index.js","../node_modules/just-safe-get/index.js","../node_modules/just-safe-set/index.js","../node_modules/level/browser.js","../node_modules/libp2p-bootstrap/src/index.js","../node_modules/libp2p-delegated-content-routing/src/index.js","../node_modules/libp2p-delegated-peer-routing/src/index.js","../node_modules/libp2p-gossipsub/src/index.js","../node_modules/libp2p-interfaces/src/topology/multicodec-topology.js","../node_modules/libp2p-kad-dht/src/index.js","../node_modules/libp2p-mplex/src/index.js","../node_modules/libp2p-mplex/src/mplex.js","../node_modules/libp2p-record/src/index.js","../node_modules/libp2p-webrtc-star/src/index.js","../node_modules/libp2p-websockets/src/index.js","../node_modules/libp2p/src/index.js","../node_modules/libp2p/src/metrics/tracked-map.js","../node_modules/mafmt/src/index.js","../node_modules/mortice/lib/index.js","../node_modules/multiaddr-to-uri/index.js","../node_modules/sort-keys/index.js","../node_modules/timeout-abort-controller/index.js","../node_modules/varint/index.js","../node_modules/@ipld/dag-cbor/esm/index.js","../node_modules/@ipld/dag-pb/esm/src/pb-decode.js","../node_modules/@ipld/dag-pb/esm/src/pb-encode.js","../node_modules/@ipld/dag-pb/esm/src/util.js","../node_modules/@ipld/dag-pb/esm/src/index.js","../node_modules/cborg/esm/lib/byte-utils.js","../node_modules/cborg/esm/lib/common.js","../node_modules/cborg/esm/lib/decode.js","../node_modules/cborg/esm/lib/encode.js","../node_modules/cborg/esm/lib/json/encode.js","../node_modules/cborg/esm/lib/jump.js","../node_modules/cborg/esm/lib/token.js","../node_modules/datastore-core/esm/src/index.js","../node_modules/ipfs-bitswap/esm/src/wantlist/index.js","../node_modules/ipfs-core-utils/esm/src/files/normalise-candidate-multiple.js","../node_modules/ipfs-core-utils/esm/src/errors.js","../node_modules/ipfs-core-utils/esm/src/with-timeout-option.js","../node_modules/ipfs-core/esm/src/components/files/utils/create-lock.js","../node_modules/ipfs-core/esm/src/components/files/utils/with-mfs-root.js","../node_modules/@ipld/dag-json/esm/index.js","../node_modules/ipfs-core/esm/src/errors.js","../node_modules/ipfs-core/esm/src/utils/service.js","../node_modules/ipfs-core-config/esm/src/dns.browser.js","../node_modules/ipfs-core/esm/src/components/dns.js","../node_modules/ipfs-core/esm/src/components/resolve.js","../node_modules/ipfs-core-utils/esm/src/pins/normalise-input.js","../node_modules/ipfs-repo/esm/src/pin-types.js","../node_modules/ipfs-core/esm/src/components/pin/ls.js","../node_modules/ipfs-core/esm/src/components/pin/index.js","../node_modules/ipfs-core/esm/src/components/pin/add-all.js","../node_modules/ipfs-core/esm/src/components/pin/add.js","../node_modules/ipfs-core/esm/src/components/pin/rm-all.js","../node_modules/ipfs-core/esm/src/components/pin/rm.js","../node_modules/ipns/esm/src/index.js","../node_modules/ipfs-core/esm/src/ipns/publisher.js","../node_modules/ipfs-core/esm/src/ipns/republisher.js","../node_modules/ipfs-core/esm/src/ipns/resolver.js","../node_modules/ipfs-core/esm/src/utils/tlru.js","../node_modules/ipfs-core/esm/src/ipns/index.js","../node_modules/datastore-pubsub/esm/src/utils.js","../node_modules/datastore-pubsub/esm/src/index.js","../node_modules/ipfs-core/esm/src/ipns/routing/pubsub-datastore.js","../node_modules/ipfs-core/esm/src/ipns/routing/offline-datastore.js","../node_modules/ipfs-core/esm/src/ipns/routing/dht-datastore.js","../node_modules/ipfs-core/esm/src/components/ipns.js","../node_modules/ipfs-core/esm/src/ipns/routing/config.js","../node_modules/ipfs-core/esm/src/components/name/utils.js","../node_modules/ipfs-core/esm/src/components/name/publish.js","../node_modules/ipfs-core/esm/src/components/name/resolve.js","../node_modules/ipfs-core/esm/src/components/name/pubsub/utils.js","../node_modules/ipfs-core/esm/src/components/name/pubsub/index.js","../node_modules/ipfs-core/esm/src/components/name/pubsub/cancel.js","../node_modules/ipfs-core/esm/src/components/name/pubsub/state.js","../node_modules/ipfs-core/esm/src/components/name/pubsub/subs.js","../node_modules/ipfs-core/esm/src/components/name/index.js","../node_modules/ipfs-core/esm/src/components/refs/index.js","../node_modules/ipfs-core/esm/src/components/refs/local.js","../node_modules/ipfs-core/esm/src/components/bitswap/stat.js","../node_modules/ipfs-core/esm/src/components/bitswap/index.js","../node_modules/ipfs-core/esm/src/components/bitswap/wantlist.js","../node_modules/ipfs-core/esm/src/components/bitswap/wantlist-for-peer.js","../node_modules/ipfs-core/esm/src/components/bitswap/unwant.js","../node_modules/ipfs-core/esm/src/components/bootstrap/utils.js","../node_modules/ipfs-core/esm/src/components/bootstrap/index.js","../node_modules/ipfs-core/esm/src/components/bootstrap/add.js","../node_modules/ipfs-core/esm/src/components/bootstrap/list.js","../node_modules/ipfs-core/esm/src/components/bootstrap/rm.js","../node_modules/ipfs-core/esm/src/components/bootstrap/clear.js","../node_modules/ipfs-core/esm/src/components/bootstrap/reset.js","../node_modules/ipfs-core/esm/src/components/block/utils.js","../node_modules/ipfs-core/esm/src/components/block/index.js","../node_modules/ipfs-core/esm/src/components/block/get.js","../node_modules/ipfs-core/esm/src/components/block/put.js","../node_modules/ipfs-core/esm/src/components/block/rm.js","../node_modules/ipfs-core/esm/src/components/block/stat.js","../node_modules/ipfs-core-utils/esm/src/files/normalise-content.js","../node_modules/ipfs-core-utils/esm/src/files/normalise-candidate-single.js","../node_modules/ipfs-core-utils/esm/src/files/normalise-input-single.js","../node_modules/ipfs-core-utils/esm/src/files/normalise-input-multiple.js","../node_modules/ipfs-core/esm/src/components/add-all/index.js","../node_modules/ipfs-core/esm/src/components/root.js","../node_modules/ipfs-core/esm/src/components/add.js","../node_modules/ipfs-core/esm/src/components/cat.js","../node_modules/ipfs-core/esm/src/components/get.js","../node_modules/ipfs-core/esm/src/components/ls.js","../node_modules/ipfs-core/esm/src/components/id.js","../node_modules/ipfs-core/esm/src/components/config/profiles.js","../node_modules/ipfs-core/esm/src/components/config/index.js","../node_modules/@ipld/car/esm/lib/encoder.js","../node_modules/@ipld/car/esm/lib/header-validator.js","../node_modules/@ipld/car/esm/lib/decoder.js","../node_modules/@ipld/car/esm/lib/writer-browser.js","../node_modules/multiformats/esm/src/traversal.js","../node_modules/ipfs-core/esm/src/components/dag/export.js","../node_modules/@ipld/car/esm/lib/iterator.js","../node_modules/ipfs-core/esm/src/components/dag/import.js","../node_modules/ipfs-core/esm/src/components/dag/index.js","../node_modules/ipfs-core/esm/src/components/dag/get.js","../node_modules/ipfs-core/esm/src/components/dag/resolve.js","../node_modules/ipfs-core/esm/src/components/dag/put.js","../node_modules/ipfs-core-config/esm/src/preload.browser.js","../node_modules/ipfs-core/esm/src/preload.js","../node_modules/ipfs-core/esm/src/mfs-preload.js","../node_modules/ipfs-core/esm/src/components/files/index.js","../node_modules/ipfs-core/esm/src/components/key/gen.js","../node_modules/ipfs-core/esm/src/components/key/index.js","../node_modules/ipfs-core/esm/src/components/key/list.js","../node_modules/ipfs-core/esm/src/components/key/rm.js","../node_modules/ipfs-core/esm/src/components/key/rename.js","../node_modules/ipfs-core/esm/src/components/key/export.js","../node_modules/ipfs-core/esm/src/components/key/import.js","../node_modules/ipfs-core/esm/src/components/key/info.js","../node_modules/ipfs-core/esm/src/components/object/get.js","../node_modules/ipfs-core/esm/src/components/object/links.js","../node_modules/ipfs-core/esm/src/components/object/put.js","../node_modules/ipfs-core/esm/src/components/object/patch/index.js","../node_modules/ipfs-core/esm/src/components/object/patch/add-link.js","../node_modules/ipfs-core/esm/src/components/object/patch/append-data.js","../node_modules/ipfs-core/esm/src/components/object/patch/rm-link.js","../node_modules/ipfs-core/esm/src/components/object/patch/set-data.js","../node_modules/ipfs-core/esm/src/components/object/index.js","../node_modules/ipfs-core/esm/src/components/object/data.js","../node_modules/ipfs-core/esm/src/components/object/new.js","../node_modules/ipfs-core/esm/src/components/object/stat.js","../node_modules/ipfs-core/esm/src/components/repo/gc.js","../node_modules/ipfs-core/esm/src/components/repo/stat.js","../node_modules/ipfs-core/esm/src/components/repo/index.js","../node_modules/ipfs-core/esm/src/components/repo/version.js","../node_modules/ipfs-core/esm/src/components/stats/bw.js","../node_modules/ipfs-core/esm/src/components/stats/index.js","../node_modules/ipfs-repo-migrations/esm/migrations/index.js","../node_modules/ipfs-repo-migrations/esm/src/index.js","../node_modules/ipfs-repo/esm/src/errors.js","../node_modules/ipfs-repo/esm/src/utils/level.js","../node_modules/ipfs-repo/esm/src/version.js","../node_modules/ipfs-repo/esm/src/config.js","../node_modules/ipfs-repo/esm/src/spec.js","../node_modules/ipfs-repo/esm/src/api-addr.js","../node_modules/ipfs-repo/esm/src/idstore.js","../node_modules/ipfs-repo/esm/src/locks/memory.js","../node_modules/ipfs-repo/esm/src/default-options.js","../node_modules/ipfs-repo/esm/src/default-datastore.js","../node_modules/ipfs-repo/esm/src/utils/blockstore.js","../node_modules/ipfs-repo/esm/src/utils/walk-dag.js","../node_modules/ipfs-repo/esm/src/pin-manager.js","../node_modules/ipfs-repo/esm/src/pinned-blockstore.js","../node_modules/ipfs-repo/esm/src/gc.js","../node_modules/ipfs-repo/esm/src/index.js","../node_modules/datastore-level/esm/src/index.js","../node_modules/blockstore-datastore-adapter/esm/src/index.js","../node_modules/ipfs-core-config/esm/src/repo.browser.js","../node_modules/ipfs-core-config/esm/src/libp2p-pubsub-routers.browser.js","../node_modules/ipfs-http-client/esm/src/bitswap/wantlist.js","../node_modules/ipfs-http-client/esm/src/bitswap/wantlist-for-peer.js","../node_modules/ipfs-http-client/esm/src/bitswap/stat.js","../node_modules/ipfs-http-client/esm/src/bitswap/unwant.js","../node_modules/ipfs-http-client/esm/src/bitswap/index.js","../node_modules/ipfs-http-client/esm/src/block/get.js","../node_modules/ipfs-core-utils/esm/src/multipart-request.browser.js","../node_modules/ipfs-http-client/esm/src/lib/abort-signal.js","../node_modules/ipfs-http-client/esm/src/block/put.js","../node_modules/ipfs-http-client/esm/src/block/rm.js","../node_modules/ipfs-http-client/esm/src/block/stat.js","../node_modules/ipfs-http-client/esm/src/block/index.js","../node_modules/ipfs-http-client/esm/src/bootstrap/add.js","../node_modules/ipfs-http-client/esm/src/bootstrap/clear.js","../node_modules/ipfs-http-client/esm/src/bootstrap/list.js","../node_modules/ipfs-http-client/esm/src/bootstrap/reset.js","../node_modules/ipfs-http-client/esm/src/bootstrap/rm.js","../node_modules/ipfs-http-client/esm/src/bootstrap/index.js","../node_modules/ipfs-http-client/esm/src/config/profiles/apply.js","../node_modules/ipfs-http-client/esm/src/config/profiles/list.js","../node_modules/ipfs-http-client/esm/src/config/profiles/index.js","../node_modules/ipfs-http-client/esm/src/config/get.js","../node_modules/ipfs-http-client/esm/src/config/get-all.js","../node_modules/ipfs-http-client/esm/src/config/replace.js","../node_modules/ipfs-http-client/esm/src/config/set.js","../node_modules/ipfs-http-client/esm/src/config/index.js","../node_modules/ipfs-http-client/esm/src/dag/export.js","../node_modules/ipfs-http-client/esm/src/lib/resolve.js","../node_modules/ipfs-http-client/esm/src/dag/get.js","../node_modules/ipfs-http-client/esm/src/dag/import.js","../node_modules/ipfs-http-client/esm/src/dag/put.js","../node_modules/ipfs-http-client/esm/src/dag/resolve.js","../node_modules/ipfs-http-client/esm/src/dag/index.js","../node_modules/ipfs-http-client/esm/src/dht/find-peer.js","../node_modules/ipfs-http-client/esm/src/dht/find-provs.js","../node_modules/ipfs-http-client/esm/src/dht/get.js","../node_modules/ipfs-http-client/esm/src/dht/provide.js","../node_modules/ipfs-http-client/esm/src/dht/put.js","../node_modules/ipfs-http-client/esm/src/dht/query.js","../node_modules/ipfs-http-client/esm/src/dht/index.js","../node_modules/ipfs-http-client/esm/src/diag/cmds.js","../node_modules/ipfs-http-client/esm/src/diag/net.js","../node_modules/ipfs-http-client/esm/src/diag/sys.js","../node_modules/ipfs-http-client/esm/src/diag/index.js","../node_modules/ipfs-http-client/esm/src/files/chmod.js","../node_modules/ipfs-http-client/esm/src/files/cp.js","../node_modules/ipfs-http-client/esm/src/files/flush.js","../node_modules/ipfs-http-client/esm/src/files/ls.js","../node_modules/ipfs-http-client/esm/src/files/mkdir.js","../node_modules/ipfs-http-client/esm/src/files/mv.js","../node_modules/ipfs-http-client/esm/src/files/read.js","../node_modules/ipfs-http-client/esm/src/files/rm.js","../node_modules/ipfs-http-client/esm/src/files/stat.js","../node_modules/ipfs-http-client/esm/src/files/touch.js","../node_modules/ipfs-http-client/esm/src/files/write.js","../node_modules/ipfs-http-client/esm/src/files/index.js","../node_modules/ipfs-http-client/esm/src/key/export.js","../node_modules/ipfs-http-client/esm/src/key/gen.js","../node_modules/ipfs-http-client/esm/src/key/import.js","../node_modules/ipfs-http-client/esm/src/key/info.js","../node_modules/ipfs-http-client/esm/src/key/list.js","../node_modules/ipfs-http-client/esm/src/key/rename.js","../node_modules/ipfs-http-client/esm/src/key/rm.js","../node_modules/ipfs-http-client/esm/src/key/index.js","../node_modules/ipfs-http-client/esm/src/log/level.js","../node_modules/ipfs-http-client/esm/src/log/ls.js","../node_modules/ipfs-http-client/esm/src/log/tail.js","../node_modules/ipfs-http-client/esm/src/log/index.js","../node_modules/ipfs-http-client/esm/src/name/publish.js","../node_modules/ipfs-http-client/esm/src/name/resolve.js","../node_modules/ipfs-http-client/esm/src/name/pubsub/cancel.js","../node_modules/ipfs-http-client/esm/src/name/pubsub/state.js","../node_modules/ipfs-http-client/esm/src/name/pubsub/subs.js","../node_modules/ipfs-http-client/esm/src/name/pubsub/index.js","../node_modules/ipfs-http-client/esm/src/name/index.js","../node_modules/ipfs-http-client/esm/src/object/data.js","../node_modules/ipfs-http-client/esm/src/object/get.js","../node_modules/ipfs-http-client/esm/src/object/links.js","../node_modules/ipfs-http-client/esm/src/object/new.js","../node_modules/ipfs-http-client/esm/src/object/put.js","../node_modules/ipfs-http-client/esm/src/object/stat.js","../node_modules/ipfs-http-client/esm/src/object/patch/add-link.js","../node_modules/ipfs-http-client/esm/src/object/patch/append-data.js","../node_modules/ipfs-http-client/esm/src/object/patch/rm-link.js","../node_modules/ipfs-http-client/esm/src/object/patch/set-data.js","../node_modules/ipfs-http-client/esm/src/object/patch/index.js","../node_modules/ipfs-http-client/esm/src/object/index.js","../node_modules/ipfs-http-client/esm/src/pin/add-all.js","../node_modules/ipfs-http-client/esm/src/pin/add.js","../node_modules/ipfs-http-client/esm/src/pin/ls.js","../node_modules/ipfs-http-client/esm/src/pin/rm-all.js","../node_modules/ipfs-http-client/esm/src/pin/rm.js","../node_modules/ipfs-http-client/esm/src/pin/remote/utils.js","../node_modules/ipfs-http-client/esm/src/pin/remote/add.js","../node_modules/ipfs-http-client/esm/src/pin/remote/ls.js","../node_modules/ipfs-http-client/esm/src/pin/remote/rm.js","../node_modules/ipfs-http-client/esm/src/pin/remote/rm-all.js","../node_modules/ipfs-http-client/esm/src/pin/remote/service/add.js","../node_modules/ipfs-http-client/esm/src/pin/remote/service/ls.js","../node_modules/ipfs-http-client/esm/src/pin/remote/service/rm.js","../node_modules/ipfs-http-client/esm/src/pin/remote/service/index.js","../node_modules/ipfs-http-client/esm/src/pin/remote/index.js","../node_modules/ipfs-http-client/esm/src/pin/index.js","../node_modules/ipfs-http-client/esm/src/lib/http-rpc-wire-format.js","../node_modules/ipfs-http-client/esm/src/pubsub/ls.js","../node_modules/ipfs-http-client/esm/src/pubsub/peers.js","../node_modules/ipfs-http-client/esm/src/pubsub/publish.js","../node_modules/ipfs-http-client/esm/src/pubsub/subscribe.js","../node_modules/ipfs-http-client/esm/src/pubsub/index.js","../node_modules/ipfs-http-client/esm/src/refs/index.js","../node_modules/ipfs-http-client/esm/src/repo/gc.js","../node_modules/ipfs-http-client/esm/src/repo/stat.js","../node_modules/ipfs-http-client/esm/src/repo/version.js","../node_modules/ipfs-http-client/esm/src/repo/index.js","../node_modules/ipfs-http-client/esm/src/stats/bw.js","../node_modules/ipfs-http-client/esm/src/stats/index.js","../node_modules/ipfs-http-client/esm/src/swarm/addrs.js","../node_modules/ipfs-http-client/esm/src/swarm/connect.js","../node_modules/ipfs-http-client/esm/src/swarm/disconnect.js","../node_modules/ipfs-http-client/esm/src/swarm/local-addrs.js","../node_modules/ipfs-http-client/esm/src/swarm/peers.js","../node_modules/ipfs-http-client/esm/src/swarm/index.js","../node_modules/ipfs-http-client/esm/src/add-all.js","../node_modules/ipfs-http-client/esm/src/add.js","../node_modules/ipfs-http-client/esm/src/cat.js","../node_modules/ipfs-http-client/esm/src/commands.js","../node_modules/ipfs-http-client/esm/src/dns.js","../node_modules/ipfs-http-client/esm/src/get-endpoint-config.js","../node_modules/ipfs-http-client/esm/src/get.js","../node_modules/ipfs-http-client/esm/src/id.js","../node_modules/ipfs-http-client/esm/src/is-online.js","../node_modules/ipfs-http-client/esm/src/ls.js","../node_modules/ipfs-http-client/esm/src/mount.js","../node_modules/ipfs-http-client/esm/src/ping.js","../node_modules/ipfs-http-client/esm/src/resolve.js","../node_modules/ipfs-http-client/esm/src/start.js","../node_modules/ipfs-http-client/esm/src/stop.js","../node_modules/ipfs-http-client/esm/src/version.js","../node_modules/ipfs-core-config/esm/src/utils/ipns.js","../node_modules/ipfs-core/esm/src/components/libp2p.js","../node_modules/ipfs-core-config/esm/src/libp2p.browser.js","../node_modules/ipfs-http-client/esm/src/index.js","../node_modules/ipfs-core/esm/src/components/storage.js","../node_modules/ipfs-bitswap/esm/src/utils/index.js","../node_modules/ipfs-bitswap/esm/src/message/index.js","../node_modules/ipfs-bitswap/esm/src/constants.js","../node_modules/ipfs-bitswap/esm/src/want-manager/msg-queue.js","../node_modules/ipfs-bitswap/esm/src/want-manager/index.js","../node_modules/ipfs-bitswap/esm/src/network.js","../node_modules/ipfs-bitswap/esm/src/decision-engine/ledger.js","../node_modules/ipfs-bitswap/esm/src/utils/sorted-map.js","../node_modules/ipfs-bitswap/esm/src/decision-engine/req-queue.js","../node_modules/ipfs-bitswap/esm/src/decision-engine/task-merger.js","../node_modules/ipfs-bitswap/esm/src/decision-engine/index.js","../node_modules/ipfs-bitswap/esm/src/notifications.js","../node_modules/ipfs-bitswap/esm/src/stats/stat.js","../node_modules/ipfs-bitswap/esm/src/stats/index.js","../node_modules/ipfs-bitswap/esm/src/bitswap.js","../node_modules/ipfs-core/esm/src/block-storage.js","../node_modules/ipfs-core/esm/src/components/network.js","../node_modules/ipfs-bitswap/esm/src/index.js","../node_modules/ipfs-core/esm/src/components/swarm/index.js","../node_modules/ipfs-core/esm/src/components/swarm/addrs.js","../node_modules/ipfs-core/esm/src/components/swarm/connect.js","../node_modules/ipfs-core/esm/src/components/swarm/disconnect.js","../node_modules/ipfs-core/esm/src/components/swarm/local-addrs.js","../node_modules/ipfs-core/esm/src/components/swarm/peers.js","../node_modules/ipfs-core/esm/src/components/ping.js","../node_modules/ipfs-core/esm/src/components/dht.js","../node_modules/ipfs-core/esm/src/components/pubsub.js","../node_modules/ipfs-core/esm/src/components/index.js","../node_modules/ipfs-core/esm/src/components/start.js","../node_modules/ipfs-core/esm/src/components/stop.js","../node_modules/ipfs-core/esm/src/components/version.js","../node_modules/ipfs-core/esm/src/index.js","../node_modules/ipfs-core/esm/src/utils.js","../node_modules/ipfs-http-client/esm/src/lib/configure.js","../node_modules/ipfs-http-client/esm/src/lib/core.js","../node_modules/ipfs-http-client/esm/src/lib/to-url-search-params.js","../node_modules/ipfs-repo-migrations/esm/src/errors.js","../node_modules/ipfs-repo-migrations/esm/src/utils.js","../node_modules/ipfs-unixfs-exporter/esm/src/index.js","../node_modules/ipfs-unixfs-importer/esm/src/index.js","../node_modules/ipfs-unixfs/esm/src/index.js","../node_modules/merge-options/index.mjs","../node_modules/multiformats/esm/src/bases/base36.js","../node_modules/multiformats/esm/src/bases/base58.js","../node_modules/multiformats/esm/src/basics.js","../node_modules/multiformats/esm/src/block.js","../node_modules/multiformats/esm/src/hashes/identity.js","../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../node_modules/parse-duration/index.mjs","../node_modules/uint8arrays/esm/src/from-string.js","../node_modules/uint8arrays/esm/src/to-string.js"],"sourcesContent":[null,"'use strict'\n\nconst exp = Math.exp\n\nexports =\nmodule.exports =\nfunction MovingAverage (timespan) {\n  if (typeof timespan !== 'number') { throw new Error('must provide a timespan to the moving average constructor') }\n\n  if (timespan <= 0) { throw new Error('must provide a timespan > 0 to the moving average constructor') }\n\n  let ma     // moving average\n  let v = 0  // variance\n  let d = 0  // deviation\n  let f = 0  // forecast\n\n  let previousTime\n\n  let ret = {}\n\n  function alpha (t, pt) {\n    return 1 - (exp(-(t - pt) / timespan))\n  }\n\n  ret.push =\n  function push (time, value) {\n    if (previousTime) {\n      // calculate moving average\n      const a = alpha(time, previousTime)\n      const diff = value - ma\n      const incr = a * diff\n      ma = a * value + (1 - a) * ma\n      // calculate variance & deviation\n      v = (1 - a) * (v + diff * incr)\n      d = Math.sqrt(v)\n      // calculate forecast\n      f = ma + a * diff\n    } else {\n      ma = value\n    }\n    previousTime = time\n  }\n\n  // Exponential Moving Average\n\n  ret.movingAverage =\n  function movingAverage () {\n    return ma\n  }\n\n  // Variance\n  ret.variance =\n  function variance () {\n    return v\n  }\n\n  ret.deviation =\n  function deviation () {\n    return d\n  }\n\n  ret.forecast =\n  function forecast () {\n    return f\n  }\n\n  return ret\n}\n","/**\n * Takes an array of AbortSignals and returns a single signal.\n * If any signals are aborted, the returned signal will be aborted.\n * @param {Array<AbortSignal>} signals\n * @returns {AbortSignal}\n */\nfunction anySignal (signals) {\n  const controller = new globalThis.AbortController()\n\n  function onAbort () {\n    controller.abort()\n\n    for (const signal of signals) {\n      if (!signal || !signal.removeEventListener) continue\n      signal.removeEventListener('abort', onAbort)\n    }\n  }\n\n  for (const signal of signals) {\n    if (!signal || !signal.addEventListener) continue\n    if (signal.aborted) {\n      onAbort()\n      break\n    }\n    signal.addEventListener('abort', onAbort)\n  }\n\n  return controller.signal\n}\n\nmodule.exports = anySignal\nmodule.exports.anySignal = anySignal\n","'use strict';\n\nmodule.exports = array => {\n\tif (!Array.isArray(array)) {\n\t\tthrow new TypeError(`Expected an array, got ${typeof array}`);\n\t}\n\n\tarray = [...array];\n\n\tfor (let index = array.length - 1; index > 0; index--) {\n\t\tconst newIndex = Math.floor(Math.random() * (index + 1));\n\t\t[array[index], array[newIndex]] = [array[newIndex], array[index]];\n\t}\n\n\treturn array;\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/* eslint-env browser */\n\n'use strict'\n\nconst browserReadableStreamToIt = require('browser-readablestream-to-it')\n\n/**\n * @param {Blob} blob\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction blobToIt (blob) {\n  if (typeof blob.stream === 'function') {\n    // @ts-ignore missing some properties\n    return browserReadableStreamToIt(blob.stream())\n  }\n\n  // firefox < 69 does not support blob.stream()\n  // @ts-ignore - response.body is optional, but in practice it's a stream.\n  return browserReadableStreamToIt(new Response(blob).body)\n}\n\nmodule.exports = blobToIt\n","'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n",null,"/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","export default function dlv(obj, key, def, p, undef) {\n\tkey = key.split ? key.split('.') : key;\n\tfor (p = 0; p < key.length; p++) {\n\t\tobj = obj ? obj[key[p]] : undef;\n\t}\n\treturn obj === undef ? def : obj;\n}\n","'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","module.exports = function (max) {\n\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n\n  function update (key, value) {\n    cache[key] = value\n    size ++\n    if(size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if(cache[key] !== undefined)\n        cache[key] = undefined\n      if(_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if(v !== undefined) return v\n      if((v = _cache[key]) !== undefined) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if(cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\n\n\n\n\n\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","'use strict'\nconst isElectron = require('is-electron')\n\nconst IS_ENV_WITH_DOM = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\n// @ts-ignore\nconst IS_ELECTRON = isElectron()\nconst IS_BROWSER = IS_ENV_WITH_DOM && !IS_ELECTRON\nconst IS_ELECTRON_MAIN = IS_ELECTRON && !IS_ENV_WITH_DOM\nconst IS_ELECTRON_RENDERER = IS_ELECTRON && IS_ENV_WITH_DOM\nconst IS_NODE = typeof require === 'function' && typeof globalThis.process !== 'undefined' && typeof globalThis.process.release !== 'undefined' && globalThis.process.release.name === 'node' && !IS_ELECTRON\n// @ts-ignore - we either ignore worker scope or dom scope\nconst IS_WEBWORKER = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\nconst IS_TEST = typeof globalThis.process !== 'undefined' && typeof globalThis.process.env !== 'undefined' && globalThis.process.env.NODE_ENV === 'test'\nconst IS_REACT_NATIVE = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n\nmodule.exports = {\n  isTest: IS_TEST,\n  isElectron: IS_ELECTRON,\n  isElectronMain: IS_ELECTRON_MAIN,\n  isElectronRenderer: IS_ELECTRON_RENDERER,\n  isNode: IS_NODE,\n  /**\n   * Detects browser main thread  **NOT** web worker or service worker\n   */\n  isBrowser: IS_BROWSER,\n  isWebWorker: IS_WEBWORKER,\n  isEnvWithDom: IS_ENV_WITH_DOM,\n  isReactNative: IS_REACT_NATIVE\n}\n","/* eslint-disable no-undef */\n'use strict'\n\nconst { fetch, Request, Headers } = require('./http/fetch')\nconst { TimeoutError, HTTPError } = require('./http/error')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = require('iso-url')\nconst anySignal = require('any-signal')\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          timeout: undefined,\n          headers\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = function () {\n      return fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n","'use strict'\n\n// Adapted from RFC 2181 (See section 11)\n//\n// The RFC defines a Domain Name to be at most 255 chars including seperators\n// between labels.\n// Subdomains are labels plus a seperator. A label is a string starting and\n// ending with an alphanum, with dashes allowed in the middle. It is between 1 and 63 chars.\n//\n// We make some assumptions below that go beyond the RFC. We assume the TLD\n// to be at least 2 chars. The regex also allows domains longer than 255 chars,\n// but allows at most 127 subdomains, as assuming a lower-bound of one char per\n// subdomain will yield 252, and adding a TLD of 2 chars sums to 254.\n/*\n(?:                   // Group 1: This is for subdomain, which is composed of a label and a seperator (length = [1, 63] + 1)\n  [a-z0-9]\n  (?:\n    [a-z0-9\\-]{0,61} // Limited to 61 chars as we have at least two chars if we reach this group (61 + 2 = 63 which is the limit)\n    [a-z0-9]\n  )?\n  \\.                  // Label seperator\n){0,126}             // If we assume the lower-bound of 1 char labels, we can at most have 126 groups before approaching the total limit of 255 chars\n(?:                   // Group 2: Assume that the TLD is at least 2 chars (for sanity)\n  [a-z0-9]\n  [a-z0-9\\-]{0,61}\n  [a-z0-9]\n)\n\\.?                   // Some consider a trailing dot to be considered valid as it signifies the root of the domain tree\n */\nvar domainNameRegex = /^(?:[a-z0-9](?:[a-z0-9\\-]{0,61}[a-z0-9])?\\.){0,126}(?:[a-z0-9](?:[a-z0-9\\-]{0,61}[a-z0-9]))\\.?$/i\n\n/**\n * Test whether a string is a valid domain name, optionally checking for a root dot as well\n * @param  {String}  domainName\n * @param  {Boolean} rootDot    Check for a root dot eg. 'example.com.'. Defaults to false\n * @return {Boolean}\n */\nmodule.exports = function isDomainName (domainName, rootDot) {\n  if (rootDot == null) rootDot = false\n\n  if (domainName.length < 2) return false\n  if (domainName.length > 255) return false\n\n  var lastChar = domainName[domainName.length - 1]\n  if (rootDot) {\n    if (lastChar !== '.') return false\n  } else {\n    if (lastChar === '.') return false\n  }\n\n  return domainNameRegex.test(domainName)\n}\n","'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n","'use strict'\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\nconst drain = async (source) => {\n  for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty\n}\n\nmodule.exports = drain\n","'use strict'\n\n/**\n * Returns the first result from an (async) iterable, unless empty, in which\n * case returns `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst first = async (source) => {\n  for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n    return entry\n  }\n\n  return undefined\n}\n\nmodule.exports = first\n","'use strict'\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst last = async (source) => {\n  let res\n\n  for await (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n\nmodule.exports = last\n","'use strict'\n\n/**\n * @typedef {import('./types').EncoderOptions} EncoderOptions\n * @typedef {import('./types').DecoderOptions} DecoderOptions\n */\n\nexports.encode = require('./encode')\nexports.decode = require('./decode')\n\nexports.varintEncode = require('./varint-encode')\nexports.varintDecode = require('./varint-decode')\n\nexports.int32BEEncode = require('./int32BE-encode')\nexports.int32BEDecode = require('./int32BE-decode')\n","'use strict'\n\nconst batch = require('it-batch')\n\n/**\n * @template T\n * @typedef {{ok:true, value:T}} Success\n */\n\n/**\n * @typedef {{ok:false, err:Error}} Failure\n */\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n *\n * @template T\n * @param {AsyncIterable<() => Promise<T>>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T>}\n */\nasync function * parallelBatch (source, size = 1) {\n  for await (const tasks of batch(source, size)) {\n    /** @type {Promise<Success<T>|Failure>[]} */\n    const things = tasks.map(\n      /**\n       * @param {() => Promise<T>} p\n       */\n      p => {\n        return p().then(value => ({ ok: true, value }), err => ({ ok: false, err }))\n      })\n\n    for (let i = 0; i < things.length; i++) {\n      const result = await things[i]\n\n      if (result.ok) {\n        yield result.value\n      } else {\n        throw result.err\n      }\n    }\n  }\n}\n\nmodule.exports = parallelBatch\n","'use strict'\n\nconst defer = require('p-defer')\nconst EventEmitter = require('events').EventEmitter\n\n/**\n * @template T\n * @typedef {object} Operation\n * @property {boolean} done\n * @property {boolean} ok\n * @property {Error} err\n * @property {T} value\n */\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n *\n * @template T\n * @param {Iterable<() => Promise<T>> | AsyncIterable<() => Promise<T>>} source\n * @param {object} [options]\n * @param {number} [options.concurrency=Infinity]\n * @param {boolean} [options.ordered=false]\n * @returns {AsyncIterable<T>}\n */\nasync function * parallel (source, options = {}) {\n  let concurrency = options.concurrency || Infinity\n\n  if (concurrency < 1) {\n    concurrency = Infinity\n  }\n\n  const ordered = options.ordered == null ? false : options.ordered\n  const emitter = new EventEmitter()\n\n  /** @type {Operation<T>[]}} */\n  const ops = []\n  let slotAvailable = defer()\n  let resultAvailable = defer()\n  let sourceFinished = false\n  let sourceErr\n  let opErred = false\n\n  emitter.on('task-complete', () => {\n    resultAvailable.resolve()\n  })\n\n  Promise.resolve().then(async () => {\n    try {\n      for await (const task of source) {\n        if (ops.length === concurrency) {\n          slotAvailable = defer()\n          await slotAvailable.promise\n        }\n\n        if (opErred) {\n          break\n        }\n\n        /**\n         * @type {any}\n         */\n        const op = {\n          done: false\n        }\n        ops.push(op)\n\n        task()\n          .then(result => {\n            op.done = true\n            op.ok = true\n            op.value = result\n            emitter.emit('task-complete')\n          }, err => {\n            op.done = true\n            op.err = err\n            emitter.emit('task-complete')\n          })\n      }\n\n      sourceFinished = true\n      emitter.emit('task-complete')\n    } catch (err) {\n      sourceErr = err\n      emitter.emit('task-complete')\n    }\n  })\n\n  function valuesAvailable () {\n    if (ordered) {\n      return Boolean(ops[0] && ops[0].done)\n    }\n\n    return Boolean(ops.find(op => op.done))\n  }\n\n  function * yieldOrderedValues () {\n    while (ops.length && ops[0].done) {\n      const op = ops[0]\n      ops.shift()\n\n      if (op.ok) {\n        yield op.value\n      } else {\n        // allow the source to exit\n        opErred = true\n        slotAvailable.resolve()\n\n        throw op.err\n      }\n\n      slotAvailable.resolve()\n    }\n  }\n\n  function * yieldUnOrderedValues () {\n    // more values can become available while we wait for `yield`\n    // to return control to this function\n    while (valuesAvailable()) {\n      for (let i = 0; i < ops.length; i++) {\n        if (ops[i].done) {\n          const op = ops[i]\n          ops.splice(i, 1)\n          i--\n\n          if (op.ok) {\n            yield op.value\n          } else {\n            opErred = true\n            slotAvailable.resolve()\n\n            throw op.err\n          }\n\n          slotAvailable.resolve()\n        }\n      }\n    }\n  }\n\n  while (true) {\n    if (!valuesAvailable()) {\n      resultAvailable = defer()\n      await resultAvailable.promise\n    }\n\n    if (sourceErr) {\n      // the source threw an error, propagate it\n      throw sourceErr\n    }\n\n    if (ordered) {\n      yield * yieldOrderedValues()\n    } else {\n      yield * yieldUnOrderedValues()\n    }\n\n    if (sourceFinished && ops.length === 0) {\n      // not waiting for any results and no more tasks so we are done\n      break\n    }\n  }\n}\n\nmodule.exports = parallel\n","'use strict'\n\n/**\n * @template T\n * @typedef {Object} Peek\n * @property {() => IteratorResult<T, void>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} AsyncPeek\n * @property {() => Promise<IteratorResult<T, void>>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} Push\n * @property {(value:T) => void} push\n */\n\n/**\n * @template T\n * @typedef {Iterable<T> & Peek<T> & Push<T> & Iterator<T>} Peekable<T>\n */\n\n/**\n * @template T\n * @typedef {AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>} AsyncPeekable<T>\n */\n\n/**\n * @template {Iterable<any> | AsyncIterable<any>} I\n * @param {I} iterable\n * @returns {I extends Iterable<infer T>\n *  ? Peekable<T>\n *  : I extends AsyncIterable<infer T>\n *  ? AsyncPeekable<T>\n *  : never\n * }\n */\nfunction peekableIterator (iterable) {\n  // @ts-ignore\n  const [iterator, symbol] = iterable[Symbol.asyncIterator]\n    // @ts-ignore\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-ignore\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  /** @type {any[]} */\n  const queue = []\n\n  // @ts-ignore\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n\nmodule.exports = peekableIterator\n","const FIFO = require('fast-fifo')\n\nmodule.exports = (options) => {\n  options = options || {}\n  let onEnd\n\n  if (typeof options === 'function') {\n    onEnd = options\n    options = {}\n  } else {\n    onEnd = options.onEnd\n  }\n\n  let buffer = new FIFO()\n  let pushable, onNext, ended\n\n  const waitNext = () => {\n    if (!buffer.isEmpty()) {\n      if (options.writev) {\n        let next\n        const values = []\n        while (!buffer.isEmpty()) {\n          next = buffer.shift()\n          if (next.error) throw next.error\n          values.push(next.value)\n        }\n        return { done: next.done, value: values }\n      }\n\n      const next = buffer.shift()\n      if (next.error) throw next.error\n      return next\n    }\n\n    if (ended) return { done: true }\n\n    return new Promise((resolve, reject) => {\n      onNext = next => {\n        onNext = null\n        if (next.error) {\n          reject(next.error)\n        } else {\n          if (options.writev && !next.done) {\n            resolve({ done: next.done, value: [next.value] })\n          } else {\n            resolve(next)\n          }\n        }\n        return pushable\n      }\n    })\n  }\n\n  const bufferNext = next => {\n    if (onNext) return onNext(next)\n    buffer.push(next)\n    return pushable\n  }\n\n  const bufferError = err => {\n    buffer = new FIFO()\n    if (onNext) return onNext({ error: err })\n    buffer.push({ error: err })\n    return pushable\n  }\n\n  const push = value => {\n    if (ended) return pushable\n    return bufferNext({ done: false, value })\n  }\n  const end = err => {\n    if (ended) return pushable\n    ended = true\n    return err ? bufferError(err) : bufferNext({ done: true })\n  }\n  const _return = () => {\n    buffer = new FIFO()\n    end()\n    return { done: true }\n  }\n  const _throw = err => {\n    end(err)\n    return { done: true }\n  }\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next: waitNext,\n    return: _return,\n    throw: _throw,\n    push,\n    end\n  }\n\n  if (!onEnd) return pushable\n\n  const _pushable = pushable\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next () {\n      return _pushable.next()\n    },\n    throw (err) {\n      _pushable.throw(err)\n      if (onEnd) {\n        onEnd(err)\n        onEnd = null\n      }\n      return { done: true }\n    },\n    return () {\n      _pushable.return()\n      if (onEnd) {\n        onEnd()\n        onEnd = null\n      }\n      return { done: true }\n    },\n    push,\n    end (err) {\n      _pushable.end(err)\n      if (onEnd) {\n        onEnd(err)\n        onEnd = null\n      }\n      return pushable\n    }\n  }\n\n  return pushable\n}\n","'use strict'\n\nconst all = require('it-all')\n\n/**\n * Collects all values from an async iterator, sorts them\n * using the passed function and yields them\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} source\n * @param {(a: T, b: T) => -1 | 0 | 1} sorter\n */\nconst sort = async function * (source, sorter) {\n  const arr = await all(source)\n\n  yield * arr.sort(sorter)\n}\n\nmodule.exports = sort\n","exports.extract = require('./extract')\nexports.pack = require('./pack')\n","const { Buffer } = require('buffer')\nconst BufferList = require('bl/BufferList')\nconst { S_IFMT, S_IFBLK, S_IFCHR, S_IFDIR, S_IFIFO, S_IFLNK } = require('iso-constants')\nconst concat = require('it-concat')\nconst Headers = require('./pack-headers')\n\nconst DMODE = parseInt('755', 8)\nconst FMODE = parseInt('644', 8)\n\nconst END_OF_TAR = Buffer.alloc(1024)\n\nfunction modeToType (mode) {\n  switch (mode & S_IFMT) {\n    case S_IFBLK: return 'block-device'\n    case S_IFCHR: return 'character-device'\n    case S_IFDIR: return 'directory'\n    case S_IFIFO: return 'fifo'\n    case S_IFLNK: return 'symlink'\n  }\n  return 'file'\n}\n\nfunction getPadding (size) {\n  size &= 511\n  if (size) return new BufferList(END_OF_TAR.slice(0, 512 - size))\n}\n\nfunction encode (header) {\n  if (!header.pax) {\n    const encoded = Headers.encode(header)\n    if (encoded) return encoded\n  }\n  return encodePax(header)\n}\n\nfunction encodePax (header) {\n  const paxHeader = Headers.encodePax({\n    name: header.name,\n    linkname: header.linkname,\n    pax: header.pax\n  })\n\n  const newHeader = {\n    name: 'PaxHeader',\n    mode: header.mode,\n    uid: header.uid,\n    gid: header.gid,\n    size: paxHeader.length,\n    mtime: header.mtime,\n    type: 'pax-header',\n    linkname: header.linkname && 'PaxHeader',\n    uname: header.uname,\n    gname: header.gname,\n    devmajor: header.devmajor,\n    devminor: header.devminor\n  }\n\n  return new BufferList([\n    Headers.encode(newHeader),\n    paxHeader,\n    getPadding(paxHeader.length),\n    Headers.encode({ ...newHeader, size: header.size, type: header.type })\n  ])\n}\n\nmodule.exports = () => async function * (source) {\n  for await (let { header, body } of source) {\n    if (!header.size || header.type === 'symlink') header.size = 0\n    if (!header.type) header.type = modeToType(header.mode)\n    if (!header.mode) header.mode = header.type === 'directory' ? DMODE : FMODE\n    if (!header.uid) header.uid = 0\n    if (!header.gid) header.gid = 0\n    if (!header.mtime) header.mtime = new Date()\n\n    if (typeof body === 'string') body = Buffer.from(body)\n\n    if (Buffer.isBuffer(body) || BufferList.isBufferList(body)) {\n      header.size = body.length\n      yield new BufferList([encode(header), body, getPadding(header.size)])\n      continue\n    }\n\n    if (header.type === 'symlink' && !header.linkname) {\n      header.linkname = (await concat(body)).toString()\n      yield encode(header)\n      continue\n    }\n\n    yield encode(header)\n\n    if (header.type !== 'file' && header.type !== 'contiguous-file') {\n      continue\n    }\n\n    let written = 0\n    for await (const chunk of body) {\n      written += chunk.length\n      yield BufferList.isBufferList(chunk) ? chunk : new BufferList(chunk)\n    }\n\n    if (written !== header.size) { // corrupting tar\n      throw new Error('size mismatch')\n    }\n\n    const overflow = getPadding(header.size)\n    if (overflow) yield overflow\n  }\n\n  yield new BufferList(END_OF_TAR)\n}\n","'use strict'\n\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\n\n/**\n * Takes an (async) iterable that yields buffer-like-objects and concats them\n * into one buffer\n * @param {AsyncIterable<Uint8Array>|Iterable<Uint8Array>} stream\n */\nasync function toBuffer (stream) {\n  let buffer = new Uint8Array(0)\n\n  for await (const buf of stream) {\n    buffer = uint8ArrayConcat([buffer, buf], buffer.length + buf.length)\n  }\n\n  return buffer\n}\n\nmodule.exports = toBuffer\n","module.exports = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n","module.exports = get;\n\n/*\n  const obj = {a: {aa: {aaa: 2}}, b: 4};\n\n  get(obj, 'a.aa.aaa'); // 2\n  get(obj, ['a', 'aa', 'aaa']); // 2\n\n  get(obj, 'b.bb.bbb'); // undefined\n  get(obj, ['b', 'bb', 'bbb']); // undefined\n\n  get(obj.a, 'aa.aaa'); // 2\n  get(obj.a, ['aa', 'aaa']); // 2\n\n  get(obj.b, 'bb.bbb'); // undefined\n  get(obj.b, ['bb', 'bbb']); // undefined\n\n  get(obj.b, 'bb.bbb', 42); // 42\n  get(obj.b, ['bb', 'bbb'], 42); // 42\n\n  get(null, 'a'); // undefined\n  get(undefined, ['a']); // undefined\n\n  get(null, 'a', 42); // 42\n  get(undefined, ['a'], 42); // 42\n\n  const obj = {a: {}};\n  const sym = Symbol();\n  obj.a[sym] = 4;\n  get(obj.a, sym); // 4\n*/\n\nfunction get(obj, propsArg, defaultValue) {\n  if (!obj) {\n    return defaultValue;\n  }\n  var props, prop;\n  if (Array.isArray(propsArg)) {\n    props = propsArg.slice(0);\n  }\n  if (typeof propsArg == 'string') {\n    props = propsArg.split('.');\n  }\n  if (typeof propsArg == 'symbol') {\n    props = [propsArg];\n  }\n  if (!Array.isArray(props)) {\n    throw new Error('props arg must be an array, a string or a symbol');\n  }\n  while (props.length) {\n    prop = props.shift();\n    if (!obj) {\n      return defaultValue;\n    }\n    obj = obj[prop];\n    if (obj === undefined) {\n      return defaultValue;\n    }\n  }\n  return obj;\n}\n","module.exports = set;\n\n/*\n  var obj1 = {};\n  set(obj1, 'a.aa.aaa', 4); // true\n  obj1; // {a: {aa: {aaa: 4}}}\n\n  var obj2 = {};\n  set(obj2, ['a', 'aa', 'aaa'], 4); // true\n  obj2; // {a: {aa: {aaa: 4}}}\n\n  var obj3 = {a: {aa: {aaa: 2}}};\n  set(obj3, 'a.aa.aaa', 3); // true\n  obj3; // {a: {aa: {aaa: 3}}}\n\n  // don't clobber existing\n  var obj4 = {a: {aa: {aaa: 2}}};\n  set(obj4, 'a.aa', {bbb: 7}); // false\n\n  const obj5 = {a: {}};\n  const sym = Symbol();\n  set(obj5.a, sym, 7); // true\n  obj5; // {a: {Symbol(): 7}}\n*/\n\nfunction set(obj, propsArg, value) {\n  var props, lastProp;\n  if (Array.isArray(propsArg)) {\n    props = propsArg.slice(0);\n  }\n  if (typeof propsArg == 'string') {\n    props = propsArg.split('.');\n  }\n  if (typeof propsArg == 'symbol') {\n    props = [propsArg];\n  }\n  if (!Array.isArray(props)) {\n    throw new Error('props arg must be an array, a string or a symbol');\n  }\n  lastProp = props.pop();\n  if (!lastProp) {\n    return false;\n  }\n  prototypeCheck(lastProp);\n  var thisProp;\n  while ((thisProp = props.shift())) {\n    prototypeCheck(thisProp);\n    if (typeof obj[thisProp] == 'undefined') {\n      obj[thisProp] = {};\n    }\n    obj = obj[thisProp];\n    if (!obj || typeof obj != 'object') {\n      return false;\n    }\n  }\n  obj[lastProp] = value;\n  return true;\n}\n\nfunction prototypeCheck(prop) {\n  if (prop === '__proto__' || prop === 'constructor' || prop === 'prototype') {\n    throw new Error('setting of prototype values not supported');\n  }\n}\n","module.exports = require('level-packager')(require('level-js'))\n","'use strict'\n\nconst PeerId = require('peer-id')\nconst { Multiaddr } = require('multiaddr')\nconst mafmt = require('mafmt')\nconst { EventEmitter } = require('events')\nconst debug = require('debug')\n\nconst log = Object.assign(debug('libp2p:bootstrap'), {\n  error: debug('libp2p:bootstrap:error')\n})\n\n/**\n * Emits 'peer' events on a regular interval for each peer in the provided list.\n */\nclass Bootstrap extends EventEmitter {\n  /**\n   * Constructs a new Bootstrap.\n   *\n   * @param {Object} options\n   * @param {Array<string>} options.list - the list of peer addresses in multi-address format\n   * @param {number} [options.interval = 10000] - the interval between emitting addresses in milliseconds\n   *\n   */\n  constructor (options = { list: [] }) {\n    if (!options.list || !options.list.length) {\n      throw new Error('Bootstrap requires a list of peer addresses')\n    }\n    super()\n\n    this._list = options.list\n    this._interval = options.interval || 10000\n    this._timer = null\n  }\n\n  /**\n   * Start emitting events.\n   */\n  start () {\n    if (this._timer) {\n      return\n    }\n\n    this._timer = setInterval(() => this._discoverBootstrapPeers(), this._interval)\n    log('Starting bootstrap node discovery')\n    this._discoverBootstrapPeers()\n  }\n\n  /**\n   * Emit each address in the list as a PeerInfo.\n   */\n  _discoverBootstrapPeers () {\n    if (!this._timer) {\n      return\n    }\n\n    this._list.forEach((candidate) => {\n      if (!mafmt.P2P.matches(candidate)) {\n        return log.error('Invalid multiaddr')\n      }\n\n      const ma = new Multiaddr(candidate)\n      const peerIdStr = ma.getPeerId()\n\n      if (!peerIdStr) {\n        log.error('Invalid bootstrap multiaddr without peer id')\n        return\n      }\n\n      const peerId = PeerId.createFromB58String(peerIdStr)\n\n      try {\n        this.emit('peer', {\n          id: peerId,\n          multiaddrs: [ma]\n        })\n      } catch (err) {\n        log.error('Invalid bootstrap peer id', err)\n      }\n    })\n  }\n\n  /**\n   * Stop emitting events.\n   */\n  stop () {\n    if (this._timer) clearInterval(this._timer)\n    this._timer = null\n  }\n}\n\nexports = module.exports = Bootstrap\nexports.tag = 'bootstrap'\n","'use strict'\n\nconst debug = require('debug')\nconst PeerId = require('peer-id')\nconst drain = require('it-drain')\n\nconst { default: PQueue } = require('p-queue')\nconst defer = require('p-defer')\n\nconst log = debug('libp2p-delegated-content-routing')\nlog.error = debug('libp2p-delegated-content-routing:error')\n\nconst DEFAULT_TIMEOUT = 30e3 // 30 second default\nconst CONCURRENT_HTTP_REQUESTS = 4\n\n/**\n * @typedef {import('peer-id').PeerID} PeerID\n * @typedef {import('cids').CID} CID\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * An implementation of content routing, using a delegated peer.\n */\nclass DelegatedContentRouting {\n  /**\n   * Create a new DelegatedContentRouting instance.\n   *\n   * @param {PeerID} peerId - the id of the node that is using this routing.\n   * @param {object} client - an instance of the ipfs-http-client module\n   */\n  constructor (peerId, client) {\n    if (peerId == null) {\n      throw new Error('missing self peerId')\n    }\n\n    if (client == null) {\n      throw new Error('missing ipfs http client')\n    }\n\n    this._client = client\n    this.peerId = peerId\n\n    // limit concurrency to avoid request flood in web browser\n    // https://github.com/libp2p/js-libp2p-delegated-content-routing/issues/12\n    const concurrency = { concurrency: CONCURRENT_HTTP_REQUESTS }\n    this._httpQueue = new PQueue(concurrency)\n    // sometimes refs requests take long time, they need separate queue\n    // to not suffocate regular business\n    this._httpQueueRefs = new PQueue(Object.assign({}, concurrency, {\n      concurrency: 2\n    }))\n\n    const {\n      protocol,\n      host,\n      port\n    } = client.getEndpointConfig()\n\n    log(`enabled DelegatedContentRouting via ${protocol}://${host}:${port}`)\n  }\n\n  /**\n   * Search the dht for providers of the given CID.\n   *\n   * - call `findProviders` on the delegated node.\n   *\n   * @param {CID} key - The CID to find providers for\n   * @param {object} options - Options\n   * @param {number} options.timeout - How long the query can take. Defaults to 30 seconds\n   * @param {number} options.numProviders - How many providers to find, defaults to 20\n   * @returns {AsyncIterable<{ id: PeerId, multiaddrs: Multiaddr[] }>} - An async iterable of PeerId/Multiaddrs\n   */\n  async * findProviders (key, options = {}) {\n    log(`findProviders starts: ${key}`)\n    options.timeout = options.timeout || DEFAULT_TIMEOUT\n\n    let providers = 0\n    const onStart = defer()\n    const onFinish = defer()\n\n    this._httpQueue.add(() => {\n      onStart.resolve()\n      return onFinish.promise\n    })\n\n    try {\n      await onStart.promise\n\n      for await (const { id, addrs } of this._client.dht.findProvs(key, {\n        numProviders: options.numProviders,\n        timeout: options.timeout\n      })) {\n        yield {\n          id: PeerId.parse(id),\n          multiaddrs: addrs\n        }\n        providers++\n      }\n    } catch (err) {\n      log.error('findProviders errored:', err)\n      throw err\n    } finally {\n      onFinish.resolve()\n      log(`findProviders finished: ${key} found ${providers} providers`)\n    }\n  }\n\n  /**\n   * Announce to the network that the delegated node can provide the given key.\n   *\n   * Currently this uses the following hack\n   * - delegate is one of bootstrap nodes, so we are always connected to it\n   * - call block stat on the delegated node, so it fetches the content\n   * - call dht provide with the passed cid\n   *\n   * N.B. this must be called for every block in the dag you want provided otherwise\n   * the delegate will only be able to supply the root block of the dag when asked\n   * for the data by an interested peer.\n   *\n   * @param {CID} key - The delegate will publish a provider record for this CID\n   * @returns {Promise<void>}\n   */\n  async provide (key) {\n    log(`provide starts: ${key}`)\n    await this._httpQueueRefs.add(async () => {\n      await this._client.block.stat(key)\n      await drain(this._client.dht.provide(key))\n    })\n    log(`provide finished: ${key}`)\n  }\n}\n\nmodule.exports = DelegatedContentRouting\n","'use strict'\n\nconst PeerId = require('peer-id')\nconst { base58btc } = require('multiformats/bases/base58')\nconst { default: PQueue } = require('p-queue')\nconst defer = require('p-defer')\nconst debug = require('debug')\n\nconst log = debug('libp2p-delegated-peer-routing')\nlog.error = debug('libp2p-delegated-peer-routing:error')\n\nconst DEFAULT_TIMEOUT = 30e3 // 30 second default\nconst CONCURRENT_HTTP_REQUESTS = 4\n\nclass DelegatedPeerRouting {\n  /**\n   * Create a new DelegatedPeerRouting instance.\n   *\n   * @param {object} client - an instance of the ipfs-http-client module\n   */\n  constructor (client) {\n    if (client == null) {\n      throw new Error('missing ipfs http client')\n    }\n\n    this._client = client\n\n    // limit concurrency to avoid request flood in web browser\n    // https://github.com/libp2p/js-libp2p-delegated-content-routing/issues/12\n    this._httpQueue = new PQueue({\n      concurrency: CONCURRENT_HTTP_REQUESTS\n    })\n\n    const {\n      protocol,\n      host,\n      port\n    } = client.getEndpointConfig()\n\n    log(`enabled DelegatedPeerRouting via ${protocol}://${host}:${port}`)\n  }\n\n  /**\n   * Attempts to find the given peer\n   *\n   * @param {PeerID} id\n   * @param {object} options\n   * @param {number} options.timeout - How long the query can take. Defaults to 30 seconds\n   * @returns {Promise<{ id: PeerId, multiaddrs: Multiaddr[] }>}\n   */\n  async findPeer (id, options = {}) {\n    let idStr = id\n    if (PeerId.isPeerId(idStr)) {\n      idStr = id.toB58String()\n    }\n\n    log('findPeer starts: ' + id)\n\n    options.timeout = options.timeout || DEFAULT_TIMEOUT\n\n    try {\n      return await this._httpQueue.add(async () => {\n        const { addrs } = await this._client.dht.findPeer(idStr, {\n          timeout: options.timeout\n        })\n\n        return {\n          id,\n          multiaddrs: addrs\n        }\n      })\n    } catch (err) {\n      if (err.message.includes('not found')) {\n        return undefined\n      }\n\n      throw err\n    } finally {\n      log('findPeer finished: ' + id)\n    }\n  }\n\n  /**\n   * Attempt to find the closest peers on the network to the given key\n   *\n   * @param {Uint8Array} key - A CID like key\n   * @param {object} [options]\n   * @param {number} [options.timeout=30e3] - How long the query can take.\n   * @returns {AsyncIterable<{ id: PeerId, multiaddrs: Multiaddr[] }>}\n   */\n  async * getClosestPeers (key, options = {}) {\n    const keyStr = base58btc.encode(key).substring(1)\n\n    log('getClosestPeers starts:', keyStr)\n    options.timeout = options.timeout || DEFAULT_TIMEOUT\n\n    const onStart = defer()\n    const onFinish = defer()\n\n    this._httpQueue.add(() => {\n      onStart.resolve()\n      return onFinish.promise\n    })\n\n    try {\n      await onStart.promise\n\n      for await (const result of this._client.dht.query(keyStr, {\n        timeout: options.timeout\n      })) {\n        switch (result.type) {\n          case 1: // Found Closer\n            for (const response of result.responses) {\n              yield {\n                id: PeerId.parse(response.id),\n                multiaddrs: response.addrs\n              }\n            }\n            break\n          default:\n            log('getClosestPeers unhandled response', result)\n        }\n      }\n    } catch (err) {\n      log.error('getClosestPeers errored:', err)\n      throw err\n    } finally {\n      onFinish.resolve()\n      log('getClosestPeers finished:', keyStr)\n    }\n  }\n}\n\nmodule.exports = DelegatedPeerRouting\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst pubsub_1 = __importStar(require(\"libp2p-interfaces/src/pubsub\"));\nconst message_cache_1 = require(\"./message-cache\");\nconst rpc_1 = require(\"./message/rpc\");\nconst constants = __importStar(require(\"./constants\"));\nconst heartbeat_1 = require(\"./heartbeat\");\nconst get_gossip_peers_1 = require(\"./get-gossip-peers\");\nconst utils_1 = require(\"./utils\");\nconst score_1 = require(\"./score\");\nconst tracer_1 = require(\"./tracer\");\nconst time_cache_1 = require(\"./utils/time-cache\");\nconst PeerId = require(\"peer-id\");\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nconst Envelope = require(\"libp2p/src/record/envelope\");\nconst constants_1 = require(\"./constants\");\nclass Gossipsub extends pubsub_1.default {\n    // TODO: add remaining props\n    /**\n     * @param {Libp2p} libp2p\n     * @param {Object} [options]\n     * @param {boolean} [options.emitSelf = false] if publish should emit to self, if subscribed\n     * @param {boolean} [options.canRelayMessage = false] - if can relay messages not subscribed\n     * @param {boolean} [options.gossipIncoming = true] if incoming messages on a subscribed topic should be automatically gossiped\n     * @param {boolean} [options.fallbackToFloodsub = true] if dial should fallback to floodsub\n     * @param {boolean} [options.floodPublish = true] if self-published messages should be sent to all peers\n     * @param {boolean} [options.doPX = false] whether PX is enabled; this should be enabled in bootstrappers and other well connected/trusted nodes.\n     * @param {Object} [options.messageCache] override the default MessageCache\n     * @param {FastMsgIdFn} [options.fastMsgIdFn] fast message id function\n     * @param {string} [options.globalSignaturePolicy = \"StrictSign\"] signing policy to apply across all messages\n     * @param {Object} [options.scoreParams] peer score parameters\n     * @param {Object} [options.scoreThresholds] peer score thresholds\n     * @param {AddrInfo[]} [options.directPeers] peers with which we will maintain direct connections\n     * @constructor\n     */\n    constructor(libp2p, options = {}) {\n        var _a;\n        const multicodecs = [constants.GossipsubIDv11, constants.GossipsubIDv10];\n        const opts = Object.assign(Object.assign({ gossipIncoming: true, fallbackToFloodsub: true, floodPublish: true, doPX: false, directPeers: [], D: constants.GossipsubD, Dlo: constants.GossipsubDlo, Dhi: constants.GossipsubDhi, Dscore: constants.GossipsubDscore, Dout: constants.GossipsubDout, Dlazy: constants.GossipsubDlazy, heartbeatInterval: constants.GossipsubHeartbeatInterval, fanoutTTL: constants.GossipsubFanoutTTL, mcacheLength: constants.GossipsubHistoryLength, mcacheGossip: constants.GossipsubHistoryGossip, seenTTL: constants.GossipsubSeenTTL }, options), { scoreParams: score_1.createPeerScoreParams(options.scoreParams), scoreThresholds: score_1.createPeerScoreThresholds(options.scoreThresholds) });\n        // Also wants to get notified of peers connected using floodsub\n        if (opts.fallbackToFloodsub) {\n            multicodecs.push(constants.FloodsubID);\n        }\n        super(Object.assign({ debugName: 'libp2p:gossipsub', multicodecs,\n            libp2p }, opts));\n        this._options = opts;\n        /**\n         * Direct peers\n         * @type {Set<string>}\n         */\n        this.direct = new Set(opts.directPeers.map(p => p.id.toB58String()));\n        /**\n         * Map of peer id and AcceptRequestWhileListEntry\n         *\n         * @type {Map<string, AcceptFromWhitelistEntry}\n         */\n        this.acceptFromWhitelist = new Map();\n        // set direct peer addresses in the address book\n        opts.directPeers.forEach(p => {\n            libp2p.peerStore.addressBook.add(p.id, p.addrs);\n        });\n        /**\n         * Cache of seen messages\n         *\n         * @type {SimpleTimeCache}\n         */\n        this.seenCache = new time_cache_1.SimpleTimeCache({ validityMs: opts.seenTTL });\n        /**\n         * Map of topic meshes\n         * topic => peer id set\n         *\n         * @type {Map<string, Set<string>>}\n         */\n        this.mesh = new Map();\n        /**\n         * Map of topics to set of peers. These mesh peers are the ones to which we are publishing without a topic membership\n         * topic => peer id set\n         *\n         * @type {Map<string, Set<string>>}\n         */\n        this.fanout = new Map();\n        /**\n         * Map of last publish time for fanout topics\n         * topic => last publish time\n         *\n         * @type {Map<string, number>}\n         */\n        this.lastpub = new Map();\n        /**\n         * Map of pending messages to gossip\n         * peer id => control messages\n         *\n         * @type {Map<string, Array<RPC.IControlIHave object>> }\n         */\n        this.gossip = new Map();\n        /**\n         * Map of control messages\n         * peer id => control message\n         *\n         * @type {Map<string, RPC.IControlMessage object>}\n         */\n        this.control = new Map();\n        /**\n         * Number of IHAVEs received from peer in the last heartbeat\n         * @type {Map<string, number>}\n         */\n        this.peerhave = new Map();\n        /**\n         * Number of messages we have asked from peer in the last heartbeat\n         * @type {Map<string, number>}\n         */\n        this.iasked = new Map();\n        /**\n         * Prune backoff map\n         */\n        this.backoff = new Map();\n        /**\n         * Connection direction cache, marks peers with outbound connections\n         * peer id => direction\n         *\n         * @type {Map<string, boolean>}\n         */\n        this.outbound = new Map();\n        /**\n         * A message cache that contains the messages for last few hearbeat ticks\n         */\n        this.messageCache = options.messageCache || new message_cache_1.MessageCache(opts.mcacheGossip, opts.mcacheLength);\n        /**\n         * A fast message id function used for internal message de-duplication\n         */\n        this.getFastMsgIdStr = (_a = options.fastMsgIdFn) !== null && _a !== void 0 ? _a : undefined;\n        /**\n         * Maps fast message-id to canonical message-id\n         */\n        this.fastMsgIdCache = options.fastMsgIdFn ? new time_cache_1.SimpleTimeCache({ validityMs: opts.seenTTL }) : undefined;\n        /**\n         * A heartbeat timer that maintains the mesh\n         */\n        this.heartbeat = new heartbeat_1.Heartbeat(this);\n        /**\n         * Number of heartbeats since the beginning of time\n         * This allows us to amortize some resource cleanup -- eg: backoff cleanup\n         */\n        this.heartbeatTicks = 0;\n        /**\n         * Tracks IHAVE/IWANT promises broken by peers\n         */\n        this.gossipTracer = new tracer_1.IWantTracer();\n        /**\n         * libp2p\n         */\n        this._libp2p = libp2p;\n        /**\n         * Peer score tracking\n         */\n        this.score = new score_1.PeerScore(this._options.scoreParams, libp2p.connectionManager);\n    }\n    /**\n     * Decode a Uint8Array into an RPC object\n     * Overrided to use an extended protocol-specific protobuf decoder\n     * @override\n     * @param {Uint8Array} bytes\n     * @returns {RPC}\n     */\n    _decodeRpc(bytes) {\n        return rpc_1.RPC.decode(bytes);\n    }\n    /**\n     * Encode an RPC object into a Uint8Array\n     * Overrided to use an extended protocol-specific protobuf encoder\n     * @override\n     * @param {RPC} rpc\n     * @returns {Uint8Array}\n     */\n    _encodeRpc(rpc) {\n        return rpc_1.RPC.encode(rpc).finish();\n    }\n    /**\n     * Add a peer to the router\n     * @override\n     * @param {PeerId} peerId\n     * @param {string} protocol\n     * @returns {PeerStreams}\n     */\n    _addPeer(peerId, protocol) {\n        const p = super._addPeer(peerId, protocol);\n        // Add to peer scoring\n        this.score.addPeer(peerId.toB58String());\n        // track the connection direction\n        let outbound = false;\n        for (const c of this._libp2p.connectionManager.getAll(peerId)) {\n            if (c.stat.direction === 'outbound') {\n                if (Array.from(c.registry.values()).some(rvalue => protocol === rvalue.protocol)) {\n                    outbound = true;\n                    break;\n                }\n            }\n        }\n        this.outbound.set(p.id.toB58String(), outbound);\n        return p;\n    }\n    /**\n     * Removes a peer from the router\n     * @override\n     * @param {PeerId} peer\n     * @returns {PeerStreams | undefined}\n     */\n    _removePeer(peerId) {\n        const peerStreams = super._removePeer(peerId);\n        const id = peerId.toB58String();\n        // Remove this peer from the mesh\n        // eslint-disable-next-line no-unused-vars\n        for (const peers of this.mesh.values()) {\n            peers.delete(id);\n        }\n        // Remove this peer from the fanout\n        // eslint-disable-next-line no-unused-vars\n        for (const peers of this.fanout.values()) {\n            peers.delete(id);\n        }\n        // Remove from gossip mapping\n        this.gossip.delete(id);\n        // Remove from control mapping\n        this.control.delete(id);\n        // Remove from backoff mapping\n        this.outbound.delete(id);\n        // Remove from peer scoring\n        this.score.removePeer(id);\n        this.acceptFromWhitelist.delete(id);\n        return peerStreams;\n    }\n    /**\n     * Handles an rpc request from a peer\n     *\n     * @override\n     * @param {String} idB58Str\n     * @param {PeerStreams} peerStreams\n     * @param {RPC} rpc\n     * @returns {Promise<boolean>}\n     */\n    _processRpc(id, peerStreams, rpc) {\n        const _super = Object.create(null, {\n            _processRpc: { get: () => super._processRpc }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (yield _super._processRpc.call(this, id, peerStreams, rpc)) {\n                if (rpc.control) {\n                    yield this._processRpcControlMessage(id, rpc.control);\n                }\n                return true;\n            }\n            return false;\n        });\n    }\n    /**\n     * Handles an rpc control message from a peer\n     * @param {string} id peer id\n     * @param {RPC.IControlMessage} controlMsg\n     * @returns {void}\n     */\n    _processRpcControlMessage(id, controlMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!controlMsg) {\n                return;\n            }\n            const iwant = controlMsg.ihave ? this._handleIHave(id, controlMsg.ihave) : [];\n            const ihave = controlMsg.iwant ? this._handleIWant(id, controlMsg.iwant) : [];\n            const prune = controlMsg.graft ? yield this._handleGraft(id, controlMsg.graft) : [];\n            controlMsg.prune && this._handlePrune(id, controlMsg.prune);\n            if (!iwant.length && !ihave.length && !prune.length) {\n                return;\n            }\n            const outRpc = utils_1.createGossipRpc(ihave, { iwant, prune });\n            this._sendRpc(id, outRpc);\n        });\n    }\n    /**\n     * Process incoming message,\n     * emitting locally and forwarding on to relevant floodsub and gossipsub peers\n     * @override\n     * @param {InMessage} msg\n     * @returns {Promise<void>}\n     */\n    _processRpcMessage(msg) {\n        const _super = Object.create(null, {\n            _processRpcMessage: { get: () => super._processRpcMessage }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let canonicalMsgIdStr;\n            if (this.getFastMsgIdStr && this.fastMsgIdCache) {\n                // check duplicate\n                const fastMsgIdStr = yield this.getFastMsgIdStr(msg);\n                canonicalMsgIdStr = this.fastMsgIdCache.get(fastMsgIdStr);\n                if (canonicalMsgIdStr !== undefined) {\n                    this.score.duplicateMessage(msg, canonicalMsgIdStr);\n                    return;\n                }\n                canonicalMsgIdStr = utils_1.messageIdToString(yield this.getMsgId(msg));\n                this.fastMsgIdCache.put(fastMsgIdStr, canonicalMsgIdStr);\n            }\n            else {\n                // check duplicate\n                canonicalMsgIdStr = utils_1.messageIdToString(yield this.getMsgId(msg));\n                if (this.seenCache.has(canonicalMsgIdStr)) {\n                    this.score.duplicateMessage(msg, canonicalMsgIdStr);\n                    return;\n                }\n            }\n            // put in cache\n            this.seenCache.put(canonicalMsgIdStr);\n            yield this.score.validateMessage(canonicalMsgIdStr);\n            yield _super._processRpcMessage.call(this, msg);\n        });\n    }\n    /**\n     * Whether to accept a message from a peer\n     * @override\n     * @param {string} id\n     * @returns {boolean}\n     */\n    _acceptFrom(id) {\n        if (this.direct.has(id)) {\n            return true;\n        }\n        const now = Date.now();\n        const entry = this.acceptFromWhitelist.get(id);\n        if (entry &&\n            entry.messagesAccepted < constants_1.ACCEPT_FROM_WHITELIST_MAX_MESSAGES &&\n            entry.acceptUntil >= now) {\n            entry.messagesAccepted += 1;\n            return true;\n        }\n        const score = this.score.score(id);\n        if (score >= constants_1.ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE) {\n            // peer is unlikely to be able to drop its score to `graylistThreshold`\n            // after 128 messages or 1s\n            this.acceptFromWhitelist.set(id, {\n                messagesAccepted: 0,\n                acceptUntil: now + constants_1.ACCEPT_FROM_WHITELIST_DURATION_MS\n            });\n        }\n        else {\n            this.acceptFromWhitelist.delete(id);\n        }\n        return score >= this._options.scoreThresholds.graylistThreshold;\n    }\n    /**\n     * Validate incoming message\n     * @override\n     * @param {InMessage} msg\n     * @returns {Promise<void>}\n     */\n    validate(msg) {\n        const _super = Object.create(null, {\n            validate: { get: () => super.validate }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield _super.validate.call(this, msg);\n            }\n            catch (e) {\n                const canonicalMsgIdStr = yield this.getCanonicalMsgIdStr(msg);\n                this.score.rejectMessage(msg, canonicalMsgIdStr, e.code);\n                this.gossipTracer.rejectMessage(canonicalMsgIdStr, e.code);\n                throw e;\n            }\n        });\n    }\n    /**\n     * Handles IHAVE messages\n     * @param {string} id peer id\n     * @param {Array<RPC.IControlIHave>} ihave\n     * @returns {RPC.IControlIWant}\n     */\n    _handleIHave(id, ihave) {\n        if (!ihave.length) {\n            return [];\n        }\n        // we ignore IHAVE gossip from any peer whose score is below the gossips threshold\n        const score = this.score.score(id);\n        if (score < this._options.scoreThresholds.gossipThreshold) {\n            this.log('IHAVE: ignoring peer %s with score below threshold [ score = %d ]', id, score);\n            return [];\n        }\n        // IHAVE flood protection\n        const peerhave = (this.peerhave.get(id) || 0) + 1;\n        this.peerhave.set(id, peerhave);\n        if (peerhave > constants.GossipsubMaxIHaveMessages) {\n            this.log('IHAVE: peer %s has advertised too many times (%d) within this heartbeat interval; ignoring', id, peerhave);\n            return [];\n        }\n        const iasked = this.iasked.get(id) || 0;\n        if (iasked >= constants.GossipsubMaxIHaveLength) {\n            this.log('IHAVE: peer %s has already advertised too many messages (%d); ignoring', id, iasked);\n            return [];\n        }\n        // string msgId => msgId\n        const iwant = new Map();\n        ihave.forEach(({ topicID, messageIDs }) => {\n            if (!topicID || !messageIDs || !this.mesh.has(topicID)) {\n                return;\n            }\n            messageIDs.forEach((msgId) => {\n                const msgIdStr = utils_1.messageIdToString(msgId);\n                if (this.seenCache.has(msgIdStr)) {\n                    return;\n                }\n                iwant.set(msgIdStr, msgId);\n            });\n        });\n        if (!iwant.size) {\n            return [];\n        }\n        let iask = iwant.size;\n        if (iask + iasked > constants.GossipsubMaxIHaveLength) {\n            iask = constants.GossipsubMaxIHaveLength - iasked;\n        }\n        this.log('IHAVE: Asking for %d out of %d messages from %s', iask, iwant.size, id);\n        let iwantList = Array.from(iwant.values());\n        // ask in random order\n        utils_1.shuffle(iwantList);\n        // truncate to the messages we are actually asking for and update the iasked counter\n        iwantList = iwantList.slice(0, iask);\n        this.iasked.set(id, iasked + iask);\n        this.gossipTracer.addPromise(id, iwantList);\n        return [{\n                messageIDs: iwantList\n            }];\n    }\n    /**\n     * Handles IWANT messages\n     * Returns messages to send back to peer\n     * @param {string} id peer id\n     * @param {Array<RPC.IControlIWant>} iwant\n     * @returns {Array<RPC.IMessage>}\n     */\n    _handleIWant(id, iwant) {\n        if (!iwant.length) {\n            return [];\n        }\n        // we don't respond to IWANT requests from any per whose score is below the gossip threshold\n        const score = this.score.score(id);\n        if (score < this._options.scoreThresholds.gossipThreshold) {\n            this.log('IWANT: ignoring peer %s with score below threshold [score = %d]', id, score);\n            return [];\n        }\n        // @type {Map<string, Message>}\n        const ihave = new Map();\n        iwant.forEach(({ messageIDs }) => {\n            messageIDs && messageIDs.forEach((msgId) => {\n                const msgIdStr = utils_1.messageIdToString(msgId);\n                const [msg, count] = this.messageCache.getForPeer(msgIdStr, id);\n                if (!msg) {\n                    return;\n                }\n                if (count > constants.GossipsubGossipRetransmission) {\n                    this.log('IWANT: Peer %s has asked for message %s too many times: ignoring request', id, msgId);\n                    return;\n                }\n                ihave.set(msgIdStr, msg);\n            });\n        });\n        if (!ihave.size) {\n            return [];\n        }\n        this.log('IWANT: Sending %d messages to %s', ihave.size, id);\n        return Array.from(ihave.values()).map(pubsub_1.utils.normalizeOutRpcMessage);\n    }\n    /**\n     * Handles Graft messages\n     * @param {string} id peer id\n     * @param {Array<RPC.IControlGraft>} graft\n     * @return {Promise<RPC.IControlPrune[]>}\n     */\n    _handleGraft(id, graft) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const prune = [];\n            const score = this.score.score(id);\n            const now = this._now();\n            let doPX = this._options.doPX;\n            graft.forEach(({ topicID }) => {\n                var _a;\n                if (!topicID) {\n                    return;\n                }\n                const peersInMesh = this.mesh.get(topicID);\n                if (!peersInMesh) {\n                    // don't do PX when there is an unknown topic to avoid leaking our peers\n                    doPX = false;\n                    // spam hardening: ignore GRAFTs for unknown topics\n                    return;\n                }\n                // check if peer is already in the mesh; if so do nothing\n                if (peersInMesh.has(id)) {\n                    return;\n                }\n                // we don't GRAFT to/from direct peers; complain loudly if this happens\n                if (this.direct.has(id)) {\n                    this.log('GRAFT: ignoring request from direct peer %s', id);\n                    // this is possibly a bug from a non-reciprical configuration; send a PRUNE\n                    prune.push(topicID);\n                    // but don't px\n                    doPX = false;\n                    return;\n                }\n                // make sure we are not backing off that peer\n                const expire = (_a = this.backoff.get(topicID)) === null || _a === void 0 ? void 0 : _a.get(id);\n                if (typeof expire === 'number' && now < expire) {\n                    this.log('GRAFT: ignoring backed off peer %s', id);\n                    // add behavioral penalty\n                    this.score.addPenalty(id, 1);\n                    // no PX\n                    doPX = false;\n                    // check the flood cutoff -- is the GRAFT coming too fast?\n                    const floodCutoff = expire + constants.GossipsubGraftFloodThreshold - constants.GossipsubPruneBackoff;\n                    if (now < floodCutoff) {\n                        // extra penalty\n                        this.score.addPenalty(id, 1);\n                    }\n                    // refresh the backoff\n                    this._addBackoff(id, topicID);\n                    prune.push(topicID);\n                    return;\n                }\n                // check the score\n                if (score < 0) {\n                    // we don't GRAFT peers with negative score\n                    this.log('GRAFT: ignoring peer %s with negative score: score=%d, topic=%s', id, score, topicID);\n                    // we do send them PRUNE however, because it's a matter of protocol correctness\n                    prune.push(topicID);\n                    // but we won't PX to them\n                    doPX = false;\n                    // add/refresh backoff so that we don't reGRAFT too early even if the score decays\n                    this._addBackoff(id, topicID);\n                    return;\n                }\n                // check the number of mesh peers; if it is at (or over) Dhi, we only accept grafts\n                // from peers with outbound connections; this is a defensive check to restrict potential\n                // mesh takeover attacks combined with love bombing\n                if (peersInMesh.size >= this._options.Dhi && !this.outbound.get(id)) {\n                    prune.push(topicID);\n                    this._addBackoff(id, topicID);\n                    return;\n                }\n                this.log('GRAFT: Add mesh link from %s in %s', id, topicID);\n                this.score.graft(id, topicID);\n                peersInMesh.add(id);\n            });\n            if (!prune.length) {\n                return [];\n            }\n            return Promise.all(prune.map(topic => this._makePrune(id, topic, doPX)));\n        });\n    }\n    /**\n     * Handles Prune messages\n     * @param {string} id peer id\n     * @param {Array<RPC.IControlPrune>} prune\n     * @returns {void}\n     */\n    _handlePrune(id, prune) {\n        const score = this.score.score(id);\n        prune.forEach(({ topicID, backoff, peers }) => {\n            if (!topicID) {\n                return;\n            }\n            const peersInMesh = this.mesh.get(topicID);\n            if (!peersInMesh) {\n                return;\n            }\n            this.log('PRUNE: Remove mesh link to %s in %s', id, topicID);\n            this.score.prune(id, topicID);\n            peersInMesh.delete(id);\n            // is there a backoff specified by the peer? if so obey it\n            if (typeof backoff === 'number' && backoff > 0) {\n                this._doAddBackoff(id, topicID, backoff * 1000);\n            }\n            else {\n                this._addBackoff(id, topicID);\n            }\n            // PX\n            if (peers && peers.length) {\n                // we ignore PX from peers with insufficient scores\n                if (score < this._options.scoreThresholds.acceptPXThreshold) {\n                    this.log('PRUNE: ignoring PX from peer %s with insufficient score [score = %d, topic = %s]', id, score, topicID);\n                    return;\n                }\n                this._pxConnect(peers);\n            }\n        });\n    }\n    /**\n     * Add standard backoff log for a peer in a topic\n     * @param {string} id\n     * @param {string} topic\n     * @returns {void}\n     */\n    _addBackoff(id, topic) {\n        this._doAddBackoff(id, topic, constants.GossipsubPruneBackoff);\n    }\n    /**\n     * Add backoff expiry interval for a peer in a topic\n     * @param {string} id\n     * @param {string} topic\n     * @param {number} interval backoff duration in milliseconds\n     * @returns {void}\n     */\n    _doAddBackoff(id, topic, interval) {\n        let backoff = this.backoff.get(topic);\n        if (!backoff) {\n            backoff = new Map();\n            this.backoff.set(topic, backoff);\n        }\n        const expire = this._now() + interval;\n        const existingExpire = backoff.get(id) || 0;\n        if (existingExpire < expire) {\n            backoff.set(id, expire);\n        }\n    }\n    /**\n     * Apply penalties from broken IHAVE/IWANT promises\n     * @returns {void}\n     */\n    _applyIwantPenalties() {\n        this.gossipTracer.getBrokenPromises().forEach((count, p) => {\n            this.log('peer %s didn\\'t follow up in %d IWANT requests; adding penalty', p, count);\n            this.score.addPenalty(p, count);\n        });\n    }\n    /**\n     * Clear expired backoff expiries\n     * @returns {void}\n     */\n    _clearBackoff() {\n        // we only clear once every GossipsubPruneBackoffTicks ticks to avoid iterating over the maps too much\n        if (this.heartbeatTicks % constants.GossipsubPruneBackoffTicks !== 0) {\n            return;\n        }\n        const now = this._now();\n        this.backoff.forEach((backoff, topic) => {\n            backoff.forEach((expire, id) => {\n                if (expire < now) {\n                    backoff.delete(id);\n                }\n            });\n            if (backoff.size === 0) {\n                this.backoff.delete(topic);\n            }\n        });\n    }\n    /**\n     * Maybe reconnect to direct peers\n     * @returns {void}\n     */\n    _directConnect() {\n        // we only do this every few ticks to allow pending connections to complete and account for\n        // restarts/downtime\n        if (this.heartbeatTicks % constants.GossipsubDirectConnectTicks !== 0) {\n            return;\n        }\n        const toconnect = [];\n        this.direct.forEach(id => {\n            const peer = this.peers.get(id);\n            if (!peer || !peer.isWritable) {\n                toconnect.push(id);\n            }\n        });\n        if (toconnect.length) {\n            toconnect.forEach(id => {\n                this._connect(id);\n            });\n        }\n    }\n    /**\n     * Maybe attempt connection given signed peer records\n     * @param {RPC.IPeerInfo[]} peers\n     * @returns {Promise<void>}\n     */\n    _pxConnect(peers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (peers.length > constants.GossipsubPrunePeers) {\n                utils_1.shuffle(peers);\n                peers = peers.slice(0, constants.GossipsubPrunePeers);\n            }\n            const toconnect = [];\n            yield Promise.all(peers.map((pi) => __awaiter(this, void 0, void 0, function* () {\n                if (!pi.peerID) {\n                    return;\n                }\n                const p = PeerId.createFromBytes(pi.peerID);\n                const id = p.toB58String();\n                if (this.peers.has(id)) {\n                    return;\n                }\n                if (!pi.signedPeerRecord) {\n                    toconnect.push(id);\n                    return;\n                }\n                // The peer sent us a signed record\n                // This is not a record from the peer who sent the record, but another peer who is connected with it\n                // Ensure that it is valid\n                try {\n                    const envelope = yield Envelope.openAndCertify(pi.signedPeerRecord, 'libp2p-peer-record');\n                    const eid = envelope.peerId.toB58String();\n                    if (id !== eid) {\n                        this.log('bogus peer record obtained through px: peer ID %s doesn\\'t match expected peer %s', eid, id);\n                        return;\n                    }\n                    if (!this._libp2p.peerStore.addressBook.consumePeerRecord(envelope)) {\n                        this.log('bogus peer record obtained through px: could not add peer record to address book');\n                        return;\n                    }\n                    toconnect.push(id);\n                }\n                catch (e) {\n                    this.log('bogus peer record obtained through px: invalid signature or not a peer record');\n                }\n            })));\n            if (!toconnect.length) {\n                return;\n            }\n            toconnect.forEach(id => this._connect(id));\n        });\n    }\n    /**\n     * Mounts the gossipsub protocol onto the libp2p node and sends our\n     * our subscriptions to every peer connected\n     * @override\n     * @returns {Promise<void>}\n     */\n    start() {\n        const _super = Object.create(null, {\n            start: { get: () => super.start }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield _super.start.call(this);\n            this.heartbeat.start();\n            this.score.start();\n            // connect to direct peers\n            this._directPeerInitial = setTimeout(() => {\n                this.direct.forEach(id => {\n                    this._connect(id);\n                });\n            }, constants.GossipsubDirectConnectInitialDelay);\n        });\n    }\n    /**\n     * Unmounts the gossipsub protocol and shuts down every connection\n     * @override\n     * @returns {Promise<void>}\n     */\n    stop() {\n        const _super = Object.create(null, {\n            stop: { get: () => super.stop }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield _super.stop.call(this);\n            this.heartbeat.stop();\n            this.score.stop();\n            this.mesh = new Map();\n            this.fanout = new Map();\n            this.lastpub = new Map();\n            this.gossip = new Map();\n            this.control = new Map();\n            this.peerhave = new Map();\n            this.iasked = new Map();\n            this.backoff = new Map();\n            this.outbound = new Map();\n            this.gossipTracer.clear();\n            this.seenCache.clear();\n            if (this.fastMsgIdCache)\n                this.fastMsgIdCache.clear();\n            clearTimeout(this._directPeerInitial);\n        });\n    }\n    /**\n     * Connect to a peer using the gossipsub protocol\n     * @param {string} id\n     * @returns {void}\n     */\n    _connect(id) {\n        this.log('Initiating connection with %s', id);\n        this._libp2p.dialProtocol(PeerId.createFromB58String(id), this.multicodecs);\n    }\n    /**\n     * Subscribes to a topic\n     * @override\n     * @param {string} topic\n     * @returns {void}\n     */\n    subscribe(topic) {\n        super.subscribe(topic);\n        this.join(topic);\n    }\n    /**\n     * Unsubscribe to a topic\n     * @override\n     * @param {string} topic\n     * @returns {void}\n     */\n    unsubscribe(topic) {\n        super.unsubscribe(topic);\n        this.leave(topic);\n    }\n    /**\n     * Join topic\n     * @param {string} topic\n     * @returns {void}\n     */\n    join(topic) {\n        if (!this.started) {\n            throw new Error('Gossipsub has not started');\n        }\n        this.log('JOIN %s', topic);\n        const fanoutPeers = this.fanout.get(topic);\n        if (fanoutPeers) {\n            // these peers have a score above the publish threshold, which may be negative\n            // so drop the ones with a negative score\n            fanoutPeers.forEach(id => {\n                if (this.score.score(id) < 0) {\n                    fanoutPeers.delete(id);\n                }\n            });\n            if (fanoutPeers.size < this._options.D) {\n                // we need more peers; eager, as this would get fixed in the next heartbeat\n                get_gossip_peers_1.getGossipPeers(this, topic, this._options.D - fanoutPeers.size, (id) => {\n                    // filter our current peers, direct peers, and peers with negative scores\n                    return !fanoutPeers.has(id) && !this.direct.has(id) && this.score.score(id) >= 0;\n                }).forEach(id => fanoutPeers.add(id));\n            }\n            this.mesh.set(topic, fanoutPeers);\n            this.fanout.delete(topic);\n            this.lastpub.delete(topic);\n        }\n        else {\n            const peers = get_gossip_peers_1.getGossipPeers(this, topic, this._options.D, (id) => {\n                // filter direct peers and peers with negative score\n                return !this.direct.has(id) && this.score.score(id) >= 0;\n            });\n            this.mesh.set(topic, peers);\n        }\n        this.mesh.get(topic).forEach((id) => {\n            this.log('JOIN: Add mesh link to %s in %s', id, topic);\n            this._sendGraft(id, topic);\n        });\n    }\n    /**\n     * Leave topic\n     * @param {string} topic\n     * @returns {void}\n     */\n    leave(topic) {\n        if (!this.started) {\n            throw new Error('Gossipsub has not started');\n        }\n        this.log('LEAVE %s', topic);\n        // Send PRUNE to mesh peers\n        const meshPeers = this.mesh.get(topic);\n        if (meshPeers) {\n            meshPeers.forEach((id) => {\n                this.log('LEAVE: Remove mesh link to %s in %s', id, topic);\n                this._sendPrune(id, topic);\n            });\n            this.mesh.delete(topic);\n        }\n    }\n    /**\n     * Return the canonical message-id of a message as a string\n     *\n     * If a fast message-id is set: Try 1. the application cache 2. the fast cache 3. `getMsgId()`\n     * If a fast message-id is NOT set: Just `getMsgId()`\n     * @param {InMessage} msg\n     * @returns {Promise<string>}\n     */\n    getCanonicalMsgIdStr(msg) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            return (this.fastMsgIdCache && this.getFastMsgIdStr)\n                ? (_b = (_a = this.getCachedMsgIdStr(msg)) !== null && _a !== void 0 ? _a : this.fastMsgIdCache.get(this.getFastMsgIdStr(msg))) !== null && _b !== void 0 ? _b : utils_1.messageIdToString(yield this.getMsgId(msg)) : utils_1.messageIdToString(yield this.getMsgId(msg));\n        });\n    }\n    /**\n     * An application should override this function to return its cached message id string without computing it.\n     * Return undefined if message id is not found.\n     * If a fast message id function is not defined, this function is ignored.\n     * @param {InMessage} msg\n     * @returns {string | undefined}\n     */\n    getCachedMsgIdStr(msg) {\n        return undefined;\n    }\n    /**\n     * Publish messages\n     *\n     * @override\n     * @param {InMessage} msg\n     * @returns {void}\n     */\n    _publish(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const msgIdStr = yield this.getCanonicalMsgIdStr(msg);\n            if (msg.receivedFrom !== this.peerId.toB58String()) {\n                this.score.deliverMessage(msg, msgIdStr);\n                this.gossipTracer.deliverMessage(msgIdStr);\n            }\n            // put in seen cache\n            this.seenCache.put(msgIdStr);\n            this.messageCache.put(msg, msgIdStr);\n            const tosend = new Set();\n            msg.topicIDs.forEach((topic) => {\n                const peersInTopic = this.topics.get(topic);\n                if (!peersInTopic) {\n                    return;\n                }\n                if (this._options.floodPublish && msg.from === this.peerId.toB58String()) {\n                    // flood-publish behavior\n                    // send to direct peers and _all_ peers meeting the publishThreshold\n                    peersInTopic.forEach(id => {\n                        if (this.direct.has(id) || this.score.score(id) >= this._options.scoreThresholds.publishThreshold) {\n                            tosend.add(id);\n                        }\n                    });\n                }\n                else {\n                    // non-flood-publish behavior\n                    // send to direct peers, subscribed floodsub peers\n                    // and some mesh peers above publishThreshold\n                    // direct peers\n                    this.direct.forEach(id => {\n                        tosend.add(id);\n                    });\n                    // floodsub peers\n                    peersInTopic.forEach((id) => {\n                        const score = this.score.score(id);\n                        const peerStreams = this.peers.get(id);\n                        if (!peerStreams) {\n                            return;\n                        }\n                        if (peerStreams.protocol === constants.FloodsubID && score >= this._options.scoreThresholds.publishThreshold) {\n                            tosend.add(id);\n                        }\n                    });\n                    // Gossipsub peers handling\n                    let meshPeers = this.mesh.get(topic);\n                    if (!meshPeers || !meshPeers.size) {\n                        // We are not in the mesh for topic, use fanout peers\n                        meshPeers = this.fanout.get(topic);\n                        if (!meshPeers) {\n                            // If we are not in the fanout, then pick peers in topic above the publishThreshold\n                            const peers = get_gossip_peers_1.getGossipPeers(this, topic, this._options.D, id => {\n                                return this.score.score(id) >= this._options.scoreThresholds.publishThreshold;\n                            });\n                            if (peers.size > 0) {\n                                meshPeers = peers;\n                                this.fanout.set(topic, peers);\n                            }\n                            else {\n                                meshPeers = new Set();\n                            }\n                        }\n                        // Store the latest publishing time\n                        this.lastpub.set(topic, this._now());\n                    }\n                    meshPeers.forEach((peer) => {\n                        tosend.add(peer);\n                    });\n                }\n            });\n            // Publish messages to peers\n            const rpc = utils_1.createGossipRpc([\n                pubsub_1.utils.normalizeOutRpcMessage(msg)\n            ]);\n            tosend.forEach((id) => {\n                if (id === msg.from) {\n                    return;\n                }\n                this._sendRpc(id, rpc);\n            });\n        });\n    }\n    /**\n     * Sends a GRAFT message to a peer\n     * @param {string} id peer id\n     * @param {string} topic\n     * @returns {void}\n     */\n    _sendGraft(id, topic) {\n        const graft = [{\n                topicID: topic\n            }];\n        const out = utils_1.createGossipRpc([], { graft });\n        this._sendRpc(id, out);\n    }\n    /**\n     * Sends a PRUNE message to a peer\n     * @param {string} id peer id\n     * @param {string} topic\n     * @returns {Promise<void>}\n     */\n    _sendPrune(id, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const prune = [\n                yield this._makePrune(id, topic, this._options.doPX)\n            ];\n            const out = utils_1.createGossipRpc([], { prune });\n            this._sendRpc(id, out);\n        });\n    }\n    /**\n     * @override\n     */\n    _sendRpc(id, outRpc) {\n        const peerStreams = this.peers.get(id);\n        if (!peerStreams || !peerStreams.isWritable) {\n            return;\n        }\n        // piggyback control message retries\n        const ctrl = this.control.get(id);\n        if (ctrl) {\n            this._piggybackControl(id, outRpc, ctrl);\n            this.control.delete(id);\n        }\n        // piggyback gossip\n        const ihave = this.gossip.get(id);\n        if (ihave) {\n            this._piggybackGossip(id, outRpc, ihave);\n            this.gossip.delete(id);\n        }\n        peerStreams.write(rpc_1.RPC.encode(outRpc).finish());\n    }\n    _piggybackControl(id, outRpc, ctrl) {\n        const tograft = (ctrl.graft || [])\n            .filter(({ topicID }) => (topicID && this.mesh.get(topicID) || new Set()).has(id));\n        const toprune = (ctrl.prune || [])\n            .filter(({ topicID }) => !(topicID && this.mesh.get(topicID) || new Set()).has(id));\n        if (!tograft.length && !toprune.length) {\n            return;\n        }\n        if (outRpc.control) {\n            outRpc.control.graft = outRpc.control.graft && outRpc.control.graft.concat(tograft);\n            outRpc.control.prune = outRpc.control.prune && outRpc.control.prune.concat(toprune);\n        }\n        else {\n            outRpc.control = { ihave: [], iwant: [], graft: tograft, prune: toprune };\n        }\n    }\n    _piggybackGossip(id, outRpc, ihave) {\n        if (!outRpc.control) {\n            outRpc.control = { ihave: [], iwant: [], graft: [], prune: [] };\n        }\n        outRpc.control.ihave = ihave;\n    }\n    /**\n     * Send graft and prune messages\n     * @param {Map<string, Array<string>>} tograft peer id => topic[]\n     * @param {Map<string, Array<string>>} toprune peer id => topic[]\n     */\n    _sendGraftPrune(tograft, toprune, noPX) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doPX = this._options.doPX;\n            for (const [id, topics] of tograft) {\n                const graft = topics.map((topicID) => ({ topicID }));\n                let prune = [];\n                // If a peer also has prunes, process them now\n                const pruning = toprune.get(id);\n                if (pruning) {\n                    prune = yield Promise.all(pruning.map((topicID) => this._makePrune(id, topicID, doPX && !noPX.get(id))));\n                    toprune.delete(id);\n                }\n                const outRpc = utils_1.createGossipRpc([], { graft, prune });\n                this._sendRpc(id, outRpc);\n            }\n            for (const [id, topics] of toprune) {\n                const prune = yield Promise.all(topics.map((topicID) => this._makePrune(id, topicID, doPX && !noPX.get(id))));\n                const outRpc = utils_1.createGossipRpc([], { prune });\n                this._sendRpc(id, outRpc);\n            }\n        });\n    }\n    /**\n     * Emits gossip to peers in a particular topic\n     * @param {string} topic\n     * @param {Set<string>} exclude peers to exclude\n     * @returns {void}\n     */\n    _emitGossip(topic, exclude) {\n        const messageIDs = this.messageCache.getGossipIDs(topic);\n        if (!messageIDs.length) {\n            return;\n        }\n        // shuffle to emit in random order\n        utils_1.shuffle(messageIDs);\n        // if we are emitting more than GossipsubMaxIHaveLength ids, truncate the list\n        if (messageIDs.length > constants.GossipsubMaxIHaveLength) {\n            // we do the truncation (with shuffling) per peer below\n            this.log('too many messages for gossip; will truncate IHAVE list (%d messages)', messageIDs.length);\n        }\n        // Send gossip to GossipFactor peers above threshold with a minimum of D_lazy\n        // First we collect the peers above gossipThreshold that are not in the exclude set\n        // and then randomly select from that set\n        // We also exclude direct peers, as there is no reason to emit gossip to them\n        const peersToGossip = [];\n        const topicPeers = this.topics.get(topic);\n        if (!topicPeers) {\n            // no topic peers, no gossip\n            return;\n        }\n        topicPeers.forEach(id => {\n            const peerStreams = this.peers.get(id);\n            if (!peerStreams) {\n                return;\n            }\n            if (!exclude.has(id) &&\n                !this.direct.has(id) &&\n                utils_1.hasGossipProtocol(peerStreams.protocol) &&\n                this.score.score(id) >= this._options.scoreThresholds.gossipThreshold) {\n                peersToGossip.push(id);\n            }\n        });\n        let target = this._options.Dlazy;\n        const factor = constants.GossipsubGossipFactor * peersToGossip.length;\n        if (factor > target) {\n            target = factor;\n        }\n        if (target > peersToGossip.length) {\n            target = peersToGossip.length;\n        }\n        else {\n            utils_1.shuffle(peersToGossip);\n        }\n        // Emit the IHAVE gossip to the selected peers up to the target\n        peersToGossip.slice(0, target).forEach(id => {\n            let peerMessageIDs = messageIDs;\n            if (messageIDs.length > constants.GossipsubMaxIHaveLength) {\n                // shuffle and slice message IDs per peer so that we emit a different set for each peer\n                // we have enough reduncancy in the system that this will significantly increase the message\n                // coverage when we do truncate\n                peerMessageIDs = utils_1.shuffle(peerMessageIDs.slice()).slice(0, constants.GossipsubMaxIHaveLength);\n            }\n            this._pushGossip(id, {\n                topicID: topic,\n                messageIDs: peerMessageIDs\n            });\n        });\n    }\n    /**\n     * Flush gossip and control messages\n     */\n    _flush() {\n        // send gossip first, which will also piggyback control\n        for (const [peer, ihave] of this.gossip.entries()) {\n            this.gossip.delete(peer);\n            const out = utils_1.createGossipRpc([], { ihave });\n            this._sendRpc(peer, out);\n        }\n        // send the remaining control messages\n        for (const [peer, control] of this.control.entries()) {\n            this.control.delete(peer);\n            const out = utils_1.createGossipRpc([], { graft: control.graft, prune: control.prune });\n            this._sendRpc(peer, out);\n        }\n    }\n    /**\n     * Adds new IHAVE messages to pending gossip\n     * @param {PeerStreams} peerStreams\n     * @param {Array<RPC.IControlIHave>} controlIHaveMsgs\n     * @returns {void}\n     */\n    _pushGossip(id, controlIHaveMsgs) {\n        this.log('Add gossip to %s', id);\n        const gossip = this.gossip.get(id) || [];\n        this.gossip.set(id, gossip.concat(controlIHaveMsgs));\n    }\n    /**\n     * Returns the current time in milliseconds\n     * @returns {number}\n     */\n    _now() {\n        return Date.now();\n    }\n    /**\n     * Make a PRUNE control message for a peer in a topic\n     * @param {string} id\n     * @param {string} topic\n     * @param {boolean} doPX\n     * @returns {Promise<RPC.IControlPrune>}\n     */\n    _makePrune(id, topic, doPX) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.peers.get(id).protocol === constants.GossipsubIDv10) {\n                // Gossipsub v1.0 -- no backoff, the peer won't be able to parse it anyway\n                return {\n                    topicID: topic,\n                    peers: []\n                };\n            }\n            // backoff is measured in seconds\n            // GossipsubPruneBackoff is measured in milliseconds\n            const backoff = constants.GossipsubPruneBackoff / 1000;\n            if (!doPX) {\n                return {\n                    topicID: topic,\n                    peers: [],\n                    backoff: backoff\n                };\n            }\n            // select peers for Peer eXchange\n            const peers = get_gossip_peers_1.getGossipPeers(this, topic, constants.GossipsubPrunePeers, (xid) => {\n                return xid !== id && this.score.score(xid) >= 0;\n            });\n            const px = yield Promise.all(Array.from(peers).map((p) => __awaiter(this, void 0, void 0, function* () {\n                // see if we have a signed record to send back; if we don't, just send\n                // the peer ID and let the pruned peer find them in the DHT -- we can't trust\n                // unsigned address records through PX anyways\n                // Finding signed records in the DHT is not supported at the time of writing in js-libp2p\n                const peerId = PeerId.createFromB58String(p);\n                return {\n                    peerID: peerId.toBytes(),\n                    signedPeerRecord: yield this._libp2p.peerStore.addressBook.getRawEnvelope(peerId)\n                };\n            })));\n            return {\n                topicID: topic,\n                peers: px,\n                backoff: backoff\n            };\n        });\n    }\n}\nGossipsub.multicodec = constants.GossipsubIDv11;\nmodule.exports = Gossipsub;\n","'use strict'\n\nconst Topology = require('./index')\nconst multicodecTopologySymbol = Symbol.for('@libp2p/js-interfaces/topology/multicodec-topology')\nconst debug = require('debug')\n\nconst log = Object.assign(debug('libp2p:topology:multicodec-topology'), {\n  error: debug('libp2p:topology:multicodec-topology:error')\n})\n\nclass MulticodecTopology extends Topology {\n  /**\n   * @param {TopologyOptions & MulticodecOptions} props\n   */\n  constructor ({\n    min,\n    max,\n    multicodecs,\n    handlers\n  }) {\n    super({ min, max, handlers })\n\n    if (!multicodecs) {\n      throw new Error('one or more multicodec should be provided')\n    }\n\n    if (!handlers) {\n      throw new Error('the handlers should be provided')\n    }\n\n    if (typeof handlers.onConnect !== 'function') {\n      throw new Error('the \\'onConnect\\' handler must be provided')\n    }\n\n    if (typeof handlers.onDisconnect !== 'function') {\n      throw new Error('the \\'onDisconnect\\' handler must be provided')\n    }\n\n    this.multicodecs = Array.isArray(multicodecs) ? multicodecs : [multicodecs]\n    this._registrar = undefined\n\n    this._onProtocolChange = this._onProtocolChange.bind(this)\n    this._onPeerConnect = this._onPeerConnect.bind(this)\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Topology'\n  }\n\n  get [multicodecTopologySymbol] () {\n    return true\n  }\n\n  /**\n   * Checks if the given value is a `MulticodecTopology` instance.\n   *\n   * @param {any} other\n   * @returns {other is MulticodecTopology}\n   */\n  static isMulticodecTopology (other) {\n    return Boolean(other && other[multicodecTopologySymbol])\n  }\n\n  /**\n   * @param {any} registrar\n   */\n  async setRegistrar (registrar) { // eslint-disable-line\n    this._registrar = registrar\n    this._registrar.peerStore.on('change:protocols', this._onProtocolChange)\n    this._registrar.connectionManager.on('peer:connect', this._onPeerConnect)\n\n    // Update topology peers\n    await this._updatePeers(this._registrar.peerStore.getPeers())\n  }\n\n  /**\n   * Update topology.\n   *\n   * @param {AsyncIterable<any> | Iterable<any>} peerDataIterable\n   */\n  async _updatePeers (peerDataIterable) {\n    for await (const { id, protocols } of peerDataIterable) {\n      if (this.multicodecs.filter(multicodec => protocols.includes(multicodec)).length) {\n        // Add the peer regardless of whether or not there is currently a connection\n        this.peers.add(id.toB58String())\n        // If there is a connection, call _onConnect\n        const connection = this._registrar.getConnection(id)\n        connection && this._onConnect(id, connection)\n      } else {\n        // Remove any peers we might be tracking that are no longer of value to us\n        this.peers.delete(id.toB58String())\n      }\n    }\n  }\n\n  /**\n   * Check if a new peer support the multicodecs for this topology.\n   *\n   * @param {Object} props\n   * @param {PeerId} props.peerId\n   * @param {Array<string>} props.protocols\n   */\n  async _onProtocolChange ({ peerId, protocols }) {\n    try {\n      const hadPeer = this.peers.has(peerId.toB58String())\n      const hasProtocol = protocols.filter(protocol => this.multicodecs.includes(protocol))\n\n      // Not supporting the protocol anymore?\n      if (hadPeer && hasProtocol.length === 0) {\n        this._onDisconnect(peerId)\n      }\n\n      // New to protocol support\n      for (const protocol of protocols) {\n        if (this.multicodecs.includes(protocol)) {\n          const peerData = await this._registrar.peerStore.get(peerId)\n          await this._updatePeers([peerData])\n          return\n        }\n      }\n    } catch (err) {\n      log.error(err)\n    }\n  }\n\n  /**\n   * Verify if a new connected peer has a topology multicodec and call _onConnect.\n   *\n   * @param {Connection} connection\n   */\n  async _onPeerConnect (connection) {\n    try {\n      // @ts-ignore - remotePeer does not existist on Connection\n      const peerId = connection.remotePeer\n      const protocols = await this._registrar.peerStore.protoBook.get(peerId)\n\n      if (!protocols) {\n        return\n      }\n\n      if (this.multicodecs.find(multicodec => protocols.includes(multicodec))) {\n        this.peers.add(peerId.toB58String())\n        this._onConnect(peerId, connection)\n      }\n    } catch (err) {\n      log.error(err)\n    }\n  }\n}\n\n/**\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('multiaddr')} Multiaddr\n * @typedef {import('../connection/connection')} Connection\n * @typedef {import('.').Options} TopologyOptions\n * @typedef {Object} MulticodecOptions\n * @property {string[]} multicodecs - protocol multicodecs\n * @property {Required<Handlers>} handlers\n * @typedef {import('.').Handlers} Handlers\n */\nmodule.exports = MulticodecTopology\n","'use strict'\n\nconst { KadDHT } = require('./kad-dht')\nconst { DualKadDHT } = require('./dual-kad-dht')\n\n/**\n * @typedef {import('./types').DHT} DHT\n * @typedef {import('./kad-dht').KadDHTOps} KadDHTOps\n * @typedef {import('./types').QueryEvent} QueryEvent\n * @typedef {import('./types').SendingQueryEvent} SendingQueryEvent\n * @typedef {import('./types').PeerResponseEvent} PeerResponseEvent\n * @typedef {import('./types').FinalPeerEvent} FinalPeerEvent\n * @typedef {import('./types').QueryErrorEvent} QueryErrorEvent\n * @typedef {import('./types').ProviderEvent} ProviderEvent\n * @typedef {import('./types').ValueEvent} ValueEvent\n * @typedef {import('./types').AddingPeerEvent} AddingPeerEvent\n * @typedef {import('./types').DialingPeerEvent} DialingPeerEvent\n */\n\nmodule.exports = {\n  /**\n   * @param {KadDHTOps} opts\n   * @returns {DHT}\n   */\n  create: (opts) => {\n    return new DualKadDHT(\n      new KadDHT({\n        ...opts,\n        protocol: '/ipfs/kad/1.0.0',\n        lan: false\n      }),\n      new KadDHT({\n        ...opts,\n        protocol: '/ipfs/lan/kad/1.0.0',\n        clientMode: false,\n        lan: true\n      }),\n      opts.libp2p\n    )\n  }\n}\n","'use strict'\n\nmodule.exports = require('./mplex')\n","'use strict'\n\nconst pipe = require('it-pipe')\nconst pushable = require('it-pushable')\nconst log = require('debug')('libp2p:mplex')\nconst abortable = require('abortable-iterator')\nconst Coder = require('./coder')\nconst restrictSize = require('./restrict-size')\nconst { MessageTypes, MessageTypeNames } = require('./message-types')\nconst createStream = require('./stream')\n\nclass Mplex {\n  /**\n   * @class\n   * @param {object} options\n   * @param {function(*)} options.onStream - Called whenever an inbound stream is created\n   * @param {function(*)} options.onStreamEnd - Called whenever a stream ends\n   * @param {AbortSignal} options.signal - An AbortController signal\n   */\n  constructor (options) {\n    options = options || {}\n    options = typeof options === 'function' ? { onStream: options } : options\n\n    this._streamId = 0\n    this._streams = {\n      /**\n       * @type {Map<number, *>} Stream to ids map\n       */\n      initiators: new Map(),\n      /**\n       * @type {Map<number, *>} Stream to ids map\n       */\n      receivers: new Map()\n    }\n    this._options = options\n\n    /**\n     * An iterable sink\n     */\n    this.sink = this._createSink()\n\n    /**\n     * An iterable source\n     */\n    this.source = this._createSource()\n\n    /**\n     * @property {Function} onStream\n     */\n    this.onStream = options.onStream\n\n    /**\n     * @property {Function} onStreamEnd\n     */\n    this.onStreamEnd = options.onStreamEnd\n  }\n\n  /**\n   * Returns a Map of streams and their ids\n   *\n   * @returns {Map<number,*>}\n   */\n  get streams () {\n    // Inbound and Outbound streams may have the same ids, so we need to make those unique\n    const streams = []\n    this._streams.initiators.forEach(stream => {\n      streams.push(stream)\n    })\n    this._streams.receivers.forEach(stream => {\n      streams.push(stream)\n    })\n    return streams\n  }\n\n  /**\n   * Initiate a new stream with the given name. If no name is\n   * provided, the id of th stream will be used.\n   *\n   * @param {string} [name] - If name is not a string it will be cast to one\n   * @returns {Stream}\n   */\n  newStream (name) {\n    const id = this._streamId++\n    name = name == null ? id.toString() : String(name)\n    const registry = this._streams.initiators\n    return this._newStream({ id, name, type: 'initiator', registry })\n  }\n\n  /**\n   * Called whenever an inbound stream is created\n   *\n   * @private\n   * @param {*} options\n   * @param {number} options.id\n   * @param {string} options.name\n   * @returns {*} A muxed stream\n   */\n  _newReceiverStream ({ id, name }) {\n    const registry = this._streams.receivers\n    return this._newStream({ id, name, type: 'receiver', registry })\n  }\n\n  /**\n   * Creates a new stream\n   *\n   * @private\n   * @param {object} options\n   * @param {number} options.id\n   * @param {string} options.name\n   * @param {string} options.type\n   * @param {Map<number, *>} options.registry - A map of streams to their ids\n   * @returns {*} A muxed stream\n   */\n  _newStream ({ id, name, type, registry }) {\n    if (registry.has(id)) {\n      throw new Error(`${type} stream ${id} already exists!`)\n    }\n    log('new %s stream %s %s', type, id, name)\n    const send = msg => {\n      if (log.enabled) {\n        log('%s stream %s %s send', type, id, name, { ...msg, type: MessageTypeNames[msg.type], data: msg.data && msg.data.slice() })\n      }\n      return this.source.push(msg)\n    }\n    const onEnd = () => {\n      log('%s stream %s %s ended', type, id, name)\n      registry.delete(id)\n      this.onStreamEnd && this.onStreamEnd(stream)\n    }\n    const stream = createStream({ id, name, send, type, onEnd, maxMsgSize: this._options.maxMsgSize })\n    registry.set(id, stream)\n    return stream\n  }\n\n  /**\n   * Creates a sink with an abortable source. Incoming messages will\n   * also have their size restricted. All messages will be varint decoded.\n   *\n   * @private\n   * @returns {*} Returns an iterable sink\n   */\n  _createSink () {\n    return async source => {\n      if (this._options.signal) {\n        source = abortable(source, this._options.signal)\n      }\n\n      try {\n        await pipe(\n          source,\n          Coder.decode,\n          restrictSize(this._options.maxMsgSize),\n          async source => {\n            for await (const msgs of source) {\n              for (const msg of msgs) {\n                this._handleIncoming(msg)\n              }\n            }\n          }\n        )\n      } catch (err) {\n        log('error in sink', err)\n        return this.source.end(err) // End the source with an error\n      }\n\n      this.source.end()\n    }\n  }\n\n  /**\n   * Creates a source that restricts outgoing message sizes\n   * and varint encodes them.\n   *\n   * @private\n   * @returns {*} An iterable source\n   */\n  _createSource () {\n    const onEnd = err => {\n      const { initiators, receivers } = this._streams\n      // Abort all the things!\n      for (const s of initiators.values()) s.abort(err)\n      for (const s of receivers.values()) s.abort(err)\n    }\n    const source = pushable({ onEnd, writev: true })\n    return Object.assign(Coder.encode(source), {\n      push: source.push,\n      end: source.end,\n      return: source.return\n    })\n  }\n\n  /**\n   * @private\n   * @param {object} options\n   * @param {number} options.id\n   * @param {string} options.type\n   * @param {Uint8Array|BufferList} options.data\n   * @returns {void}\n   */\n  _handleIncoming ({ id, type, data }) {\n    if (log.enabled) {\n      log('incoming message', { id, type: MessageTypeNames[type], data: data.slice() })\n    }\n\n    // Create a new stream?\n    if (type === MessageTypes.NEW_STREAM && this.onStream) {\n      const stream = this._newReceiverStream({ id, name: data.toString() })\n      return this.onStream(stream)\n    }\n\n    const list = type & 1 ? this._streams.initiators : this._streams.receivers\n    const stream = list.get(id)\n\n    if (!stream) return log('missing stream %s', id)\n\n    switch (type) {\n      case MessageTypes.MESSAGE_INITIATOR:\n      case MessageTypes.MESSAGE_RECEIVER:\n        stream.source.push(data)\n        break\n      case MessageTypes.CLOSE_INITIATOR:\n      case MessageTypes.CLOSE_RECEIVER:\n        stream.close()\n        break\n      case MessageTypes.RESET_INITIATOR:\n      case MessageTypes.RESET_RECEIVER:\n        stream.reset()\n        break\n      default:\n        log('unknown message type %s', type)\n    }\n  }\n}\n\nMplex.multicodec = '/mplex/6.7.0'\n\nmodule.exports = Mplex\n","'use strict'\n\nmodule.exports = {\n  Record: require('./record'),\n  validator: require('./validator'),\n  selection: require('./selection')\n}\n","'use strict'\n\nconst debug = require('debug')\nconst log = debug('libp2p:webrtc-star')\nlog.error = debug('libp2p:webrtc-star:error')\n\nconst { EventEmitter } = require('events')\nconst errcode = require('err-code')\nconst withIs = require('class-is')\n\nconst { AbortError } = require('abortable-iterator')\nconst SimplePeer = require('libp2p-webrtc-peer')\nconst { supportsWebRTCDataChannels: webrtcSupport } = require('ipfs-utils/src/supports')\n\nconst { Multiaddr } = require('multiaddr')\nconst mafmt = require('mafmt')\nconst PeerId = require('peer-id')\n\nconst { CODE_CIRCUIT } = require('./constants')\nconst createListener = require('./listener')\nconst toConnection = require('./socket-to-conn')\nconst { cleanMultiaddr, cleanUrlSIO } = require('./utils')\n\nfunction noop () { }\n\n/**\n * @class WebRTCStar\n */\nclass WebRTCStar {\n  /**\n   * @class\n   * @param {object} options\n   * @param {Upgrader} options.upgrader\n   */\n  constructor (options = {}) {\n    if (!options.upgrader) {\n      throw new Error('An upgrader must be provided. See https://github.com/libp2p/interface-transport#upgrader.')\n    }\n\n    this._upgrader = options.upgrader\n\n    this.sioOptions = {\n      transports: ['websocket'],\n      'force new connection': true\n    }\n\n    if (options.wrtc) {\n      this.wrtc = options.wrtc\n    }\n\n    // Keep Signalling references\n    this.sigReferences = new Map()\n\n    // Discovery\n    this.discovery = new EventEmitter()\n    this.discovery.tag = 'webRTCStar'\n    this.discovery._isStarted = false\n    this.discovery.start = () => {\n      this.discovery._isStarted = true\n    }\n    this.discovery.stop = () => {\n      this.discovery._isStarted = false\n    }\n    this._peerDiscovered = this._peerDiscovered.bind(this)\n  }\n\n  /**\n   * @async\n   * @param {Multiaddr} ma\n   * @param {object} options\n   * @param {AbortSignal} options.signal - Used to abort dial requests\n   * @returns {Connection} An upgraded Connection\n   */\n  async dial (ma, options = {}) {\n    const rawConn = await this._connect(ma, options)\n    const maConn = toConnection(rawConn, { remoteAddr: ma, signal: options.signal })\n    log('new outbound connection %s', maConn.remoteAddr)\n    const conn = await this._upgrader.upgradeOutbound(maConn)\n    log('outbound connection %s upgraded', maConn.remoteAddr)\n    return conn\n  }\n\n  /**\n   * @private\n   * @param {Multiaddr} ma\n   * @param {object} options\n   * @param {AbortSignal} options.signal - Used to abort dial requests\n   * @returns {Promise<SimplePeer>} Resolves a SimplePeer Webrtc channel\n   */\n  _connect (ma, options = {}) {\n    if (options.signal && options.signal.aborted) {\n      throw new AbortError()\n    }\n\n    const spOptions = {\n      initiator: true,\n      trickle: false,\n      ...options.spOptions || {}\n    }\n\n    // Use custom WebRTC implementation\n    if (this.wrtc) { spOptions.wrtc = this.wrtc }\n\n    const cOpts = ma.toOptions()\n    const intentId = (~~(Math.random() * 1e9)).toString(36) + Date.now()\n\n    return new Promise((resolve, reject) => {\n      const sio = this.sigReferences.get(cleanUrlSIO(ma))\n\n      if (!sio || !sio.listener) {\n        return reject(errcode(new Error('unknown signal server to use'), 'ERR_UNKNOWN_SIGNAL_SERVER'))\n      }\n\n      const sioClient = sio.listener.io\n\n      const start = Date.now()\n      let connected\n\n      log('dialing %s:%s', cOpts.host, cOpts.port)\n      const channel = new SimplePeer(spOptions)\n\n      const onError = (err) => {\n        if (!connected) {\n          const msg = `connection error ${cOpts.host}:${cOpts.port}: ${err.message}`\n          log.error(msg)\n          done(err)\n        }\n      }\n\n      const onTimeout = () => {\n        log('connnection timeout %s:%s', cOpts.host, cOpts.port)\n        const err = errcode(new Error(`connection timeout after ${Date.now() - start}ms`), 'ERR_CONNECT_TIMEOUT')\n        // Note: this will result in onError() being called\n        channel.emit('error', err)\n      }\n\n      const onConnect = () => {\n        connected = true\n\n        log('connection opened %s:%s', cOpts.host, cOpts.port)\n        done(null)\n      }\n\n      const onAbort = () => {\n        log.error('connection aborted %s:%s', cOpts.host, cOpts.port)\n        channel.destroy()\n        done(new AbortError())\n      }\n\n      const done = (err) => {\n        channel.removeListener('timeout', onTimeout)\n        channel.removeListener('connect', onConnect)\n        options.signal && options.signal.removeEventListener('abort', onAbort)\n\n        err ? reject(err) : resolve(channel)\n      }\n\n      channel.on('error', onError)\n      channel.once('timeout', onTimeout)\n      channel.once('connect', onConnect)\n      channel.on('close', () => {\n        channel.removeListener('error', onError)\n      })\n      options.signal && options.signal.addEventListener('abort', onAbort)\n\n      channel.on('signal', (signal) => {\n        sioClient.emit('ss-handshake', {\n          intentId: intentId,\n          srcMultiaddr: sio.signallingAddr.toString(),\n          dstMultiaddr: ma.toString(),\n          signal: signal\n        })\n      })\n\n      // NOTE: aegir segfaults if we do .once on the socket.io event emitter and we\n      // are clueless as to why.\n      sioClient.on('ws-handshake', (offer) => {\n        if (offer.intentId === intentId && offer.err) {\n          channel.destroy()\n          reject(errcode(offer.err instanceof Error ? offer.err : new Error(offer.err), 'ERR_SIGNALLING_FAILED'))\n        }\n\n        if (offer.intentId !== intentId || !offer.answer || channel.destroyed) {\n          return\n        }\n\n        channel.signal(offer.signal)\n      })\n    })\n  }\n\n  /**\n   * Creates a WebrtcStar listener. The provided `handler` function will be called\n   * anytime a new incoming Connection has been successfully upgraded via\n   * `upgrader.upgradeInbound`.\n   *\n   * @param {object} [options] - simple-peer options for listener\n   * @param {function (Connection)} handler\n   * @returns {Listener} A WebrtcStar listener\n   */\n  createListener (options = {}, handler) {\n    if (!webrtcSupport && !this.wrtc) {\n      throw errcode(new Error('no WebRTC support'), 'ERR_NO_WEBRTC_SUPPORT')\n    }\n\n    if (typeof options === 'function') {\n      handler = options\n      options = {}\n    }\n\n    handler = handler || noop\n\n    return createListener({ handler, upgrader: this._upgrader }, this, options)\n  }\n\n  /**\n   * Takes a list of `Multiaddr`s and returns only valid TCP addresses\n   *\n   * @param {Multiaddr[]} multiaddrs\n   * @returns {Multiaddr[]} Valid TCP multiaddrs\n   */\n  filter (multiaddrs) {\n    multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs]\n\n    return multiaddrs.filter((ma) => {\n      if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n        return false\n      }\n\n      return mafmt.WebRTCStar.matches(ma)\n    })\n  }\n\n  _peerDiscovered (maStr) {\n    if (!this.discovery._isStarted) return\n\n    log('Peer Discovered:', maStr)\n    maStr = cleanMultiaddr(maStr)\n\n    const ma = new Multiaddr(maStr)\n    const peerId = PeerId.createFromB58String(ma.getPeerId())\n\n    this.discovery.emit('peer', {\n      id: peerId,\n      multiaddrs: [ma]\n    })\n  }\n}\n\nmodule.exports = withIs(WebRTCStar, { className: 'WebRTCStar', symbolName: '@libp2p/js-libp2p-webrtc-star/webrtcstar' })\n","'use strict'\n\nconst connect = require('it-ws/client')\nconst withIs = require('class-is')\nconst toUri = require('multiaddr-to-uri')\nconst { AbortError } = require('abortable-iterator')\nconst pDefer = require('p-defer')\n\nconst debug = require('debug')\nconst log = debug('libp2p:websockets')\nlog.error = debug('libp2p:websockets:error')\nconst env = require('ipfs-utils/src/env')\n\nconst createListener = require('./listener')\nconst toConnection = require('./socket-to-conn')\nconst filters = require('./filters')\n\n/**\n * @typedef {import('multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @class WebSockets\n */\nclass WebSockets {\n  /**\n   * @class\n   * @param {object} options\n   * @param {Upgrader} options.upgrader\n   * @param {(multiaddrs: Array<Multiaddr>) => Array<Multiaddr>} options.filter - override transport addresses filter\n   */\n  constructor ({ upgrader, filter }) {\n    if (!upgrader) {\n      throw new Error('An upgrader must be provided. See https://github.com/libp2p/interface-transport#upgrader.')\n    }\n    this._upgrader = upgrader\n    this._filter = filter\n  }\n\n  /**\n   * @async\n   * @param {Multiaddr} ma\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] - Used to abort dial requests\n   * @returns {Connection} An upgraded Connection\n   */\n  async dial (ma, options = {}) {\n    log('dialing %s', ma)\n\n    const socket = await this._connect(ma, options)\n    const maConn = toConnection(socket, { remoteAddr: ma, signal: options.signal })\n    log('new outbound connection %s', maConn.remoteAddr)\n\n    const conn = await this._upgrader.upgradeOutbound(maConn)\n    log('outbound connection %s upgraded', maConn.remoteAddr)\n    return conn\n  }\n\n  /**\n   * @private\n   * @param {Multiaddr} ma\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] - Used to abort dial requests\n   * @returns {Promise<WebSocket>} Resolves a extended duplex iterable on top of a WebSocket\n   */\n  async _connect (ma, options = {}) {\n    if (options.signal && options.signal.aborted) {\n      throw new AbortError()\n    }\n    const cOpts = ma.toOptions()\n    log('dialing %s:%s', cOpts.host, cOpts.port)\n\n    const errorPromise = pDefer()\n    const errfn = (err) => {\n      const msg = `connection error: ${err.message}`\n      log.error(msg)\n\n      errorPromise.reject(err)\n    }\n\n    const rawSocket = connect(toUri(ma), Object.assign({ binary: true }, options))\n\n    if (rawSocket.socket.on) {\n      rawSocket.socket.on('error', errfn)\n    } else {\n      rawSocket.socket.onerror = errfn\n    }\n\n    if (!options.signal) {\n      await Promise.race([rawSocket.connected(), errorPromise.promise])\n\n      log('connected %s', ma)\n      return rawSocket\n    }\n\n    // Allow abort via signal during connect\n    let onAbort\n    const abort = new Promise((resolve, reject) => {\n      onAbort = () => {\n        reject(new AbortError())\n        // FIXME: https://github.com/libp2p/js-libp2p-websockets/issues/121\n        setTimeout(() => {\n          rawSocket.close()\n        })\n      }\n\n      // Already aborted?\n      if (options.signal.aborted) return onAbort()\n      options.signal.addEventListener('abort', onAbort)\n    })\n\n    try {\n      await Promise.race([abort, errorPromise.promise, rawSocket.connected()])\n    } finally {\n      options.signal.removeEventListener('abort', onAbort)\n    }\n\n    log('connected %s', ma)\n    return rawSocket\n  }\n\n  /**\n   * Creates a Websockets listener. The provided `handler` function will be called\n   * anytime a new incoming Connection has been successfully upgraded via\n   * `upgrader.upgradeInbound`.\n   *\n   * @param {object} [options]\n   * @param {http.Server} [options.server] - A pre-created Node.js HTTP/S server.\n   * @param {function (Connection)} handler\n   * @returns {Listener} A Websockets listener\n   */\n  createListener (options = {}, handler) {\n    if (typeof options === 'function') {\n      handler = options\n      options = {}\n    }\n\n    return createListener({ handler, upgrader: this._upgrader }, options)\n  }\n\n  /**\n   * Takes a list of `Multiaddr`s and returns only valid Websockets addresses.\n   * By default, in a browser environment only DNS+WSS multiaddr is accepted,\n   * while in a Node.js environment DNS+{WS, WSS} multiaddrs are accepted.\n   *\n   * @param {Multiaddr[]} multiaddrs\n   * @returns {Multiaddr[]} Valid Websockets multiaddrs\n   */\n  filter (multiaddrs) {\n    multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs]\n\n    if (this._filter) {\n      return this._filter(multiaddrs)\n    }\n\n    // Browser\n    if (env.isBrowser || env.isWebWorker) {\n      return filters.dnsWss(multiaddrs)\n    }\n\n    return filters.all(multiaddrs)\n  }\n}\n\nmodule.exports = withIs(WebSockets, {\n  className: 'WebSockets',\n  symbolName: '@libp2p/js-libp2p-websockets/websockets'\n})\n","'use strict'\n\nconst debug = require('debug')\nconst log = Object.assign(debug('libp2p'), {\n  error: debug('libp2p:err')\n})\nconst { EventEmitter } = require('events')\n\nconst errCode = require('err-code')\nconst PeerId = require('peer-id')\nconst { Multiaddr } = require('multiaddr')\nconst { MemoryDatastore } = require('datastore-core/memory')\nconst PeerRouting = require('./peer-routing')\nconst ContentRouting = require('./content-routing')\nconst getPeer = require('./get-peer')\nconst { validate: validateConfig } = require('./config')\nconst { codes, messages } = require('./errors')\n\nconst AddressManager = require('./address-manager')\nconst ConnectionManager = require('./connection-manager')\nconst AutoDialler = require('./connection-manager/auto-dialler')\nconst Circuit = require('./circuit/transport')\nconst Relay = require('./circuit')\nconst Dialer = require('./dialer')\nconst Keychain = require('./keychain')\nconst Metrics = require('./metrics')\nconst TransportManager = require('./transport-manager')\nconst Upgrader = require('./upgrader')\nconst PeerStore = require('./peer-store')\nconst PubsubAdapter = require('./pubsub-adapter')\nconst Registrar = require('./registrar')\nconst IdentifyService = require('./identify')\nconst FetchService = require('./fetch')\nconst PingService = require('./ping')\nconst NatManager = require('./nat-manager')\nconst { updateSelfPeerRecord } = require('./record/utils')\n\n/**\n * @typedef {import('libp2p-interfaces/src/connection').Connection} Connection\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxedStream} MuxedStream\n * @typedef {import('libp2p-interfaces/src/transport/types').TransportFactory<any, any>} TransportFactory\n * @typedef {import('libp2p-interfaces/src/stream-muxer/types').MuxerFactory} MuxerFactory\n * @typedef {import('libp2p-interfaces/src/content-routing/types').ContentRouting} ContentRoutingModule\n * @typedef {import('libp2p-interfaces/src/peer-discovery/types').PeerDiscoveryFactory} PeerDiscoveryFactory\n * @typedef {import('libp2p-interfaces/src/peer-routing/types').PeerRouting} PeerRoutingModule\n * @typedef {import('libp2p-interfaces/src/crypto/types').Crypto} Crypto\n * @typedef {import('libp2p-interfaces/src/pubsub')} Pubsub\n * @typedef {import('libp2p-interfaces/src/pubsub').PubsubOptions} PubsubOptions\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('./pnet')} Protector\n * @typedef {import('./types').ConnectionGater} ConnectionGater\n * @typedef {Object} PersistentPeerStoreOptions\n * @property {number} [threshold]\n */\n\n/**\n * @typedef {Object} HandlerProps\n * @property {Connection} connection\n * @property {MuxedStream} stream\n * @property {string} protocol\n *\n * @typedef {Object} DhtOptions\n * @property {boolean} [enabled = false]\n * @property {number} [kBucketSize = 20]\n * @property {boolean} [clientMode]\n * @property {import('libp2p-interfaces/src/types').DhtSelectors} [selectors]\n * @property {import('libp2p-interfaces/src/types').DhtValidators} [validators]\n *\n * @typedef {Object} KeychainOptions\n * @property {Datastore} [datastore]\n *\n * @typedef {Object} PeerStoreOptions\n * @property {boolean} persistence\n *\n * @typedef {Object} PubsubLocalOptions\n * @property {boolean} enabled\n *\n * @typedef {Object} MetricsOptions\n * @property {boolean} enabled\n *\n * @typedef {Object} RelayOptions\n * @property {boolean} [enabled = true]\n * @property {import('./circuit').RelayAdvertiseOptions} [advertise]\n * @property {import('./circuit').HopOptions} [hop]\n * @property {import('./circuit').AutoRelayOptions} [autoRelay]\n *\n * @typedef {Object} Libp2pConfig\n * @property {DhtOptions} [dht] dht module options\n * @property {import('./nat-manager').NatManagerOptions} [nat]\n * @property {Record<string, Object|boolean>} [peerDiscovery]\n * @property {PubsubLocalOptions & PubsubOptions} [pubsub] pubsub module options\n * @property {RelayOptions} [relay]\n * @property {Record<string, Object>} [transport] transport options indexed by transport key\n *\n * @typedef {Object} Libp2pModules\n * @property {TransportFactory[]} transport\n * @property {MuxerFactory[]} streamMuxer\n * @property {Crypto[]} connEncryption\n * @property {PeerDiscoveryFactory[]} [peerDiscovery]\n * @property {PeerRoutingModule[]} [peerRouting]\n * @property {ContentRoutingModule[]} [contentRouting]\n * @property {Object} [dht]\n * @property {{new(...args: any[]): Pubsub}} [pubsub]\n * @property {Protector} [connProtector]\n *\n * @typedef {Object} Libp2pOptions\n * @property {Libp2pModules} modules libp2p modules to use\n * @property {import('./address-manager').AddressManagerOptions} [addresses]\n * @property {import('./connection-manager').ConnectionManagerOptions} [connectionManager]\n * @property {Partial<import('./types').ConnectionGater>} [connectionGater]\n * @property {Datastore} [datastore]\n * @property {import('./dialer').DialerOptions} [dialer]\n * @property {import('./identify/index').HostProperties} [host] libp2p host\n * @property {KeychainOptions & import('./keychain/index').KeychainOptions} [keychain]\n * @property {MetricsOptions & import('./metrics').MetricsOptions} [metrics]\n * @property {import('./peer-routing').PeerRoutingOptions} [peerRouting]\n * @property {PeerStoreOptions} [peerStore]\n * @property {import('./transport-manager').TransportManagerOptions} [transportManager]\n * @property {Libp2pConfig} [config]\n *\n * @typedef {Object} constructorOptions\n * @property {PeerId} peerId\n *\n * @typedef {Object} CreateOptions\n * @property {PeerId} [peerId]\n *\n * @extends {EventEmitter}\n * @fires Libp2p#error Emitted when an error occurs\n * @fires Libp2p#peer:discovery Emitted when a peer is discovered\n */\nclass Libp2p extends EventEmitter {\n  /**\n   * Like `new Libp2p(options)` except it will create a `PeerId`\n   * instance if one is not provided in options.\n   *\n   * @param {Libp2pOptions & CreateOptions} options - Libp2p configuration options\n   * @returns {Promise<Libp2p>}\n   */\n  static async create (options) {\n    if (options.peerId) {\n      // @ts-ignore 'Libp2pOptions & CreateOptions' is not assignable to 'Libp2pOptions & constructorOptions'\n      return new Libp2p(options)\n    }\n\n    const peerId = await PeerId.create()\n\n    options.peerId = peerId\n    // @ts-ignore 'Libp2pOptions & CreateOptions' is not assignable to 'Libp2pOptions & constructorOptions'\n    return new Libp2p(options)\n  }\n\n  /**\n   * Libp2p node.\n   *\n   * @class\n   * @param {Libp2pOptions & constructorOptions} _options\n   */\n  constructor (_options) {\n    super()\n    // validateConfig will ensure the config is correct,\n    // and add default values where appropriate\n    this._options = validateConfig(_options)\n\n    /** @type {PeerId} */\n    this.peerId = this._options.peerId\n    this.datastore = this._options.datastore\n\n    // Create Metrics\n    if (this._options.metrics.enabled) {\n      const metrics = new Metrics({\n        ...this._options.metrics\n      })\n\n      this.metrics = metrics\n    }\n\n    /** @type {ConnectionGater} */\n    this.connectionGater = {\n      denyDialPeer: async () => Promise.resolve(false),\n      denyDialMultiaddr: async () => Promise.resolve(false),\n      denyInboundConnection: async () => Promise.resolve(false),\n      denyOutboundConnection: async () => Promise.resolve(false),\n      denyInboundEncryptedConnection: async () => Promise.resolve(false),\n      denyOutboundEncryptedConnection: async () => Promise.resolve(false),\n      denyInboundUpgradedConnection: async () => Promise.resolve(false),\n      denyOutboundUpgradedConnection: async () => Promise.resolve(false),\n      filterMultiaddrForPeer: async () => Promise.resolve(true),\n      ...this._options.connectionGater\n    }\n\n    /** @type {import('./peer-store/types').PeerStore} */\n    this.peerStore = new PeerStore({\n      peerId: this.peerId,\n      datastore: (this.datastore && this._options.peerStore.persistence) ? this.datastore : new MemoryDatastore(),\n      addressFilter: this.connectionGater.filterMultiaddrForPeer\n    })\n\n    // Addresses {listen, announce, noAnnounce}\n    this.addresses = this._options.addresses\n    this.addressManager = new AddressManager(this.peerId, this._options.addresses)\n\n    // when addresses change, update our peer record\n    this.addressManager.on('change:addresses', () => {\n      updateSelfPeerRecord(this).catch(err => {\n        log.error('Error updating self peer record', err)\n      })\n    })\n\n    this._modules = this._options.modules\n    this._config = this._options.config\n    this._transport = [] // Transport instances/references\n    this._discovery = new Map() // Discovery service instances/references\n\n    // Create the Connection Manager\n    this.connectionManager = new ConnectionManager(this, {\n      ...this._options.connectionManager\n    })\n    this._autodialler = new AutoDialler(this, {\n      enabled: this._config.peerDiscovery.autoDial,\n      minConnections: this._options.connectionManager.minConnections,\n      autoDialInterval: this._options.connectionManager.autoDialInterval\n    })\n\n    // Create keychain\n    if (this._options.keychain && this._options.keychain.datastore) {\n      log('creating keychain')\n\n      const keychainOpts = Keychain.generateOptions()\n\n      this.keychain = new Keychain(this._options.keychain.datastore, {\n        ...keychainOpts,\n        ...this._options.keychain\n      })\n\n      log('keychain constructed')\n    }\n\n    // Setup the Upgrader\n    this.upgrader = new Upgrader({\n      connectionGater: this.connectionGater,\n      localPeer: this.peerId,\n      metrics: this.metrics,\n      onConnection: (connection) => this.connectionManager.onConnect(connection),\n      onConnectionEnd: (connection) => this.connectionManager.onDisconnect(connection)\n    })\n\n    // Setup the transport manager\n    this.transportManager = new TransportManager({\n      libp2p: this,\n      upgrader: this.upgrader,\n      faultTolerance: this._options.transportManager.faultTolerance\n    })\n\n    // Create the Nat Manager\n    this.natManager = new NatManager({\n      peerId: this.peerId,\n      addressManager: this.addressManager,\n      transportManager: this.transportManager,\n      // @ts-ignore Nat typedef is not understood as Object\n      ...this._options.config.nat\n    })\n\n    // Create the Registrar\n    this.registrar = new Registrar({\n      peerStore: this.peerStore,\n      connectionManager: this.connectionManager\n    })\n\n    this.handle = this.handle.bind(this)\n    this.registrar.handle = this.handle\n\n    // Attach crypto channels\n    if (!this._modules.connEncryption || !this._modules.connEncryption.length) {\n      throw errCode(new Error(messages.CONN_ENCRYPTION_REQUIRED), codes.CONN_ENCRYPTION_REQUIRED)\n    }\n    const cryptos = this._modules.connEncryption\n    cryptos.forEach((crypto) => {\n      this.upgrader.cryptos.set(crypto.protocol, crypto)\n    })\n\n    this.dialer = new Dialer({\n      transportManager: this.transportManager,\n      connectionGater: this.connectionGater,\n      peerStore: this.peerStore,\n      metrics: this.metrics,\n      ...this._options.dialer\n    })\n\n    this._modules.transport.forEach((Transport) => {\n      const key = Transport.prototype[Symbol.toStringTag]\n      const transportOptions = this._config.transport[key]\n      this.transportManager.add(key, Transport, transportOptions)\n    })\n\n    if (this._config.relay.enabled) {\n      // @ts-ignore Circuit prototype\n      this.transportManager.add(Circuit.prototype[Symbol.toStringTag], Circuit)\n      this.relay = new Relay(this)\n    }\n\n    // Attach stream multiplexers\n    if (this._modules.streamMuxer) {\n      const muxers = this._modules.streamMuxer\n      muxers.forEach((muxer) => {\n        this.upgrader.muxers.set(muxer.multicodec, muxer)\n      })\n\n      // Add the identify service since we can multiplex\n      this.identifyService = new IdentifyService({ libp2p: this })\n    }\n\n    // Attach private network protector\n    if (this._modules.connProtector) {\n      this.upgrader.protector = this._modules.connProtector\n    } else if (globalThis.process !== undefined && globalThis.process.env && globalThis.process.env.LIBP2P_FORCE_PNET) { // eslint-disable-line no-undef\n      throw new Error('Private network is enforced, but no protector was provided')\n    }\n\n    // dht provided components (peerRouting, contentRouting, dht)\n    if (this._modules.dht) {\n      const DHT = this._modules.dht\n      // @ts-ignore TODO: types need fixing - DHT is an `object` which has no `create` method\n      this._dht = DHT.create({\n        libp2p: this,\n        ...this._config.dht\n      })\n    }\n\n    // Create pubsub if provided\n    if (this._modules.pubsub) {\n      const Pubsub = this._modules.pubsub\n      // using pubsub adapter with *DEPRECATED* handlers functionality\n      /** @type {Pubsub} */\n      this.pubsub = PubsubAdapter(Pubsub, this, this._config.pubsub)\n    }\n\n    // Attach remaining APIs\n    // peer and content routing will automatically get modules from _modules and _dht\n    this.peerRouting = new PeerRouting(this)\n    this.contentRouting = new ContentRouting(this)\n\n    this._onDiscoveryPeer = this._onDiscoveryPeer.bind(this)\n\n    this.fetchService = new FetchService(this)\n    this.pingService = new PingService(this)\n  }\n\n  /**\n   * Overrides EventEmitter.emit to conditionally emit errors\n   * if there is a handler. If not, errors will be logged.\n   *\n   * @param {string} eventName\n   * @param  {...any} args\n   * @returns {boolean}\n   */\n  emit (eventName, ...args) {\n    // TODO: do we still need this?\n    // @ts-ignore _events does not exist in libp2p\n    if (eventName === 'error' && !this._events.error) {\n      log.error(args)\n      return false\n    } else {\n      return super.emit(eventName, ...args)\n    }\n  }\n\n  /**\n   * Starts the libp2p node and all its subsystems\n   *\n   * @returns {Promise<void>}\n   */\n  async start () {\n    log('libp2p is starting')\n\n    if (this.identifyService) {\n      await this.handle(Object.values(IdentifyService.getProtocolStr(this)), this.identifyService.handleMessage)\n    }\n\n    if (this.fetchService) {\n      await this.handle(FetchService.PROTOCOL, this.fetchService.handleMessage)\n    }\n\n    if (this.pingService) {\n      await this.handle(PingService.getProtocolStr(this), this.pingService.handleMessage)\n    }\n\n    try {\n      await this._onStarting()\n      await this._onDidStart()\n      log('libp2p has started')\n    } catch (/** @type {any} */ err) {\n      this.emit('error', err)\n      log.error('An error occurred starting libp2p', err)\n      await this.stop()\n      throw err\n    }\n  }\n\n  /**\n   * Stop the libp2p node by closing its listeners and open connections\n   *\n   * @async\n   * @returns {Promise<void>}\n   */\n  async stop () {\n    log('libp2p is stopping')\n\n    try {\n      this._isStarted = false\n\n      if (this.identifyService) {\n        await this.identifyService.stop()\n      }\n\n      this.relay && this.relay.stop()\n      this.peerRouting.stop()\n      await this._autodialler.stop()\n      await (this._dht && this._dht.stop())\n\n      for (const service of this._discovery.values()) {\n        service.removeListener('peer', this._onDiscoveryPeer)\n      }\n\n      await Promise.all(Array.from(this._discovery.values(), s => s.stop()))\n\n      this._discovery = new Map()\n\n      await this.connectionManager.stop()\n\n      await Promise.all([\n        this.pubsub && this.pubsub.stop(),\n        this.metrics && this.metrics.stop()\n      ])\n\n      await this.natManager.stop()\n      await this.transportManager.close()\n\n      await this.unhandle(FetchService.PROTOCOL)\n      await this.unhandle(PingService.getProtocolStr(this))\n\n      this.dialer.destroy()\n    } catch (/** @type {any} */ err) {\n      if (err) {\n        log.error(err)\n        this.emit('error', err)\n      }\n    }\n    log('libp2p has stopped')\n  }\n\n  /**\n   * Load keychain keys from the datastore.\n   * Imports the private key as 'self', if needed.\n   *\n   * @async\n   * @returns {Promise<void>}\n   */\n  async loadKeychain () {\n    if (!this.keychain) {\n      return\n    }\n\n    try {\n      await this.keychain.findKeyByName('self')\n    } catch (/** @type {any} */ err) {\n      await this.keychain.importPeer('self', this.peerId)\n    }\n  }\n\n  isStarted () {\n    return this._isStarted\n  }\n\n  /**\n   * Gets a Map of the current connections. The keys are the stringified\n   * `PeerId` of the peer. The value is an array of Connections to that peer.\n   *\n   * @returns {Map<string, Connection[]>}\n   */\n  get connections () {\n    return this.connectionManager.connections\n  }\n\n  /**\n   * Dials to the provided peer. If successful, the known metadata of the\n   * peer will be added to the nodes `peerStore`\n   *\n   * @param {PeerId|Multiaddr|string} peer - The peer to dial\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   * @returns {Promise<Connection>}\n   */\n  dial (peer, options) {\n    return this._dial(peer, options)\n  }\n\n  /**\n   * Dials to the provided peer and tries to handshake with the given protocols in order.\n   * If successful, the known metadata of the peer will be added to the nodes `peerStore`,\n   * and the `MuxedStream` will be returned together with the successful negotiated protocol.\n   *\n   * @async\n   * @param {PeerId|Multiaddr|string} peer - The peer to dial\n   * @param {string[]|string} protocols\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   */\n  async dialProtocol (peer, protocols, options) {\n    if (!protocols || !protocols.length) {\n      throw errCode(new Error('no protocols were provided to open a stream'), codes.ERR_INVALID_PROTOCOLS_FOR_STREAM)\n    }\n\n    const connection = await this._dial(peer, options)\n    return connection.newStream(protocols)\n  }\n\n  /**\n   * @async\n   * @param {PeerId|Multiaddr|string} peer - The peer to dial\n   * @param {object} [options]\n   * @returns {Promise<Connection>}\n   */\n  async _dial (peer, options) {\n    const { id, multiaddrs } = getPeer(peer)\n\n    if (id.equals(this.peerId)) {\n      throw errCode(new Error('Cannot dial self'), codes.ERR_DIALED_SELF)\n    }\n\n    let connection = this.connectionManager.get(id)\n\n    if (!connection) {\n      connection = await this.dialer.connectToPeer(peer, options)\n    } else if (multiaddrs) {\n      await this.peerStore.addressBook.add(id, multiaddrs)\n    }\n\n    return connection\n  }\n\n  /**\n   * Get a deduplicated list of peer advertising multiaddrs by concatenating\n   * the listen addresses used by transports with any configured\n   * announce addresses as well as observed addresses reported by peers.\n   *\n   * If Announce addrs are specified, configured listen addresses will be\n   * ignored though observed addresses will still be included.\n   *\n   * @returns {Multiaddr[]}\n   */\n  get multiaddrs () {\n    let addrs = this.addressManager.getAnnounceAddrs().map(ma => ma.toString())\n\n    if (!addrs.length) {\n      // no configured announce addrs, add configured listen addresses\n      addrs = this.transportManager.getAddrs().map(ma => ma.toString())\n    }\n\n    addrs = addrs.concat(this.addressManager.getObservedAddrs().map(ma => ma.toString()))\n\n    const announceFilter = this._options.addresses.announceFilter\n\n    // dedupe multiaddrs\n    const addrSet = new Set(addrs)\n\n    // Create advertising list\n    return announceFilter(Array.from(addrSet).map(str => new Multiaddr(str)))\n  }\n\n  /**\n   * Disconnects all connections to the given `peer`\n   *\n   * @param {PeerId|Multiaddr|string} peer - the peer to close connections to\n   * @returns {Promise<void>}\n   */\n  async hangUp (peer) {\n    const { id } = getPeer(peer)\n\n    const connections = this.connectionManager.connections.get(id.toB58String())\n\n    if (!connections) {\n      return\n    }\n\n    await Promise.all(\n      connections.map(connection => {\n        return connection.close()\n      })\n    )\n  }\n\n  /**\n   * Sends a request to fetch the value associated with the given key from the given peer.\n   *\n   * @param {PeerId|Multiaddr} peer\n   * @param {string} key\n   * @returns {Promise<Uint8Array | null>}\n   */\n  fetch (peer, key) {\n    return this.fetchService.fetch(peer, key)\n  }\n\n  /**\n   * Pings the given peer in order to obtain the operation latency.\n   *\n   * @param {PeerId|Multiaddr|string} peer - The peer to ping\n   * @returns {Promise<number>}\n   */\n  ping (peer) {\n    const { id, multiaddrs } = getPeer(peer)\n\n    // If received multiaddr, ping it\n    if (multiaddrs) {\n      return this.pingService.ping(multiaddrs[0])\n    }\n\n    return this.pingService.ping(id)\n  }\n\n  /**\n   * Registers the `handler` for each protocol\n   *\n   * @param {string[]|string} protocols\n   * @param {(props: HandlerProps) => void} handler\n   */\n  async handle (protocols, handler) {\n    protocols = Array.isArray(protocols) ? protocols : [protocols]\n    protocols.forEach(protocol => {\n      this.upgrader.protocols.set(protocol, handler)\n    })\n\n    // Add new protocols to self protocols in the Protobook\n    await this.peerStore.protoBook.add(this.peerId, protocols)\n  }\n\n  /**\n   * Removes the handler for each protocol. The protocol\n   * will no longer be supported on streams.\n   *\n   * @param {string[]|string} protocols\n   */\n  async unhandle (protocols) {\n    protocols = Array.isArray(protocols) ? protocols : [protocols]\n    protocols.forEach(protocol => {\n      this.upgrader.protocols.delete(protocol)\n    })\n\n    // Remove protocols from self protocols in the Protobook\n    await this.peerStore.protoBook.remove(this.peerId, protocols)\n  }\n\n  async _onStarting () {\n    // Listen on the provided transports for the provided addresses\n    const addrs = this.addressManager.getListenAddrs()\n    await this.transportManager.listen(addrs)\n\n    // Manage your NATs\n    this.natManager.start()\n\n    if (this._config.pubsub.enabled) {\n      this.pubsub && await this.pubsub.start()\n    }\n\n    // DHT subsystem\n    if (this._config.dht.enabled) {\n      this._dht && await this._dht.start()\n\n      // TODO: this should be modified once random-walk is used as\n      // the other discovery modules\n      this._dht.on('peer', this._onDiscoveryPeer)\n    }\n\n    // Start metrics if present\n    this.metrics && this.metrics.start()\n\n    if (this.identifyService) {\n      await this.identifyService.start()\n    }\n  }\n\n  /**\n   * Called when libp2p has started and before it returns\n   *\n   * @private\n   */\n  async _onDidStart () {\n    this._isStarted = true\n\n    this.peerStore.on('peer', peerId => {\n      this.emit('peer:discovery', peerId)\n      this._maybeConnect(peerId).catch(err => {\n        log.error(err)\n      })\n    })\n\n    // Once we start, emit any peers we may have already discovered\n    // TODO: this should be removed, as we already discovered these peers in the past\n    for await (const peer of this.peerStore.getPeers()) {\n      this.emit('peer:discovery', peer.id)\n    }\n\n    this.connectionManager.start()\n    await this._autodialler.start()\n\n    // Peer discovery\n    await this._setupPeerDiscovery()\n\n    // Relay\n    this.relay && this.relay.start()\n\n    this.peerRouting.start()\n  }\n\n  /**\n   * Called whenever peer discovery services emit `peer` events.\n   * Known peers may be emitted.\n   *\n   * @private\n   * @param {{ id: PeerId, multiaddrs: Multiaddr[], protocols: string[] }} peer\n   */\n  _onDiscoveryPeer (peer) {\n    if (peer.id.toB58String() === this.peerId.toB58String()) {\n      log.error(new Error(codes.ERR_DISCOVERED_SELF))\n      return\n    }\n\n    peer.multiaddrs && this.peerStore.addressBook.add(peer.id, peer.multiaddrs).catch(err => log.error(err))\n    peer.protocols && this.peerStore.protoBook.set(peer.id, peer.protocols).catch(err => log.error(err))\n  }\n\n  /**\n   * Will dial to the given `peerId` if the current number of\n   * connected peers is less than the configured `ConnectionManager`\n   * minConnections.\n   *\n   * @private\n   * @param {PeerId} peerId\n   */\n  async _maybeConnect (peerId) {\n    // If auto dialing is on and we have no connection to the peer, check if we should dial\n    if (this._config.peerDiscovery.autoDial === true && !this.connectionManager.get(peerId)) {\n      const minConnections = this._options.connectionManager.minConnections || 0\n      if (minConnections > this.connectionManager.size) {\n        log('connecting to discovered peer %s', peerId.toB58String())\n        try {\n          await this.dialer.connectToPeer(peerId)\n        } catch (/** @type {any} */ err) {\n          log.error(`could not connect to discovered peer ${peerId.toB58String()} with ${err}`)\n        }\n      }\n    }\n  }\n\n  /**\n   * Initializes and starts peer discovery services\n   *\n   * @async\n   * @private\n   */\n  async _setupPeerDiscovery () {\n    /**\n     * @param {PeerDiscoveryFactory} DiscoveryService\n     */\n    const setupService = (DiscoveryService) => {\n      let config = {\n        enabled: true // on by default\n      }\n\n      if (DiscoveryService.tag &&\n        this._config.peerDiscovery &&\n        this._config.peerDiscovery[DiscoveryService.tag]) {\n        // @ts-ignore PeerDiscovery not understood as an Object for spread\n        config = { ...config, ...this._config.peerDiscovery[DiscoveryService.tag] }\n      }\n\n      if (config.enabled &&\n        !this._discovery.has(DiscoveryService.tag)) { // not already added\n        let discoveryService\n\n        if (typeof DiscoveryService === 'function') {\n          // @ts-ignore DiscoveryService has no constructor type inferred\n          discoveryService = new DiscoveryService(Object.assign({}, config, {\n            peerId: this.peerId,\n            libp2p: this\n          }))\n        } else {\n          discoveryService = DiscoveryService\n        }\n\n        discoveryService.on('peer', this._onDiscoveryPeer)\n        this._discovery.set(DiscoveryService.tag, discoveryService)\n      }\n    }\n\n    // Discovery modules\n    for (const DiscoveryService of this._modules.peerDiscovery || []) {\n      setupService(DiscoveryService)\n    }\n\n    // Transport modules with discovery\n    for (const Transport of this.transportManager.getTransports()) {\n      // @ts-ignore Transport interface does not include discovery\n      if (Transport.discovery) {\n        // @ts-ignore Transport interface does not include discovery\n        setupService(Transport.discovery)\n      }\n    }\n\n    await Promise.all(Array.from(this._discovery.values(), d => d.start()))\n  }\n}\n\nmodule.exports = Libp2p\n","'use strict'\n\n/**\n * @template K\n * @template V\n */\nclass TrackedMap extends Map {\n  /**\n   * @param {object} options\n   * @param {string} options.system\n   * @param {string} options.component\n   * @param {string} options.metric\n   * @param {import('.')} options.metrics\n   */\n  constructor (options) {\n    super()\n\n    const { system, component, metric, metrics } = options\n    this._system = system\n    this._component = component\n    this._metric = metric\n    this._metrics = metrics\n\n    this._metrics.updateComponentMetric({\n      system: this._system,\n      component: this._component,\n      metric: this._metric,\n      value: this.size\n    })\n  }\n\n  /**\n   * @param {K} key\n   * @param {V} value\n   */\n  set (key, value) {\n    super.set(key, value)\n    this._metrics.updateComponentMetric({\n      system: this._system,\n      component: this._component,\n      metric: this._metric,\n      value: this.size\n    })\n    return this\n  }\n\n  /**\n   * @param {K} key\n   */\n  delete (key) {\n    const deleted = super.delete(key)\n    this._metrics.updateComponentMetric({\n      system: this._system,\n      component: this._component,\n      metric: this._metric,\n      value: this.size\n    })\n    return deleted\n  }\n\n  clear () {\n    super.clear()\n\n    this._metrics.updateComponentMetric({\n      system: this._system,\n      component: this._component,\n      metric: this._metric,\n      value: this.size\n    })\n  }\n}\n\n/**\n * @template K\n * @template V\n * @param {object} options\n * @param {string} [options.system]\n * @param {string} options.component\n * @param {string} options.metric\n * @param {import('.')} [options.metrics]\n * @returns {Map<K, V>}\n */\nmodule.exports = ({ system = 'libp2p', component, metric, metrics }) => {\n  /** @type {Map<K, V>} */\n  let map\n\n  if (metrics) {\n    map = new TrackedMap({ system, component, metric, metrics })\n  } else {\n    map = new Map()\n  }\n\n  return map\n}\n","'use strict'\n\nconst { Multiaddr } = require('multiaddr')\n\n/**\n * @typedef {import('./types').MatchesFunction} MatchesFunction\n * @typedef {import('./types').PartialMatchesFunction} PartialMatchesFunction\n * @typedef {import('./types').Mafmt} Mafmt\n */\n\n/*\n * Valid combinations\n */\nconst DNS4 = base('dns4')\nconst DNS6 = base('dns6')\nconst DNSADDR = base('dnsaddr')\nconst DNS = or(\n  base('dns'),\n  DNSADDR,\n  DNS4,\n  DNS6\n)\n\nconst IP = or(base('ip4'), base('ip6'))\nconst TCP = or(\n  and(IP, base('tcp')),\n  and(DNS, base('tcp'))\n)\nconst UDP = and(IP, base('udp'))\nconst UTP = and(UDP, base('utp'))\n\nconst QUIC = and(UDP, base('quic'))\n\nconst WebSockets = or(\n  and(TCP, base('ws')),\n  and(DNS, base('ws'))\n)\n\nconst WebSocketsSecure = or(\n  and(TCP, base('wss')),\n  and(DNS, base('wss'))\n)\n\nconst HTTP = or(\n  and(TCP, base('http')),\n  and(IP, base('http')),\n  and(DNS, base('http'))\n)\n\nconst HTTPS = or(\n  and(TCP, base('https')),\n  and(IP, base('https')),\n  and(DNS, base('https'))\n)\n\nconst WebRTCStar = or(\n  and(WebSockets, base('p2p-webrtc-star'), base('p2p')),\n  and(WebSocketsSecure, base('p2p-webrtc-star'), base('p2p')),\n  and(WebSockets, base('p2p-webrtc-star')),\n  and(WebSocketsSecure, base('p2p-webrtc-star'))\n)\n\nconst WebSocketStar = or(\n  and(WebSockets, base('p2p-websocket-star'), base('p2p')),\n  and(WebSocketsSecure, base('p2p-websocket-star'), base('p2p')),\n  and(WebSockets, base('p2p-websocket-star')),\n  and(WebSocketsSecure, base('p2p-websocket-star'))\n)\n\nconst WebRTCDirect = or(\n  and(HTTP, base('p2p-webrtc-direct'), base('p2p')),\n  and(HTTPS, base('p2p-webrtc-direct'), base('p2p')),\n  and(HTTP, base('p2p-webrtc-direct')),\n  and(HTTPS, base('p2p-webrtc-direct'))\n)\n\nconst Reliable = or(\n  WebSockets,\n  WebSocketsSecure,\n  HTTP,\n  HTTPS,\n  WebRTCStar,\n  WebRTCDirect,\n  TCP,\n  UTP,\n  QUIC,\n  DNS\n)\n\n// Unlike ws-star, stardust can run over any transport thus removing the requirement for websockets (but don't even think about running a stardust server over webrtc-star ;) )\nconst Stardust = or(\n  and(Reliable, base('p2p-stardust'), base('p2p')),\n  and(Reliable, base('p2p-stardust'))\n)\n\nconst _P2P = or(\n  and(Reliable, base('p2p')),\n  WebRTCStar,\n  WebRTCDirect,\n  base('p2p')\n)\n\nconst _Circuit = or(\n  and(_P2P, base('p2p-circuit'), _P2P),\n  and(_P2P, base('p2p-circuit')),\n  and(base('p2p-circuit'), _P2P),\n  and(Reliable, base('p2p-circuit')),\n  and(base('p2p-circuit'), Reliable),\n  base('p2p-circuit')\n)\n\nconst CircuitRecursive = () => or(\n  and(_Circuit, CircuitRecursive),\n  _Circuit\n)\n\nconst Circuit = CircuitRecursive()\n\nconst P2P = or(\n  and(Circuit, _P2P, Circuit),\n  and(_P2P, Circuit),\n  and(Circuit, _P2P),\n  Circuit,\n  _P2P\n)\n\nmodule.exports = {\n  DNS,\n  DNS4,\n  DNS6,\n  DNSADDR,\n  IP,\n  TCP,\n  UDP,\n  QUIC,\n  UTP,\n  HTTP,\n  HTTPS,\n  WebSockets,\n  WebSocketsSecure,\n  WebSocketStar,\n  WebRTCStar,\n  WebRTCDirect,\n  Reliable,\n  Stardust,\n  Circuit,\n  P2P,\n  IPFS: P2P\n}\n\n/*\n * Validation funcs\n */\n\n/**\n * @param {PartialMatchesFunction} partialMatch\n */\nfunction makeMatchesFunction (partialMatch) {\n  /**\n   * @type {MatchesFunction}\n   */\n  function matches (a) {\n    if (!Multiaddr.isMultiaddr(a)) {\n      try {\n        a = new Multiaddr(a)\n      } catch (err) { // catch error\n        return false // also if it's invalid it's propably not matching as well so return false\n      }\n    }\n    const out = partialMatch(a.protoNames())\n    if (out === null) {\n      return false\n    }\n\n    if (out === true || out === false) {\n      return out\n    }\n\n    return out.length === 0\n  }\n\n  return matches\n}\n\n/**\n * @param {Array<Mafmt | (() => Mafmt)>} args\n * @returns {Mafmt}\n */\nfunction and (...args) {\n  /**\n   * @type {PartialMatchesFunction}\n   */\n  function partialMatch (a) {\n    if (a.length < args.length) {\n      return null\n    }\n\n    /** @type {boolean | string[] | null} */\n    let out = a\n\n    args.some((arg) => {\n      out = typeof arg === 'function'\n        ? arg().partialMatch(a)\n        : arg.partialMatch(a)\n\n      if (Array.isArray(out)) {\n        a = out\n      }\n\n      if (out === null) {\n        return true\n      }\n\n      return false\n    })\n\n    return out\n  }\n\n  return {\n    toString: function () { return '{ ' + args.join(' ') + ' }' },\n    input: args,\n    matches: makeMatchesFunction(partialMatch),\n    partialMatch: partialMatch\n  }\n}\n\n/**\n * @param {Array<Mafmt | (() => Mafmt)>} args\n * @returns {Mafmt}\n */\nfunction or (...args) {\n  /**\n   * @type {PartialMatchesFunction}\n   */\n  function partialMatch (a) {\n    let out = null\n    args.some((arg) => {\n      const res = typeof arg === 'function'\n        ? arg().partialMatch(a)\n        : arg.partialMatch(a)\n      if (res) {\n        out = res\n        return true\n      }\n      return false\n    })\n\n    return out\n  }\n\n  const result = {\n    toString: function () { return '{ ' + args.join(' ') + ' }' },\n    input: args,\n    matches: makeMatchesFunction(partialMatch),\n    partialMatch: partialMatch\n  }\n\n  return result\n}\n\n/**\n * @param {string} n\n * @returns {Mafmt}\n */\nfunction base (n) {\n  const name = n\n\n  /**\n   * @type {MatchesFunction}\n   */\n  function matches (a) {\n    let ma\n\n    if (typeof a === 'string' || a instanceof Uint8Array) {\n      try {\n        ma = new Multiaddr(a)\n      } catch (err) { // catch error\n        return false // also if it's invalid it's probably not matching as well so return false\n      }\n    } else {\n      ma = a\n    }\n\n    const pnames = ma.protoNames()\n    if (pnames.length === 1 && pnames[0] === name) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * @type {PartialMatchesFunction}\n   */\n  function partialMatch (protos) {\n    if (protos.length === 0) {\n      return null\n    }\n\n    if (protos[0] === name) {\n      return protos.slice(1)\n    }\n    return null\n  }\n\n  return {\n    toString: function () { return name },\n    matches: matches,\n    partialMatch: partialMatch\n  }\n}\n","const node = require('./node')\nconst browser = require('./browser')\nconst { default: Queue } = require('p-queue')\nconst { timeout } = require('promise-timeout')\nconst observe = require('observable-webworkers')\n\nconst mutexes = {}\nlet implementation\n\nfunction createReleaseable (queue, options) {\n  let res\n\n  const p = new Promise((resolve) => {\n    res = resolve\n  })\n\n  queue.add(() => timeout((() => {\n    return new Promise((resolve) => {\n      res(() => {\n        resolve()\n      })\n    })\n  })(), options.timeout))\n\n  return p\n}\n\nconst createMutex = (name, options) => {\n  if (implementation.isWorker) {\n    return {\n      readLock: implementation.readLock(name, options),\n      writeLock: implementation.writeLock(name, options)\n    }\n  }\n\n  const masterQueue = new Queue({ concurrency: 1 })\n  let readQueue = null\n\n  return {\n    readLock: () => {\n      // If there's already a read queue, just add the task to it\n      if (readQueue) {\n        return createReleaseable(readQueue, options)\n      }\n\n      // Create a new read queue\n      readQueue = new Queue({\n        concurrency: options.concurrency,\n        autoStart: false\n      })\n      const localReadQueue = readQueue\n\n      // Add the task to the read queue\n      const readPromise = createReleaseable(readQueue, options)\n\n      masterQueue.add(() => {\n        // Start the task only once the master queue has completed processing\n        // any previous tasks\n        localReadQueue.start()\n\n        // Once all the tasks in the read queue have completed, remove it so\n        // that the next read lock will occur after any write locks that were\n        // started in the interim\n        return localReadQueue.onIdle()\n          .then(() => {\n            if (readQueue === localReadQueue) {\n              readQueue = null\n            }\n          })\n      })\n\n      return readPromise\n    },\n    writeLock: () => {\n      // Remove the read queue reference, so that any later read locks will be\n      // added to a new queue that starts after this write lock has been\n      // released\n      readQueue = null\n\n      return createReleaseable(masterQueue, options)\n    }\n  }\n}\n\nconst defaultOptions = {\n  concurrency: Infinity,\n  timeout: 84600000,\n  global: global,\n  singleProcess: false\n}\n\nmodule.exports = (name, options) => {\n  if (!options) {\n    options = {}\n  }\n\n  if (typeof name === 'object') {\n    options = name\n    name = 'lock'\n  }\n\n  if (!name) {\n    name = 'lock'\n  }\n\n  options = Object.assign({}, defaultOptions, options)\n\n  if (!implementation) {\n    implementation = node(options) || browser(options)\n\n    if (!implementation.isWorker) {\n      // we are master, set up worker requests\n      implementation.on('requestReadLock', (name, fn) => {\n        if (!mutexes[name]) {\n          return\n        }\n\n        mutexes[name].readLock()\n          .then(release => fn().finally(() => release()))\n      })\n\n      implementation.on('requestWriteLock', async (name, fn) => {\n        if (!mutexes[name]) {\n          return\n        }\n\n        mutexes[name].writeLock()\n          .then(release => fn().finally(() => release()))\n      })\n    }\n  }\n\n  if (!mutexes[name]) {\n    mutexes[name] = createMutex(name, options)\n  }\n\n  return mutexes[name]\n}\n\nmodule.exports.Worker = function (script, Impl) {\n  Impl = Impl || global.Worker\n  let worker\n\n  try {\n    worker = new Impl(script)\n  } catch (error) {\n    if (error.message.includes('not a constructor')) {\n      worker = Impl(script)\n    }\n  }\n\n  if (!worker) {\n    throw new Error('Could not create Worker from', Impl)\n  }\n\n  observe(worker)\n\n  return worker\n}\n","const { Multiaddr } = require('multiaddr')\n\nconst reduceValue = (_, v) => v\nconst tcpUri = (str, port, parts, opts) => {\n  // return tcp when explicitly requested\n  if (opts && opts.assumeHttp === false) return `tcp://${str}:${port}`\n  // check if tcp is the last protocol in multiaddr\n  let protocol = 'tcp'\n  let explicitPort = `:${port}`\n  const last = parts[parts.length - 1]\n  if (last.protocol === 'tcp') {\n    // assume http and produce clean urls\n    protocol = port === '443' ? 'https' : 'http'\n    explicitPort = port === '443' || port === '80' ? '' : explicitPort\n  }\n  return `${protocol}://${str}${explicitPort}`\n}\n\nconst Reducers = {\n  ip4: reduceValue,\n  ip6: (str, content, i, parts) => (\n    parts.length === 1 && parts[0].protocol === 'ip6'\n      ? content\n      : `[${content}]`\n  ),\n  tcp: (str, content, i, parts, opts) => (\n    parts.some(p => ['http', 'https', 'ws', 'wss'].includes(p.protocol))\n      ? `${str}:${content}`\n      : tcpUri(str, content, parts, opts)\n  ),\n  udp: (str, content) => `udp://${str}:${content}`,\n  dnsaddr: reduceValue,\n  dns4: reduceValue,\n  dns6: reduceValue,\n  ipfs: (str, content) => `${str}/ipfs/${content}`,\n  p2p: (str, content) => `${str}/p2p/${content}`,\n  http: str => `http://${str}`,\n  https: str => `https://${str}`,\n  ws: str => `ws://${str}`,\n  wss: str => `wss://${str}`,\n  'p2p-websocket-star': str => `${str}/p2p-websocket-star`,\n  'p2p-webrtc-star': str => `${str}/p2p-webrtc-star`,\n  'p2p-webrtc-direct': str => `${str}/p2p-webrtc-direct`\n}\n\nmodule.exports = (multiaddr, opts) => {\n  const ma = new Multiaddr(multiaddr)\n  const parts = multiaddr.toString().split('/').slice(1)\n  return ma\n    .tuples()\n    .map(tuple => ({\n      protocol: parts.shift(),\n      content: tuple[1] ? parts.shift() : null\n    }))\n    .reduce((str, part, i, parts) => {\n      const reduce = Reducers[part.protocol]\n      if (!reduce) throw new Error(`Unsupported protocol ${part.protocol}`)\n      return reduce(str, part.content, i, parts, opts)\n    }, '')\n}\n","'use strict';\nconst isPlainObject = require('is-plain-obj');\n\nmodule.exports = (object, options = {}) => {\n\tif (!isPlainObject(object) && !Array.isArray(object)) {\n\t\tthrow new TypeError('Expected a plain object or array');\n\t}\n\n\tconst {deep} = options;\n\tconst seenInput = [];\n\tconst seenOutput = [];\n\n\tconst deepSortArray = array => {\n\t\tconst seenIndex = seenInput.indexOf(array);\n\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tconst result = [];\n\t\tseenInput.push(array);\n\t\tseenOutput.push(result);\n\n\t\tresult.push(...array.map(item => {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\treturn deepSortArray(item);\n\t\t\t}\n\n\t\t\tif (isPlainObject(item)) {\n\t\t\t\treturn sortKeys(item);\n\t\t\t}\n\n\t\t\treturn item;\n\t\t}));\n\n\t\treturn result;\n\t};\n\n\tconst sortKeys = object => {\n\t\tconst seenIndex = seenInput.indexOf(object);\n\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tconst result = {};\n\t\tconst keys = Object.keys(object).sort(options.compare);\n\n\t\tseenInput.push(object);\n\t\tseenOutput.push(result);\n\n\t\tfor (const key of keys) {\n\t\t\tconst value = object[key];\n\t\t\tlet newValue;\n\n\t\t\tif (deep && Array.isArray(value)) {\n\t\t\t\tnewValue = deepSortArray(value);\n\t\t\t} else {\n\t\t\t\tnewValue = deep && isPlainObject(value) ? sortKeys(value) : value;\n\t\t\t}\n\n\t\t\tObject.defineProperty(result, key, {\n\t\t\t\t...Object.getOwnPropertyDescriptor(object, key),\n\t\t\t\tvalue: newValue\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tif (Array.isArray(object)) {\n\t\treturn deep ? deepSortArray(object) : object.slice();\n\t}\n\n\treturn sortKeys(object);\n};\n","'use strict'\n\nconst { AbortController } = globalThis\n\n// @ts-expect-error no types\nconst retimer = require('retimer')\n\nclass TimeoutController extends AbortController {\n  /**\n   * @constructor\n   * @param {number} ms milliseconds\n   */\n  constructor (ms) {\n    super()\n    this._ms = ms\n    this._timer = retimer(() => this.abort(), ms)\n    // Patch for safari not supported extending built in classes\n    Object.setPrototypeOf(this, TimeoutController.prototype)\n  }\n\n  /**\n   * Aborts the controller and clears the timer\n   */\n  abort () {\n    this._timer.clear()\n    return super.abort()\n  }\n\n  /**\n   * Clears the timer\n   */\n  clear () {\n    this._timer.clear()\n  }\n\n  /**\n   * Resets the timer\n   */\n  reset () {\n    this._timer.clear()\n    this._timer = retimer(() => this.abort(), this._ms)\n  }\n}\n\nmodule.exports = {\n  TimeoutController\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);","const textDecoder = new TextDecoder();\nfunction decodeVarint(bytes, offset) {\n  let v = 0;\n  for (let shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n    const b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * 2 ** shift;\n    if (b < 128) {\n      break;\n    }\n  }\n  return [\n    v,\n    offset\n  ];\n}\nfunction decodeBytes(bytes, offset) {\n  let byteLen;\n  [byteLen, offset] = decodeVarint(bytes, offset);\n  const postOffset = offset + byteLen;\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n  return [\n    bytes.subarray(offset, postOffset),\n    postOffset\n  ];\n}\nfunction decodeKey(bytes, index) {\n  let wire;\n  [wire, index] = decodeVarint(bytes, index);\n  return [\n    wire & 7,\n    wire >> 3,\n    index\n  ];\n}\nfunction decodeLink(bytes) {\n  const link = {};\n  const l = bytes.length;\n  let index = 0;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Hash`);\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n      ;\n      [link.Hash, index] = decodeBytes(bytes, index);\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Name`);\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Tsize`);\n      }\n      ;\n      [link.Tsize, index] = decodeVarint(bytes, index);\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n  return link;\n}\nexport function decodeNode(bytes) {\n  const l = bytes.length;\n  let index = 0;\n  let links;\n  let linksBeforeData = false;\n  let data;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${ wireType }`);\n    }\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n      ;\n      [data, index] = decodeBytes(bytes, index);\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n  const node = {};\n  if (data) {\n    node.Data = data;\n  }\n  node.Links = links || [];\n  return node;\n}","const textEncoder = new TextEncoder();\nconst maxInt32 = 2 ** 32;\nconst maxUInt32 = 2 ** 31;\nfunction encodeLink(link, bytes) {\n  let i = bytes.length;\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative');\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding');\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1;\n    bytes[i] = 24;\n  }\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name);\n    i -= nameBytes.length;\n    bytes.set(nameBytes, i);\n    i = encodeVarint(bytes, i, nameBytes.length) - 1;\n    bytes[i] = 18;\n  }\n  if (link.Hash) {\n    i -= link.Hash.length;\n    bytes.set(link.Hash, i);\n    i = encodeVarint(bytes, i, link.Hash.length) - 1;\n    bytes[i] = 10;\n  }\n  return bytes.length - i;\n}\nexport function encodeNode(node) {\n  const size = sizeNode(node);\n  const bytes = new Uint8Array(size);\n  let i = size;\n  if (node.Data) {\n    i -= node.Data.length;\n    bytes.set(node.Data, i);\n    i = encodeVarint(bytes, i, node.Data.length) - 1;\n    bytes[i] = 10;\n  }\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i));\n      i -= size;\n      i = encodeVarint(bytes, i, size) - 1;\n      bytes[i] = 18;\n    }\n  }\n  return bytes;\n}\nfunction sizeLink(link) {\n  let n = 0;\n  if (link.Hash) {\n    const l = link.Hash.length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize);\n  }\n  return n;\n}\nfunction sizeNode(node) {\n  let n = 0;\n  if (node.Data) {\n    const l = node.Data.length;\n    n += 1 + l + sov(l);\n  }\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link);\n      n += 1 + l + sov(l);\n    }\n  }\n  return n;\n}\nfunction encodeVarint(bytes, offset, v) {\n  offset -= sov(v);\n  const base = offset;\n  while (v >= maxUInt32) {\n    bytes[offset++] = v & 127 | 128;\n    v /= 128;\n  }\n  while (v >= 128) {\n    bytes[offset++] = v & 127 | 128;\n    v >>>= 7;\n  }\n  bytes[offset] = v;\n  return base;\n}\nfunction sov(x) {\n  if (x % 2 === 0) {\n    x++;\n  }\n  return Math.floor((len64(x) + 6) / 7);\n}\nfunction len64(x) {\n  let n = 0;\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32);\n    n = 32;\n  }\n  if (x >= 1 << 16) {\n    x >>>= 16;\n    n += 16;\n  }\n  if (x >= 1 << 8) {\n    x >>>= 8;\n    n += 8;\n  }\n  return n + len8tab[x];\n}\nconst len8tab = [\n  0,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8\n];","import { CID } from 'multiformats/cid';\nconst pbNodeProperties = [\n  'Data',\n  'Links'\n];\nconst pbLinkProperties = [\n  'Hash',\n  'Name',\n  'Tsize'\n];\nconst textEncoder = new TextEncoder();\nfunction linkComparator(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  const abuf = a.Name ? textEncoder.encode(a.Name) : [];\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : [];\n  let x = abuf.length;\n  let y = bbuf.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i];\n      y = bbuf[i];\n      break;\n    }\n  }\n  return x < y ? -1 : y < x ? 1 : 0;\n}\nfunction hasOnlyProperties(node, properties) {\n  return !Object.keys(node).some(p => !properties.includes(p));\n}\nfunction asLink(link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link);\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n    return { Hash };\n  }\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbl = {};\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash);\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash);\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash);\n        }\n      }\n    } catch (e) {\n      throw new TypeError(`Invalid DAG-PB form: ${ e.message }`);\n    }\n    if (cid) {\n      pbl.Hash = cid;\n    }\n  }\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name;\n  }\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize;\n  }\n  return pbl;\n}\nexport function prepare(node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node };\n  }\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbn = {};\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data);\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data;\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  }\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink);\n      pbn.Links.sort(linkComparator);\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  } else {\n    pbn.Links = [];\n  }\n  return pbn;\n}\nexport function validate(node) {\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)');\n  }\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)');\n  }\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)');\n  }\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i];\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)');\n    }\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)');\n    }\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)');\n    }\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');\n    }\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)');\n    }\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');\n    }\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');\n    }\n  }\n}\nexport function createNode(data, links = []) {\n  return prepare({\n    Data: data,\n    Links: links\n  });\n}\nexport function createLink(name, size, cid) {\n  return asLink({\n    Hash: cid,\n    Name: name,\n    Tsize: size\n  });\n}","import { CID } from 'multiformats/cid';\nimport { decodeNode } from './pb-decode.js';\nimport { encodeNode } from './pb-encode.js';\nimport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n} from './util.js';\nexport const name = 'dag-pb';\nexport const code = 112;\nexport function encode(node) {\n  validate(node);\n  const pbn = {};\n  if (node.Links) {\n    pbn.Links = node.Links.map(l => {\n      const link = {};\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes;\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  if (node.Data) {\n    pbn.Data = node.Data;\n  }\n  return encodeNode(pbn);\n}\nexport function decode(bytes) {\n  const pbn = decodeNode(bytes);\n  const node = {};\n  if (pbn.Data) {\n    node.Data = pbn.Data;\n  }\n  if (pbn.Links) {\n    node.Links = pbn.Links.map(l => {\n      const link = {};\n      try {\n        link.Hash = CID.decode(l.Hash);\n      } catch (e) {\n      }\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID');\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  return node;\n}\nexport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n};","export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}","const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};","import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};","import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nexport function makeCborEncoders() {\n  const encoders = [];\n  encoders[Type.uint.major] = encodeUint;\n  encoders[Type.negint.major] = encodeNegint;\n  encoders[Type.bytes.major] = encodeBytes;\n  encoders[Type.string.major] = encodeString;\n  encoders[Type.array.major] = encodeArray;\n  encoders[Type.map.major] = encodeMap;\n  encoders[Type.tag.major] = encodeTag;\n  encoders[Type.float.major] = encodeFloat;\n  return encoders;\n}\nconst cborEncoders = makeCborEncoders();\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  buf.reset();\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};","import { Type } from '../token.js';\nimport { encodeCustom } from '../encode.js';\nimport { encodeErrPrefix } from '../common.js';\nimport {\n  asU8A,\n  fromString\n} from '../byte-utils.js';\nclass JSONEncoder extends Array {\n  constructor() {\n    super();\n    this.inRecursive = [];\n  }\n  prefix(buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1];\n    if (recurs) {\n      if (recurs.type === Type.array) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          buf.push([44]);\n        }\n      }\n      if (recurs.type === Type.map) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          if (recurs.elements % 2 === 1) {\n            buf.push([44]);\n          } else {\n            buf.push([58]);\n          }\n        }\n      }\n    }\n  }\n  [Type.uint.major](buf, token) {\n    this.prefix(buf);\n    const is = String(token.value);\n    const isa = [];\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n    }\n    buf.push(isa);\n  }\n  [Type.negint.major](buf, token) {\n    this[Type.uint.major](buf, token);\n  }\n  [Type.bytes.major](_buf, _token) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: Uint8Array`);\n  }\n  [Type.string.major](buf, token) {\n    this.prefix(buf);\n    const byts = fromString(JSON.stringify(token.value));\n    buf.push(byts.length > 32 ? asU8A(byts) : byts);\n  }\n  [Type.array.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.array,\n      elements: 0\n    });\n    buf.push([91]);\n  }\n  [Type.map.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.map,\n      elements: 0\n    });\n    buf.push([123]);\n  }\n  [Type.tag.major](_buf, _token) {\n  }\n  [Type.float.major](buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop();\n      if (recurs) {\n        if (recurs.type === Type.array) {\n          buf.push([93]);\n        } else if (recurs.type === Type.map) {\n          buf.push([125]);\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!');\n        }\n        return;\n      }\n      throw new Error('Unexpected break; this should not happen!');\n    }\n    if (token.value === undefined) {\n      throw new Error(`${ encodeErrPrefix } unsupported type: undefined`);\n    }\n    this.prefix(buf);\n    if (token.type.name === 'true') {\n      buf.push([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'false') {\n      buf.push([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'null') {\n      buf.push([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return;\n    }\n    const is = String(token.value);\n    const isa = [];\n    let dp = false;\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n        dp = true;\n      }\n    }\n    if (!dp) {\n      isa.push(46);\n      isa.push(48);\n    }\n    buf.push(isa);\n  }\n}\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${ encodeErrPrefix } complex map keys are not supported`);\n  }\n  const keyToken1 = e1[0];\n  const keyToken2 = e2[0];\n  if (keyToken1.type !== Type.string || keyToken2.type !== Type.string) {\n    throw new Error(`${ encodeErrPrefix } non-string map keys are not supported`);\n  }\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n  throw new Error(`${ encodeErrPrefix } unexpected duplicate map keys, this is not supported`);\n}\nconst defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter\n};\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, new JSONEncoder(), options);\n}\nexport {\n  encode\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}","class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n    this.byteValue = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};","import * as ErrorsImport from './errors.js';\nimport * as ShardImport from './shard.js';\nexport {\n  BaseDatastore\n} from './base.js';\nexport {\n  MemoryDatastore\n} from './memory.js';\nexport {\n  KeyTransformDatastore\n} from './keytransform.js';\nexport {\n  ShardingDatastore\n} from './sharding.js';\nexport {\n  MountDatastore\n} from './mount.js';\nexport {\n  TieredDatastore\n} from './tiered.js';\nexport {\n  NamespaceDatastore\n} from './namespace.js';\nexport const Errors = ErrorsImport;\nexport const shard = ShardImport;","import { WantListEntry as Entry } from './entry.js';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { Message } from '../message/message.js';\nimport trackedMap from 'libp2p/src/metrics/tracked-map.js';\nconst WantType = {\n  Block: Message.Wantlist.WantType.Block,\n  Have: Message.Wantlist.WantType.Have\n};\nconst sortBy = (fn, list) => {\n  return Array.prototype.slice.call(list, 0).sort((a, b) => {\n    const aa = fn(a);\n    const bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n};\nexport class Wantlist {\n  constructor(stats, libp2p) {\n    this.set = libp2p ? trackedMap({\n      system: 'ipfs',\n      component: 'bitswap',\n      metric: 'wantlist',\n      metrics: libp2p.metrics\n    }) : new Map();\n    this._stats = stats;\n  }\n  get length() {\n    return this.set.size;\n  }\n  add(cid, priority, wantType) {\n    const cidStr = cid.toString(base58btc);\n    const entry = this.set.get(cidStr);\n    if (entry) {\n      entry.inc();\n      entry.priority = priority;\n      if (entry.wantType === WantType.Have && wantType === WantType.Block) {\n        entry.wantType = wantType;\n      }\n    } else {\n      this.set.set(cidStr, new Entry(cid, priority, wantType));\n      if (this._stats) {\n        this._stats.push(null, 'wantListSize', 1);\n      }\n    }\n  }\n  remove(cid) {\n    const cidStr = cid.toString(base58btc);\n    const entry = this.set.get(cidStr);\n    if (!entry) {\n      return;\n    }\n    entry.dec();\n    if (entry.hasRefs()) {\n      return;\n    }\n    this.set.delete(cidStr);\n    if (this._stats) {\n      this._stats.push(null, 'wantListSize', -1);\n    }\n  }\n  removeForce(cidStr) {\n    if (this.set.has(cidStr)) {\n      this.set.delete(cidStr);\n    }\n  }\n  forEach(fn) {\n    return this.set.forEach(fn);\n  }\n  entries() {\n    return this.set.entries();\n  }\n  sortedEntries() {\n    return new Map(sortBy(o => o[1].key, Array.from(this.set.entries())));\n  }\n  contains(cid) {\n    const cidStr = cid.toString(base58btc);\n    return this.set.has(cidStr);\n  }\n  get(cid) {\n    const cidStr = cid.toString(base58btc);\n    return this.set.get(cidStr);\n  }\n}\nWantlist.Entry = Entry;","import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport map from 'it-map';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js';\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs';\nexport async function* normaliseCandidateMultiple(input, normaliseContent) {\n  if (typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || input._readableState) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield* [];\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n    }\n    if (value._readableState) {\n      yield* map(peekable, value => toFileObject({ content: value }, normaliseContent));\n      return;\n    }\n    if (isBytes(value)) {\n      yield toFileObject({ content: peekable }, normaliseContent);\n      return;\n    }\n    if (isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value) || isBlob(value)) {\n      yield* map(peekable, value => toFileObject(value, normaliseContent));\n      return;\n    }\n  }\n  if (isFileObject(input)) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}","export class TimeoutError extends Error {\n  constructor(message = 'request timed out') {\n    super(message);\n    this.name = 'TimeoutError';\n    this.code = TimeoutError.code;\n  }\n}\nTimeoutError.code = 'ERR_TIMEOUT';","import { TimeoutController } from 'timeout-abort-controller';\nimport { anySignal } from 'any-signal';\nimport parseDuration from 'parse-duration';\nimport { TimeoutError } from './errors.js';\nexport function withTimeoutOption(fn, optionsArgIndex) {\n  return (...args) => {\n    const options = args[optionsArgIndex == null ? args.length - 1 : optionsArgIndex];\n    if (!options || !options.timeout)\n      return fn(...args);\n    const timeout = typeof options.timeout === 'string' ? parseDuration(options.timeout) : options.timeout;\n    const controller = new TimeoutController(timeout);\n    options.signal = anySignal([\n      options.signal,\n      controller.signal\n    ]);\n    const fnRes = fn(...args);\n    const timeoutPromise = new Promise((_resolve, reject) => {\n      controller.signal.addEventListener('abort', () => {\n        reject(new TimeoutError());\n      });\n    });\n    const start = Date.now();\n    const maybeThrowTimeoutError = () => {\n      if (controller.signal.aborted) {\n        throw new TimeoutError();\n      }\n      const timeTaken = Date.now() - start;\n      if (timeTaken > timeout) {\n        controller.abort();\n        throw new TimeoutError();\n      }\n    };\n    if (fnRes[Symbol.asyncIterator]) {\n      return async function* () {\n        const it = fnRes[Symbol.asyncIterator]();\n        try {\n          while (true) {\n            const {value, done} = await Promise.race([\n              it.next(),\n              timeoutPromise\n            ]);\n            if (done) {\n              break;\n            }\n            maybeThrowTimeoutError();\n            yield value;\n          }\n        } catch (err) {\n          maybeThrowTimeoutError();\n          throw err;\n        } finally {\n          controller.clear();\n          if (it.return) {\n            it.return();\n          }\n        }\n      }();\n    }\n    return (async () => {\n      try {\n        const res = await Promise.race([\n          fnRes,\n          timeoutPromise\n        ]);\n        maybeThrowTimeoutError();\n        return res;\n      } catch (err) {\n        maybeThrowTimeoutError();\n        throw err;\n      } finally {\n        controller.clear();\n      }\n    })();\n  };\n}","import mortice from 'mortice';\nlet lock;\nexport function createLock(repoOwner = false) {\n  if (lock) {\n    return lock;\n  }\n  const mutex = mortice({ singleProcess: repoOwner });\n  lock = {\n    readLock: func => {\n      return async (...args) => {\n        const releaseLock = await mutex.readLock();\n        try {\n          return await func.apply(null, args);\n        } finally {\n          releaseLock();\n        }\n      };\n    },\n    writeLock: func => {\n      return async (...args) => {\n        const releaseLock = await mutex.writeLock();\n        try {\n          return await func.apply(null, args);\n        } finally {\n          releaseLock();\n        }\n      };\n    }\n  };\n  return lock;\n}","import { CID } from 'multiformats/cid';\nimport { UnixFS } from 'ipfs-unixfs';\nimport * as dagPB from '@ipld/dag-pb';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport debug from 'debug';\nimport errCode from 'err-code';\nimport { MFS_ROOT_KEY } from '../../../utils.js';\nconst log = debug('ipfs:mfs:utils:with-mfs-root');\nexport async function loadMfsRoot(context, options) {\n  if (options && options.signal && options.signal.aborted) {\n    throw errCode(new Error('Request aborted'), 'ERR_ABORTED', { name: 'Aborted' });\n  }\n  await context.repo.datastore.open();\n  let cid;\n  try {\n    const buf = await context.repo.datastore.get(MFS_ROOT_KEY);\n    cid = CID.decode(buf);\n  } catch (err) {\n    if (err.code !== 'ERR_NOT_FOUND') {\n      throw err;\n    }\n    log('Creating new MFS root');\n    const buf = dagPB.encode({\n      Data: new UnixFS({ type: 'directory' }).marshal(),\n      Links: []\n    });\n    const hash = await sha256.digest(buf);\n    cid = CID.createV0(hash);\n    await context.repo.blocks.put(cid, buf);\n    if (options && options.signal && options.signal.aborted) {\n      throw errCode(new Error('Request aborted'), 'ERR_ABORTED', { name: 'Aborted' });\n    }\n    await context.repo.datastore.put(MFS_ROOT_KEY, cid.bytes);\n  }\n  log(`Loaded MFS root /ipfs/${ cid }`);\n  return cid;\n}","import { CID } from 'multiformats';\nimport { base64 } from 'multiformats/bases/base64';\nimport {\n  Token,\n  Type\n} from 'cborg';\nimport * as cborgJson from 'cborg/json';\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const cidString = cid.toString();\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1),\n    new Token(Type.string, cidString, cidString.length),\n    new Token(Type.break, undefined, 1)\n  ];\n}\nfunction bytesEncoder(bytes) {\n  const bytesString = base64.encode(bytes).slice(1);\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1),\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, 'bytes', 5),\n    new Token(Type.string, bytesString, bytesString.length),\n    new Token(Type.break, undefined, 1),\n    new Token(Type.break, undefined, 1)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  typeEncoders: {\n    Object: cidEncoder,\n    Uint8Array: bytesEncoder,\n    Buffer: bytesEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nclass DagJsonTokenizer extends cborgJson.Tokenizer {\n  constructor(data, options) {\n    super(data, options);\n    this.tokenBuffer = [];\n  }\n  done() {\n    return this.tokenBuffer.length === 0 && super.done();\n  }\n  _next() {\n    if (this.tokenBuffer.length > 0) {\n      return this.tokenBuffer.pop();\n    }\n    return super.next();\n  }\n  next() {\n    const token = this._next();\n    if (token.type === Type.map) {\n      const keyToken = this._next();\n      if (keyToken.type === Type.string && keyToken.value === '/') {\n        const valueToken = this._next();\n        if (valueToken.type === Type.string) {\n          const breakToken = this._next();\n          if (breakToken.type !== Type.break) {\n            throw new Error('Invalid encoded CID form');\n          }\n          this.tokenBuffer.push(valueToken);\n          return new Token(Type.tag, 42, 0);\n        }\n        if (valueToken.type === Type.map) {\n          const innerKeyToken = this._next();\n          if (innerKeyToken.type === Type.string && innerKeyToken.value === 'bytes') {\n            const innerValueToken = this._next();\n            if (innerValueToken.type === Type.string) {\n              for (let i = 0; i < 2; i++) {\n                const breakToken = this._next();\n                if (breakToken.type !== Type.break) {\n                  throw new Error('Invalid encoded Bytes form');\n                }\n              }\n              const bytes = base64.decode(`m${ innerValueToken.value }`);\n              return new Token(Type.bytes, bytes, innerValueToken.value.length);\n            }\n            this.tokenBuffer.push(innerValueToken);\n          }\n          this.tokenBuffer.push(innerKeyToken);\n        }\n        this.tokenBuffer.push(valueToken);\n      }\n      this.tokenBuffer.push(keyToken);\n    }\n    return token;\n  }\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[42] = CID.parse;\nexport const name = 'dag-json';\nexport const code = 297;\nexport const encode = node => cborgJson.encode(node, encodeOptions);\nexport const decode = data => {\n  const options = Object.assign(decodeOptions, { tokenizer: new DagJsonTokenizer(data, decodeOptions) });\n  return cborgJson.decode(data, options);\n};","export class NotInitializedError extends Error {\n  constructor(message = 'not initialized') {\n    super(message);\n    this.name = 'NotInitializedError';\n    this.code = NotInitializedError.code;\n  }\n}\nNotInitializedError.code = 'ERR_NOT_INITIALIZED';\nexport class AlreadyInitializingError extends Error {\n  constructor(message = 'cannot initialize an initializing node') {\n    super(message);\n    this.name = 'AlreadyInitializingError';\n    this.code = AlreadyInitializedError.code;\n  }\n}\nAlreadyInitializingError.code = 'ERR_ALREADY_INITIALIZING';\nexport class AlreadyInitializedError extends Error {\n  constructor(message = 'cannot re-initialize an initialized node') {\n    super(message);\n    this.name = 'AlreadyInitializedError';\n    this.code = AlreadyInitializedError.code;\n  }\n}\nAlreadyInitializedError.code = 'ERR_ALREADY_INITIALIZED';\nexport class NotStartedError extends Error {\n  constructor(message = 'not started') {\n    super(message);\n    this.name = 'NotStartedError';\n    this.code = NotStartedError.code;\n  }\n}\nNotStartedError.code = 'ERR_NOT_STARTED';\nexport class AlreadyStartingError extends Error {\n  constructor(message = 'cannot start, already startin') {\n    super(message);\n    this.name = 'AlreadyStartingError';\n    this.code = AlreadyStartingError.code;\n  }\n}\nAlreadyStartingError.code = 'ERR_ALREADY_STARTING';\nexport class AlreadyStartedError extends Error {\n  constructor(message = 'cannot start, already started') {\n    super(message);\n    this.name = 'AlreadyStartedError';\n    this.code = AlreadyStartedError.code;\n  }\n}\nAlreadyStartedError.code = 'ERR_ALREADY_STARTED';\nexport class NotEnabledError extends Error {\n  constructor(message = 'not enabled') {\n    super(message);\n    this.name = 'NotEnabledError';\n    this.code = NotEnabledError.code;\n  }\n}\nNotEnabledError.code = 'ERR_NOT_ENABLED';","import {\n  NotStartedError,\n  AlreadyStartingError,\n  AlreadyStartedError\n} from '../errors.js';\nimport { withTimeout } from '../utils.js';\nexport class Service {\n  static create({start, stop}) {\n    return new Service(start, stop);\n  }\n  static async start(service, options) {\n    const {state, activate} = service;\n    switch (state.status) {\n    case 'stopped': {\n        try {\n          const promise = activate(options);\n          service.state = {\n            status: 'starting',\n            ready: promise\n          };\n          const result = await promise;\n          service.state = {\n            status: 'started',\n            value: result\n          };\n          return result;\n        } catch (error) {\n          service.state = { status: 'stopped' };\n          throw error;\n        }\n      }\n    case 'starting': {\n        throw new AlreadyStartingError();\n      }\n    case 'started': {\n        throw new AlreadyStartedError();\n      }\n    case 'stopping': {\n        await state.ready;\n        return await Service.start(service, options);\n      }\n    default: {\n        return Service.panic(service);\n      }\n    }\n  }\n  static async stop(service) {\n    const {state, deactivate} = service;\n    switch (state.status) {\n    case 'stopped': {\n        break;\n      }\n    case 'starting': {\n        try {\n          await state.ready;\n        } catch (_) {\n        }\n        return await Service.stop(service);\n      }\n    case 'stopping': {\n        return await state.ready;\n      }\n    case 'started': {\n        if (deactivate) {\n          await deactivate(state.value);\n        }\n        service.state = { status: 'stopped' };\n        break;\n      }\n    default: {\n        Service.panic(state);\n      }\n    }\n  }\n  static try({state}) {\n    switch (state.status) {\n    case 'started':\n      return state.value;\n    default:\n      return null;\n    }\n  }\n  static async use({state}, options) {\n    switch (state.status) {\n    case 'started':\n      return state.value;\n    case 'starting':\n      return await withTimeout(state.ready, options);\n    default:\n      throw new NotStartedError();\n    }\n  }\n  static panic({state}) {\n    const status = JSON.stringify({ status: state.status });\n    throw RangeError(`Service in invalid state ${ status }, should never happen if you see this please report a bug`);\n  }\n  constructor(activate, deactivate) {\n    this.activate = activate;\n    this.deactivate = deactivate;\n    this.state = { status: 'stopped' };\n  }\n  async use(options) {\n    return await Service.use(this, options);\n  }\n  try() {\n    return Service.try(this);\n  }\n}","import { TLRU } from './utils/tlru.js';\nimport PQueue from 'p-queue';\nimport HTTP from 'ipfs-utils/src/http.js';\nconst cache = new TLRU(1000);\nconst ttl = 60 * 1000;\nconst Queue = PQueue.default ? PQueue.default : PQueue;\nconst httpQueue = new Queue({ concurrency: 4 });\nconst ipfsPath = response => {\n  if (response.Path)\n    return response.Path;\n  throw new Error(response.Message);\n};\nexport async function resolveDnslink(fqdn, opts) {\n  const resolve = async (fqdn, opts = {}) => {\n    const searchParams = new URLSearchParams(opts);\n    searchParams.set('arg', fqdn);\n    const query = searchParams.toString();\n    if (!opts.nocache && cache.has(query)) {\n      const response = cache.get(query);\n      return ipfsPath(response);\n    }\n    const response = await httpQueue.add(async () => {\n      const res = await HTTP.get('https://ipfs.io/api/v0/dns', { searchParams });\n      const query = new URL(res.url).search.slice(1);\n      const json = await res.json();\n      cache.set(query, json, ttl);\n      return json;\n    });\n    return ipfsPath(response);\n  };\n  return resolve(fqdn, opts);\n}","import { resolveDnslink } from 'ipfs-core-config/dns';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nfunction fqdnFixups(domain) {\n  if (domain.endsWith('.eth')) {\n    domain = domain.replace(/.eth$/, '.eth.link');\n  }\n  return domain;\n}\nexport function createDns() {\n  const resolveDNS = async (domain, options = { recursive: true }) => {\n    if (typeof domain !== 'string') {\n      throw new Error('Invalid arguments, domain must be a string');\n    }\n    domain = fqdnFixups(domain);\n    return resolveDnslink(domain, options);\n  };\n  return withTimeoutOption(resolveDNS);\n}","import isIpfs from 'is-ipfs';\nimport { CID } from 'multiformats/cid';\nimport PeerId from 'peer-id';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { resolve as res } from '../utils.js';\nexport function createResolve({repo, codecs, bases, name}) {\n  async function resolve(path, opts = {}) {\n    if (!isIpfs.path(path)) {\n      throw new Error('invalid argument ' + path);\n    }\n    if (isIpfs.ipnsPath(path)) {\n      for await (const resolvedPath of name.resolve(path, opts)) {\n        path = resolvedPath;\n      }\n    }\n    const [, schema, hash, ...rest] = path.split('/');\n    const base = opts.cidBase ? await bases.getBase(opts.cidBase) : undefined;\n    const bytes = parseBytes(hash);\n    if (rest.length === 0) {\n      const str = base ? base.encoder.encode(bytes) : hash;\n      return `/${ schema }/${ str }`;\n    }\n    const cid = CID.decode(bytes);\n    path = rest.join('/');\n    const results = res(cid, path, codecs, repo, opts);\n    let value = cid;\n    let remainderPath = path;\n    for await (const result of results) {\n      if (CID.asCID(result.value)) {\n        value = result.value;\n        remainderPath = result.remainderPath;\n      }\n    }\n    return `/ipfs/${ value.toString(base && base.encoder) }${ remainderPath ? '/' + remainderPath : '' }`;\n  }\n  return withTimeoutOption(resolve);\n}\nfunction parseBytes(str) {\n  try {\n    return PeerId.parse(str).toBytes();\n  } catch {\n    return CID.parse(str).bytes;\n  }\n}","import errCode from 'err-code';\nimport { CID } from 'multiformats/cid';\nexport async function* normaliseInput(input) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n  }\n  const cid = CID.asCID(input);\n  if (cid) {\n    yield toPin({ cid });\n    return;\n  }\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input });\n    return;\n  }\n  if (input.cid != null || input.path != null) {\n    return yield toPin(input);\n  }\n  if (Symbol.iterator in input) {\n    const iterator = input[Symbol.iterator]();\n    const first = iterator.next();\n    if (first.done)\n      return iterator;\n    if (CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value });\n      for (const cid of iterator) {\n        yield toPin({ cid });\n      }\n      return;\n    }\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value);\n      for (const obj of iterator) {\n        yield toPin(obj);\n      }\n      return;\n    }\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (Symbol.asyncIterator in input) {\n    const iterator = input[Symbol.asyncIterator]();\n    const first = await iterator.next();\n    if (first.done)\n      return iterator;\n    if (CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value });\n      for await (const cid of iterator) {\n        yield toPin({ cid });\n      }\n      return;\n    }\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value);\n      for await (const obj of iterator) {\n        yield toPin(obj);\n      }\n      return;\n    }\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nfunction toPin(input) {\n  const path = input.cid || `${ input.path }`;\n  if (!path) {\n    throw errCode(new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT');\n  }\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  };\n  if (input.metadata != null) {\n    pin.metadata = input.metadata;\n  }\n  return pin;\n}","export const PinTypes = {\n  direct: 'direct',\n  recursive: 'recursive',\n  indirect: 'indirect',\n  all: 'all'\n};","import { normaliseInput } from 'ipfs-core-utils/pins/normalise-input';\nimport { resolvePath } from '../../utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport errCode from 'err-code';\nimport { PinTypes } from 'ipfs-repo/pin-types';\nfunction toPin(type, cid, metadata) {\n  const output = {\n    type,\n    cid\n  };\n  if (metadata) {\n    output.metadata = metadata;\n  }\n  return output;\n}\nexport function createLs({repo, codecs}) {\n  async function* ls(options = {}) {\n    let type = PinTypes.all;\n    if (options.type) {\n      type = options.type;\n      if (!Object.keys(PinTypes).includes(type)) {\n        throw errCode(new Error('Invalid pin type'), 'ERR_INVALID_PIN_TYPE');\n      }\n    }\n    if (options.paths) {\n      let matched = false;\n      for await (const {path} of normaliseInput(options.paths)) {\n        const {cid} = await resolvePath(repo, codecs, path);\n        const {reason, pinned, parent, metadata} = await repo.pins.isPinnedWithType(cid, type);\n        if (!pinned) {\n          throw errCode(new Error(`path '${ path }' is not pinned`), 'ERR_NOT_PINNED');\n        }\n        switch (reason) {\n        case PinTypes.direct:\n        case PinTypes.recursive:\n          matched = true;\n          yield toPin(reason, cid, metadata);\n          break;\n        default:\n          matched = true;\n          yield toPin(`${ PinTypes.indirect } through ${ parent }`, cid, metadata);\n        }\n      }\n      if (!matched) {\n        throw new Error('No match found');\n      }\n      return;\n    }\n    if (type === PinTypes.recursive || type === PinTypes.all) {\n      for await (const {cid, metadata} of repo.pins.recursiveKeys()) {\n        yield toPin(PinTypes.recursive, cid, metadata);\n      }\n    }\n    if (type === PinTypes.indirect || type === PinTypes.all) {\n      for await (const cid of repo.pins.indirectKeys(options)) {\n        yield toPin(PinTypes.indirect, cid);\n      }\n    }\n    if (type === PinTypes.direct || type === PinTypes.all) {\n      for await (const {cid, metadata} of repo.pins.directKeys()) {\n        yield toPin(PinTypes.direct, cid, metadata);\n      }\n    }\n  }\n  return withTimeoutOption(ls);\n}","import { createAdd } from './add.js';\nimport { createAddAll } from './add-all.js';\nimport { createLs } from './ls.js';\nimport { createRm } from './rm.js';\nimport { createRmAll } from './rm-all.js';\nexport class PinAPI {\n  constructor({codecs, repo}) {\n    const addAll = createAddAll({\n      codecs,\n      repo\n    });\n    this.addAll = addAll;\n    this.add = createAdd({ addAll });\n    const rmAll = createRmAll({\n      codecs,\n      repo\n    });\n    this.rmAll = rmAll;\n    this.rm = createRm({ rmAll });\n    this.ls = createLs({\n      codecs,\n      repo\n    });\n    this.remote = {\n      add: (cid, options = {}) => Promise.reject(new Error('Not implemented')),\n      ls: async function* (query, options = {}) {\n        return Promise.reject(new Error('Not implemented'));\n      },\n      rm: (query, options = {}) => Promise.reject(new Error('Not implemented')),\n      rmAll: (query, options = {}) => Promise.reject(new Error('Not implemented')),\n      service: {\n        add: (name, credentials) => Promise.reject(new Error('Not implemented')),\n        rm: (name, options = {}) => Promise.reject(new Error('Not implemented')),\n        ls: (options = {}) => Promise.reject(new Error('Not implemented'))\n      }\n    };\n  }\n}","import { resolvePath } from '../../utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input';\nimport { PinTypes } from 'ipfs-repo/pin-types';\nexport function createAddAll({repo, codecs}) {\n  async function* addAll(source, options = {}) {\n    const pinAdd = async function* () {\n      for await (const {path, recursive, metadata} of normaliseInput(source)) {\n        const {cid} = await resolvePath(repo, codecs, path);\n        const {reason} = await repo.pins.isPinnedWithType(cid, [\n          PinTypes.recursive,\n          PinTypes.direct\n        ]);\n        if (reason === 'recursive' && !recursive) {\n          throw new Error(`${ cid } already pinned recursively`);\n        }\n        if (recursive) {\n          await repo.pins.pinRecursively(cid, { metadata });\n        } else {\n          await repo.pins.pinDirectly(cid, { metadata });\n        }\n        yield cid;\n      }\n    };\n    const lock = Boolean(options.lock);\n    if (!lock) {\n      yield* pinAdd();\n      return;\n    }\n    const release = await repo.gcLock.readLock();\n    try {\n      yield* pinAdd();\n    } finally {\n      release();\n    }\n  }\n  return withTimeoutOption(addAll);\n}","import last from 'it-last';\nimport { CID } from 'multiformats/cid';\nexport function createAdd({addAll}) {\n  return (path, options = {}) => {\n    let iter;\n    const cid = CID.asCID(path);\n    if (cid) {\n      iter = addAll([{\n          cid,\n          ...options\n        }], options);\n    } else {\n      iter = addAll([{\n          path: path.toString(),\n          ...options\n        }], options);\n    }\n    return last(iter);\n  };\n}","import { normaliseInput } from 'ipfs-core-utils/pins/normalise-input';\nimport { resolvePath } from '../../utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { PinTypes } from 'ipfs-repo/pin-types';\nexport function createRmAll({repo, codecs}) {\n  async function* rmAll(source, _options = {}) {\n    const release = await repo.gcLock.readLock();\n    try {\n      for await (const {path, recursive} of normaliseInput(source)) {\n        const {cid} = await resolvePath(repo, codecs, path);\n        const {pinned, reason} = await repo.pins.isPinnedWithType(cid, PinTypes.all);\n        if (!pinned) {\n          throw new Error(`${ cid } is not pinned`);\n        }\n        switch (reason) {\n        case PinTypes.recursive:\n          if (!recursive) {\n            throw new Error(`${ cid } is pinned recursively`);\n          }\n          await repo.pins.unpin(cid);\n          yield cid;\n          break;\n        case PinTypes.direct:\n          await repo.pins.unpin(cid);\n          yield cid;\n          break;\n        default:\n          throw new Error(`${ cid } is pinned indirectly under ${ reason }`);\n        }\n      }\n    } finally {\n      release();\n    }\n  }\n  return withTimeoutOption(rmAll);\n}","import last from 'it-last';\nexport function createRm({rmAll}) {\n  async function rm(path, options = {}) {\n    const cid = await last(rmAll([{\n        path,\n        ...options\n      }], options));\n    if (!cid) {\n      throw new Error('CID expected');\n    }\n    return cid;\n  }\n  return rm;\n}","import NanoDate from 'timestamp-nano';\nimport { Key } from 'interface-datastore/key';\nimport crypto from 'libp2p-crypto';\nimport PeerId from 'peer-id';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { identity } from 'multiformats/hashes/identity';\nimport errCode from 'err-code';\nimport { base32upper } from 'multiformats/bases/base32';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport * as cborg from 'cborg';\nimport Long from 'long';\nimport debug from 'debug';\nimport { IpnsEntry as ipnsEntryProto } from './pb/ipns.js';\nimport { parseRFC3339 } from './utils.js';\nimport * as ERRORS from './errors.js';\nconst log = Object.assign(debug('jsipns'), { error: debug('jsipns:error') });\nconst ID_MULTIHASH_CODE = identity.code;\nconst IPNS_PREFIX = uint8ArrayFromString('/ipns/');\nexport const namespace = '/ipns/';\nexport const namespaceLength = namespace.length;\nexport const create = (privateKey, value, seq, lifetime) => {\n  const expirationDate = new NanoDate(Date.now() + Number(lifetime));\n  const validityType = ipnsEntryProto.ValidityType.EOL;\n  const [ms, ns] = lifetime.toString().split('.');\n  const lifetimeNs = BigInt(ms) * BigInt(100000) + BigInt(ns || 0);\n  return _create(privateKey, value, seq, validityType, expirationDate, lifetimeNs);\n};\nexport const createWithExpiration = (privateKey, value, seq, expiration) => {\n  const expirationDate = NanoDate.fromString(expiration);\n  const validityType = ipnsEntryProto.ValidityType.EOL;\n  const ttlMs = expirationDate.toDate().getTime() - Date.now();\n  const ttlNs = BigInt(ttlMs) * BigInt(100000) + BigInt(expirationDate.getNano());\n  return _create(privateKey, value, seq, validityType, expirationDate, ttlNs);\n};\nconst _create = async (privateKey, value, seq, validityType, expirationDate, ttl) => {\n  seq = BigInt(seq);\n  const isoValidity = uint8ArrayFromString(expirationDate.toString());\n  const signatureV1 = await sign(privateKey, value, validityType, isoValidity);\n  const data = createCborData(value, isoValidity, validityType, seq, ttl);\n  const sigData = ipnsEntryDataForV2Sig(data);\n  const signatureV2 = await privateKey.sign(sigData);\n  const entry = {\n    value,\n    signature: signatureV1,\n    validityType: validityType,\n    validity: isoValidity,\n    sequence: seq,\n    ttl,\n    signatureV2,\n    data\n  };\n  log(`ipns entry for ${ value } created`);\n  return entry;\n};\nconst createCborData = (value, validity, validityType, sequence, ttl) => {\n  const data = {\n    Value: value,\n    Validity: validity,\n    ValidityType: validityType,\n    Sequence: sequence,\n    TTL: ttl\n  };\n  return cborg.encode(data);\n};\nexport const validate = async (publicKey, entry) => {\n  const {value, validityType, validity} = entry;\n  let dataForSignature;\n  let signature;\n  if (entry.signatureV2 && entry.data) {\n    signature = entry.signatureV2;\n    dataForSignature = ipnsEntryDataForV2Sig(entry.data);\n    validateCborDataMatchesPbData(entry);\n  } else {\n    signature = entry.signature;\n    dataForSignature = ipnsEntryDataForV1Sig(value, validityType, validity);\n  }\n  let isValid;\n  try {\n    isValid = await publicKey.verify(dataForSignature, signature);\n  } catch (err) {\n    isValid = false;\n  }\n  if (!isValid) {\n    log.error('record signature verification failed');\n    throw errCode(new Error('record signature verification failed'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (validityType === ipnsEntryProto.ValidityType.EOL) {\n    let validityDate;\n    try {\n      validityDate = parseRFC3339(uint8ArrayToString(validity));\n    } catch (e) {\n      log.error('unrecognized validity format (not an rfc3339 format)');\n      throw errCode(new Error('unrecognized validity format (not an rfc3339 format)'), ERRORS.ERR_UNRECOGNIZED_FORMAT);\n    }\n    if (validityDate.getTime() < Date.now()) {\n      log.error('record has expired');\n      throw errCode(new Error('record has expired'), ERRORS.ERR_IPNS_EXPIRED_RECORD);\n    }\n  } else if (validityType) {\n    log.error('unrecognized validity type');\n    throw errCode(new Error('unrecognized validity type'), ERRORS.ERR_UNRECOGNIZED_VALIDITY);\n  }\n  log(`ipns entry for ${ value } is valid`);\n};\nconst validateCborDataMatchesPbData = entry => {\n  if (!entry.data) {\n    throw errCode(new Error('Record data is missing'), ERRORS.ERR_INVALID_RECORD_DATA);\n  }\n  const data = cborg.decode(entry.data);\n  if (Number.isInteger(data.Sequence)) {\n    data.Sequence = BigInt(data.Sequence);\n  }\n  if (Number.isInteger(data.TTL)) {\n    data.TTL = BigInt(data.TTL);\n  }\n  if (!uint8ArrayEquals(data.Value, entry.value)) {\n    throw errCode(new Error('Field \"value\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (!uint8ArrayEquals(data.Validity, entry.validity)) {\n    throw errCode(new Error('Field \"validity\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (data.ValidityType !== entry.validityType) {\n    throw errCode(new Error('Field \"validityType\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (data.Sequence !== entry.sequence) {\n    throw errCode(new Error('Field \"sequence\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (data.TTL !== entry.ttl) {\n    throw errCode(new Error('Field \"ttl\" did not match between protobuf and CBOR'), ERRORS.ERR_SIGNATURE_VERIFICATION);\n  }\n};\nexport const embedPublicKey = async (publicKey, entry) => {\n  if (!publicKey || !publicKey.bytes || !entry) {\n    const error = new Error('one or more of the provided parameters are not defined');\n    log.error(error);\n    throw errCode(error, ERRORS.ERR_UNDEFINED_PARAMETER);\n  }\n  let peerId;\n  try {\n    peerId = await PeerId.createFromPubKey(publicKey.bytes);\n  } catch (err) {\n    throw errCode(err, ERRORS.ERR_PEER_ID_FROM_PUBLIC_KEY);\n  }\n  let extractedPublicKey;\n  try {\n    extractedPublicKey = extractPublicKeyFromId(peerId);\n  } catch (err) {\n    log.error(err);\n    throw errCode(err, ERRORS.ERR_PUBLIC_KEY_FROM_ID);\n  }\n  if (extractedPublicKey) {\n    return null;\n  }\n  try {\n    entry.pubKey = crypto.keys.marshalPublicKey(publicKey);\n  } catch (err) {\n    log.error(err);\n    throw err;\n  }\n  return entry;\n};\nexport const extractPublicKey = async (peerId, entry) => {\n  if (!entry || !peerId) {\n    const error = new Error('one or more of the provided parameters are not defined');\n    log.error(error);\n    throw errCode(error, ERRORS.ERR_UNDEFINED_PARAMETER);\n  }\n  let pubKey;\n  if (entry.pubKey) {\n    try {\n      pubKey = crypto.keys.unmarshalPublicKey(entry.pubKey);\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n    const otherId = await PeerId.createFromPubKey(entry.pubKey);\n    if (!otherId.equals(peerId)) {\n      throw errCode(new Error('Embedded public key did not match PeerID'), ERRORS.ERR_INVALID_EMBEDDED_KEY);\n    }\n  } else if (peerId.pubKey) {\n    pubKey = peerId.pubKey;\n  }\n  if (pubKey) {\n    return pubKey;\n  }\n  throw errCode(new Error('no public key is available'), ERRORS.ERR_UNDEFINED_PARAMETER);\n};\nconst rawStdEncoding = key => base32upper.encode(key).slice(1);\nexport const getLocalKey = key => new Key(`/ipns/${ rawStdEncoding(key) }`);\nexport const getIdKeys = pid => {\n  const pkBuffer = uint8ArrayFromString('/pk/');\n  const ipnsBuffer = uint8ArrayFromString('/ipns/');\n  return {\n    routingPubKey: new Key(uint8ArrayConcat([\n      pkBuffer,\n      pid\n    ]), false),\n    pkKey: new Key(rawStdEncoding(uint8ArrayConcat([\n      pkBuffer,\n      pid\n    ]))),\n    routingKey: new Key(uint8ArrayConcat([\n      ipnsBuffer,\n      pid\n    ]), false),\n    ipnsKey: new Key(rawStdEncoding(uint8ArrayConcat([\n      ipnsBuffer,\n      pid\n    ])))\n  };\n};\nconst sign = (privateKey, value, validityType, validity) => {\n  try {\n    const dataForSignature = ipnsEntryDataForV1Sig(value, validityType, validity);\n    return privateKey.sign(dataForSignature);\n  } catch (error) {\n    log.error('record signature creation failed');\n    throw errCode(new Error('record signature creation failed: ' + error.message), ERRORS.ERR_SIGNATURE_CREATION);\n  }\n};\nconst getValidityType = validityType => {\n  if (validityType.toString() === '0') {\n    return 'EOL';\n  }\n  const error = new Error(`unrecognized validity type ${ validityType.toString() }`);\n  log.error(error);\n  throw errCode(error, ERRORS.ERR_UNRECOGNIZED_VALIDITY);\n};\nconst ipnsEntryDataForV1Sig = (value, validityType, validity) => {\n  const validityTypeBuffer = uint8ArrayFromString(getValidityType(validityType));\n  return uint8ArrayConcat([\n    value,\n    validity,\n    validityTypeBuffer\n  ]);\n};\nconst ipnsEntryDataForV2Sig = data => {\n  const entryData = uint8ArrayFromString('ipns-signature:');\n  return uint8ArrayConcat([\n    entryData,\n    data\n  ]);\n};\nconst extractPublicKeyFromId = peerId => {\n  const digest = Digest.decode(peerId.id);\n  if (digest.code !== ID_MULTIHASH_CODE) {\n    return null;\n  }\n  return crypto.keys.unmarshalPublicKey(digest.digest);\n};\nexport const marshal = obj => {\n  return ipnsEntryProto.encode({\n    ...obj,\n    sequence: Long.fromString(obj.sequence.toString()),\n    ttl: obj.ttl == null ? undefined : Long.fromString(obj.ttl.toString())\n  }).finish();\n};\nexport const unmarshal = buf => {\n  const message = ipnsEntryProto.decode(buf);\n  const object = ipnsEntryProto.toObject(message, {\n    defaults: false,\n    arrays: true,\n    objects: false\n  });\n  return {\n    value: object.value,\n    signature: object.signature,\n    validityType: object.validityType,\n    validity: object.validity,\n    sequence: Object.hasOwnProperty.call(object, 'sequence') ? BigInt(`${ object.sequence }`) : 0,\n    pubKey: object.pubKey,\n    ttl: Object.hasOwnProperty.call(object, 'ttl') ? BigInt(`${ object.ttl }`) : undefined,\n    signatureV2: object.signatureV2,\n    data: object.data\n  };\n};\nexport const validator = {\n  validate: async (marshalledData, key) => {\n    const receivedEntry = unmarshal(marshalledData);\n    const bufferId = key.slice(IPNS_PREFIX.length);\n    const peerId = PeerId.createFromBytes(bufferId);\n    const pubKey = await extractPublicKey(peerId, receivedEntry);\n    await validate(pubKey, receivedEntry);\n  },\n  select: (dataA, dataB) => {\n    const entryA = unmarshal(dataA);\n    const entryB = unmarshal(dataB);\n    if (entryA.signatureV2 && !entryB.signatureV2) {\n      return 0;\n    } else if (entryB.signatureV2 && !entryA.signatureV2) {\n      return 1;\n    }\n    if (entryA.sequence > entryB.sequence) {\n      return 0;\n    } else if (entryA.sequence < entryB.sequence) {\n      return 1;\n    }\n    const entryAValidityDate = parseRFC3339(uint8ArrayToString(entryA.validity));\n    const entryBValidityDate = parseRFC3339(uint8ArrayToString(entryB.validity));\n    return entryBValidityDate.getTime() > entryAValidityDate.getTime() ? 1 : 0;\n  }\n};","import PeerId from 'peer-id';\nimport { Key } from 'interface-datastore/key';\nimport { notFoundError } from 'datastore-core/errors';\nimport errcode from 'err-code';\nimport debug from 'debug';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport * as ipns from 'ipns';\nconst log = Object.assign(debug('ipfs:ipns:publisher'), { error: debug('ipfs:ipns:publisher:error') });\nconst ERR_NOT_FOUND = notFoundError().code;\nconst defaultRecordLifetime = 60 * 60 * 1000;\nexport class IpnsPublisher {\n  constructor(routing, datastore) {\n    this._routing = routing;\n    this._datastore = datastore;\n  }\n  async publishWithEOL(privKey, value, lifetime) {\n    if (!privKey || !privKey.bytes) {\n      throw errcode(new Error('invalid private key'), 'ERR_INVALID_PRIVATE_KEY');\n    }\n    const peerId = await PeerId.createFromPrivKey(privKey.bytes);\n    const record = await this._updateOrCreateRecord(privKey, value, lifetime, peerId);\n    return this._putRecordToRouting(record, peerId);\n  }\n  publish(privKey, value) {\n    return this.publishWithEOL(privKey, value, defaultRecordLifetime);\n  }\n  async _putRecordToRouting(record, peerId) {\n    if (!PeerId.isPeerId(peerId)) {\n      const errMsg = 'peerId received is not valid';\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_INVALID_PEER_ID');\n    }\n    const publicKey = peerId.pubKey;\n    const embedPublicKeyRecord = await ipns.embedPublicKey(publicKey, record);\n    const keys = ipns.getIdKeys(peerId.toBytes());\n    await this._publishEntry(keys.routingKey, embedPublicKeyRecord || record);\n    return embedPublicKeyRecord || record;\n  }\n  async _publishEntry(key, entry) {\n    const k = Key.asKey(key);\n    if (!k) {\n      const errMsg = 'datastore key does not have a valid format';\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_INVALID_DATASTORE_KEY');\n    }\n    let entryData;\n    try {\n      entryData = ipns.marshal(entry);\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n    try {\n      const res = await this._routing.put(k.uint8Array(), entryData);\n      log(`ipns record for ${ uint8ArrayToString(k.uint8Array(), 'base32') } was stored in the routing`);\n      return res;\n    } catch (err) {\n      const errMsg = `ipns record for ${ uint8ArrayToString(k.uint8Array(), 'base32') } could not be stored in the routing - ${ err.stack }`;\n      log.error(errMsg);\n      log.error(err);\n      throw errcode(new Error(errMsg), 'ERR_PUTTING_TO_ROUTING');\n    }\n  }\n  async _getPublished(peerId, options = {}) {\n    if (!PeerId.isPeerId(peerId)) {\n      const errMsg = 'peerId received is not valid';\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_INVALID_PEER_ID');\n    }\n    const checkRouting = options.checkRouting !== false;\n    try {\n      const dsVal = await this._datastore.get(ipns.getLocalKey(peerId.id));\n      return this._unmarshalData(dsVal);\n    } catch (err) {\n      if (err.code !== ERR_NOT_FOUND) {\n        const errMsg = `unexpected error getting the ipns record ${ peerId.id } from datastore`;\n        log.error(errMsg);\n        throw errcode(new Error(errMsg), 'ERR_UNEXPECTED_DATASTORE_RESPONSE');\n      }\n      if (!checkRouting) {\n        throw errcode(err, 'ERR_NOT_FOUND_AND_CHECK_ROUTING_NOT_ENABLED');\n      }\n      try {\n        const keys = ipns.getIdKeys(peerId.toBytes());\n        const res = await this._routing.get(keys.routingKey.uint8Array());\n        return this._unmarshalData(res);\n      } catch (err) {\n        log.error(err);\n        throw err;\n      }\n    }\n  }\n  _unmarshalData(data) {\n    try {\n      return ipns.unmarshal(data);\n    } catch (err) {\n      throw errcode(err, 'ERR_INVALID_RECORD_DATA');\n    }\n  }\n  async _updateOrCreateRecord(privKey, value, lifetime, peerId) {\n    if (!PeerId.isPeerId(peerId)) {\n      const errMsg = 'peerId received is not valid';\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_INVALID_PEER_ID');\n    }\n    const getPublishedOptions = { checkRouting: true };\n    let record;\n    try {\n      record = await this._getPublished(peerId, getPublishedOptions);\n    } catch (err) {\n      if (err.code !== ERR_NOT_FOUND) {\n        const errMsg = `unexpected error when determining the last published IPNS record for ${ peerId.id } ${ err.stack }`;\n        log.error(errMsg);\n        throw errcode(new Error(errMsg), 'ERR_DETERMINING_PUBLISHED_RECORD');\n      }\n    }\n    let seqNumber = 0;\n    if (record && record.sequence !== undefined) {\n      seqNumber = !uint8ArrayEquals(record.value, value) ? BigInt(record.sequence) + BigInt(1) : BigInt(record.sequence);\n    }\n    let entryData;\n    try {\n      entryData = await ipns.create(privKey, value, seqNumber, lifetime);\n    } catch (err) {\n      const errMsg = `ipns record for ${ value } could not be created`;\n      log.error(err);\n      throw errcode(new Error(errMsg), 'ERR_CREATING_IPNS_RECORD');\n    }\n    try {\n      const data = ipns.marshal(entryData);\n      await this._datastore.put(ipns.getLocalKey(peerId.id), data);\n      log(`ipns record for ${ uint8ArrayToString(value, 'base32') } was stored in the datastore`);\n      return entryData;\n    } catch (err) {\n      const errMsg = `ipns record for ${ value } could not be stored in the datastore`;\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_STORING_IN_DATASTORE');\n    }\n  }\n}\nIpnsPublisher.defaultRecordLifetime = defaultRecordLifetime;","import * as ipns from 'ipns';\nimport crypto from 'libp2p-crypto';\nimport PeerId from 'peer-id';\nimport errcode from 'err-code';\nimport debug from 'debug';\nconst log = Object.assign(debug('ipfs:ipns:republisher'), { error: debug('ipfs:ipns:republisher:error') });\nconst minute = 60 * 1000;\nconst hour = 60 * minute;\nconst defaultBroadcastInterval = 4 * hour;\nconst defaultRecordLifetime = 24 * hour;\nexport class IpnsRepublisher {\n  constructor(publisher, datastore, peerId, keychain, options = { pass: '' }) {\n    this._publisher = publisher;\n    this._datastore = datastore;\n    this._peerId = peerId;\n    this._keychain = keychain;\n    this._options = options;\n    this._republishHandle = null;\n  }\n  async start() {\n    if (this._republishHandle) {\n      throw errcode(new Error('republisher is already running'), 'ERR_REPUBLISH_ALREADY_RUNNING');\n    }\n    const republishHandle = {\n      _task: null,\n      _inflightTask: null,\n      _timeoutId: null,\n      runPeriodically: period => {\n        republishHandle._timeoutId = setTimeout(async () => {\n          republishHandle._timeoutId = null;\n          try {\n            republishHandle._inflightTask = republishHandle._task();\n            await republishHandle._inflightTask;\n            if (republishHandle._task) {\n              republishHandle.runPeriodically(period);\n            }\n          } catch (err) {\n            log.error(err);\n          }\n        }, period());\n      },\n      cancel: async () => {\n        if (republishHandle._timeoutId != null) {\n          clearTimeout(republishHandle._timeoutId);\n        }\n        republishHandle._task = null;\n        await republishHandle._inflightTask;\n      }\n    };\n    const {privKey} = this._peerId;\n    const {pass} = this._options;\n    let firstRun = true;\n    republishHandle._task = () => this._republishEntries(privKey, pass);\n    republishHandle.runPeriodically(() => {\n      if (firstRun) {\n        firstRun = false;\n        return this._options.initialBroadcastInterval || minute;\n      }\n      return this._options.broadcastInterval || defaultBroadcastInterval;\n    });\n    this._republishHandle = republishHandle;\n  }\n  async stop() {\n    const republishHandle = this._republishHandle;\n    if (!republishHandle) {\n      throw errcode(new Error('republisher is not running'), 'ERR_REPUBLISH_NOT_RUNNING');\n    }\n    this._republishHandle = null;\n    await republishHandle.cancel();\n  }\n  async _republishEntries(privateKey, pass) {\n    try {\n      await this._republishEntry(privateKey);\n    } catch (err) {\n      const errMsg = 'cannot republish entry for the node\\'s private key';\n      log.error(errMsg);\n      return;\n    }\n    if (pass) {\n      try {\n        const keys = await this._keychain.listKeys();\n        for (const key of keys) {\n          if (key.name === 'self') {\n            continue;\n          }\n          const pem = await this._keychain.exportKey(key.name, pass);\n          const privKey = await crypto.keys.import(pem, pass);\n          await this._republishEntry(privKey);\n        }\n      } catch (err) {\n        log.error(err);\n      }\n    }\n  }\n  async _republishEntry(privateKey) {\n    if (!privateKey || !privateKey.bytes) {\n      throw errcode(new Error('invalid private key'), 'ERR_INVALID_PRIVATE_KEY');\n    }\n    try {\n      const peerId = await PeerId.createFromPrivKey(privateKey.bytes);\n      const value = await this._getPreviousValue(peerId);\n      await this._publisher.publishWithEOL(privateKey, value, defaultRecordLifetime);\n    } catch (err) {\n      if (err.code === 'ERR_NO_ENTRY_FOUND') {\n        return;\n      }\n      throw err;\n    }\n  }\n  async _getPreviousValue(peerId) {\n    if (!PeerId.isPeerId(peerId)) {\n      throw errcode(new Error('invalid peer ID'), 'ERR_INVALID_PEER_ID');\n    }\n    try {\n      const dsVal = await this._datastore.get(ipns.getLocalKey(peerId.id));\n      if (!(dsVal instanceof Uint8Array)) {\n        throw errcode(new Error('found ipns record that we couldn\\'t process'), 'ERR_INVALID_IPNS_RECORD');\n      }\n      try {\n        const record = ipns.unmarshal(dsVal);\n        return record.value;\n      } catch (err) {\n        log.error(err);\n        throw errcode(new Error('found ipns record that we couldn\\'t convert to a value'), 'ERR_INVALID_IPNS_RECORD');\n      }\n    } catch (err) {\n      if (err && err.notFound) {\n        throw errcode(new Error(`no previous entry for record with id: ${ peerId.id }`), 'ERR_NO_ENTRY_FOUND');\n      }\n      throw err;\n    }\n  }\n}","import * as ipns from 'ipns';\nimport PeerId from 'peer-id';\nimport errcode from 'err-code';\nimport debug from 'debug';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport * as Errors from 'datastore-core/errors';\nconst log = Object.assign(debug('ipfs:ipns:resolver'), { error: debug('ipfs:ipns:resolver:error') });\nconst ERR_NOT_FOUND = Errors.notFoundError().code;\nconst defaultMaximumRecursiveDepth = 32;\nexport class IpnsResolver {\n  constructor(routing) {\n    this._routing = routing;\n  }\n  async resolve(name, options = {}) {\n    if (typeof name !== 'string') {\n      throw errcode(new Error('invalid name'), 'ERR_INVALID_NAME');\n    }\n    const recursive = options.recursive && options.recursive.toString() === 'true';\n    const nameSegments = name.split('/');\n    if (nameSegments.length !== 3 || nameSegments[0] !== '') {\n      throw errcode(new Error('invalid name'), 'ERR_INVALID_NAME');\n    }\n    const key = nameSegments[2];\n    let depth = Infinity;\n    if (recursive) {\n      depth = defaultMaximumRecursiveDepth;\n    }\n    const res = await this.resolver(key, depth);\n    log(`${ name } was locally resolved correctly`);\n    return res;\n  }\n  async resolver(name, depth) {\n    if (depth === 0) {\n      const errMsg = `could not resolve name (recursion limit of ${ defaultMaximumRecursiveDepth } exceeded)`;\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_RESOLVE_RECURSION_LIMIT');\n    }\n    const res = await this._resolveName(name);\n    const nameSegments = res.split('/');\n    if (nameSegments[1] === 'ipfs' || !depth) {\n      return res;\n    }\n    return this.resolver(nameSegments[2], depth - 1);\n  }\n  async _resolveName(name) {\n    const peerId = PeerId.parse(name);\n    const {routingKey} = ipns.getIdKeys(peerId.toBytes());\n    let record;\n    try {\n      record = await this._routing.get(routingKey.uint8Array());\n    } catch (err) {\n      log.error('could not get record from routing', err);\n      if (err.code === ERR_NOT_FOUND) {\n        throw errcode(new Error(`record requested for ${ name } was not found in the network`), 'ERR_NO_RECORD_FOUND');\n      }\n      throw errcode(new Error(`unexpected error getting the ipns record ${ peerId.toString() }`), 'ERR_UNEXPECTED_ERROR_GETTING_RECORD');\n    }\n    let ipnsEntry;\n    try {\n      ipnsEntry = ipns.unmarshal(record);\n    } catch (err) {\n      log.error('could not unmarshal record', err);\n      throw errcode(new Error('found ipns record that we couldn\\'t convert to a value'), 'ERR_INVALID_RECORD_RECEIVED');\n    }\n    return this._validateRecord(peerId, ipnsEntry);\n  }\n  async _validateRecord(peerId, ipnsEntry) {\n    const pubKey = await ipns.extractPublicKey(peerId, ipnsEntry);\n    await ipns.validate(pubKey, ipnsEntry);\n    return uint8ArrayToString(ipnsEntry.value);\n  }\n}","import hashlru from 'hashlru';\nexport class TLRU {\n  constructor(maxSize) {\n    this.lru = hashlru(maxSize);\n  }\n  get(key) {\n    const value = this.lru.get(key);\n    if (value) {\n      if (value.expire && value.expire < Date.now()) {\n        this.lru.remove(key);\n        return undefined;\n      }\n      return value.value;\n    }\n    return undefined;\n  }\n  set(key, value, ttl) {\n    this.lru.set(key, {\n      value,\n      expire: Date.now() + ttl\n    });\n  }\n  has(key) {\n    const value = this.get(key);\n    if (value) {\n      return true;\n    }\n    return false;\n  }\n  remove(key) {\n    this.lru.remove(key);\n  }\n  clear() {\n    this.lru.clear();\n  }\n}","import { createFromPrivKey } from 'peer-id';\nimport errcode from 'err-code';\nimport debug from 'debug';\nimport { IpnsPublisher } from './publisher.js';\nimport { IpnsRepublisher } from './republisher.js';\nimport { IpnsResolver } from './resolver.js';\nimport { TLRU } from '../utils/tlru.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nconst log = Object.assign(debug('ipfs:ipns'), { error: debug('ipfs:ipns:error') });\nconst defaultRecordTtl = 60 * 1000;\nexport class IPNS {\n  constructor(routing, datastore, peerId, keychain, options) {\n    this.publisher = new IpnsPublisher(routing, datastore);\n    this.republisher = new IpnsRepublisher(this.publisher, datastore, peerId, keychain, options);\n    this.resolver = new IpnsResolver(routing);\n    this.cache = new TLRU(1000);\n    this.routing = routing;\n  }\n  async publish(privKey, value, lifetime = IpnsPublisher.defaultRecordLifetime) {\n    try {\n      const peerId = await createFromPrivKey(privKey.bytes);\n      await this.publisher.publishWithEOL(privKey, value, lifetime);\n      log(`IPNS value ${ uint8ArrayToString(value, 'base32') } was published correctly`);\n      const id = peerId.toB58String();\n      const ttEol = parseFloat(lifetime);\n      const ttl = ttEol < defaultRecordTtl ? ttEol : defaultRecordTtl;\n      this.cache.set(id, value, ttl);\n      log(`IPNS value ${ uint8ArrayToString(value, 'base32') } was cached correctly`);\n      return {\n        name: id,\n        value: value\n      };\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n  }\n  async resolve(name, options = {}) {\n    if (typeof name !== 'string') {\n      throw errcode(new Error('name received is not valid'), 'ERR_INVALID_NAME');\n    }\n    if (!options.nocache && !options.recursive) {\n      const id = name.split('/')[2];\n      const result = this.cache.get(id);\n      if (result) {\n        return result;\n      }\n    }\n    try {\n      const result = await this.resolver.resolve(name, options);\n      log(`IPNS record from ${ name } was resolved correctly`);\n      return result;\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n  }\n  async initializeKeyspace(privKey, value) {\n    return this.publish(privKey, value, IpnsPublisher.defaultRecordLifetime);\n  }\n}","import errcode from 'err-code';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nconst namespace = '/record/';\nexport function encodeBase32(buf) {\n  return uint8ArrayToString(buf, 'base32');\n}\nexport function keyToTopic(key) {\n  if (typeof key === 'string' || key instanceof String) {\n    key = uint8ArrayFromString(key.toString());\n  }\n  const b64url = uint8ArrayToString(key, 'base64url');\n  return `${ namespace }${ b64url }`;\n}\nexport function topicToKey(topic) {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE');\n  }\n  const key = topic.substring(namespace.length);\n  return uint8ArrayFromString(key, 'base64url');\n}","import { Key } from 'interface-datastore';\nimport { BaseDatastore } from 'datastore-core';\nimport {\n  encodeBase32,\n  keyToTopic,\n  topicToKey\n} from './utils.js';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport errcode from 'err-code';\nimport debug from 'debug';\nconst log = Object.assign(debug('datastore-pubsub:publisher'), { error: debug('datastore-pubsub:publisher:error') });\nexport class PubsubDatastore extends BaseDatastore {\n  constructor(pubsub, datastore, peerId, validator, subscriptionKeyFn) {\n    super();\n    if (!validator) {\n      throw errcode(new TypeError('missing validator'), 'ERR_INVALID_PARAMETERS');\n    }\n    if (typeof validator.validate !== 'function') {\n      throw errcode(new TypeError('missing validate function'), 'ERR_INVALID_PARAMETERS');\n    }\n    if (typeof validator.select !== 'function') {\n      throw errcode(new TypeError('missing select function'), 'ERR_INVALID_PARAMETERS');\n    }\n    if (subscriptionKeyFn && typeof subscriptionKeyFn !== 'function') {\n      throw errcode(new TypeError('invalid subscriptionKeyFn received'), 'ERR_INVALID_PARAMETERS');\n    }\n    this._pubsub = pubsub;\n    this._datastore = datastore;\n    this._peerId = peerId;\n    this._validator = validator;\n    this._handleSubscriptionKeyFn = subscriptionKeyFn;\n    this._onMessage = this._onMessage.bind(this);\n  }\n  async put(key, val) {\n    if (!(key instanceof Uint8Array)) {\n      const errMsg = 'datastore key does not have a valid format';\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_INVALID_DATASTORE_KEY');\n    }\n    if (!(val instanceof Uint8Array)) {\n      const errMsg = 'received value is not a Uint8Array';\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_INVALID_VALUE_RECEIVED');\n    }\n    const stringifiedTopic = keyToTopic(key);\n    log(`publish value for topic ${ stringifiedTopic }`);\n    await this._pubsub.publish(stringifiedTopic, val);\n  }\n  async get(key) {\n    if (!(key instanceof Uint8Array)) {\n      const errMsg = 'datastore key does not have a valid format';\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_INVALID_DATASTORE_KEY');\n    }\n    const stringifiedTopic = keyToTopic(key);\n    const subscriptions = await this._pubsub.getTopics();\n    if (subscriptions && Array.isArray(subscriptions) && subscriptions.indexOf(stringifiedTopic) > -1) {\n      return this._getLocal(key);\n    }\n    try {\n      this._pubsub.on(stringifiedTopic, this._onMessage);\n      await this._pubsub.subscribe(stringifiedTopic);\n    } catch (err) {\n      const errMsg = `cannot subscribe topic ${ stringifiedTopic }`;\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_SUBSCRIBING_TOPIC');\n    }\n    log(`subscribed values for key ${ stringifiedTopic }`);\n    return this._getLocal(key);\n  }\n  unsubscribe(key) {\n    const stringifiedTopic = keyToTopic(key);\n    this._pubsub.removeListener(stringifiedTopic, this._onMessage);\n    return this._pubsub.unsubscribe(stringifiedTopic);\n  }\n  async _getLocal(key) {\n    const routingKey = new Key('/' + encodeBase32(key), false);\n    let dsVal;\n    try {\n      dsVal = await this._datastore.get(routingKey);\n    } catch (err) {\n      if (err.code !== 'ERR_NOT_FOUND') {\n        const errMsg = `unexpected error getting the ipns record for ${ routingKey.toString() }`;\n        log.error(errMsg);\n        throw errcode(new Error(errMsg), 'ERR_UNEXPECTED_ERROR_GETTING_RECORD');\n      }\n      const errMsg = `local record requested was not found for ${ routingKey.toString() }`;\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_NOT_FOUND');\n    }\n    if (!(dsVal instanceof Uint8Array)) {\n      const errMsg = 'found record that we couldn\\'t convert to a value';\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_INVALID_RECORD_RECEIVED');\n    }\n    return dsVal;\n  }\n  async _onMessage(msg) {\n    const {data, from, topicIDs} = msg;\n    let key;\n    try {\n      key = topicToKey(topicIDs[0]);\n    } catch (err) {\n      log.error(err);\n      return;\n    }\n    log(`message received for topic ${ topicIDs[0] }`);\n    if (from === this._peerId.toB58String()) {\n      log('message discarded as it is from the same peer');\n      return;\n    }\n    if (this._handleSubscriptionKeyFn) {\n      let res;\n      try {\n        res = await this._handleSubscriptionKeyFn(key);\n      } catch (err) {\n        log.error('message discarded by the subscriptionKeyFn');\n        return;\n      }\n      key = res;\n    }\n    try {\n      await this._storeIfSubscriptionIsBetter(key, data);\n    } catch (err) {\n      log.error(err);\n    }\n  }\n  async _storeIfSubscriptionIsBetter(key, data) {\n    let isBetter = false;\n    try {\n      isBetter = await this._isBetter(key, data);\n    } catch (err) {\n      if (err.code !== 'ERR_NOT_VALID_RECORD') {\n        throw err;\n      }\n    }\n    if (isBetter) {\n      await this._storeRecord(key, data);\n    }\n  }\n  async _validateRecord(value, peerId) {\n    return this._validator.validate(value, peerId);\n  }\n  async _selectRecord(key, records) {\n    const res = await this._validator.select(key, records);\n    return res === 0;\n  }\n  async _isBetter(key, val) {\n    try {\n      await this._validateRecord(val, key);\n    } catch (err) {\n      const errMsg = 'record received through pubsub is not valid';\n      log.error(errMsg);\n      throw errcode(new Error(errMsg), 'ERR_NOT_VALID_RECORD');\n    }\n    const dsKey = new Key(key);\n    let currentRecord;\n    try {\n      currentRecord = await this._getLocal(dsKey.uint8Array());\n    } catch (err) {\n      return true;\n    }\n    if (uint8ArrayEquals(currentRecord, val)) {\n      return false;\n    }\n    return this._selectRecord(key, [\n      currentRecord,\n      val\n    ]);\n  }\n  async _storeRecord(key, data) {\n    const routingKey = new Key('/' + encodeBase32(key), false);\n    await this._datastore.put(routingKey, data);\n    log(`record for ${ keyToTopic(key) } was stored in the datastore`);\n  }\n}","import * as ipns from 'ipns';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { PubsubDatastore } from 'datastore-pubsub';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport errcode from 'err-code';\nimport debug from 'debug';\nconst log = Object.assign(debug('ipfs:ipns:pubsub'), { error: debug('ipfs:ipns:pubsub:error') });\nexport class IpnsPubsubDatastore {\n  constructor(pubsub, localDatastore, peerId) {\n    this._subscriptions = {};\n    this._handleSubscriptionKey = this._handleSubscriptionKey.bind(this);\n    this._pubsubDs = new PubsubDatastore(pubsub, localDatastore, peerId, ipns.validator, this._handleSubscriptionKey);\n  }\n  async put(key, value) {\n    try {\n      await this._pubsubDs.put(key, value);\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n  }\n  async get(key) {\n    let res;\n    let err;\n    try {\n      res = await this._pubsubDs.get(key);\n    } catch (e) {\n      err = e;\n    }\n    const ns = key.slice(0, ipns.namespaceLength);\n    if (uint8ArrayToString(ns) === ipns.namespace) {\n      const stringifiedTopic = base58btc.encode(key).substring(1);\n      const id = base58btc.encode(key.slice(ipns.namespaceLength)).substring(1);\n      this._subscriptions[stringifiedTopic] = id;\n      log(`subscribed to pubsub topic ${ stringifiedTopic }, id ${ id }`);\n    }\n    if (err) {\n      throw err;\n    }\n    return res;\n  }\n  _handleSubscriptionKey(key) {\n    if (key instanceof Uint8Array) {\n      key = uint8ArrayToString(key, 'base58btc');\n    }\n    const subscriber = this._subscriptions[key];\n    if (!subscriber) {\n      throw errcode(new Error(`key ${ key } does not correspond to a subscription`), 'ERR_INVALID_KEY');\n    }\n    let keys;\n    try {\n      keys = ipns.getIdKeys(uint8ArrayFromString(subscriber, 'base58btc'));\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n    return keys.routingKey.uint8Array();\n  }\n  getSubscriptions() {\n    const subscriptions = Object.values(this._subscriptions).filter(Boolean);\n    return subscriptions.map(sub => `${ ipns.namespace }${ sub }`);\n  }\n  async cancel(name) {\n    if (typeof name !== 'string') {\n      throw errcode(new Error('invalid subscription name'), 'ERR_INVALID_SUBSCRIPTION_NAME');\n    }\n    if (name.startsWith(ipns.namespace)) {\n      name = name.substring(ipns.namespaceLength);\n    }\n    const stringifiedTopic = Object.keys(this._subscriptions).find(key => this._subscriptions[key] === name);\n    if (!stringifiedTopic) {\n      return { canceled: false };\n    }\n    const bufTopic = uint8ArrayFromString(stringifiedTopic);\n    this._pubsubDs.unsubscribe(bufTopic);\n    delete this._subscriptions[stringifiedTopic];\n    log(`unsubscribed pubsub ${ stringifiedTopic }: ${ name }`);\n    return { canceled: true };\n  }\n}","import { Key } from 'interface-datastore/key';\nimport { Record } from 'libp2p-record';\nimport errcode from 'err-code';\nimport debug from 'debug';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nconst log = Object.assign(debug('ipfs:ipns:offline-datastore'), { error: debug('ipfs:ipns:offline-datastore:error') });\nexport class OfflineDatastore {\n  constructor(repo) {\n    this._repo = repo;\n    this.stores = [];\n  }\n  async put(key, value) {\n    if (!(key instanceof Uint8Array)) {\n      throw errcode(new Error('Offline datastore key must be a Uint8Array'), 'ERR_INVALID_KEY');\n    }\n    if (!(value instanceof Uint8Array)) {\n      throw errcode(new Error('Offline datastore value must be a Uint8Array'), 'ERR_INVALID_VALUE');\n    }\n    let routingKey;\n    try {\n      routingKey = this._routingKey(key);\n    } catch (err) {\n      log.error(err);\n      throw errcode(new Error('Not possible to generate the routing key'), 'ERR_GENERATING_ROUTING_KEY');\n    }\n    const record = new Record(key, value);\n    return this._repo.datastore.put(routingKey, record.serialize());\n  }\n  async get(key) {\n    if (!(key instanceof Uint8Array)) {\n      throw errcode(new Error('Offline datastore key must be a Uint8Array'), 'ERR_INVALID_KEY');\n    }\n    let routingKey;\n    try {\n      routingKey = this._routingKey(key);\n    } catch (err) {\n      log.error(err);\n      throw errcode(new Error('Not possible to generate the routing key'), 'ERR_GENERATING_ROUTING_KEY');\n    }\n    const res = await this._repo.datastore.get(routingKey);\n    let record;\n    try {\n      record = Record.deserialize(res);\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n    return record.value;\n  }\n  _routingKey(key) {\n    return new Key('/dht/record/' + uint8ArrayToString(key, 'base32'), false);\n  }\n}","import drain from 'it-drain';\nimport { notFoundError } from 'datastore-core/errors';\nimport debug from 'debug';\nconst log = Object.assign(debug('ipfs:ipns:dht-datastore'), { error: debug('ipfs:ipns:dht-datastore:error') });\nexport class DHTDatastore {\n  constructor(dht) {\n    this._dht = dht;\n  }\n  async put(key, value) {\n    try {\n      await drain(this._dht.put(key, value));\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n  }\n  async get(key) {\n    for await (const event of this._dht.get(key)) {\n      if (event.name === 'VALUE') {\n        return event.value;\n      }\n    }\n    throw notFoundError();\n  }\n}","import { IPNS } from '../ipns/index.js';\nimport { createRouting } from '../ipns/routing/config.js';\nimport { OfflineDatastore } from '../ipns/routing/offline-datastore.js';\nimport {\n  NotInitializedError,\n  AlreadyInitializedError\n} from '../errors.js';\nimport debug from 'debug';\nconst log = debug('ipfs:components:ipns');\nexport class IPNSAPI {\n  constructor(options = { pass: '' }) {\n    this.options = options;\n    this.offline = null;\n    this.online = null;\n  }\n  getIPNS() {\n    const ipns = this.online || this.offline;\n    if (ipns) {\n      return ipns;\n    } else {\n      throw new NotInitializedError();\n    }\n  }\n  get routing() {\n    return this.getIPNS().routing;\n  }\n  startOffline({repo, peerId, keychain}) {\n    if (this.offline != null) {\n      throw new AlreadyInitializedError();\n    }\n    log('initializing IPNS keyspace');\n    const routing = new OfflineDatastore(repo);\n    const ipns = new IPNS(routing, repo.datastore, peerId, keychain, this.options);\n    this.offline = ipns;\n  }\n  async startOnline({libp2p, repo, peerId, keychain}) {\n    if (this.online != null) {\n      throw new AlreadyInitializedError();\n    }\n    const routing = createRouting({\n      libp2p,\n      repo,\n      peerId,\n      options: this.options\n    });\n    const ipns = new IPNS(routing, repo.datastore, peerId, keychain, this.options);\n    await ipns.republisher.start();\n    this.online = ipns;\n  }\n  async stop() {\n    const ipns = this.online;\n    if (ipns) {\n      await ipns.republisher.stop();\n      this.online = null;\n    }\n  }\n  publish(privKey, value, lifetime) {\n    return this.getIPNS().publish(privKey, value, lifetime);\n  }\n  resolve(name, options) {\n    return this.getIPNS().resolve(name, options);\n  }\n  initializeKeyspace(privKey, value) {\n    return this.getIPNS().initializeKeyspace(privKey, value);\n  }\n}","import { TieredDatastore } from 'datastore-core/tiered';\nimport get from 'dlv';\nimport { IpnsPubsubDatastore } from './pubsub-datastore.js';\nimport { OfflineDatastore } from './offline-datastore.js';\nimport { DHTDatastore } from './dht-datastore.js';\nexport function createRouting({libp2p, repo, peerId, options}) {\n  const ipnsStores = [];\n  let pubsubDs;\n  if (get(options, 'EXPERIMENTAL.ipnsPubsub', false)) {\n    const pubsub = libp2p.pubsub;\n    const localDatastore = repo.datastore;\n    pubsubDs = new IpnsPubsubDatastore(pubsub, localDatastore, peerId);\n    ipnsStores.push(pubsubDs);\n  }\n  if (!get(options, 'offline', false) && libp2p._config && libp2p._config.dht && libp2p._config.dht.enabled) {\n    ipnsStores.push(new DHTDatastore(libp2p._dht));\n  }\n  if (get(options, 'offline', false) || ipnsStores.length === 0) {\n    const offlineDatastore = new OfflineDatastore(repo);\n    ipnsStores.push(offlineDatastore);\n  }\n  return new TieredDatastore(ipnsStores);\n}","import isIPFS from 'is-ipfs';\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path';\nimport drain from 'it-drain';\nimport { resolve } from '../../utils.js';\nexport async function resolvePath({ipns, repo, codecs}, name, options) {\n  if (isIPFS.ipnsPath(name)) {\n    return ipns.resolve(name);\n  }\n  const {cid, path} = toCidAndPath(name);\n  await drain(resolve(cid, path || '', codecs, repo, options));\n}","import debug from 'debug';\nimport parseDuration from 'parse-duration';\nimport crypto from 'libp2p-crypto';\nimport errcode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport {\n  OFFLINE_ERROR,\n  normalizePath\n} from '../../utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { resolvePath } from './utils.js';\nconst log = Object.assign(debug('ipfs:name:publish'), { error: debug('ipfs:name:publish:error') });\nexport function createPublish({ipns, repo, codecs, peerId, isOnline, keychain}) {\n  const lookupKey = async keyName => {\n    if (keyName === 'self') {\n      return peerId.privKey;\n    }\n    try {\n      const pem = await keychain.exportKey(keyName, 'temp');\n      const privateKey = await crypto.keys.import(pem, 'temp');\n      return privateKey;\n    } catch (err) {\n      log.error(err);\n      throw errcode(err, 'ERR_CANNOT_GET_KEY');\n    }\n  };\n  async function publish(value, options = {}) {\n    const resolve = !(options.resolve === false);\n    const lifetime = options.lifetime || '24h';\n    const key = options.key || 'self';\n    if (!isOnline()) {\n      throw errcode(new Error(OFFLINE_ERROR), 'OFFLINE_ERROR');\n    }\n    try {\n      value = normalizePath(value);\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n    let pubLifetime = 0;\n    try {\n      pubLifetime = parseDuration(lifetime) || 0;\n      pubLifetime = parseFloat(pubLifetime.toFixed(6));\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n    const results = await Promise.all([\n      lookupKey(key),\n      resolve ? resolvePath({\n        ipns,\n        repo,\n        codecs\n      }, value) : Promise.resolve()\n    ]);\n    const bytes = uint8ArrayFromString(value);\n    const result = await ipns.publish(results[0], bytes, pubLifetime);\n    return {\n      name: result.name,\n      value: uint8ArrayToString(result.value)\n    };\n  }\n  return withTimeoutOption(publish);\n}","import debug from 'debug';\nimport errcode from 'err-code';\nimport mergeOpts from 'merge-options';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { base36 } from 'multiformats/bases/base36';\nimport PeerId from 'peer-id';\nimport isDomain from 'is-domain-name';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { OFFLINE_ERROR } from '../../utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nconst log = Object.assign(debug('ipfs:name:resolve'), { error: debug('ipfs:name:resolve:error') });\nconst appendRemainder = (result, remainder) => remainder.length > 0 ? result + '/' + remainder.join('/') : result;\nexport function createResolve({\n  dns,\n  ipns,\n  peerId,\n  isOnline,\n  options: {offline}\n}) {\n  async function* resolve(name, options = {}) {\n    options = mergeOptions({\n      nocache: false,\n      recursive: true\n    }, options);\n    if (offline && options && options.nocache) {\n      throw errcode(new Error('cannot specify both offline and nocache'), 'ERR_NOCACHE_AND_OFFLINE');\n    }\n    if (!isOnline() && !offline) {\n      throw errcode(new Error(OFFLINE_ERROR), 'OFFLINE_ERROR');\n    }\n    if (!name) {\n      name = peerId.toB58String();\n    }\n    if (!name.startsWith('/ipns/')) {\n      name = `/ipns/${ name }`;\n    }\n    let [namespace, hash, ...remainder] = name.slice(1).split('/');\n    try {\n      if (hash.substring(0, 1) === '1') {\n        const id = PeerId.parse(hash);\n        const digest = Digest.decode(id.toBytes());\n        const libp2pKey = CID.createV1(114, digest);\n        hash = libp2pKey.toString(base36);\n      } else {\n        const cid = CID.parse(hash);\n        if (cid.version === 1) {\n          hash = cid.toString(base36);\n        }\n      }\n    } catch (err) {\n      if (isDomain(hash)) {\n        yield appendRemainder(await dns(hash, options), remainder);\n        return;\n      }\n      log.error(err);\n      throw errcode(new Error('Invalid IPNS name'), 'ERR_IPNS_INVALID_NAME');\n    }\n    const value = await ipns.resolve(`/${ namespace }/${ hash }`, options);\n    yield appendRemainder(value instanceof Uint8Array ? uint8ArrayToString(value) : value, remainder);\n  }\n  return withTimeoutOption(resolve);\n}","import { IpnsPubsubDatastore } from '../../../ipns/routing/pubsub-datastore.js';\nimport errcode from 'err-code';\nexport function getPubsubRouting(ipns, options) {\n  if (!ipns || !(options && options.ipnsPubsub)) {\n    throw errcode(new Error('IPNS pubsub subsystem is not enabled'), 'ERR_IPNS_PUBSUB_NOT_ENABLED');\n  }\n  if (ipns.routing instanceof IpnsPubsubDatastore) {\n    return ipns.routing;\n  }\n  const pubsub = (ipns.routing.stores || []).find(s => s instanceof IpnsPubsubDatastore);\n  if (!pubsub) {\n    throw errcode(new Error('IPNS pubsub datastore not found'), 'ERR_PUBSUB_DATASTORE_NOT_FOUND');\n  }\n  return pubsub;\n}","import { createCancel } from './cancel.js';\nimport { createState } from './state.js';\nimport { createSubs } from './subs.js';\nexport class PubSubAPI {\n  constructor({ipns, options}) {\n    this.cancel = createCancel({\n      ipns,\n      options\n    });\n    this.state = createState({\n      ipns,\n      options\n    });\n    this.subs = createSubs({\n      ipns,\n      options\n    });\n  }\n}","import { getPubsubRouting } from './utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createCancel({ipns, options}) {\n  const experimental = options.EXPERIMENTAL;\n  async function cancel(name, options = {}) {\n    const pubsub = getPubsubRouting(ipns, experimental);\n    return pubsub.cancel(name, options);\n  }\n  return withTimeoutOption(cancel);\n}","import { getPubsubRouting } from './utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createState({ipns, options}) {\n  const experimental = options.EXPERIMENTAL;\n  async function state(_options = {}) {\n    try {\n      return { enabled: Boolean(getPubsubRouting(ipns, experimental)) };\n    } catch (err) {\n      return { enabled: false };\n    }\n  }\n  return withTimeoutOption(state);\n}","import { getPubsubRouting } from './utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createSubs({ipns, options}) {\n  const experimental = options.EXPERIMENTAL;\n  async function subs(options = {}) {\n    const pubsub = getPubsubRouting(ipns, experimental);\n    return pubsub.getSubscriptions(options);\n  }\n  return withTimeoutOption(subs);\n}","import { createPublish } from './publish.js';\nimport { createResolve } from './resolve.js';\nimport { PubSubAPI } from './pubsub/index.js';\nexport class NameAPI {\n  constructor({dns, ipns, repo, codecs, peerId, isOnline, keychain, options}) {\n    this.publish = createPublish({\n      ipns,\n      repo,\n      codecs,\n      peerId,\n      isOnline,\n      keychain\n    });\n    this.resolve = createResolve({\n      dns,\n      ipns,\n      peerId,\n      isOnline,\n      options\n    });\n    this.pubsub = new PubSubAPI({\n      ipns,\n      options\n    });\n  }\n}","import * as dagPB from '@ipld/dag-pb';\nimport { notFoundError } from 'datastore-core/errors';\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path';\nimport { CID } from 'multiformats/cid';\nimport { TimeoutController } from 'timeout-abort-controller';\nimport { anySignal } from 'any-signal';\nconst ERR_NOT_FOUND = notFoundError().code;\nexport const Format = {\n  default: '<dst>',\n  edges: '<src> -> <dst>'\n};\nexport function createRefs({repo, codecs, resolve, preload}) {\n  async function* refs(ipfsPath, options = {}) {\n    if (options.maxDepth === 0) {\n      return;\n    }\n    if (options.edges && options.format && options.format !== Format.default) {\n      throw new Error('Cannot set edges to true and also specify format');\n    }\n    options.format = options.edges ? Format.edges : options.format;\n    if (typeof options.maxDepth !== 'number') {\n      options.maxDepth = options.recursive ? Infinity : 1;\n    }\n    if (options.timeout) {\n      const controller = new TimeoutController(options.timeout);\n      const signals = [controller.signal];\n      if (options.signal) {\n        signals.push(options.signal);\n      }\n      options.signal = anySignal(signals);\n    }\n    const rawPaths = Array.isArray(ipfsPath) ? ipfsPath : [ipfsPath];\n    const paths = rawPaths.map(p => getFullPath(preload, p, options));\n    for (const path of paths) {\n      try {\n        yield* refsStream(resolve, repo, codecs, path, options);\n      } catch (err) {\n        yield {\n          ref: '',\n          err: err.message\n        };\n      }\n    }\n  }\n  return refs;\n}\nfunction getFullPath(preload, ipfsPath, options) {\n  const {cid, path} = toCidAndPath(ipfsPath);\n  if (options.preload !== false) {\n    preload(cid);\n  }\n  return `/ipfs/${ cid }${ path || '' }`;\n}\nasync function* refsStream(resolve, repo, codecs, path, options) {\n  const resPath = await resolve(path, options);\n  const {cid} = toCidAndPath(resPath);\n  const maxDepth = options.maxDepth != null ? options.maxDepth : Infinity;\n  const unique = options.unique || false;\n  for await (const obj of objectStream(repo, codecs, cid, maxDepth, unique, options)) {\n    if (!obj.parent) {\n      continue;\n    }\n    if (obj.isDuplicate) {\n      continue;\n    }\n    yield { ref: formatLink(obj.parent.cid, obj.node.cid, obj.node.name, options.format) };\n  }\n}\nfunction formatLink(srcCid, dstCid, linkName = '', format = Format.default) {\n  let out = format.replace(/<src>/g, srcCid.toString());\n  out = out.replace(/<dst>/g, dstCid.toString());\n  out = out.replace(/<linkname>/g, linkName);\n  return out;\n}\nasync function* objectStream(repo, codecs, rootCid, maxDepth, uniqueOnly, options) {\n  const seen = new Set();\n  async function* traverseLevel(parent, depth) {\n    const nextLevelDepth = depth + 1;\n    if (nextLevelDepth > maxDepth) {\n      return;\n    }\n    try {\n      for await (const link of getLinks(repo, codecs, parent.cid, options)) {\n        yield {\n          parent: parent,\n          node: link,\n          isDuplicate: uniqueOnly && seen.has(link.cid.toString())\n        };\n        if (uniqueOnly) {\n          seen.add(link.cid.toString());\n        }\n        yield* traverseLevel(link, nextLevelDepth);\n      }\n    } catch (err) {\n      if (err.code === ERR_NOT_FOUND) {\n        err.message = `Could not find object with CID: ${ parent.cid }`;\n      }\n      throw err;\n    }\n  }\n  yield* traverseLevel({ cid: rootCid }, 0);\n}\nasync function* getLinks(repo, codecs, cid, options) {\n  const block = await repo.blocks.get(cid, options);\n  const codec = await codecs.getCodec(cid.code);\n  const value = codec.decode(block);\n  const isDagPb = cid.code === dagPB.code;\n  const base = [];\n  for (const [name, cid] of links(value, base)) {\n    if (isDagPb) {\n      const match = name.match(/^Links\\/(\\d+)\\/Hash$/);\n      if (match) {\n        const index = Number(match[1]);\n        if (index < value.Links.length) {\n          yield {\n            name: value.Links[index].Name,\n            cid\n          };\n          continue;\n        }\n      }\n    }\n    yield {\n      name,\n      cid\n    };\n  }\n}\nconst links = function* (source, base) {\n  if (source == null) {\n    return;\n  }\n  if (source instanceof Uint8Array) {\n    return;\n  }\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          const cid = CID.asCID(element);\n          if (cid) {\n            yield [\n              elementPath.join('/'),\n              cid\n            ];\n          } else if (typeof element === 'object') {\n            yield* links(element, elementPath);\n          }\n        }\n      } else {\n        const cid = CID.asCID(value);\n        if (cid) {\n          yield [\n            path.join('/'),\n            cid\n          ];\n        } else {\n          yield* links(value, path);\n        }\n      }\n    }\n  }\n  return [];\n};","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createLocal({repo}) {\n  async function* refsLocal(options = {}) {\n    for await (const cid of repo.blocks.queryKeys({}, { signal: options.signal })) {\n      yield { ref: cid.toString() };\n    }\n  }\n  return withTimeoutOption(refsLocal);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createStat({network}) {\n  async function stat(options = {}) {\n    const bitswap = (await network.use(options)).bitswap;\n    const snapshot = bitswap.stat().snapshot;\n    return {\n      provideBufLen: parseInt(snapshot.providesBufferLength.toString()),\n      blocksReceived: BigInt(snapshot.blocksReceived.toString()),\n      wantlist: Array.from(bitswap.getWantlist()).map(e => e[1].cid),\n      peers: bitswap.peers().map(id => id.toB58String()),\n      dupBlksReceived: BigInt(snapshot.dupBlksReceived.toString()),\n      dupDataReceived: BigInt(snapshot.dupDataReceived.toString()),\n      dataReceived: BigInt(snapshot.dataReceived.toString()),\n      blocksSent: BigInt(snapshot.blocksSent.toString()),\n      dataSent: BigInt(snapshot.dataSent.toString())\n    };\n  }\n  return withTimeoutOption(stat);\n}","import { createWantlist } from './wantlist.js';\nimport { createWantlistForPeer } from './wantlist-for-peer.js';\nimport { createUnwant } from './unwant.js';\nimport { createStat } from './stat.js';\nexport class BitswapAPI {\n  constructor({network}) {\n    this.wantlist = createWantlist({ network });\n    this.wantlistForPeer = createWantlistForPeer({ network });\n    this.unwant = createUnwant({ network });\n    this.stat = createStat({ network });\n  }\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createWantlist({network}) {\n  async function wantlist(options = {}) {\n    const {bitswap} = await network.use(options);\n    const list = bitswap.getWantlist();\n    return Array.from(list).map(e => e[1].cid);\n  }\n  return withTimeoutOption(wantlist);\n}","import PeerId from 'peer-id';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createWantlistForPeer({network}) {\n  async function wantlistForPeer(peerId, options = {}) {\n    const {bitswap} = await network.use(options);\n    const list = bitswap.wantlistForPeer(PeerId.createFromB58String(peerId));\n    return Array.from(list).map(e => e[1].cid);\n  }\n  return withTimeoutOption(wantlistForPeer);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createUnwant({network}) {\n  async function unwant(cids, options = {}) {\n    const {bitswap} = await network.use(options);\n    if (!Array.isArray(cids)) {\n      cids = [cids];\n    }\n    return bitswap.unwant(cids);\n  }\n  return withTimeoutOption(unwant);\n}","import mafmt from 'mafmt';\nexport function isValidMultiaddr(ma) {\n  try {\n    return mafmt.IPFS.matches(ma);\n  } catch (err) {\n    return false;\n  }\n}","import { createAdd } from './add.js';\nimport { createClear } from './clear.js';\nimport { createList } from './list.js';\nimport { createReset } from './reset.js';\nimport { createRm } from './rm.js';\nexport class BootstrapAPI {\n  constructor({repo}) {\n    this.add = createAdd({ repo });\n    this.list = createList({ repo });\n    this.rm = createRm({ repo });\n    this.clear = createClear({ repo });\n    this.reset = createReset({ repo });\n  }\n}","import { isValidMultiaddr } from './utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createAdd({repo}) {\n  async function add(multiaddr, options = {}) {\n    if (!isValidMultiaddr(multiaddr)) {\n      throw new Error(`${ multiaddr } is not a valid Multiaddr`);\n    }\n    const config = await repo.config.getAll(options);\n    const boostrappers = config.Bootstrap || [];\n    boostrappers.push(multiaddr.toString());\n    config.Bootstrap = Array.from(new Set(boostrappers)).sort((a, b) => a.localeCompare(b));\n    await repo.config.replace(config);\n    return { Peers: [multiaddr] };\n  }\n  return withTimeoutOption(add);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { Multiaddr } from 'multiaddr';\nexport function createList({repo}) {\n  async function list(options = {}) {\n    const peers = await repo.config.get('Bootstrap', options);\n    return { Peers: (peers || []).map(ma => new Multiaddr(ma)) };\n  }\n  return withTimeoutOption(list);\n}","import { isValidMultiaddr } from './utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createRm({repo}) {\n  async function rm(multiaddr, options = {}) {\n    if (!isValidMultiaddr(multiaddr)) {\n      throw new Error(`${ multiaddr } is not a valid Multiaddr`);\n    }\n    const config = await repo.config.getAll(options);\n    config.Bootstrap = (config.Bootstrap || []).filter(ma => ma.toString() !== multiaddr.toString());\n    await repo.config.replace(config);\n    return { Peers: [multiaddr] };\n  }\n  return withTimeoutOption(rm);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { Multiaddr } from 'multiaddr';\nexport function createClear({repo}) {\n  async function clear(options = {}) {\n    const config = await repo.config.getAll(options);\n    const removed = config.Bootstrap || [];\n    config.Bootstrap = [];\n    await repo.config.replace(config);\n    return { Peers: removed.map(ma => new Multiaddr(ma)) };\n  }\n  return withTimeoutOption(clear);\n}","import defaultConfig from 'ipfs-core-config/config';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { Multiaddr } from 'multiaddr';\nexport function createReset({repo}) {\n  async function reset(options = {}) {\n    const config = await repo.config.getAll(options);\n    config.Bootstrap = defaultConfig().Bootstrap;\n    await repo.config.replace(config);\n    return { Peers: defaultConfig().Bootstrap.map(ma => new Multiaddr(ma)) };\n  }\n  return withTimeoutOption(reset);\n}","import { CID } from 'multiformats/cid';\nexport function cleanCid(cid) {\n  if (cid instanceof Uint8Array) {\n    return CID.decode(cid);\n  }\n  return CID.parse(cid.toString());\n}","import { createGet } from './get.js';\nimport { createPut } from './put.js';\nimport { createRm } from './rm.js';\nimport { createStat } from './stat.js';\nexport class BlockAPI {\n  constructor({codecs, hashers, preload, repo}) {\n    this.get = createGet({\n      preload,\n      repo\n    });\n    this.put = createPut({\n      codecs,\n      hashers,\n      preload,\n      repo\n    });\n    this.rm = createRm({ repo });\n    this.stat = createStat({\n      preload,\n      repo\n    });\n  }\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createGet({preload, repo}) {\n  async function get(cid, options = {}) {\n    if (options.preload !== false) {\n      preload(cid);\n    }\n    return repo.blocks.get(cid, options);\n  }\n  return withTimeoutOption(get);\n}","import { CID } from 'multiformats/cid';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createPut({codecs, hashers, repo, preload}) {\n  async function put(block, options = {}) {\n    const release = options.pin ? await repo.gcLock.readLock() : null;\n    try {\n      const cidVersion = options.version != null ? options.version : 0;\n      const codecName = options.format || (cidVersion === 0 ? 'dag-pb' : 'raw');\n      const hasher = await hashers.getHasher(options.mhtype || 'sha2-256');\n      const hash = await hasher.digest(block);\n      const codec = await codecs.getCodec(codecName);\n      const cid = CID.create(cidVersion, codec.code, hash);\n      await repo.blocks.put(cid, block, { signal: options.signal });\n      if (options.preload !== false) {\n        preload(cid);\n      }\n      if (options.pin === true) {\n        await repo.pins.pinRecursively(cid, { signal: options.signal });\n      }\n      return cid;\n    } finally {\n      if (release) {\n        release();\n      }\n    }\n  }\n  return withTimeoutOption(put);\n}","import errCode from 'err-code';\nimport parallel from 'it-parallel';\nimport map from 'it-map';\nimport filter from 'it-filter';\nimport { pipe } from 'it-pipe';\nimport { cleanCid } from './utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nconst BLOCK_RM_CONCURRENCY = 8;\nexport function createRm({repo}) {\n  async function* rm(cids, options = {}) {\n    if (!Array.isArray(cids)) {\n      cids = [cids];\n    }\n    const release = await repo.gcLock.writeLock();\n    try {\n      yield* pipe(cids, source => map(source, cid => {\n        return async () => {\n          cid = cleanCid(cid);\n          const result = { cid };\n          try {\n            const has = await repo.blocks.has(cid);\n            if (!has) {\n              throw errCode(new Error('block not found'), 'ERR_BLOCK_NOT_FOUND');\n            }\n            await repo.blocks.delete(cid);\n          } catch (err) {\n            if (!options.force) {\n              err.message = `cannot remove ${ cid }: ${ err.message }`;\n              result.error = err;\n            }\n          }\n          return result;\n        };\n      }), source => parallel(source, { concurrency: BLOCK_RM_CONCURRENCY }), source => filter(source, () => !options.quiet));\n    } finally {\n      release();\n    }\n  }\n  return withTimeoutOption(rm);\n}","import { cleanCid } from './utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createStat({repo, preload}) {\n  async function stat(cid, options = {}) {\n    cid = cleanCid(cid);\n    if (options.preload !== false) {\n      preload(cid);\n    }\n    const block = await repo.blocks.get(cid);\n    return {\n      cid,\n      size: block.length\n    };\n  }\n  return withTimeoutOption(stat);\n}","import errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport blobToIt from 'blob-to-it';\nimport itPeekable from 'it-peekable';\nimport all from 'it-all';\nimport map from 'it-map';\nimport {\n  isBytes,\n  isReadableStream,\n  isBlob\n} from './utils.js';\nasync function* toAsyncIterable(thing) {\n  yield thing;\n}\nexport async function normaliseContent(input) {\n  if (isBytes(input)) {\n    return toAsyncIterable(toBytes(input));\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()));\n  }\n  if (isBlob(input)) {\n    return blobToIt(input);\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      return toAsyncIterable(new Uint8Array(0));\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all(peekable)));\n    }\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map(peekable, toBytes);\n    }\n  }\n  throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n}\nfunction toBytes(chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk;\n  }\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n  }\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk);\n  }\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk);\n  }\n  return uint8ArrayFromString(chunk.toString());\n}","import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js';\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs';\nexport async function* normaliseCandidateSingle(input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent);\n    return;\n  }\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield { content: [] };\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent);\n      return;\n    }\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}","import { normaliseContent } from './normalise-content.js';\nimport { normaliseCandidateSingle } from './normalise-candidate-single.js';\nexport function normaliseInput(input) {\n  return normaliseCandidateSingle(input, normaliseContent);\n}","import { normaliseContent } from './normalise-content.js';\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js';\nexport function normaliseInput(input) {\n  return normaliseCandidateMultiple(input, normaliseContent);\n}","import { importer } from 'ipfs-unixfs-importer';\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-multiple';\nimport { parseChunkerString } from './utils.js';\nimport { pipe } from 'it-pipe';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport mergeOpts from 'merge-options';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nexport function createAddAll({repo, preload, hashers, options}) {\n  const isShardingEnabled = options && options.sharding;\n  async function* addAll(source, options = {}) {\n    const opts = mergeOptions({\n      shardSplitThreshold: isShardingEnabled ? 1000 : Infinity,\n      strategy: 'balanced'\n    }, options, { ...parseChunkerString(options.chunker) });\n    if (opts.hashAlg && opts.hashAlg !== 'sha2-256' && opts.cidVersion !== 1) {\n      opts.cidVersion = 1;\n    }\n    if (opts.trickle) {\n      opts.strategy = 'trickle';\n    }\n    if (opts.strategy === 'trickle') {\n      opts.leafType = 'raw';\n      opts.reduceSingleLeafToSelf = false;\n    }\n    if (opts.cidVersion > 0 && opts.rawLeaves === undefined) {\n      opts.rawLeaves = true;\n    }\n    if (opts.hashAlg !== undefined && opts.rawLeaves === undefined) {\n      opts.rawLeaves = true;\n    }\n    delete opts.trickle;\n    const totals = {};\n    if (opts.progress) {\n      const prog = opts.progress;\n      opts.progress = (bytes, path) => {\n        if (!totals[path]) {\n          totals[path] = 0;\n        }\n        totals[path] += bytes;\n        prog(totals[path], path);\n      };\n    }\n    let hasher;\n    if (opts.hashAlg != null) {\n      hasher = await hashers.getHasher(opts.hashAlg);\n    }\n    const iterator = pipe(normaliseInput(source), source => importer(source, repo.blocks, {\n      ...opts,\n      hasher,\n      pin: false\n    }), transformFile(opts), preloadFile(preload, opts), pinFile(repo, opts));\n    const releaseLock = await repo.gcLock.readLock();\n    try {\n      for await (const added of iterator) {\n        delete totals[added.path];\n        yield added;\n      }\n    } finally {\n      releaseLock();\n    }\n  }\n  return withTimeoutOption(addAll);\n}\nfunction transformFile(opts) {\n  async function* transformFile(source) {\n    for await (const file of source) {\n      let cid = file.cid;\n      if (opts.cidVersion === 1) {\n        cid = cid.toV1();\n      }\n      let path = file.path ? file.path : cid.toString();\n      if (opts.wrapWithDirectory && !file.path) {\n        path = '';\n      }\n      yield {\n        path,\n        cid: cid,\n        size: file.size,\n        mode: file.unixfs && file.unixfs.mode,\n        mtime: file.unixfs && file.unixfs.mtime\n      };\n    }\n  }\n  return transformFile;\n}\nfunction preloadFile(preload, opts) {\n  async function* maybePreloadFile(source) {\n    for await (const file of source) {\n      const isRootFile = !file.path || opts.wrapWithDirectory ? file.path === '' : !file.path.includes('/');\n      const shouldPreload = isRootFile && !opts.onlyHash && opts.preload !== false;\n      if (shouldPreload) {\n        preload(file.cid);\n      }\n      yield file;\n    }\n  }\n  return maybePreloadFile;\n}\nfunction pinFile(repo, opts) {\n  async function* maybePinFile(source) {\n    for await (const file of source) {\n      const isRootDir = !(file.path && file.path.includes('/'));\n      const shouldPin = (opts.pin == null ? true : opts.pin) && isRootDir && !opts.onlyHash;\n      if (shouldPin) {\n        await repo.pins.pinRecursively(file.cid);\n      }\n      yield file;\n    }\n  }\n  return maybePinFile;\n}","import { createAdd } from './add.js';\nimport { createAddAll } from './add-all/index.js';\nimport { createCat } from './cat.js';\nimport { createGet } from './get.js';\nimport { createLs } from './ls.js';\nexport class RootAPI {\n  constructor({preload, repo, hashers, options}) {\n    const addAll = createAddAll({\n      preload,\n      repo,\n      options,\n      hashers\n    });\n    this.addAll = addAll;\n    this.add = createAdd({ addAll });\n    this.cat = createCat({\n      repo,\n      preload\n    });\n    this.get = createGet({\n      repo,\n      preload\n    });\n    this.ls = createLs({\n      repo,\n      preload\n    });\n  }\n}","import last from 'it-last';\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single';\nexport function createAdd({addAll}) {\n  async function add(entry, options = {}) {\n    const result = await last(addAll(normaliseInput(entry), options));\n    if (result == null) {\n      throw Error('Failed to add a file, if you see this please report a bug');\n    }\n    return result;\n  }\n  return add;\n}","import { exporter } from 'ipfs-unixfs-exporter';\nimport { normalizeCidPath } from '../utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { CID } from 'multiformats/cid';\nexport function createCat({repo, preload}) {\n  async function* cat(ipfsPath, options = {}) {\n    ipfsPath = normalizeCidPath(ipfsPath);\n    if (options.preload !== false) {\n      const pathComponents = ipfsPath.split('/');\n      preload(CID.parse(pathComponents[0]));\n    }\n    const file = await exporter(ipfsPath, repo.blocks, options);\n    if (file.type === 'directory') {\n      throw new Error('this dag node is a directory');\n    }\n    if (!file.content) {\n      throw new Error('this dag node has no content');\n    }\n    yield* file.content(options);\n  }\n  return withTimeoutOption(cat);\n}","import {\n  exporter,\n  recursive\n} from 'ipfs-unixfs-exporter';\nimport errCode from 'err-code';\nimport { normalizeCidPath } from '../utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { CID } from 'multiformats/cid';\nimport { pack } from 'it-tar';\nimport { pipe } from 'it-pipe';\nimport Pako from 'pako';\nimport map from 'it-map';\nimport toBuffer from 'it-to-buffer';\nconst DEFAULT_COMPRESSION_LEVEL = 6;\nexport function createGet({repo, preload}) {\n  async function* get(ipfsPath, options = {}) {\n    if (options.compressionLevel != null && (options.compressionLevel < -1 || options.compressionLevel > 9)) {\n      throw errCode(new Error('Compression level must be between -1 and 9'), 'ERR_INVALID_PARAMS');\n    }\n    if (options.preload !== false) {\n      let pathComponents;\n      try {\n        pathComponents = normalizeCidPath(ipfsPath).split('/');\n      } catch (err) {\n        throw errCode(err, 'ERR_INVALID_PATH');\n      }\n      preload(CID.parse(pathComponents[0]));\n    }\n    const ipfsPathOrCid = CID.asCID(ipfsPath) || ipfsPath;\n    const file = await exporter(ipfsPathOrCid, repo.blocks, options);\n    if (file.type === 'file' || file.type === 'raw') {\n      const args = [];\n      if (!options.compress || options.archive === true) {\n        args.push([{\n            header: {\n              name: file.path,\n              mode: file.type === 'file' && file.unixfs.mode,\n              mtime: file.type === 'file' && file.unixfs.mtime ? new Date(file.unixfs.mtime.secs * 1000) : undefined,\n              size: file.size,\n              type: 'file'\n            },\n            body: file.content()\n          }], pack(), source => map(source, buf => buf.slice()));\n      } else {\n        args.push(file.content);\n      }\n      if (options.compress) {\n        args.push(async function* (source) {\n          const buf = await toBuffer(source);\n          yield Pako.gzip(buf, { level: options.compressionLevel || DEFAULT_COMPRESSION_LEVEL });\n        });\n      }\n      yield* pipe(...args);\n      return;\n    }\n    if (file.type === 'directory') {\n      const args = [\n        recursive(ipfsPathOrCid, repo.blocks, options),\n        async function* (source) {\n          for await (const entry of source) {\n            const output = {\n              header: {\n                name: entry.path,\n                size: entry.size\n              }\n            };\n            if (entry.type === 'file') {\n              output.header.type = 'file';\n              output.header.mode = entry.unixfs.mode != null ? entry.unixfs.mode : undefined;\n              output.header.mtime = entry.unixfs.mtime ? new Date(entry.unixfs.mtime.secs * 1000) : undefined;\n              output.body = entry.content();\n            } else if (entry.type === 'raw') {\n              output.header.type = 'file';\n              output.body = entry.content();\n            } else if (entry.type === 'directory') {\n              output.header.type = 'directory';\n              output.header.mode = entry.unixfs.mode != null ? entry.unixfs.mode : undefined;\n              output.header.mtime = entry.unixfs.mtime ? new Date(entry.unixfs.mtime.secs * 1000) : undefined;\n            } else {\n              throw errCode(new Error('Not a UnixFS node'), 'ERR_NOT_UNIXFS');\n            }\n            yield output;\n          }\n        },\n        pack(),\n        source => map(source, buf => buf.slice())\n      ];\n      if (options.compress) {\n        if (!options.archive) {\n          throw errCode(new Error('file is not regular'), 'ERR_INVALID_PATH');\n        }\n        if (options.compress) {\n          args.push(async function* (source) {\n            const buf = await toBuffer(source);\n            yield Pako.gzip(buf, { level: options.compressionLevel || DEFAULT_COMPRESSION_LEVEL });\n          });\n        }\n      }\n      yield* pipe(...args);\n      return;\n    }\n    throw errCode(new Error('Not a UnixFS node'), 'ERR_NOT_UNIXFS');\n  }\n  return withTimeoutOption(get);\n}","import { exporter } from 'ipfs-unixfs-exporter';\nimport errCode from 'err-code';\nimport {\n  normalizeCidPath,\n  mapFile\n} from '../utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { CID } from 'multiformats/cid';\nexport function createLs({repo, preload}) {\n  async function* ls(ipfsPath, options = {}) {\n    const legacyPath = normalizeCidPath(ipfsPath);\n    const pathComponents = legacyPath.split('/');\n    if (options.preload !== false) {\n      preload(CID.parse(pathComponents[0]));\n    }\n    const ipfsPathOrCid = CID.asCID(legacyPath) || legacyPath;\n    const file = await exporter(ipfsPathOrCid, repo.blocks, options);\n    if (file.type === 'file') {\n      yield mapFile(file);\n      return;\n    }\n    if (file.type === 'directory') {\n      for await (const child of file.content()) {\n        yield mapFile(child);\n      }\n      return;\n    }\n    throw errCode(new Error(`Unknown UnixFS type ${ file.type }`), 'ERR_UNKNOWN_UNIXFS_TYPE');\n  }\n  return withTimeoutOption(ls);\n}","import { ipfsCore as pkgversion } from '../version.js';\nimport { Multiaddr } from 'multiaddr';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport PeerId from 'peer-id';\nimport { NotStartedError } from '../errors.js';\nimport errCode from 'err-code';\nimport debug from 'debug';\nconst log = Object.assign(debug('ipfs:components:id'), { error: debug('ipfs:components:id:error') });\nexport function createId({peerId, network}) {\n  async function id(options = {}) {\n    const net = network.try();\n    if (!net) {\n      if (options.peerId) {\n        throw new NotStartedError();\n      }\n      const idStr = peerId.toB58String();\n      return {\n        id: idStr,\n        publicKey: uint8ArrayToString(peerId.pubKey.bytes, 'base64pad'),\n        addresses: [],\n        agentVersion: `js-ipfs/${ pkgversion }`,\n        protocolVersion: '9000',\n        protocols: []\n      };\n    }\n    const {libp2p} = net;\n    const peerIdToId = options.peerId ? PeerId.parse(options.peerId) : peerId;\n    const peer = await findPeer(peerIdToId, libp2p, options);\n    const agentVersion = uint8ArrayToString(peer.metadata.get('AgentVersion') || new Uint8Array());\n    const protocolVersion = uint8ArrayToString(peer.metadata.get('ProtocolVersion') || new Uint8Array());\n    const idStr = peer.id.toB58String();\n    const publicKeyStr = peer.publicKey ? uint8ArrayToString(peer.publicKey.bytes, 'base64pad') : '';\n    return {\n      id: idStr,\n      publicKey: publicKeyStr,\n      addresses: (peer.addresses || []).map(ma => {\n        const str = ma.toString();\n        if (str.endsWith(`/p2p/${ idStr }`)) {\n          return str;\n        }\n        return `${ str }/p2p/${ idStr }`;\n      }).sort().map(ma => new Multiaddr(ma)),\n      agentVersion,\n      protocolVersion,\n      protocols: (peer.protocols || []).sort()\n    };\n  }\n  return withTimeoutOption(id);\n}\nasync function findPeer(peerId, libp2p, options) {\n  let peer = await libp2p.peerStore.get(peerId);\n  if (!peer) {\n    peer = await findPeerOnDht(peerId, libp2p, options);\n  }\n  let publicKey = peerId.pubKey ? peerId.pubKey : await libp2p.peerStore.keyBook.get(peerId);\n  if (!publicKey) {\n    try {\n      publicKey = await libp2p._dht.getPublicKey(peerId, options);\n    } catch (err) {\n      log.error('Could not load public key for', peerId.toB58String(), err);\n    }\n  }\n  return {\n    ...peer,\n    publicKey,\n    metadata: peer.metadata || new Map(),\n    addresses: peer.addresses.map(addr => addr.multiaddr)\n  };\n}\nasync function findPeerOnDht(peerId, libp2p, options) {\n  for await (const event of libp2p._dht.findPeer(peerId, options)) {\n    if (event.name === 'FINAL_PEER') {\n      break;\n    }\n  }\n  const peer = await libp2p.peerStore.get(peerId);\n  if (!peer) {\n    throw errCode(new Error('Could not find peer'), 'ERR_NOT_FOUND');\n  }\n  return peer;\n}","import set from 'just-safe-set';\nimport getDefaultConfig from 'ipfs-core-config/config';\nexport const profiles = {\n  server: {\n    description: 'Recommended for nodes with public IPv4 address (servers, VPSes, etc.), disables host and content discovery and UPnP in local networks.',\n    transform: config => {\n      set(config, 'Discovery.MDNS.Enabled', false);\n      set(config, 'Discovery.webRTCStar.Enabled', false);\n      config.Swarm = {\n        ...config.Swarm || {},\n        DisableNatPortMap: true\n      };\n      return config;\n    }\n  },\n  'local-discovery': {\n    description: 'Sets default values to fields affected by `server` profile, enables discovery and UPnP in local networks.',\n    transform: config => {\n      set(config, 'Discovery.MDNS.Enabled', true);\n      set(config, 'Discovery.webRTCStar.Enabled', true);\n      set(config, 'Swarm', {\n        ...config.Swarm || {},\n        DisableNatPortMap: false\n      });\n      return config;\n    }\n  },\n  test: {\n    description: 'Reduces external interference, useful for running ipfs in test environments. Note that with these settings node won\\'t be able to talk to the rest of the network without manual bootstrap.',\n    transform: config => {\n      const defaultConfig = getDefaultConfig();\n      set(config, 'Addresses.API', defaultConfig.Addresses.API ? '/ip4/127.0.0.1/tcp/0' : '');\n      set(config, 'Addresses.Gateway', defaultConfig.Addresses.Gateway ? '/ip4/127.0.0.1/tcp/0' : '');\n      set(config, 'Addresses.Swarm', defaultConfig.Addresses.Swarm.length ? ['/ip4/127.0.0.1/tcp/0'] : []);\n      set(config, 'Addresses.Delegates', []);\n      set(config, 'Bootstrap', []);\n      set(config, 'Discovery.MDNS.Enabled', false);\n      set(config, 'Discovery.webRTCStar.Enabled', false);\n      set(config, 'Swarm', {\n        ...config.Swarm || {},\n        DisableNatPortMap: true\n      });\n      return config;\n    }\n  },\n  'default-networking': {\n    description: 'Restores default network settings. Inverse profile of the `test` profile.',\n    transform: config => {\n      const defaultConfig = getDefaultConfig();\n      set(config, 'Addresses.API', defaultConfig.Addresses.API);\n      set(config, 'Addresses.Gateway', defaultConfig.Addresses.Gateway);\n      set(config, 'Addresses.Swarm', defaultConfig.Addresses.Swarm);\n      set(config, 'Addresses.Delegates', defaultConfig.Addresses.Delegates);\n      set(config, 'Bootstrap', defaultConfig.Bootstrap);\n      set(config, 'Discovery.MDNS.Enabled', defaultConfig.Discovery.MDNS.Enabled);\n      set(config, 'Discovery.webRTCStar.Enabled', defaultConfig.Discovery.webRTCStar.Enabled);\n      set(config, 'Swarm', {\n        ...config.Swarm || {},\n        DisableNatPortMap: false\n      });\n      return config;\n    }\n  },\n  lowpower: {\n    description: 'Reduces daemon overhead on the system. May affect node functionality,performance of content discovery and data fetching may be degraded. Recommended for low power systems.',\n    transform: config => {\n      const Swarm = config.Swarm || {};\n      const ConnMgr = Swarm.ConnMgr || {};\n      ConnMgr.LowWater = 20;\n      ConnMgr.HighWater = 40;\n      Swarm.ConnMgr = ConnMgr;\n      config.Swarm = Swarm;\n      return config;\n    }\n  },\n  'default-power': {\n    description: 'Inverse of \"lowpower\" profile.',\n    transform: config => {\n      const defaultConfig = getDefaultConfig();\n      config.Swarm = defaultConfig.Swarm;\n      return config;\n    }\n  }\n};","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport debug from 'debug';\nimport { profiles } from './profiles.js';\nconst log = debug('ipfs:core:config');\nexport function createConfig({repo}) {\n  return {\n    getAll: withTimeoutOption(getAll),\n    get: withTimeoutOption(get),\n    set: withTimeoutOption(set),\n    replace: withTimeoutOption(replace),\n    profiles: {\n      apply: withTimeoutOption(applyProfile),\n      list: withTimeoutOption(listProfiles)\n    }\n  };\n  async function getAll(options = {}) {\n    return repo.config.getAll(options);\n  }\n  async function get(key, options) {\n    if (!key) {\n      return Promise.reject(new Error('key argument is required'));\n    }\n    return repo.config.get(key, options);\n  }\n  async function set(key, value, options) {\n    return repo.config.set(key, value, options);\n  }\n  async function replace(value, options) {\n    return repo.config.replace(value, options);\n  }\n  async function applyProfile(profileName, options = { dryRun: false }) {\n    const {dryRun} = options;\n    const profile = profiles[profileName];\n    if (!profile) {\n      throw new Error(`No profile with name '${ profileName }' exists`);\n    }\n    try {\n      const oldCfg = await repo.config.getAll(options);\n      let newCfg = JSON.parse(JSON.stringify(oldCfg));\n      newCfg = profile.transform(newCfg);\n      if (!dryRun) {\n        await repo.config.replace(newCfg, options);\n      }\n      delete oldCfg.Identity.PrivKey;\n      delete newCfg.Identity.PrivKey;\n      return {\n        original: oldCfg,\n        updated: newCfg\n      };\n    } catch (err) {\n      log(err);\n      throw new Error(`Could not apply profile '${ profileName }' to config: ${ err.message }`);\n    }\n  }\n}\nasync function listProfiles(_options) {\n  return Object.keys(profiles).map(name => ({\n    name,\n    description: profiles[name].description\n  }));\n}","import varint from 'varint';\nimport { encode as dagCborEncode } from '@ipld/dag-cbor';\nexport function createHeader(roots) {\n  const headerBytes = dagCborEncode({\n    version: 1,\n    roots\n  });\n  const varintBytes = varint.encode(headerBytes.length);\n  const header = new Uint8Array(varintBytes.length + headerBytes.length);\n  header.set(varintBytes, 0);\n  header.set(headerBytes, varintBytes.length);\n  return header;\n}\nfunction createEncoder(writer) {\n  return {\n    async setRoots(roots) {\n      const bytes = createHeader(roots);\n      await writer.write(bytes);\n    },\n    async writeBlock(block) {\n      const {cid, bytes} = block;\n      await writer.write(new Uint8Array(varint.encode(cid.bytes.length + bytes.length)));\n      await writer.write(cid.bytes);\n      if (bytes.length) {\n        await writer.write(bytes);\n      }\n    },\n    async close() {\n      await writer.end();\n    }\n  };\n}\nexport {\n  createEncoder\n};","const Kinds = {\n  Null: obj => obj === null,\n  Int: obj => Number.isInteger(obj),\n  Float: obj => typeof obj === 'number' && Number.isFinite(obj),\n  String: obj => typeof obj === 'string',\n  Bool: obj => typeof obj === 'boolean',\n  Bytes: obj => obj instanceof Uint8Array,\n  Link: obj => !Kinds.Null(obj) && typeof obj === 'object' && obj.asCID === obj,\n  List: obj => Array.isArray(obj),\n  Map: obj => !Kinds.Null(obj) && typeof obj === 'object' && obj.asCID !== obj && !Kinds.List(obj) && !Kinds.Bytes(obj)\n};\nconst Types = {\n  Int: Kinds.Int,\n  'CarHeader > version': obj => Types.Int(obj),\n  'CarHeader > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarHeader > roots (anon)': obj => Kinds.List(obj) && Array.prototype.every.call(obj, Types['CarHeader > roots (anon) > valueType (anon)']),\n  'CarHeader > roots': obj => Types['CarHeader > roots (anon)'](obj),\n  CarHeader: obj => {\n    const keys = obj && Object.keys(obj);\n    return Kinds.Map(obj) && ['version'].every(k => keys.includes(k)) && Object.entries(obj).every(([name, value]) => Types['CarHeader > ' + name] && Types['CarHeader > ' + name](value));\n  }\n};\nexport const CarHeader = Types.CarHeader;","import varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { decode as decodeDagCbor } from '@ipld/dag-cbor';\nimport { CarHeader as headerValidator } from './header-validator.js';\nconst CIDV0_BYTES = {\n  SHA2_256: 18,\n  LENGTH: 32,\n  DAG_PB: 112\n};\nconst V2_HEADER_LENGTH = 16 + 8 + 8 + 8;\nasync function readVarint(reader) {\n  const bytes = await reader.upTo(8);\n  if (!bytes.length) {\n    throw new Error('Unexpected end of data');\n  }\n  const i = varint.decode(bytes);\n  reader.seek(varint.decode.bytes);\n  return i;\n}\nasync function readV2Header(reader) {\n  const bytes = await reader.exactly(V2_HEADER_LENGTH);\n  const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  let offset = 0;\n  const header = {\n    version: 2,\n    characteristics: [\n      dv.getBigUint64(offset, true),\n      dv.getBigUint64(offset += 8, true)\n    ],\n    dataOffset: Number(dv.getBigUint64(offset += 8, true)),\n    dataSize: Number(dv.getBigUint64(offset += 8, true)),\n    indexOffset: Number(dv.getBigUint64(offset += 8, true))\n  };\n  reader.seek(V2_HEADER_LENGTH);\n  return header;\n}\nexport async function readHeader(reader, strictVersion) {\n  const length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)');\n  }\n  const header = await reader.exactly(length);\n  reader.seek(length);\n  const block = decodeDagCbor(header);\n  if (!headerValidator(block)) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version !== 1 && block.version !== 2 || strictVersion !== undefined && block.version !== strictVersion) {\n    throw new Error(`Invalid CAR version: ${ block.version }${ strictVersion !== undefined ? ` (expected ${ strictVersion })` : '' }`);\n  }\n  const hasRoots = Array.isArray(block.roots);\n  if (block.version === 1 && !hasRoots || block.version === 2 && hasRoots) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version === 1) {\n    return block;\n  }\n  const v2Header = await readV2Header(reader);\n  reader.seek(v2Header.dataOffset - reader.pos);\n  const v1Header = await readHeader(reader, 1);\n  return Object.assign(v1Header, v2Header);\n}\nasync function readMultihash(reader) {\n  const bytes = await reader.upTo(8);\n  varint.decode(bytes);\n  const codeLength = varint.decode.bytes;\n  const length = varint.decode(bytes.subarray(varint.decode.bytes));\n  const lengthLength = varint.decode.bytes;\n  const mhLength = codeLength + lengthLength + length;\n  const multihash = await reader.exactly(mhLength);\n  reader.seek(mhLength);\n  return multihash;\n}\nasync function readCid(reader) {\n  const first = await reader.exactly(2);\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    const bytes = await reader.exactly(34);\n    reader.seek(34);\n    const multihash = Digest.decode(bytes);\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash);\n  }\n  const version = await readVarint(reader);\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${ version })`);\n  }\n  const codec = await readVarint(reader);\n  const bytes = await readMultihash(reader);\n  const multihash = Digest.decode(bytes);\n  return CID.create(version, codec, multihash);\n}\nexport async function readBlockHead(reader) {\n  const start = reader.pos;\n  let length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)');\n  }\n  length += reader.pos - start;\n  const cid = await readCid(reader);\n  const blockLength = length - Number(reader.pos - start);\n  return {\n    cid,\n    length,\n    blockLength\n  };\n}\nasync function readBlock(reader) {\n  const {cid, blockLength} = await readBlockHead(reader);\n  const bytes = await reader.exactly(blockLength);\n  reader.seek(blockLength);\n  return {\n    bytes,\n    cid\n  };\n}\nasync function readBlockIndex(reader) {\n  const offset = reader.pos;\n  const {cid, length, blockLength} = await readBlockHead(reader);\n  const index = {\n    cid,\n    length,\n    blockLength,\n    offset,\n    blockOffset: reader.pos\n  };\n  reader.seek(index.blockLength);\n  return index;\n}\nexport function createDecoder(reader) {\n  const headerPromise = (async () => {\n    const header = await readHeader(reader);\n    if (header.version === 2) {\n      const v1length = reader.pos - header.dataOffset;\n      reader = limitReader(reader, header.dataSize - v1length);\n    }\n    return header;\n  })();\n  return {\n    header: () => headerPromise,\n    async *blocks() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader);\n      }\n    },\n    async *blocksIndex() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader);\n      }\n    }\n  };\n}\nexport function bytesReader(bytes) {\n  let pos = 0;\n  return {\n    async upTo(length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos));\n    },\n    async exactly(length) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes.subarray(pos, pos + length);\n    },\n    seek(length) {\n      pos += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function chunkReader(readChunk) {\n  let pos = 0;\n  let have = 0;\n  let offset = 0;\n  let currentChunk = new Uint8Array(0);\n  const read = async length => {\n    have = currentChunk.length - offset;\n    const bufa = [currentChunk.subarray(offset)];\n    while (have < length) {\n      const chunk = await readChunk();\n      if (chunk == null) {\n        break;\n      }\n      if (have < 0) {\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have));\n        }\n      } else {\n        bufa.push(chunk);\n      }\n      have += chunk.length;\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0));\n    let off = 0;\n    for (const b of bufa) {\n      currentChunk.set(b, off);\n      off += b.length;\n    }\n    offset = 0;\n  };\n  return {\n    async upTo(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length));\n    },\n    async exactly(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data');\n      }\n      return currentChunk.subarray(offset, offset + length);\n    },\n    seek(length) {\n      pos += length;\n      offset += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function asyncIterableReader(asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  async function readChunk() {\n    const next = await iterator.next();\n    if (next.done) {\n      return null;\n    }\n    return next.value;\n  }\n  return chunkReader(readChunk);\n}\nexport function limitReader(reader, byteLimit) {\n  let bytesRead = 0;\n  return {\n    async upTo(length) {\n      let bytes = await reader.upTo(length);\n      if (bytes.length + bytesRead > byteLimit) {\n        bytes = bytes.subarray(0, byteLimit - bytesRead);\n      }\n      return bytes;\n    },\n    async exactly(length) {\n      const bytes = await reader.exactly(length);\n      if (bytes.length + bytesRead > byteLimit) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes;\n    },\n    seek(length) {\n      bytesRead += length;\n      reader.seek(length);\n    },\n    get pos() {\n      return reader.pos;\n    }\n  };\n}","import { CID } from 'multiformats/cid';\nimport {\n  createEncoder,\n  createHeader\n} from './encoder.js';\nimport { create as iteratorChannel } from './iterator-channel.js';\nimport {\n  bytesReader,\n  readHeader\n} from './decoder.js';\nexport class CarWriter {\n  constructor(roots, encoder) {\n    this._encoder = encoder;\n    this._mutex = encoder.setRoots(roots);\n    this._ended = false;\n  }\n  async put(block) {\n    if (!(block.bytes instanceof Uint8Array) || !block.cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    const cid = CID.asCID(block.cid);\n    if (!cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    this._mutex = this._mutex.then(() => this._encoder.writeBlock({\n      cid,\n      bytes: block.bytes\n    }));\n    return this._mutex;\n  }\n  async close() {\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    await this._mutex;\n    this._ended = true;\n    return this._encoder.close();\n  }\n  static create(roots) {\n    roots = toRoots(roots);\n    const {encoder, iterator} = encodeWriter();\n    const writer = new CarWriter(roots, encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static createAppender() {\n    const {encoder, iterator} = encodeWriter();\n    encoder.setRoots = () => Promise.resolve();\n    const writer = new CarWriter([], encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static async updateRootsInBytes(bytes, roots) {\n    const reader = bytesReader(bytes);\n    await readHeader(reader);\n    const newHeader = createHeader(roots);\n    if (Number(reader.pos) !== newHeader.length) {\n      throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${ reader.pos } bytes, new header is ${ newHeader.length } bytes)`);\n    }\n    bytes.set(newHeader, 0);\n    return bytes;\n  }\n}\nexport class CarWriterOut {\n  constructor(iterator) {\n    this._iterator = iterator;\n  }\n  [Symbol.asyncIterator]() {\n    if (this._iterating) {\n      throw new Error('Multiple iterator not supported');\n    }\n    this._iterating = true;\n    return this._iterator;\n  }\n}\nfunction encodeWriter() {\n  const iw = iteratorChannel();\n  const {writer, iterator} = iw;\n  const encoder = createEncoder(writer);\n  return {\n    encoder,\n    iterator\n  };\n}\nfunction toRoots(roots) {\n  if (roots === undefined) {\n    return [];\n  }\n  if (!Array.isArray(roots)) {\n    const cid = CID.asCID(roots);\n    if (!cid) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    return [cid];\n  }\n  const _roots = [];\n  for (const root of roots) {\n    const _root = CID.asCID(root);\n    if (!_root) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    _roots.push(_root);\n  }\n  return _roots;\n}\nexport const __browser = true;","import { base58btc } from './bases/base58.js';\nconst walk = async ({cid, load, seen}) => {\n  seen = seen || new Set();\n  const b58Cid = cid.toString(base58btc);\n  if (seen.has(b58Cid)) {\n    return;\n  }\n  const block = await load(cid);\n  seen.add(b58Cid);\n  if (block === null) {\n    return;\n  }\n  for (const [, cid] of block.links()) {\n    await walk({\n      cid,\n      load,\n      seen\n    });\n  }\n};\nexport {\n  walk\n};","import { CID } from 'multiformats/cid';\nimport { createUnsafe } from 'multiformats/block';\nimport { CarWriter } from '@ipld/car/writer';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport debug from 'debug';\nimport * as raw from 'multiformats/codecs/raw';\nimport * as json from 'multiformats/codecs/json';\nimport { walk } from 'multiformats/traversal';\nconst log = debug('ipfs:components:dag:import');\nconst NO_LINKS_CODECS = [\n  raw.code,\n  json.code\n];\nexport function createExport({repo, preload, codecs}) {\n  async function* dagExport(root, options = {}) {\n    if (options.preload !== false) {\n      preload(root);\n    }\n    const cid = CID.asCID(root);\n    if (!cid) {\n      throw new Error(`Unexpected error converting CID type: ${ root }`);\n    }\n    log(`Exporting ${ cid } as car`);\n    const {writer, out} = await CarWriter.create([cid]);\n    let err = null;\n    (async () => {\n      try {\n        const load = makeLoader(repo, writer, {\n          signal: options.signal,\n          timeout: options.timeout\n        }, codecs);\n        await walk({\n          cid,\n          load\n        });\n      } catch (e) {\n        err = e;\n      } finally {\n        writer.close();\n      }\n    })();\n    for await (const chunk of out) {\n      if (err) {\n        break;\n      }\n      yield chunk;\n    }\n    if (err) {\n      throw err;\n    }\n  }\n  return withTimeoutOption(dagExport);\n}\nfunction makeLoader(repo, writer, options, codecs) {\n  return async cid => {\n    const codec = await codecs.getCodec(cid.code);\n    if (!codec) {\n      throw new Error(`Can't decode links in block with codec 0x${ cid.code.toString(16) } to form complete DAG`);\n    }\n    const bytes = await repo.blocks.get(cid, options);\n    log(`Adding block ${ cid } to car`);\n    await writer.put({\n      cid,\n      bytes\n    });\n    if (NO_LINKS_CODECS.includes(cid.code)) {\n      return null;\n    }\n    return createUnsafe({\n      bytes,\n      cid,\n      codec\n    });\n  };\n}","import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarIteratorBase {\n  constructor(version, roots, iterable) {\n    this._version = version;\n    this._roots = roots;\n    this._iterable = iterable;\n    this._decoded = false;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n}\nexport class CarBlockIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    return this._iterable[Symbol.asyncIterator]();\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n}\nexport class CarCIDIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    const iterable = this._iterable[Symbol.asyncIterator]();\n    return {\n      async next() {\n        const next = await iterable.next();\n        if (next.done) {\n          return next;\n        }\n        return {\n          done: false,\n          value: next.value.cid\n        };\n      }\n    };\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n}\nasync function fromBytes(bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array');\n  }\n  return decodeIterator(bytesReader(bytes));\n}\nasync function fromIterable(asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable');\n  }\n  return decodeIterator(asyncIterableReader(asyncIterable));\n}\nasync function decodeIterator(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  return {\n    version,\n    roots,\n    iterator: decoder.blocks()\n  };\n}","import { CarBlockIterator } from '@ipld/car/iterator';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport itPeekable from 'it-peekable';\nimport drain from 'it-drain';\nimport map from 'it-map';\nimport debug from 'debug';\nconst log = debug('ipfs:components:dag:import');\nexport function createImport({repo}) {\n  async function* dagImport(sources, options = {}) {\n    const release = await repo.gcLock.readLock();\n    try {\n      const abortOptions = {\n        signal: options.signal,\n        timeout: options.timeout\n      };\n      const peekable = itPeekable(sources);\n      const {value, done} = await peekable.peek();\n      if (done) {\n        return;\n      }\n      if (value) {\n        peekable.push(value);\n      }\n      let cars;\n      if (value instanceof Uint8Array) {\n        cars = [peekable];\n      } else {\n        cars = peekable;\n      }\n      for await (const car of cars) {\n        const roots = await importCar(repo, abortOptions, car);\n        if (options.pinRoots !== false) {\n          for (const cid of roots) {\n            let pinErrorMsg = '';\n            try {\n              if (await repo.blocks.has(cid)) {\n                log(`Pinning root ${ cid }`);\n                await repo.pins.pinRecursively(cid);\n              } else {\n                pinErrorMsg = 'blockstore: block not found';\n              }\n            } catch (err) {\n              pinErrorMsg = err.message;\n            }\n            yield {\n              root: {\n                cid,\n                pinErrorMsg\n              }\n            };\n          }\n        }\n      }\n    } finally {\n      release();\n    }\n  }\n  return withTimeoutOption(dagImport);\n}\nasync function importCar(repo, options, source) {\n  const reader = await CarBlockIterator.fromIterable(source);\n  const roots = await reader.getRoots();\n  await drain(repo.blocks.putMany(map(reader, ({\n    cid: key,\n    bytes: value\n  }) => {\n    log(`Import block ${ key }`);\n    return {\n      key,\n      value\n    };\n  }), { signal: options.signal }));\n  return roots;\n}","import { createExport } from './export.js';\nimport { createGet } from './get.js';\nimport { createImport } from './import.js';\nimport { createPut } from './put.js';\nimport { createResolve } from './resolve.js';\nexport class DagAPI {\n  constructor({repo, codecs, hashers, preload}) {\n    this.export = createExport({\n      repo,\n      preload,\n      codecs\n    });\n    this.get = createGet({\n      codecs,\n      repo,\n      preload\n    });\n    this.import = createImport({ repo });\n    this.resolve = createResolve({\n      repo,\n      codecs,\n      preload\n    });\n    this.put = createPut({\n      repo,\n      codecs,\n      hashers,\n      preload\n    });\n  }\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport first from 'it-first';\nimport last from 'it-last';\nimport { resolve } from '../../utils.js';\nimport errCode from 'err-code';\nexport function createGet({codecs, repo, preload}) {\n  const get = async function get(cid, options = {}) {\n    if (options.preload !== false) {\n      preload(cid);\n    }\n    if (options.path) {\n      const entry = options.localResolve ? await first(resolve(cid, options.path, codecs, repo, options)) : await last(resolve(cid, options.path, codecs, repo, options));\n      const result = entry;\n      if (!result) {\n        throw errCode(new Error('Not found'), 'ERR_NOT_FOUND');\n      }\n      return result;\n    }\n    const codec = await codecs.getCodec(cid.code);\n    const block = await repo.blocks.get(cid, options);\n    const node = codec.decode(block);\n    return {\n      value: node,\n      remainderPath: ''\n    };\n  };\n  return withTimeoutOption(get);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path';\nimport { resolvePath } from '../../utils.js';\nexport function createResolve({repo, codecs, preload}) {\n  async function dagResolve(ipfsPath, options = {}) {\n    const {cid} = toCidAndPath(ipfsPath);\n    if (options.preload !== false) {\n      preload(cid);\n    }\n    return resolvePath(repo, codecs, ipfsPath, options);\n  }\n  return withTimeoutOption(dagResolve);\n}","import { CID } from 'multiformats/cid';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createPut({repo, codecs, hashers, preload}) {\n  async function put(dagNode, options = {}) {\n    const release = options.pin ? await repo.gcLock.readLock() : null;\n    try {\n      const storeCodec = await codecs.getCodec(options.storeCodec || 'dag-cbor');\n      if (!storeCodec) {\n        throw new Error(`Unknown storeCodec ${ options.storeCodec }, please configure additional BlockCodecs for this IPFS instance`);\n      }\n      if (options.inputCodec) {\n        if (!(dagNode instanceof Uint8Array)) {\n          throw new Error('Can only inputCodec on raw bytes that can be decoded');\n        }\n        const inputCodec = await codecs.getCodec(options.inputCodec);\n        if (!inputCodec) {\n          throw new Error(`Unknown inputCodec ${ options.inputCodec }, please configure additional BlockCodecs for this IPFS instance`);\n        }\n        dagNode = inputCodec.decode(dagNode);\n      }\n      const cidVersion = options.version != null ? options.version : 1;\n      const hasher = await hashers.getHasher(options.hashAlg || 'sha2-256');\n      if (!hasher) {\n        throw new Error(`Unknown hash algorithm ${ options.hashAlg }, please configure additional MultihashHashers for this IPFS instance`);\n      }\n      const buf = storeCodec.encode(dagNode);\n      const hash = await hasher.digest(buf);\n      const cid = CID.create(cidVersion, storeCodec.code, hash);\n      await repo.blocks.put(cid, buf, { signal: options.signal });\n      if (options.pin) {\n        await repo.pins.pinRecursively(cid);\n      }\n      if (options.preload !== false) {\n        preload(cid);\n      }\n      return cid;\n    } finally {\n      if (release) {\n        release();\n      }\n    }\n  }\n  return withTimeoutOption(put);\n}","import HTTP from 'ipfs-utils/src/http.js';\nimport debug from 'debug';\nimport PQueue from 'p-queue';\nconst log = Object.assign(debug('ipfs:preload'), { error: debug('ipfs:preload:error') });\nconst Queue = PQueue.default ? PQueue.default : PQueue;\nconst httpQueue = new Queue({ concurrency: 4 });\nexport function preload(url, options = {}) {\n  log(url);\n  return httpQueue.add(async () => {\n    const res = await HTTP.post(url, { signal: options.signal });\n    const reader = res.body.getReader();\n    try {\n      while (true) {\n        const {done} = await reader.read();\n        if (done)\n          return;\n      }\n    } finally {\n      reader.releaseLock();\n    }\n  });\n}","import toUri from 'multiaddr-to-uri';\nimport debug from 'debug';\nimport shuffle from 'array-shuffle';\nimport { preload } from 'ipfs-core-config/preload';\nimport hashlru from 'hashlru';\nconst log = Object.assign(debug('ipfs:preload'), { error: debug('ipfs:preload:error') });\nexport function createPreloader(options = {}) {\n  options.enabled = Boolean(options.enabled);\n  options.addresses = options.addresses || [];\n  options.cache = options.cache || 1000;\n  if (!options.enabled || !options.addresses.length) {\n    log('preload disabled');\n    const api = () => {\n    };\n    return Object.assign(api, {\n      start: () => {\n      },\n      stop: () => {\n      }\n    });\n  }\n  let stopped = true;\n  let requests = [];\n  const apiUris = options.addresses.map(toUri);\n  const cache = hashlru(options.cache);\n  const api = async cid => {\n    try {\n      if (stopped) {\n        throw new Error(`preload ${ cid } but preloader is not started`);\n      }\n      const path = cid.toString();\n      if (cache.has(path)) {\n        return;\n      }\n      cache.set(path, true);\n      const fallbackApiUris = shuffle(apiUris);\n      let success = false;\n      const now = Date.now();\n      for (const uri of fallbackApiUris) {\n        if (stopped)\n          throw new Error(`preload aborted for ${ path }`);\n        let controller;\n        try {\n          controller = new AbortController();\n          requests = requests.concat(controller);\n          await preload(`${ uri }/api/v0/refs?r=true&arg=${ encodeURIComponent(path) }`, { signal: controller.signal });\n          success = true;\n        } catch (err) {\n          if (err.type !== 'aborted')\n            log.error(err);\n        } finally {\n          requests = requests.filter(r => r !== controller);\n        }\n        if (success)\n          break;\n      }\n      log(`${ success ? '' : 'un' }successfully preloaded ${ path } in ${ Date.now() - now }ms`);\n    } catch (err) {\n      log.error(err);\n    }\n  };\n  api.start = () => {\n    stopped = false;\n  };\n  api.stop = () => {\n    stopped = true;\n    log(`aborting ${ requests.length } pending preload request(s)`);\n    requests.forEach(r => r.abort());\n    requests = [];\n  };\n  return api;\n}","import debug from 'debug';\nconst log = Object.assign(debug('ipfs:mfs-preload'), { error: debug('ipfs:mfs-preload:error') });\nexport function createMfsPreloader({preload, files, options = {}}) {\n  options.interval = options.interval || 30 * 1000;\n  if (!options.enabled) {\n    log('MFS preload disabled');\n    const noop = async () => {\n    };\n    return {\n      start: noop,\n      stop: noop\n    };\n  }\n  let rootCid = '';\n  let timeoutId;\n  const preloadMfs = async () => {\n    try {\n      const stats = await files.stat('/');\n      const nextRootCid = stats.cid.toString();\n      if (rootCid !== nextRootCid) {\n        log(`preloading updated MFS root ${ rootCid } -> ${ stats.cid }`);\n        await preload(stats.cid);\n        rootCid = nextRootCid;\n      }\n    } catch (err) {\n      log.error('failed to preload MFS root', err);\n    } finally {\n      timeoutId = setTimeout(preloadMfs, options.interval);\n    }\n  };\n  return {\n    async start() {\n      const stats = await files.stat('/');\n      rootCid = stats.cid.toString();\n      log(`monitoring MFS root ${ stats.cid }`);\n      timeoutId = setTimeout(preloadMfs, options.interval);\n    },\n    stop() {\n      clearTimeout(timeoutId);\n    }\n  };\n}","import { createLock } from './utils/create-lock.js';\nimport isIpfs from 'is-ipfs';\nimport { createStat } from './stat.js';\nimport { createChmod } from './chmod.js';\nimport { createCp } from './cp.js';\nimport { createFlush } from './flush.js';\nimport { createMkdir } from './mkdir.js';\nimport { createMv } from './mv.js';\nimport { createRm } from './rm.js';\nimport { createTouch } from './touch.js';\nimport { createRead } from './read.js';\nimport { createWrite } from './write.js';\nimport { createLs } from './ls.js';\nconst readOperations = { stat: createStat };\nconst writeOperations = {\n  chmod: createChmod,\n  cp: createCp,\n  flush: createFlush,\n  mkdir: createMkdir,\n  mv: createMv,\n  rm: createRm,\n  touch: createTouch\n};\nconst unwrappedOperations = {\n  write: createWrite,\n  read: createRead,\n  ls: createLs\n};\nconst wrap = ({options, mfs, operations, lock}) => {\n  Object.keys(operations).forEach(key => {\n    mfs[key] = lock(operations[key](options));\n  });\n};\nconst defaultOptions = {\n  repoOwner: true,\n  repo: null\n};\nfunction createMfs(options) {\n  const {repoOwner} = Object.assign({}, defaultOptions || {}, options);\n  const lock = createLock(repoOwner);\n  const readLock = operation => {\n    return lock.readLock(operation);\n  };\n  const writeLock = operation => {\n    return lock.writeLock(operation);\n  };\n  const mfs = {};\n  wrap({\n    options,\n    mfs,\n    operations: readOperations,\n    lock: readLock\n  });\n  wrap({\n    options,\n    mfs,\n    operations: writeOperations,\n    lock: writeLock\n  });\n  Object.keys(unwrappedOperations).forEach(key => {\n    mfs[key] = unwrappedOperations[key](options);\n  });\n  return mfs;\n}\nexport function createFiles({\n  repo,\n  preload,\n  hashers,\n  options: constructorOptions\n}) {\n  const methods = createMfs({\n    repo,\n    repoOwner: Boolean(constructorOptions.repoOwner),\n    hashers\n  });\n  const withPreload = fn => {\n    const wrapped = (...args) => {\n      const paths = args.filter(arg => isIpfs.ipfsPath(arg) || isIpfs.cid(arg));\n      if (paths.length) {\n        const options = args[args.length - 1];\n        if (options && options.preload !== false) {\n          paths.forEach(path => preload(path));\n        }\n      }\n      return fn(...args);\n    };\n    return wrapped;\n  };\n  return {\n    ...methods,\n    chmod: methods.chmod,\n    cp: withPreload(methods.cp),\n    mkdir: methods.mkdir,\n    stat: withPreload(methods.stat),\n    rm: methods.rm,\n    read: withPreload(methods.read),\n    touch: methods.touch,\n    write: methods.write,\n    mv: withPreload(methods.mv),\n    flush: methods.flush,\n    ls: withPreload(async function* (...args) {\n      for await (const file of methods.ls(...args)) {\n        yield {\n          ...file,\n          size: file.size || 0\n        };\n      }\n    })\n  };\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nconst DEFAULT_KEY_TYPE = 'ed25519';\nconst DEFAULT_KEY_SIZE = 2048;\nexport function createGen({keychain}) {\n  const gen = (name, options = {\n    type: DEFAULT_KEY_TYPE,\n    size: DEFAULT_KEY_SIZE\n  }) => {\n    return keychain.createKey(name, options.type || DEFAULT_KEY_TYPE, options.size || DEFAULT_KEY_SIZE);\n  };\n  return withTimeoutOption(gen);\n}","import { createExport } from './export.js';\nimport { createGen } from './gen.js';\nimport { createImport } from './import.js';\nimport { createInfo } from './info.js';\nimport { createList } from './list.js';\nimport { createRename } from './rename.js';\nimport { createRm } from './rm.js';\nexport class KeyAPI {\n  constructor({keychain}) {\n    this.gen = createGen({ keychain });\n    this.list = createList({ keychain });\n    this.rm = createRm({ keychain });\n    this.rename = createRename({ keychain });\n    this.export = createExport({ keychain });\n    this.import = createImport({ keychain });\n    this.info = createInfo({ keychain });\n  }\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createList({keychain}) {\n  const list = () => keychain.listKeys();\n  return withTimeoutOption(list);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createRm({keychain}) {\n  const rm = name => keychain.removeKey(name);\n  return withTimeoutOption(rm);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createRename({keychain}) {\n  const rename = async (oldName, newName) => {\n    const key = await keychain.renameKey(oldName, newName);\n    return {\n      was: oldName,\n      now: key.name,\n      id: key.id,\n      overwrite: false\n    };\n  };\n  return withTimeoutOption(rename);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createExport({keychain}) {\n  const exportKey = (name, password) => keychain.exportKey(name, password);\n  return withTimeoutOption(exportKey);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createImport({keychain}) {\n  const importKey = (name, pem, password) => {\n    return keychain.importKey(name, pem, password);\n  };\n  return withTimeoutOption(importKey);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createInfo({keychain}) {\n  const info = name => keychain.findKeyByName(name);\n  return withTimeoutOption(info);\n}","import * as dagPB from '@ipld/dag-pb';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createGet({repo, preload}) {\n  async function get(cid, options = {}) {\n    if (options.preload !== false) {\n      preload(cid);\n    }\n    const block = await repo.blocks.get(cid, options);\n    return dagPB.decode(block);\n  }\n  return withTimeoutOption(get);\n}","import * as dagPB from '@ipld/dag-pb';\nimport * as dagCBOR from '@ipld/dag-cbor';\nimport * as dagJSON from '@ipld/dag-json';\nimport * as raw from 'multiformats/codecs/raw';\nimport { CID } from 'multiformats/cid';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nfunction findLinks(node, links = []) {\n  for (const key in node) {\n    const val = node[key];\n    if (key === '/' && Object.keys(node).length === 1) {\n      try {\n        links.push({\n          Name: '',\n          Tsize: 0,\n          Hash: CID.parse(val)\n        });\n        continue;\n      } catch (_) {\n      }\n    }\n    const cid = CID.asCID(val);\n    if (cid) {\n      links.push({\n        Name: '',\n        Tsize: 0,\n        Hash: cid\n      });\n      continue;\n    }\n    if (Array.isArray(val)) {\n      findLinks(val, links);\n    }\n    if (val && typeof val === 'object') {\n      findLinks(val, links);\n    }\n  }\n  return links;\n}\nexport function createLinks({repo, codecs}) {\n  async function links(cid, options = {}) {\n    const codec = await codecs.getCodec(cid.code);\n    const block = await repo.blocks.get(cid, options);\n    const node = codec.decode(block);\n    switch (cid.code) {\n    case raw.code:\n      return [];\n    case dagPB.code:\n      return node.Links;\n    case dagCBOR.code:\n    case dagJSON.code:\n      return findLinks(node);\n    default:\n      throw new Error(`Cannot resolve links from codec ${ cid.code }`);\n    }\n  }\n  return withTimeoutOption(links);\n}","import * as dagPB from '@ipld/dag-pb';\nimport { CID } from 'multiformats/cid';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createPut({repo, preload}) {\n  async function put(obj, options = {}) {\n    const release = await repo.gcLock.readLock();\n    try {\n      const buf = dagPB.encode(obj);\n      const hash = await sha256.digest(buf);\n      const cid = CID.createV1(dagPB.code, hash);\n      await repo.blocks.put(cid, buf, { signal: options.signal });\n      if (options.preload !== false) {\n        preload(cid);\n      }\n      if (options.pin) {\n        await repo.pins.pinRecursively(cid, { signal: options.signal });\n      }\n      return cid;\n    } finally {\n      release();\n    }\n  }\n  return withTimeoutOption(put);\n}","import { createAddLink } from './add-link.js';\nimport { createAppendData } from './append-data.js';\nimport { createRmLink } from './rm-link.js';\nimport { createSetData } from './set-data.js';\nexport class ObjectPatchAPI {\n  constructor({repo, preload}) {\n    this.addLink = createAddLink({\n      repo,\n      preload\n    });\n    this.appendData = createAppendData({\n      repo,\n      preload\n    });\n    this.rmLink = createRmLink({\n      repo,\n      preload\n    });\n    this.setData = createSetData({\n      repo,\n      preload\n    });\n  }\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { createGet } from '../get.js';\nimport { createPut } from '../put.js';\nexport function createAddLink({repo, preload}) {\n  const get = createGet({\n    repo,\n    preload\n  });\n  const put = createPut({\n    repo,\n    preload\n  });\n  async function addLink(cid, link, options = {}) {\n    const node = await get(cid, options);\n    return put({\n      ...node,\n      Links: node.Links.concat([link])\n    }, options);\n  }\n  return withTimeoutOption(addLink);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { createGet } from '../get.js';\nimport { createPut } from '../put.js';\nexport function createAppendData({repo, preload}) {\n  const get = createGet({\n    repo,\n    preload\n  });\n  const put = createPut({\n    repo,\n    preload\n  });\n  async function appendData(cid, data, options = {}) {\n    const node = await get(cid, options);\n    const newData = uint8ArrayConcat([\n      node.Data || [],\n      data\n    ]);\n    return put({\n      ...node,\n      Data: newData\n    }, options);\n  }\n  return withTimeoutOption(appendData);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { createGet } from '../get.js';\nimport { createPut } from '../put.js';\nexport function createRmLink({repo, preload}) {\n  const get = createGet({\n    repo,\n    preload\n  });\n  const put = createPut({\n    repo,\n    preload\n  });\n  async function rmLink(cid, link, options = {}) {\n    const node = await get(cid, options);\n    const name = (typeof link === 'string' ? link : link.Name) || '';\n    node.Links = node.Links.filter(l => l.Name !== name);\n    return put(node, options);\n  }\n  return withTimeoutOption(rmLink);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { createGet } from '../get.js';\nimport { createPut } from '../put.js';\nexport function createSetData({repo, preload}) {\n  const get = createGet({\n    repo,\n    preload\n  });\n  const put = createPut({\n    repo,\n    preload\n  });\n  async function setData(cid, data, options = {}) {\n    const node = await get(cid, options);\n    return put({\n      ...node,\n      Data: data\n    }, options);\n  }\n  return withTimeoutOption(setData);\n}","import { createData } from './data.js';\nimport { createGet } from './get.js';\nimport { createLinks } from './links.js';\nimport { createNew } from './new.js';\nimport { createPut } from './put.js';\nimport { createStat } from './stat.js';\nimport { ObjectPatchAPI } from './patch/index.js';\nexport class ObjectAPI {\n  constructor({repo, codecs, preload}) {\n    this.data = createData({\n      repo,\n      preload\n    });\n    this.get = createGet({\n      repo,\n      preload\n    });\n    this.links = createLinks({\n      repo,\n      codecs\n    });\n    this.new = createNew({\n      repo,\n      preload\n    });\n    this.put = createPut({\n      repo,\n      preload\n    });\n    this.stat = createStat({\n      repo,\n      preload\n    });\n    this.patch = new ObjectPatchAPI({\n      repo,\n      preload\n    });\n  }\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { createGet } from './get.js';\nexport function createData({repo, preload}) {\n  const get = createGet({\n    repo,\n    preload\n  });\n  async function data(multihash, options = {}) {\n    const node = await get(multihash, options);\n    return node.Data || new Uint8Array(0);\n  }\n  return withTimeoutOption(data);\n}","import * as dagPB from '@ipld/dag-pb';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { CID } from 'multiformats/cid';\nexport function createNew({repo, preload}) {\n  async function _new(options = {}) {\n    let data;\n    if (options.template) {\n      if (options.template === 'unixfs-dir') {\n        data = new UnixFS({ type: 'directory' }).marshal();\n      } else {\n        throw new Error('unknown template');\n      }\n    }\n    const buf = dagPB.encode({\n      Data: data,\n      Links: []\n    });\n    const hash = await sha256.digest(buf);\n    const cid = CID.createV0(hash);\n    await repo.blocks.put(cid, buf, { signal: options.signal });\n    if (options.preload !== false) {\n      preload(cid);\n    }\n    return cid;\n  }\n  return withTimeoutOption(_new);\n}","import * as dagPB from '@ipld/dag-pb';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { createGet } from './get.js';\nexport function createStat({repo, preload}) {\n  const get = createGet({\n    repo,\n    preload\n  });\n  async function stat(cid, options = {}) {\n    const node = await get(cid, options);\n    const serialized = dagPB.encode(node);\n    const blockSize = serialized.length;\n    const linkLength = node.Links.reduce((a, l) => a + (l.Tsize || 0), 0);\n    return {\n      Hash: cid,\n      NumLinks: node.Links.length,\n      BlockSize: blockSize,\n      LinksSize: blockSize - (node.Data || []).length,\n      DataSize: (node.Data || []).length,\n      CumulativeSize: blockSize + linkLength\n    };\n  }\n  return withTimeoutOption(stat);\n}","import debug from 'debug';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { loadMfsRoot } from '../files/utils/with-mfs-root.js';\nconst log = debug('ipfs:repo:gc');\nexport function createGc({repo, hashers}) {\n  async function* gc(options = {}) {\n    const start = Date.now();\n    let mfsRootCid;\n    try {\n      mfsRootCid = await loadMfsRoot({\n        repo,\n        hashers\n      }, options);\n      await repo.pins.pinRecursively(mfsRootCid);\n      yield* repo.gc();\n    } finally {\n      if (mfsRootCid) {\n        await repo.pins.unpin(mfsRootCid);\n      }\n    }\n    log(`Complete (${ Date.now() - start }ms)`);\n  }\n  return withTimeoutOption(gc);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createStat({repo}) {\n  async function stat(options = {}) {\n    const stats = await repo.stat();\n    return {\n      numObjects: BigInt(stats.numObjects.toString()),\n      repoSize: BigInt(stats.repoSize.toString()),\n      repoPath: stats.repoPath,\n      version: `${ stats.version }`,\n      storageMax: BigInt(stats.storageMax.toString())\n    };\n  }\n  return withTimeoutOption(stat);\n}","import { createGc } from './gc.js';\nimport { createStat } from './stat.js';\nimport { createVersion } from './version.js';\nexport class RepoAPI {\n  constructor({repo, hashers}) {\n    this.gc = createGc({\n      repo,\n      hashers\n    });\n    this.stat = createStat({ repo });\n    this.version = createVersion({ repo });\n    this.setApiAddr = addr => repo.apiAddr.set(addr);\n  }\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { repoVersion } from 'ipfs-repo/constants';\nexport function createVersion({repo}) {\n  async function version(options = {}) {\n    try {\n      await repo._checkInitialized(options);\n    } catch (err) {\n      const match = [\n        /Key not found in database \\[\\/version\\]/,\n        /ENOENT/,\n        /repo is not initialized yet/\n      ].some(m => {\n        return m.test(err.message);\n      });\n      if (match) {\n        return repoVersion;\n      }\n      throw err;\n    }\n    return repo.version.get();\n  }\n  return withTimeoutOption(version);\n}","import parseDuration from 'parse-duration';\nimport errCode from 'err-code';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport PeerId from 'peer-id';\nfunction getBandwidthStats(libp2p, opts) {\n  let stats;\n  if (!libp2p.metrics) {\n    stats = undefined;\n  } else if (opts.peer) {\n    stats = libp2p.metrics.forPeer(PeerId.parse(opts.peer));\n  } else if (opts.proto) {\n    stats = libp2p.metrics.forProtocol(opts.proto);\n  } else {\n    stats = libp2p.metrics.global;\n  }\n  if (!stats) {\n    return {\n      totalIn: BigInt(0),\n      totalOut: BigInt(0),\n      rateIn: 0,\n      rateOut: 0\n    };\n  }\n  const {movingAverages, snapshot} = stats;\n  return {\n    totalIn: BigInt(snapshot.dataReceived.integerValue().toString()),\n    totalOut: BigInt(snapshot.dataSent.integerValue().toString()),\n    rateIn: movingAverages.dataReceived[60000].movingAverage() / 60,\n    rateOut: movingAverages.dataSent[60000].movingAverage() / 60\n  };\n}\nexport function createBw({network}) {\n  const bw = async function* (options = {}) {\n    const {libp2p} = await network.use(options);\n    if (!options.poll) {\n      yield getBandwidthStats(libp2p, options);\n      return;\n    }\n    const interval = options.interval || 1000;\n    let ms = -1;\n    try {\n      ms = typeof interval === 'string' ? parseDuration(interval) || -1 : interval;\n      if (!ms || ms < 0)\n        throw new Error('invalid duration');\n    } catch (err) {\n      throw errCode(err, 'ERR_INVALID_POLL_INTERVAL');\n    }\n    let timeoutId;\n    try {\n      while (true) {\n        yield getBandwidthStats(libp2p, options);\n        await new Promise(resolve => {\n          timeoutId = setTimeout(resolve, ms);\n        });\n      }\n    } finally {\n      clearTimeout(timeoutId);\n    }\n  };\n  return withTimeoutOption(bw);\n}","import { createBw } from './bw.js';\nimport { createStat as createRepo } from '../repo/stat.js';\nimport { createStat as createBitswap } from '../bitswap/stat.js';\nexport class StatsAPI {\n  constructor({repo, network}) {\n    this.repo = createRepo({ repo });\n    this.bw = createBw({ network });\n    this.bitswap = createBitswap({ network });\n  }\n}","import { migration as migration8 } from './migration-8/index.js';\nimport { migration as migration9 } from './migration-9/index.js';\nimport { migration as migration10 } from './migration-10/index.js';\nimport { migration as migration11 } from './migration-11/index.js';\nimport { migration as migration12 } from './migration-12/index.js';\nconst emptyMigration = {\n  description: 'Empty migration.',\n  migrate: () => {\n  },\n  revert: () => {\n  },\n  empty: true\n};\nexport default [\n  Object.assign({ version: 1 }, emptyMigration),\n  Object.assign({ version: 2 }, emptyMigration),\n  Object.assign({ version: 3 }, emptyMigration),\n  Object.assign({ version: 4 }, emptyMigration),\n  Object.assign({ version: 5 }, emptyMigration),\n  Object.assign({ version: 6 }, emptyMigration),\n  Object.assign({ version: 7 }, emptyMigration),\n  migration8,\n  migration9,\n  migration10,\n  migration11,\n  migration12\n];","import defaultMigrations from '../migrations/index.js';\nimport * as repoVersion from './repo/version.js';\nimport * as Errors from './errors.js';\nimport { wrapBackends } from './utils.js';\nimport debug from 'debug';\nconst log = debug('ipfs:repo:migrator');\nexport function getLatestMigrationVersion(migrations) {\n  migrations = migrations || defaultMigrations;\n  if (!Array.isArray(migrations) || migrations.length === 0) {\n    return 0;\n  }\n  return migrations[migrations.length - 1].version;\n}\nexport async function migrate(path, backends, repoOptions, toVersion, {ignoreLock = false, onProgress, isDryRun = false, migrations}) {\n  migrations = migrations || defaultMigrations;\n  if (!path) {\n    throw new errors.RequiredParameterError('Path argument is required!');\n  }\n  if (!repoOptions) {\n    throw new errors.RequiredParameterError('repoOptions argument is required!');\n  }\n  if (!toVersion) {\n    throw new errors.RequiredParameterError('toVersion argument is required!');\n  }\n  if (!Number.isInteger(toVersion) || toVersion <= 0) {\n    throw new errors.InvalidValueError('Version has to be positive integer!');\n  }\n  backends = wrapBackends(backends);\n  const currentVersion = await repoVersion.getVersion(backends);\n  if (currentVersion === toVersion) {\n    log('Nothing to migrate.');\n    return;\n  }\n  if (currentVersion > toVersion) {\n    throw new errors.InvalidValueError(`Current repo's version (${ currentVersion }) is higher then toVersion (${ toVersion }), you probably wanted to revert it?`);\n  }\n  verifyAvailableMigrations(migrations, currentVersion, toVersion);\n  let lock;\n  if (!isDryRun && !ignoreLock) {\n    lock = await repoOptions.repoLock.lock(path);\n  }\n  try {\n    for (const migration of migrations) {\n      if (toVersion !== undefined && migration.version > toVersion) {\n        break;\n      }\n      if (migration.version <= currentVersion) {\n        continue;\n      }\n      log(`Migrating version ${ migration.version }`);\n      try {\n        if (!isDryRun) {\n          let progressCallback = () => {\n          };\n          if (onProgress) {\n            progressCallback = (percent, message) => onProgress(migration.version, percent.toFixed(2), message);\n          }\n          await migration.migrate(backends, progressCallback);\n        }\n      } catch (e) {\n        const lastSuccessfullyMigratedVersion = migration.version - 1;\n        log(`An exception was raised during execution of migration. Setting the repo's version to last successfully migrated version: ${ lastSuccessfullyMigratedVersion }`);\n        await repoVersion.setVersion(lastSuccessfullyMigratedVersion, backends);\n        throw new Error(`During migration to version ${ migration.version } exception was raised: ${ e.stack || e.message || e }`);\n      }\n      log(`Migrating to version ${ migration.version } finished`);\n    }\n    if (!isDryRun) {\n      await repoVersion.setVersion(toVersion || getLatestMigrationVersion(migrations), backends);\n    }\n    log('Repo successfully migrated', toVersion !== undefined ? `to version ${ toVersion }!` : 'to latest version!');\n  } finally {\n    if (!isDryRun && !ignoreLock && lock) {\n      await lock.close();\n    }\n  }\n}\nexport async function revert(path, backends, repoOptions, toVersion, {ignoreLock = false, onProgress, isDryRun = false, migrations}) {\n  migrations = migrations || defaultMigrations;\n  if (!path) {\n    throw new errors.RequiredParameterError('Path argument is required!');\n  }\n  if (!repoOptions) {\n    throw new errors.RequiredParameterError('repoOptions argument is required!');\n  }\n  if (!toVersion) {\n    throw new errors.RequiredParameterError('When reverting migrations, you have to specify to which version to revert!');\n  }\n  if (!Number.isInteger(toVersion) || toVersion <= 0) {\n    throw new errors.InvalidValueError('Version has to be positive integer!');\n  }\n  backends = wrapBackends(backends);\n  const currentVersion = await repoVersion.getVersion(backends);\n  if (currentVersion === toVersion) {\n    log('Nothing to revert.');\n    return;\n  }\n  if (currentVersion < toVersion) {\n    throw new errors.InvalidValueError(`Current repo's version (${ currentVersion }) is lower then toVersion (${ toVersion }), you probably wanted to migrate it?`);\n  }\n  verifyAvailableMigrations(migrations, toVersion, currentVersion, true);\n  let lock;\n  if (!isDryRun && !ignoreLock) {\n    lock = await repoOptions.repoLock.lock(path);\n  }\n  log(`Reverting from version ${ currentVersion } to ${ toVersion }`);\n  try {\n    const reversedMigrationArray = migrations.slice().reverse();\n    for (const migration of reversedMigrationArray) {\n      if (migration.version <= toVersion) {\n        break;\n      }\n      if (migration.version > currentVersion) {\n        continue;\n      }\n      log(`Reverting migration version ${ migration.version }`);\n      try {\n        if (!isDryRun) {\n          let progressCallback = () => {\n          };\n          if (onProgress) {\n            progressCallback = (percent, message) => onProgress(migration.version, percent.toFixed(2), message);\n          }\n          await migration.revert(backends, progressCallback);\n        }\n      } catch (e) {\n        const lastSuccessfullyRevertedVersion = migration.version;\n        log(`An exception was raised during execution of migration. Setting the repo's version to last successfully reverted version: ${ lastSuccessfullyRevertedVersion }`);\n        await repoVersion.setVersion(lastSuccessfullyRevertedVersion, backends);\n        e.message = `During reversion to version ${ migration.version } exception was raised: ${ e.message }`;\n        throw e;\n      }\n      log(`Reverting to version ${ migration.version } finished`);\n    }\n    if (!isDryRun) {\n      await repoVersion.setVersion(toVersion, backends);\n    }\n    log(`All migrations successfully reverted to version ${ toVersion }!`);\n  } finally {\n    if (!isDryRun && !ignoreLock && lock) {\n      await lock.close();\n    }\n  }\n}\nfunction verifyAvailableMigrations(migrations, fromVersion, toVersion, checkReversibility = false) {\n  let migrationCounter = 0;\n  for (const migration of migrations) {\n    if (migration.version > toVersion) {\n      break;\n    }\n    if (migration.version > fromVersion) {\n      if (checkReversibility && !migration.revert) {\n        throw new errors.NonReversibleMigrationError(`It is not possible to revert to version ${ fromVersion } because migration version ${ migration.version } is not reversible. Cancelling reversion.`);\n      }\n      migrationCounter++;\n    }\n  }\n  if (migrationCounter !== toVersion - fromVersion) {\n    throw new errors.InvalidValueError(`The ipfs-repo-migrations package does not have all migration to migrate from version ${ fromVersion } to ${ toVersion }`);\n  }\n}\nexport const getCurrentRepoVersion = repoVersion.getVersion;\nexport const errors = Errors;\nexport const migrations = defaultMigrations;","export class LockExistsError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'LockExistsError';\n    this.code = LockExistsError.code;\n  }\n}\nLockExistsError.code = 'ERR_LOCK_EXISTS';\nexport class NotFoundError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'NotFoundError';\n    this.code = NotFoundError.code;\n  }\n}\nNotFoundError.code = 'ERR_NOT_FOUND';\nexport class InvalidRepoVersionError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'InvalidRepoVersionError';\n    this.code = InvalidRepoVersionError.code;\n  }\n}\nInvalidRepoVersionError.code = 'ERR_INVALID_REPO_VERSION';\nexport const ERR_REPO_NOT_INITIALIZED = 'ERR_REPO_NOT_INITIALIZED';\nexport const ERR_REPO_ALREADY_OPEN = 'ERR_REPO_ALREADY_OPEN';\nexport const ERR_REPO_ALREADY_CLOSED = 'ERR_REPO_ALREADY_CLOSED';","import { NotFoundError } from '../errors.js';\nexport async function hasWithFallback(key, has, store) {\n  const result = await has(key);\n  if (result) {\n    return result;\n  }\n  const levelJs = findLevelJs(store);\n  if (!levelJs) {\n    return false;\n  }\n  return new Promise((resolve, reject) => {\n    const req = levelJs.store('readonly').get(key.toString());\n    req.transaction.onabort = () => {\n      reject(req.transaction.error);\n    };\n    req.transaction.oncomplete = () => {\n      resolve(Boolean(req.result));\n    };\n  });\n}\nexport async function getWithFallback(key, get, has, store) {\n  if (await has(key)) {\n    return get(key);\n  }\n  const levelJs = findLevelJs(store);\n  if (!levelJs) {\n    throw new NotFoundError();\n  }\n  return new Promise((resolve, reject) => {\n    const req = levelJs.store('readonly').get(key.toString());\n    req.transaction.onabort = () => {\n      reject(req.transaction.error);\n    };\n    req.transaction.oncomplete = () => {\n      if (req.result) {\n        return resolve(req.result);\n      }\n      reject(new NotFoundError());\n    };\n  });\n}\nfunction findLevelJs(store) {\n  let db = store;\n  while (db.db || db.child) {\n    db = db.db || db.child;\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db;\n    }\n  }\n}","import { Key } from 'interface-datastore/key';\nimport debug from 'debug';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport {\n  getWithFallback,\n  hasWithFallback\n} from './utils/level.js';\nconst log = debug('ipfs:repo:version');\nconst versionKey = new Key('version');\nexport function version(store) {\n  return {\n    async exists() {\n      return hasWithFallback(versionKey, store.has.bind(store), store);\n    },\n    async get() {\n      const buf = await getWithFallback(versionKey, store.get.bind(store), store.has.bind(store), store);\n      return parseInt(uint8ArrayToString(buf), 10);\n    },\n    set(version) {\n      return store.put(versionKey, uint8ArrayFromString(String(version)));\n    },\n    async check(expected) {\n      const version = await this.get();\n      log('comparing version: %s and %s', version, expected);\n      const compatibleVersion = version === 6 && expected === 7 || expected === 6 && version === 7;\n      return version === expected || compatibleVersion;\n    }\n  };\n}","import { Key } from 'interface-datastore/key';\nimport PQueue from 'p-queue';\nimport _get from 'just-safe-get';\nimport _set from 'just-safe-set';\nimport errCode from 'err-code';\nimport { NotFoundError } from './errors.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport {\n  getWithFallback,\n  hasWithFallback\n} from './utils/level.js';\nconst Queue = PQueue.default ? PQueue.default : PQueue;\nconst configKey = new Key('config');\nexport function config(store) {\n  const setQueue = new Queue({ concurrency: 1 });\n  const configStore = {\n    async getAll(options = {}) {\n      const encodedValue = await getWithFallback(configKey, store.get.bind(store), store.has.bind(store), store);\n      return JSON.parse(uint8ArrayToString(encodedValue));\n    },\n    async get(key, options = {}) {\n      if (key == null) {\n        throw new NotFoundError(`Key ${ key } does not exist in config`);\n      }\n      const config = await this.getAll(options);\n      const value = _get(config, key);\n      if (value === undefined) {\n        throw new NotFoundError(`Key ${ key } does not exist in config`);\n      }\n      return value;\n    },\n    set(key, value, options = {}) {\n      if (typeof key !== 'string' && !(key instanceof String)) {\n        throw errCode(new Error('Invalid key type: ' + typeof key), 'ERR_INVALID_KEY');\n      }\n      if (value === undefined || value instanceof Uint8Array) {\n        throw errCode(new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE');\n      }\n      return setQueue.add(() => _maybeDoSet({\n        key: key,\n        value: value\n      }, options.signal));\n    },\n    replace(value, options = {}) {\n      if (!value || value instanceof Uint8Array) {\n        throw errCode(new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE');\n      }\n      return setQueue.add(() => _maybeDoSet({\n        key: undefined,\n        value: value\n      }, options.signal));\n    },\n    async exists() {\n      return hasWithFallback(configKey, store.has.bind(store), store);\n    }\n  };\n  return configStore;\n  async function _maybeDoSet(m, signal) {\n    if (signal && signal.aborted) {\n      return;\n    }\n    const key = m.key;\n    const value = m.value;\n    if (key) {\n      const config = await configStore.getAll();\n      if (typeof config === 'object' && config !== null) {\n        _set(config, key, value);\n      }\n      return _saveAll(config);\n    }\n    return _saveAll(value);\n  }\n  function _saveAll(config) {\n    const buf = uint8ArrayFromString(JSON.stringify(config, null, 2));\n    return store.put(configKey, buf);\n  }\n}","import { Key } from 'interface-datastore';\nimport sortKeys from 'sort-keys';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nconst specKey = new Key('datastore_spec');\nexport function spec(store) {\n  return {\n    exists() {\n      return store.has(specKey);\n    },\n    async get() {\n      const buf = await store.get(specKey);\n      return JSON.parse(uint8ArrayToString(buf));\n    },\n    async set(spec) {\n      return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, { deep: true }))));\n    }\n  };\n}","import { Key } from 'interface-datastore/key';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nconst apiFile = new Key('api');\nexport function apiAddr(store) {\n  return {\n    async get() {\n      const value = await store.get(apiFile);\n      return value && value.toString();\n    },\n    set(value) {\n      return store.put(apiFile, uint8ArrayFromString(value.toString()));\n    },\n    delete() {\n      return store.delete(apiFile);\n    }\n  };\n}","import filter from 'it-filter';\nimport pushable from 'it-pushable';\nimport drain from 'it-drain';\nimport { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nimport { identity } from 'multiformats/hashes/identity';\nexport function createIdStore(store) {\n  return {\n    open() {\n      return store.open();\n    },\n    close() {\n      return store.close();\n    },\n    query(query, options) {\n      return store.query(query, options);\n    },\n    queryKeys(query, options) {\n      return store.queryKeys(query, options);\n    },\n    async get(cid, options) {\n      const extracted = extractContents(cid);\n      if (extracted.isIdentity) {\n        return Promise.resolve(extracted.digest);\n      }\n      return store.get(cid, options);\n    },\n    async *getMany(cids, options) {\n      for await (const cid of cids) {\n        yield this.get(cid, options);\n      }\n    },\n    async put(cid, buf, options) {\n      const {isIdentity} = extractContents(cid);\n      if (isIdentity) {\n        return;\n      }\n      await store.put(cid, buf, options);\n    },\n    async *putMany(pairs, options) {\n      const output = pushable();\n      const runner = globalThis.process && globalThis.process.nextTick ? globalThis.process.nextTick : globalThis.setImmediate || globalThis.setTimeout;\n      runner(async () => {\n        try {\n          await drain(store.putMany(async function* () {\n            for await (const {key, value} of pairs) {\n              if (!extractContents(key).isIdentity) {\n                yield {\n                  key,\n                  value\n                };\n              }\n              output.push({\n                key,\n                value\n              });\n            }\n          }()));\n          output.end();\n        } catch (err) {\n          output.end(err);\n        }\n      });\n      yield* output;\n    },\n    has(cid, options) {\n      const {isIdentity} = extractContents(cid);\n      if (isIdentity) {\n        return Promise.resolve(true);\n      }\n      return store.has(cid, options);\n    },\n    delete(cid, options) {\n      const {isIdentity} = extractContents(cid);\n      if (isIdentity) {\n        return Promise.resolve();\n      }\n      return store.delete(cid, options);\n    },\n    deleteMany(cids, options) {\n      return store.deleteMany(filter(cids, cid => !extractContents(cid).isIdentity), options);\n    },\n    batch() {\n      const batch = store.batch();\n      return {\n        put(cid, buf) {\n          const {isIdentity} = extractContents(cid);\n          if (isIdentity) {\n            return;\n          }\n          batch.put(cid, buf);\n        },\n        delete(cid) {\n          const {isIdentity} = extractContents(cid);\n          if (isIdentity) {\n            return;\n          }\n          batch.delete(cid);\n        },\n        commit: options => {\n          return batch.commit(options);\n        }\n      };\n    }\n  };\n}\nfunction extractContents(k) {\n  const cid = CID.asCID(k);\n  if (cid == null) {\n    throw errCode(new Error('Not a valid cid'), 'ERR_INVALID_CID');\n  }\n  if (cid.multihash.code !== identity.code) {\n    return { isIdentity: false };\n  }\n  return {\n    isIdentity: true,\n    digest: cid.multihash.digest\n  };\n}","import { LockExistsError } from '../errors.js';\nimport debug from 'debug';\nconst log = debug('ipfs:repo:lock:memory');\nconst lockFile = 'repo.lock';\nconst LOCKS = {};\nasync function lock(dir) {\n  const file = dir + '/' + lockFile;\n  log('locking %s', file);\n  if (LOCKS[file] === true) {\n    throw new LockExistsError(`Lock already being held for file: ${ file }`);\n  }\n  LOCKS[file] = true;\n  const closer = {\n    async close() {\n      if (LOCKS[file]) {\n        delete LOCKS[file];\n      }\n    }\n  };\n  return closer;\n}\nasync function locked(dir) {\n  const file = dir + '/' + lockFile;\n  log(`checking lock: ${ file }`);\n  return Boolean(LOCKS[file]);\n}\nexport const MemoryLock = {\n  lock,\n  locked\n};","import { MemoryLock } from './locks/memory.js';\nexport default {\n  autoMigrate: true,\n  onMigrationProgress: () => {\n  },\n  repoOwner: true,\n  repoLock: MemoryLock\n};","export default {\n  Spec: {\n    type: 'mount',\n    mounts: [\n      {\n        mountpoint: '/blocks',\n        type: 'measure',\n        prefix: 'flatfs.datastore',\n        child: {\n          type: 'flatfs',\n          path: 'blocks',\n          sync: true,\n          shardFunc: '/repo/flatfs/shard/v1/next-to-last/2'\n        }\n      },\n      {\n        mountpoint: '/',\n        type: 'measure',\n        prefix: 'leveldb.datastore',\n        child: {\n          type: 'levelds',\n          path: 'datastore',\n          compression: 'none'\n        }\n      }\n    ]\n  }\n};","import { Key } from 'interface-datastore/key';\nimport { CID } from 'multiformats';\nimport * as raw from 'multiformats/codecs/raw';\nimport errCode from 'err-code';\nimport { base32 } from 'multiformats/bases/base32';\nimport * as Digest from 'multiformats/hashes/digest';\nexport function cidToKey(c) {\n  const cid = CID.asCID(c);\n  if (cid == null) {\n    throw errCode(new Error('Not a valid cid'), 'ERR_INVALID_CID');\n  }\n  const encoded = base32.encode(cid.multihash.bytes);\n  return new Key('/' + encoded.slice(1).toUpperCase(), false);\n}\nexport function keyToCid(key) {\n  return CID.createV1(raw.code, keyToMultihash(key));\n}\nexport function keyToMultihash(key) {\n  return Digest.decode(base32.decode(`b${ key.toString().toLowerCase().substring(1) }`));\n}","import debug from 'debug';\nimport { createUnsafe } from 'multiformats/block';\nconst log = debug('ipfs:repo:utils:walk-dag');\nexport async function* walkDag(cid, blockstore, loadCodec, options) {\n  try {\n    const bytes = await blockstore.get(cid, options);\n    const codec = await loadCodec(cid.code);\n    const block = createUnsafe({\n      bytes,\n      cid,\n      codec\n    });\n    for (const [, childCid] of block.links()) {\n      yield childCid;\n      yield* walkDag(childCid, blockstore, loadCodec, options);\n    }\n  } catch (err) {\n    log('Could not walk DAG for CID', cid.toString(), err);\n    throw err;\n  }\n}","import { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nimport debug from 'debug';\nimport first from 'it-first';\nimport { createUnsafe } from 'multiformats/block';\nimport * as cborg from 'cborg';\nimport * as dagPb from '@ipld/dag-pb';\nimport {\n  cidToKey,\n  keyToMultihash\n} from './utils/blockstore.js';\nimport { walkDag } from './utils/walk-dag.js';\nimport { PinTypes } from './pin-types.js';\nfunction invalidPinTypeErr(type) {\n  const errMsg = `Invalid type '${ type }', must be one of {direct, indirect, recursive, all}`;\n  return errCode(new Error(errMsg), 'ERR_INVALID_PIN_TYPE');\n}\nexport class PinManager {\n  constructor({pinstore, blockstore, loadCodec}) {\n    this.pinstore = pinstore;\n    this.blockstore = blockstore;\n    this.loadCodec = loadCodec;\n    this.log = debug('ipfs:repo:pin');\n    this.directPins = new Set();\n    this.recursivePins = new Set();\n  }\n  async pinDirectly(cid, options = {}) {\n    await this.blockstore.get(cid, options);\n    const pin = { depth: 0 };\n    if (cid.version !== 0) {\n      pin.version = cid.version;\n    }\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code;\n    }\n    if (options.metadata) {\n      pin.metadata = options.metadata;\n    }\n    return this.pinstore.put(cidToKey(cid), cborg.encode(pin));\n  }\n  unpin(cid, options) {\n    return this.pinstore.delete(cidToKey(cid), options);\n  }\n  async pinRecursively(cid, options = {}) {\n    await this.fetchCompleteDag(cid, options);\n    const pin = { depth: Infinity };\n    if (cid.version !== 0) {\n      pin.version = cid.version;\n    }\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code;\n    }\n    if (options.metadata) {\n      pin.metadata = options.metadata;\n    }\n    await this.pinstore.put(cidToKey(cid), cborg.encode(pin));\n  }\n  async *directKeys(options) {\n    for await (const entry of this.pinstore.query({\n        filters: [entry => {\n            const pin = cborg.decode(entry.value);\n            return pin.depth === 0;\n          }]\n      })) {\n      const pin = cborg.decode(entry.value);\n      const version = pin.version || 0;\n      const codec = pin.codec != null ? pin.codec : dagPb.code;\n      const multihash = keyToMultihash(entry.key);\n      yield {\n        cid: CID.create(version, codec, multihash),\n        metadata: pin.metadata\n      };\n    }\n  }\n  async *recursiveKeys(options) {\n    for await (const entry of this.pinstore.query({\n        filters: [entry => {\n            const pin = cborg.decode(entry.value);\n            return pin.depth === Infinity;\n          }]\n      })) {\n      const pin = cborg.decode(entry.value);\n      const version = pin.version || 0;\n      const codec = pin.codec != null ? pin.codec : dagPb.code;\n      const multihash = keyToMultihash(entry.key);\n      yield {\n        cid: CID.create(version, codec, multihash),\n        metadata: pin.metadata\n      };\n    }\n  }\n  async *indirectKeys(options) {\n    for await (const {cid} of this.recursiveKeys()) {\n      for await (const childCid of walkDag(cid, this.blockstore, this.loadCodec, options)) {\n        const types = [PinTypes.recursive];\n        const result = await this.isPinnedWithType(childCid, types);\n        if (result.pinned) {\n          continue;\n        }\n        yield childCid;\n      }\n    }\n  }\n  async isPinnedWithType(cid, types, options) {\n    if (!Array.isArray(types)) {\n      types = [types];\n    }\n    const all = types.includes(PinTypes.all);\n    const direct = types.includes(PinTypes.direct);\n    const recursive = types.includes(PinTypes.recursive);\n    const indirect = types.includes(PinTypes.indirect);\n    if (recursive || direct || all) {\n      const result = await first(this.pinstore.query({\n        prefix: cidToKey(cid).toString(),\n        filters: [entry => {\n            if (all) {\n              return true;\n            }\n            const pin = cborg.decode(entry.value);\n            return types.includes(pin.depth === 0 ? PinTypes.direct : PinTypes.recursive);\n          }],\n        limit: 1\n      }));\n      if (result) {\n        const pin = cborg.decode(result.value);\n        return {\n          cid,\n          pinned: true,\n          reason: pin.depth === 0 ? PinTypes.direct : PinTypes.recursive,\n          metadata: pin.metadata\n        };\n      }\n    }\n    const self = this;\n    async function* findChild(key, source) {\n      for await (const {cid: parentCid} of source) {\n        for await (const childCid of walkDag(parentCid, self.blockstore, self.loadCodec)) {\n          if (childCid.equals(key)) {\n            yield parentCid;\n            return;\n          }\n        }\n      }\n    }\n    if (all || indirect) {\n      const parentCid = await first(findChild(cid, this.recursiveKeys()));\n      if (parentCid) {\n        return {\n          cid,\n          pinned: true,\n          reason: PinTypes.indirect,\n          parent: parentCid\n        };\n      }\n    }\n    return {\n      cid,\n      pinned: false\n    };\n  }\n  async fetchCompleteDag(cid, options) {\n    const seen = new Set();\n    const walkDag = async (cid, options) => {\n      if (seen.has(cid.toString())) {\n        return;\n      }\n      seen.add(cid.toString());\n      const bytes = await this.blockstore.get(cid, options);\n      const codec = await this.loadCodec(cid.code);\n      const block = createUnsafe({\n        bytes,\n        cid,\n        codec\n      });\n      await Promise.all([...block.links()].map(([, childCid]) => walkDag(childCid, options)));\n    };\n    await walkDag(cid, options);\n  }\n  static checkPinType(type) {\n    if (typeof type !== 'string' || !Object.keys(PinTypes).includes(type)) {\n      throw invalidPinTypeErr(type);\n    }\n    return true;\n  }\n}","import map from 'it-map';\nimport errCode from 'err-code';\nimport { PinTypes } from './pin-types.js';\nexport function createPinnedBlockstore(pins, store) {\n  return {\n    open() {\n      return store.open();\n    },\n    close() {\n      return store.close();\n    },\n    query(query, options) {\n      return store.query(query, options);\n    },\n    queryKeys(query, options) {\n      return store.queryKeys(query, options);\n    },\n    async get(cid, options) {\n      return store.get(cid, options);\n    },\n    async *getMany(cids, options) {\n      yield* store.getMany(cids, options);\n    },\n    async put(cid, buf, options) {\n      await store.put(cid, buf, options);\n    },\n    async *putMany(pairs, options) {\n      yield* store.putMany(pairs, options);\n    },\n    has(cid, options) {\n      return store.has(cid, options);\n    },\n    async delete(cid, options) {\n      await ensureNotPinned(cid, pins);\n      return store.delete(cid, options);\n    },\n    deleteMany(cids, options) {\n      return store.deleteMany(map(cids, async cid => {\n        await ensureNotPinned(cid, pins);\n        return cid;\n      }), options);\n    },\n    batch() {\n      return store.batch();\n    }\n  };\n}\nasync function ensureNotPinned(cid, pins) {\n  const {pinned, reason} = await pins.isPinnedWithType(cid, PinTypes.all);\n  if (pinned) {\n    throw errCode(new Error(`pinned: ${ reason }`), 'ERR_BLOCK_PINNED');\n  }\n}","import { CID } from 'multiformats/cid';\nimport debug from 'debug';\nimport { notFoundError } from 'datastore-core/errors';\nimport parallelBatch from 'it-parallel-batch';\nimport { pipe } from 'it-pipe';\nimport merge from 'it-merge';\nimport map from 'it-map';\nimport filter from 'it-filter';\nimport { Key } from 'interface-datastore/key';\nimport { base32 } from 'multiformats/bases/base32';\nimport { walkDag } from './utils/walk-dag.js';\nconst log = debug('ipfs:repo:gc');\nconst ERR_NOT_FOUND = notFoundError().code;\nconst BLOCK_RM_CONCURRENCY = 256;\nconst MFS_ROOT_KEY = new Key('/local/filesroot');\nexport function gc({gcLock, pins, blockstore, root, loadCodec}) {\n  async function* gc() {\n    const start = Date.now();\n    log('Creating set of marked blocks');\n    const release = await gcLock.writeLock();\n    try {\n      const markedSet = await createMarkedSet({\n        pins,\n        blockstore,\n        root,\n        loadCodec\n      });\n      const blockKeys = blockstore.queryKeys({});\n      yield* deleteUnmarkedBlocks({ blockstore }, markedSet, blockKeys);\n      log(`Complete (${ Date.now() - start }ms)`);\n    } finally {\n      release();\n    }\n  }\n  return gc;\n}\nasync function createMarkedSet({pins, blockstore, loadCodec, root}) {\n  const mfsSource = async function* () {\n    let mh;\n    try {\n      mh = await root.get(MFS_ROOT_KEY);\n    } catch (err) {\n      if (err.code === ERR_NOT_FOUND) {\n        log('No blocks in MFS');\n        return;\n      }\n      throw err;\n    }\n    const rootCid = CID.decode(mh);\n    yield rootCid;\n    yield* walkDag(rootCid, blockstore, loadCodec);\n  }();\n  const pinsSource = merge(map(pins.recursiveKeys(), ({cid}) => cid), pins.indirectKeys(), map(pins.directKeys(), ({cid}) => cid), mfsSource);\n  const output = new Set();\n  for await (const cid of merge(pinsSource, mfsSource)) {\n    output.add(base32.encode(cid.multihash.bytes));\n  }\n  return output;\n}\nasync function* deleteUnmarkedBlocks({blockstore}, markedSet, blockKeys) {\n  let blocksCount = 0;\n  let removedBlocksCount = 0;\n  const removeBlock = async cid => {\n    return async function remove() {\n      blocksCount++;\n      try {\n        const b32 = base32.encode(cid.multihash.bytes);\n        if (markedSet.has(b32)) {\n          return null;\n        }\n        try {\n          await blockstore.delete(cid);\n          removedBlocksCount++;\n        } catch (err) {\n          return { err: new Error(`Could not delete block with CID ${ cid }: ${ err.message }`) };\n        }\n        return { cid };\n      } catch (err) {\n        const msg = `Could delete block with CID ${ cid }`;\n        log(msg, err);\n        return { err: new Error(msg + `: ${ err.message }`) };\n      }\n    };\n  };\n  yield* pipe(parallelBatch(map(blockKeys, removeBlock), BLOCK_RM_CONCURRENCY), source => filter(source, Boolean));\n  log(`Marked set has ${ markedSet.size } unique blocks. Blockstore has ${ blocksCount } blocks. ` + `Deleted ${ removedBlocksCount } blocks.`);\n}","import _get from 'just-safe-get';\nimport debug from 'debug';\nimport errCode from 'err-code';\nimport * as migrator from 'ipfs-repo-migrations';\nimport bytes from 'bytes';\nimport merge from 'merge-options';\nimport * as CONSTANTS from './constants.js';\nimport { version } from './version.js';\nimport { config } from './config.js';\nimport { spec } from './spec.js';\nimport { apiAddr } from './api-addr.js';\nimport { createIdStore } from './idstore.js';\nimport defaultOptions from './default-options.js';\nimport defaultDatastore from './default-datastore.js';\nimport * as ERRORS from './errors.js';\nimport { PinManager } from './pin-manager.js';\nimport { createPinnedBlockstore } from './pinned-blockstore.js';\nimport mortice from 'mortice';\nimport { gc } from './gc.js';\nconst log = debug('ipfs:repo');\nconst noLimit = Number.MAX_SAFE_INTEGER;\nconst AUTO_MIGRATE_CONFIG_KEY = 'repoAutoMigrate';\nclass Repo {\n  constructor(path, loadCodec, backends, options) {\n    if (typeof path !== 'string') {\n      throw new Error('missing repo path');\n    }\n    if (typeof loadCodec !== 'function') {\n      throw new Error('missing codec loader');\n    }\n    this.options = merge(defaultOptions, options);\n    this.closed = true;\n    this.path = path;\n    this.root = backends.root;\n    this.datastore = backends.datastore;\n    this.keys = backends.keys;\n    const blockstore = backends.blocks;\n    const pinstore = backends.pins;\n    this.pins = new PinManager({\n      pinstore,\n      blockstore,\n      loadCodec\n    });\n    const pinnedBlockstore = createPinnedBlockstore(this.pins, blockstore);\n    this.blocks = createIdStore(pinnedBlockstore);\n    this.version = version(this.root);\n    this.config = config(this.root);\n    this.spec = spec(this.root);\n    this.apiAddr = apiAddr(this.root);\n    this.gcLock = mortice(path, { singleProcess: this.options.repoOwner !== false });\n    this.gc = gc({\n      gcLock: this.gcLock,\n      pins: this.pins,\n      blockstore: this.blocks,\n      root: this.root,\n      loadCodec\n    });\n  }\n  async init(config) {\n    log('initializing at: %s', this.path);\n    await this._openRoot();\n    await this.config.replace(buildConfig(config));\n    await this.spec.set(buildDatastoreSpec(config));\n    await this.version.set(CONSTANTS.repoVersion);\n  }\n  async isInitialized() {\n    if (!this.closed) {\n      return true;\n    }\n    try {\n      await this._openRoot();\n      await this._checkInitialized();\n      await this.root.close();\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n  async open() {\n    if (!this.closed) {\n      throw errCode(new Error('repo is already open'), ERRORS.ERR_REPO_ALREADY_OPEN);\n    }\n    log('opening at: %s', this.path);\n    try {\n      await this._openRoot();\n      await this._checkInitialized();\n      this._lockfile = await this._openLock();\n      log('acquired repo.lock');\n      const isCompatible = await this.version.check(CONSTANTS.repoVersion);\n      if (!isCompatible) {\n        if (await this._isAutoMigrationEnabled()) {\n          await this._migrate(CONSTANTS.repoVersion, {\n            root: this.root,\n            datastore: this.datastore,\n            pins: this.pins.pinstore,\n            blocks: this.pins.blockstore,\n            keys: this.keys\n          });\n        } else {\n          throw new ERRORS.InvalidRepoVersionError('Incompatible repo versions. Automatic migrations disabled. Please migrate the repo manually.');\n        }\n      }\n      log('creating datastore');\n      await this.datastore.open();\n      log('creating blocks');\n      await this.blocks.open();\n      log('creating keystore');\n      await this.keys.open();\n      log('creating pins');\n      await this.pins.pinstore.open();\n      this.closed = false;\n      log('all opened');\n    } catch (err) {\n      if (this._lockfile) {\n        try {\n          await this._closeLock();\n          this._lockfile = null;\n        } catch (err2) {\n          log('error removing lock', err2);\n        }\n      }\n      throw err;\n    }\n  }\n  async _openRoot() {\n    try {\n      await this.root.open();\n    } catch (err) {\n      if (err.message !== 'Already open') {\n        throw err;\n      }\n    }\n  }\n  async _openLock() {\n    const lockfile = await this.options.repoLock.lock(this.path);\n    if (typeof lockfile.close !== 'function') {\n      throw errCode(new Error('Locks must have a close method'), 'ERR_NO_CLOSE_FUNCTION');\n    }\n    return lockfile;\n  }\n  _closeLock() {\n    return this._lockfile && this._lockfile.close();\n  }\n  async _checkInitialized() {\n    log('init check');\n    let config;\n    try {\n      [config] = await Promise.all([\n        this.config.exists(),\n        this.spec.exists(),\n        this.version.exists()\n      ]);\n    } catch (err) {\n      if (err.code === 'ERR_NOT_FOUND') {\n        throw errCode(new Error('repo is not initialized yet'), ERRORS.ERR_REPO_NOT_INITIALIZED, { path: this.path });\n      }\n      throw err;\n    }\n    if (!config) {\n      throw errCode(new Error('repo is not initialized yet'), ERRORS.ERR_REPO_NOT_INITIALIZED, { path: this.path });\n    }\n  }\n  async close() {\n    if (this.closed) {\n      throw errCode(new Error('repo is already closed'), ERRORS.ERR_REPO_ALREADY_CLOSED);\n    }\n    log('closing at: %s', this.path);\n    try {\n      await this.apiAddr.delete();\n    } catch (err) {\n      if (err.code !== ERRORS.ERR_REPO_NOT_INITIALIZED && !err.message.startsWith('ENOENT')) {\n        throw err;\n      }\n    }\n    await Promise.all([\n      this.root,\n      this.blocks,\n      this.keys,\n      this.datastore,\n      this.pins.pinstore\n    ].map(store => store && store.close()));\n    log('unlocking');\n    this.closed = true;\n    await this._closeLock();\n  }\n  exists() {\n    return this.version.exists();\n  }\n  async stat() {\n    if (this.datastore && this.keys) {\n      const [storageMax, blocks, version, datastore, keys] = await Promise.all([\n        this._storageMaxStat(),\n        this._blockStat(),\n        this.version.get(),\n        getSize(this.datastore),\n        getSize(this.keys)\n      ]);\n      const size = blocks.size + datastore + keys;\n      return {\n        repoPath: this.path,\n        storageMax,\n        version: version,\n        numObjects: blocks.count,\n        repoSize: size\n      };\n    }\n    throw errCode(new Error('repo is not initialized yet'), ERRORS.ERR_REPO_NOT_INITIALIZED, { path: this.path });\n  }\n  async _isAutoMigrationEnabled() {\n    if (this.options.autoMigrate !== undefined) {\n      return this.options.autoMigrate;\n    }\n    let autoMigrateConfig;\n    try {\n      autoMigrateConfig = await this.config.get(AUTO_MIGRATE_CONFIG_KEY);\n    } catch (e) {\n      if (e.code === ERRORS.NotFoundError.code) {\n        autoMigrateConfig = true;\n      } else {\n        throw e;\n      }\n    }\n    return autoMigrateConfig;\n  }\n  async _migrate(toVersion, backends) {\n    const currentRepoVersion = await this.version.get();\n    if (currentRepoVersion > toVersion) {\n      log(`reverting to version ${ toVersion }`);\n      return migrator.revert(this.path, backends, this.options, toVersion, {\n        ignoreLock: true,\n        onProgress: this.options.onMigrationProgress\n      });\n    } else {\n      log(`migrating to version ${ toVersion }`);\n      return migrator.migrate(this.path, backends, this.options, toVersion, {\n        ignoreLock: true,\n        onProgress: this.options.onMigrationProgress\n      });\n    }\n  }\n  async _storageMaxStat() {\n    try {\n      const max = await this.config.get('Datastore.StorageMax');\n      return BigInt(bytes(max));\n    } catch (err) {\n      return BigInt(noLimit);\n    }\n  }\n  async _blockStat() {\n    let count = BigInt(0);\n    let size = BigInt(0);\n    if (this.blocks) {\n      for await (const {key, value} of this.blocks.query({})) {\n        count += BigInt(1);\n        size += BigInt(value.byteLength);\n        size += BigInt(key.bytes.byteLength);\n      }\n    }\n    return {\n      count,\n      size\n    };\n  }\n}\nasync function getSize(datastore) {\n  let sum = BigInt(0);\n  for await (const block of datastore.query({})) {\n    sum += BigInt(block.value.byteLength);\n    sum += BigInt(block.key.uint8Array().byteLength);\n  }\n  return sum;\n}\nexport function createRepo(path, loadCodec, backends, options) {\n  return new Repo(path, loadCodec, backends, options);\n}\nfunction buildConfig(_config) {\n  _config.Datastore = Object.assign({}, defaultDatastore, _get(_config, 'datastore'));\n  return _config;\n}\nfunction buildDatastoreSpec(_config) {\n  const spec = {\n    ...defaultDatastore.Spec,\n    ..._get(_config, 'Datastore.Spec')\n  };\n  return {\n    type: spec.type,\n    mounts: spec.mounts.map(mounting => ({\n      mountpoint: mounting.mountpoint,\n      type: mounting.child.type,\n      path: mounting.child.path,\n      shardFunc: mounting.child.shardFunc\n    }))\n  };\n}","import { Key } from 'interface-datastore';\nimport {\n  BaseDatastore,\n  Errors\n} from 'datastore-core';\nimport filter from 'it-filter';\nimport map from 'it-map';\nimport take from 'it-take';\nimport sort from 'it-sort';\nimport Level from 'level';\nexport class LevelDatastore extends BaseDatastore {\n  constructor(path, opts) {\n    super();\n    this.path = path;\n    this.opts = opts;\n    if (opts && opts.db) {\n      this.database = opts.db;\n      delete opts.db;\n    } else {\n      this.database = Level;\n    }\n  }\n  _initDb() {\n    return new Promise((resolve, reject) => {\n      this.db = this.database(this.path, {\n        ...this.opts,\n        valueEncoding: 'binary',\n        compression: false\n      }, err => {\n        if (err) {\n          return reject(err);\n        }\n        resolve(this.db);\n      });\n    });\n  }\n  async open() {\n    try {\n      if (this.db) {\n        await this.db.open();\n      } else {\n        this.db = await this._initDb();\n      }\n    } catch (err) {\n      throw Errors.dbOpenFailedError(err);\n    }\n  }\n  async put(key, value) {\n    try {\n      await this.db.put(key.toString(), value);\n    } catch (err) {\n      throw Errors.dbWriteFailedError(err);\n    }\n  }\n  async get(key) {\n    let data;\n    try {\n      data = await this.db.get(key.toString());\n    } catch (err) {\n      if (err.notFound)\n        throw Errors.notFoundError(err);\n      throw Errors.dbWriteFailedError(err);\n    }\n    return data;\n  }\n  async has(key) {\n    try {\n      await this.db.get(key.toString());\n    } catch (err) {\n      if (err.notFound)\n        return false;\n      throw err;\n    }\n    return true;\n  }\n  async delete(key) {\n    try {\n      await this.db.del(key.toString());\n    } catch (err) {\n      throw Errors.dbDeleteFailedError(err);\n    }\n  }\n  close() {\n    return this.db && this.db.close();\n  }\n  batch() {\n    const ops = [];\n    return {\n      put: (key, value) => {\n        ops.push({\n          type: 'put',\n          key: key.toString(),\n          value: value\n        });\n      },\n      delete: key => {\n        ops.push({\n          type: 'del',\n          key: key.toString()\n        });\n      },\n      commit: () => {\n        return this.db.batch(ops);\n      }\n    };\n  }\n  query(q) {\n    let it = this._query({\n      values: true,\n      prefix: q.prefix\n    });\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sort(it, f), it);\n    }\n    const {offset, limit} = q;\n    if (offset) {\n      let i = 0;\n      it = filter(it, () => i++ >= offset);\n    }\n    if (limit) {\n      it = take(it, limit);\n    }\n    return it;\n  }\n  queryKeys(q) {\n    let it = map(this._query({\n      values: false,\n      prefix: q.prefix\n    }), ({key}) => key);\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sort(it, f), it);\n    }\n    const {offset, limit} = q;\n    if (offset) {\n      let i = 0;\n      it = filter(it, () => i++ >= offset);\n    }\n    if (limit) {\n      it = take(it, limit);\n    }\n    return it;\n  }\n  _query(opts) {\n    const iteratorOpts = {\n      keys: true,\n      keyAsBuffer: true,\n      values: opts.values\n    };\n    if (opts.prefix != null) {\n      const prefix = opts.prefix.toString();\n      iteratorOpts.gte = prefix;\n      iteratorOpts.lt = prefix + 'ÿ';\n    }\n    return levelIteratorToIterator(this.db.iterator(iteratorOpts));\n  }\n}\nfunction levelIteratorToIterator(li) {\n  return {\n    [Symbol.asyncIterator]() {\n      return {\n        next: () => new Promise((resolve, reject) => {\n          li.next((err, key, value) => {\n            if (err)\n              return reject(err);\n            if (key == null) {\n              return li.end(err => {\n                if (err)\n                  return reject(err);\n                resolve({\n                  done: true,\n                  value: undefined\n                });\n              });\n            }\n            resolve({\n              done: false,\n              value: {\n                key: new Key(key, false),\n                value\n              }\n            });\n          });\n        }),\n        return: () => new Promise((resolve, reject) => {\n          li.end(err => {\n            if (err)\n              return reject(err);\n            resolve({\n              done: true,\n              value: undefined\n            });\n          });\n        })\n      };\n    }\n  };\n}","import drain from 'it-drain';\nimport pushable from 'it-pushable';\nimport { Key } from 'interface-datastore/key';\nimport { CID } from 'multiformats/cid';\nimport * as raw from 'multiformats/codecs/raw';\nimport * as Digest from 'multiformats/hashes/digest';\nimport {\n  base32,\n  base32pad\n} from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport errcode from 'err-code';\nimport { BaseBlockstore } from 'blockstore-core/base';\nfunction cidToKey(cid) {\n  const c = CID.asCID(cid);\n  if (!c) {\n    throw errcode(new Error('Not a valid cid'), 'ERR_INVALID_CID');\n  }\n  return new Key('/' + base32.encode(c.multihash.bytes).slice(1).toUpperCase(), false);\n}\nfunction keyToCid(key) {\n  return CID.createV1(raw.code, Digest.decode(base32.decode('b' + key.toString().slice(1).toLowerCase())));\n}\nfunction convertPrefix(prefix) {\n  const firstChar = prefix.substring(0, 1);\n  if (firstChar === '/') {\n    return convertPrefix(prefix.substring(1));\n  }\n  let decoder;\n  if (firstChar.toLowerCase() === 'b') {\n    decoder = input => base32.decode(input.toLowerCase()).subarray(2);\n  } else if (firstChar.toLowerCase() === 'c') {\n    decoder = input => base32pad.decode(input.toLowerCase()).subarray(2);\n  } else if (firstChar === 'z') {\n    decoder = input => base58btc.decode(input).subarray(2);\n  } else if (firstChar === 'Q') {\n    decoder = input => base58btc.decode('z' + input);\n  } else {\n    decoder = input => base32.decode('b' + input.toLowerCase()).subarray(2);\n  }\n  let bytes;\n  for (let i = 1; i < prefix.length; i++) {\n    try {\n      bytes = decoder(prefix.substring(0, i));\n    } catch (err) {\n      if (err.message !== 'Unexpected end of data') {\n        throw err;\n      }\n    }\n  }\n  let str = '/C';\n  if (bytes) {\n    str = `/${ base32.encode(bytes).slice(1, -1).toUpperCase() || 'C' }`;\n  }\n  return str;\n}\nfunction convertQuery(query) {\n  return {\n    ...query,\n    prefix: query.prefix ? convertPrefix(query.prefix) : undefined,\n    filters: query.filters ? query.filters.map(filter => pair => {\n      return filter({\n        key: keyToCid(pair.key),\n        value: pair.value\n      });\n    }) : undefined,\n    orders: query.orders ? query.orders.map(order => (a, b) => {\n      return order({\n        key: keyToCid(a.key),\n        value: a.value\n      }, {\n        key: keyToCid(b.key),\n        value: b.value\n      });\n    }) : undefined\n  };\n}\nfunction convertKeyQuery(query) {\n  return {\n    ...query,\n    prefix: query.prefix ? convertPrefix(query.prefix) : undefined,\n    filters: query.filters ? query.filters.map(filter => key => {\n      return filter(keyToCid(key));\n    }) : undefined,\n    orders: query.orders ? query.orders.map(order => (a, b) => {\n      return order(keyToCid(a), keyToCid(b));\n    }) : undefined\n  };\n}\nexport class BlockstoreDatastoreAdapter extends BaseBlockstore {\n  constructor(datastore) {\n    super();\n    this.child = datastore;\n  }\n  open() {\n    return this.child.open();\n  }\n  close() {\n    return this.child.close();\n  }\n  async *query(query, options) {\n    for await (const {key, value} of this.child.query(convertQuery(query), options)) {\n      yield {\n        key: keyToCid(key),\n        value\n      };\n    }\n  }\n  async *queryKeys(query, options) {\n    for await (const key of this.child.queryKeys(convertKeyQuery(query), options)) {\n      yield keyToCid(key);\n    }\n  }\n  async get(cid, options) {\n    return this.child.get(cidToKey(cid), options);\n  }\n  async *getMany(cids, options) {\n    for await (const cid of cids) {\n      yield this.get(cid, options);\n    }\n  }\n  async put(cid, value, options) {\n    await this.child.put(cidToKey(cid), value, options);\n  }\n  async *putMany(blocks, options) {\n    const output = pushable();\n    const runner = globalThis.process && globalThis.process.nextTick ? globalThis.process.nextTick : globalThis.setImmediate || globalThis.setTimeout;\n    runner(async () => {\n      try {\n        const store = this.child;\n        await drain(this.child.putMany(async function* () {\n          for await (const block of blocks) {\n            const key = cidToKey(block.key);\n            const exists = await store.has(key, options);\n            if (!exists) {\n              yield {\n                key,\n                value: block.value\n              };\n            }\n            output.push(block);\n          }\n        }()));\n        output.end();\n      } catch (err) {\n        output.end(err);\n      }\n    });\n    yield* output;\n  }\n  has(cid, options) {\n    return this.child.has(cidToKey(cid), options);\n  }\n  delete(cid, options) {\n    return this.child.delete(cidToKey(cid), options);\n  }\n  deleteMany(cids, options) {\n    const out = pushable();\n    drain(this.child.deleteMany(async function* () {\n      for await (const cid of cids) {\n        yield cidToKey(cid);\n        out.push(cid);\n      }\n      out.end();\n    }(), options)).catch(err => {\n      out.end(err);\n    });\n    return out;\n  }\n}","import { createRepo as create } from 'ipfs-repo';\nimport { LevelDatastore } from 'datastore-level';\nimport { BlockstoreDatastoreAdapter } from 'blockstore-datastore-adapter';\nimport { MemoryLock } from 'ipfs-repo/locks/memory';\nexport function createRepo(print, codecs, options) {\n  const repoPath = options.path || 'ipfs';\n  return create(repoPath, codeOrName => codecs.getCodec(codeOrName), {\n    root: new LevelDatastore(repoPath, {\n      prefix: '',\n      version: 2\n    }),\n    blocks: new BlockstoreDatastoreAdapter(new LevelDatastore(`${ repoPath }/blocks`, {\n      prefix: '',\n      version: 2\n    })),\n    datastore: new LevelDatastore(`${ repoPath }/datastore`, {\n      prefix: '',\n      version: 2\n    }),\n    keys: new LevelDatastore(`${ repoPath }/keys`, {\n      prefix: '',\n      version: 2\n    }),\n    pins: new LevelDatastore(`${ repoPath }/pins`, {\n      prefix: '',\n      version: 2\n    })\n  }, {\n    autoMigrate: options.autoMigrate,\n    onMigrationProgress: options.onMigrationProgress || print,\n    repoLock: MemoryLock\n  });\n}","import libp2pGossipsub from 'libp2p-gossipsub';\nexport const routers = { gossipsub: libp2pGossipsub };","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createWantlist = configure(api => {\n  async function wantlist(options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json();\n    return (res.Keys || []).map(k => CID.parse(k['/']));\n  }\n  return wantlist;\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createWantlistForPeer = configure(api => {\n  async function wantlistForPeer(peerId, options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        peer: peerId.toString()\n      }),\n      headers: options.headers\n    })).json();\n    return (res.Keys || []).map(k => CID.parse(k['/']));\n  }\n  return wantlistForPeer;\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  }\n  return stat;\n});\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => CID.parse(k['/'])),\n    peers: res.Peers || [],\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  };\n}","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createUnwant = configure(api => {\n  async function unwant(cid, options = {}) {\n    const res = await api.post('bitswap/unwant', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    return res.json();\n  }\n  return unwant;\n});","import { createWantlist } from './wantlist.js';\nimport { createWantlistForPeer } from './wantlist-for-peer.js';\nimport { createStat } from './stat.js';\nimport { createUnwant } from './unwant.js';\nexport function createBitswap(config) {\n  return {\n    wantlist: createWantlist(config),\n    wantlistForPeer: createWantlistForPeer(config),\n    unwant: createUnwant(config),\n    stat: createStat(config)\n  };\n}","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGet = configure(api => {\n  async function get(cid, options = {}) {\n    const res = await api.post('block/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    return new Uint8Array(await res.arrayBuffer());\n  }\n  return get;\n});","import { normaliseInput } from './files/normalise-input-multiple.browser.js';\nimport { modeToString } from './mode-to-string.js';\nexport async function multipartRequest(source, abortController, headers = {}) {\n  const parts = [];\n  const formData = new FormData();\n  let index = 0;\n  let total = 0;\n  for await (const {content, path, mode, mtime} of normaliseInput(source)) {\n    let fileSuffix = '';\n    const type = content ? 'file' : 'dir';\n    if (index > 0) {\n      fileSuffix = `-${ index }`;\n    }\n    let fieldName = type + fileSuffix;\n    const qs = [];\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${ modeToString(mode) }`);\n    }\n    if (mtime != null) {\n      const {secs, nsecs} = mtime;\n      qs.push(`mtime=${ secs }`);\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${ nsecs }`);\n      }\n    }\n    if (qs.length) {\n      fieldName = `${ fieldName }?${ qs.join('&') }`;\n    }\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined);\n      const end = total + content.size;\n      parts.push({\n        name: path,\n        start: total,\n        end\n      });\n      total = end;\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }));\n    } else {\n      throw new Error('path or content or both must be set');\n    }\n    index++;\n  }\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  };\n}","import { anySignal } from 'any-signal';\nfunction filter(signals) {\n  return signals.filter(Boolean);\n}\nexport function abortSignal(...signals) {\n  return anySignal(filter(signals));\n}","import { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport const createPut = configure(api => {\n  async function put(data, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    let res;\n    try {\n      const response = await api.post('block/put', {\n        signal: signal,\n        searchParams: toUrlSearchParams(options),\n        ...await multipartRequest([data], controller, options.headers)\n      });\n      res = await response.json();\n    } catch (err) {\n      if (options.format === 'dag-pb') {\n        return put(data, {\n          ...options,\n          format: 'protobuf'\n        });\n      } else if (options.format === 'dag-cbor') {\n        return put(data, {\n          ...options,\n          format: 'cbor'\n        });\n      }\n      throw err;\n    }\n    return CID.parse(res.Key);\n  }\n  return put;\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createRm = configure(api => {\n  async function* rm(cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid];\n    }\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed);\n    }\n  }\n  return rm;\n});\nfunction toCoreInterface(removed) {\n  const out = { cid: CID.parse(removed.Hash) };\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n  return out;\n}","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(cid, options = {}) {\n    const res = await api.post('block/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      cid: CID.parse(data.Key),\n      size: data.Size\n    };\n  }\n  return stat;\n});","import { createGet } from './get.js';\nimport { createPut } from './put.js';\nimport { createRm } from './rm.js';\nimport { createStat } from './stat.js';\nexport function createBlock(config) {\n  return {\n    get: createGet(config),\n    put: createPut(config),\n    rm: createRm(config),\n    stat: createStat(config)\n  };\n}","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { Multiaddr } from 'multiaddr';\nexport const createAdd = configure(api => {\n  async function add(addr, options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) };\n  }\n  return add;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { Multiaddr } from 'multiaddr';\nexport const createClear = configure(api => {\n  async function clear(options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        all: true\n      }),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) };\n  }\n  return clear;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { Multiaddr } from 'multiaddr';\nexport const createList = configure(api => {\n  async function list(options = {}) {\n    const res = await api.post('bootstrap/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) };\n  }\n  return list;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { Multiaddr } from 'multiaddr';\nexport const createReset = configure(api => {\n  async function reset(options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        default: true\n      }),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) };\n  }\n  return reset;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { Multiaddr } from 'multiaddr';\nexport const createRm = configure(api => {\n  async function rm(addr, options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) };\n  }\n  return rm;\n});","import { createAdd } from './add.js';\nimport { createClear } from './clear.js';\nimport { createList } from './list.js';\nimport { createReset } from './reset.js';\nimport { createRm } from './rm.js';\nexport function createBootstrap(config) {\n  return {\n    add: createAdd(config),\n    clear: createClear(config),\n    list: createList(config),\n    reset: createReset(config),\n    rm: createRm(config)\n  };\n}","import { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createApply = configure(api => {\n  async function apply(profile, options = {}) {\n    const res = await api.post('config/profile/apply', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: profile,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      original: data.OldCfg,\n      updated: data.NewCfg\n    };\n  }\n  return apply;\n});","import { objectToCamel } from '../../lib/object-to-camel.js';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createList = configure(api => {\n  async function list(options = {}) {\n    const res = await api.post('config/profile/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.map(profile => objectToCamel(profile));\n  }\n  return list;\n});","import { createApply } from './apply.js';\nimport { createList } from './list.js';\nexport function createProfiles(config) {\n  return {\n    apply: createApply(config),\n    list: createList(config)\n  };\n}","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGet = configure(api => {\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required');\n    }\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Value;\n  };\n  return get;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGetAll = configure(api => {\n  const getAll = async (options = {}) => {\n    const res = await api.post('config/show', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({ ...options }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data;\n  };\n  return getAll;\n});","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport const createReplace = configure(api => {\n  const replace = async (config, options = {}) => {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('config/replace', {\n      signal,\n      searchParams: toUrlSearchParams(options),\n      ...await multipartRequest([uint8ArrayFromString(JSON.stringify(config))], controller, options.headers)\n    });\n    await res.text();\n  };\n  return replace;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createSet = configure(api => {\n  const set = async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type');\n    }\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    };\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(params),\n      headers: options.headers\n    });\n    await res.text();\n  };\n  return set;\n});\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n  case 'boolean':\n    return {\n      arg: [\n        key,\n        value.toString()\n      ],\n      bool: true\n    };\n  case 'string':\n    return {\n      arg: [\n        key,\n        value\n      ]\n    };\n  default:\n    return {\n      arg: [\n        key,\n        JSON.stringify(value)\n      ],\n      json: true\n    };\n  }\n};","import { createProfiles } from './profiles/index.js';\nimport { createGet } from './get.js';\nimport { createGetAll } from './get-all.js';\nimport { createReplace } from './replace.js';\nimport { createSet } from './set.js';\nexport function createConfig(config) {\n  return {\n    getAll: createGetAll(config),\n    get: createGet(config),\n    set: createSet(config),\n    replace: createReplace(config),\n    profiles: createProfiles(config)\n  };\n}","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createExport = configure(api => {\n  async function* dagExport(root, options = {}) {\n    const res = await api.post('dag/export', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({ arg: root.toString() }),\n      headers: options.headers\n    });\n    yield* res.iterator();\n  }\n  return dagExport;\n});","import { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nexport async function* resolve(cid, path, codecs, getBlock, options) {\n  const load = async cid => {\n    const codec = await codecs.getCodec(cid.code);\n    const block = await getBlock(cid, options);\n    return codec.decode(block);\n  };\n  const parts = path.split('/').filter(Boolean);\n  let value = await load(cid);\n  let lastCid = cid;\n  while (parts.length) {\n    const key = parts.shift();\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${ path }\"`), 'ERR_INVALID_PATH');\n    }\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key];\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      };\n    } else {\n      throw errCode(new Error(`no link named \"${ key }\" under ${ lastCid }`), 'ERR_NO_LINK');\n    }\n    const cid = CID.asCID(value);\n    if (cid) {\n      lastCid = cid;\n      value = await load(value);\n    }\n  }\n  yield {\n    value,\n    remainderPath: ''\n  };\n}","import { configure } from '../lib/configure.js';\nimport { resolve } from '../lib/resolve.js';\nimport first from 'it-first';\nimport last from 'it-last';\nimport errCode from 'err-code';\nimport { createGet as createBlockGet } from '../block/get.js';\nexport const createGet = (codecs, options) => {\n  const fn = configure((api, opts) => {\n    const getBlock = createBlockGet(opts);\n    const get = async (cid, options = {}) => {\n      if (options.path) {\n        const entry = options.localResolve ? await first(resolve(cid, options.path, codecs, getBlock, options)) : await last(resolve(cid, options.path, codecs, getBlock, options));\n        const result = entry;\n        if (!result) {\n          throw errCode(new Error('Not found'), 'ERR_NOT_FOUND');\n        }\n        return result;\n      }\n      const codec = await codecs.getCodec(cid.code);\n      const block = await getBlock(cid, options);\n      const node = codec.decode(block);\n      return {\n        value: node,\n        remainderPath: ''\n      };\n    };\n    return get;\n  });\n  return fn(options);\n};","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { CID } from 'multiformats/cid';\nexport const createImport = configure(api => {\n  async function* dagImport(source, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const {headers, body} = await multipartRequest(source, controller, options.headers);\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    });\n    for await (const {Root} of res.ndjson()) {\n      if (Root !== undefined) {\n        const {\n          Cid: {'/': Cid},\n          PinErrorMsg\n        } = Root;\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        };\n      }\n    }\n  }\n  return dagImport;\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport const createPut = (codecs, options) => {\n  const fn = configure(api => {\n    const put = async (dagNode, options = {}) => {\n      const settings = {\n        storeCodec: 'dag-cbor',\n        hashAlg: 'sha2-256',\n        ...options\n      };\n      let serialized;\n      if (settings.inputCodec) {\n        if (!(dagNode instanceof Uint8Array)) {\n          throw new Error('Can only inputCodec on raw bytes that can be decoded');\n        }\n        serialized = dagNode;\n      } else {\n        const storeCodec = await codecs.getCodec(settings.storeCodec);\n        serialized = storeCodec.encode(dagNode);\n        settings.inputCodec = settings.storeCodec;\n      }\n      const controller = new AbortController();\n      const signal = abortSignal(controller.signal, settings.signal);\n      const res = await api.post('dag/put', {\n        timeout: settings.timeout,\n        signal,\n        searchParams: toUrlSearchParams(settings),\n        ...await multipartRequest([serialized], controller, settings.headers)\n      });\n      const data = await res.json();\n      return CID.parse(data.Cid['/']);\n    };\n    return put;\n  });\n  return fn(options);\n};","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createResolve = configure(api => {\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ ipfsPath }${ options.path ? `/${ options.path }`.replace(/\\/[/]+/g, '/') : '' }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      cid: CID.parse(data.Cid['/']),\n      remainderPath: data.RemPath\n    };\n  };\n  return resolve;\n});","import { createExport } from './export.js';\nimport { createGet } from './get.js';\nimport { createImport } from './import.js';\nimport { createPut } from './put.js';\nimport { createResolve } from './resolve.js';\nexport function createDag(codecs, config) {\n  return {\n    export: createExport(config),\n    get: createGet(codecs, config),\n    import: createImport(config),\n    put: createPut(codecs, config),\n    resolve: createResolve(config)\n  };\n}","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nexport const createFindPeer = configure(api => {\n  async function* findPeer(peerId, options = {}) {\n    const res = await api.post('dht/findpeer', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return findPeer;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nexport const createFindProvs = configure(api => {\n  async function* findProvs(cid, options = {}) {\n    const res = await api.post('dht/findprovs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return findProvs;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport const createGet = configure(api => {\n  async function* get(key, options = {}) {\n    const res = await api.post('dht/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return get;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nexport const createProvide = configure(api => {\n  async function* provide(cids, options = { recursive: false }) {\n    const cidArr = Array.isArray(cids) ? cids : [cids];\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return provide;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { mapEvent } from './map-event.js';\nexport const createPut = configure(api => {\n  async function* put(key, value, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      ...await multipartRequest([value], controller, options.headers)\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return put;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nexport const createQuery = configure(api => {\n  async function* query(peerId, options = {}) {\n    const res = await api.post('dht/query', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return query;\n});","import { createFindPeer } from './find-peer.js';\nimport { createFindProvs } from './find-provs.js';\nimport { createGet } from './get.js';\nimport { createProvide } from './provide.js';\nimport { createPut } from './put.js';\nimport { createQuery } from './query.js';\nexport function createDht(config) {\n  return {\n    findPeer: createFindPeer(config),\n    findProvs: createFindProvs(config),\n    get: createGet(config),\n    provide: createProvide(config),\n    put: createPut(config),\n    query: createQuery(config)\n  };\n}","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createCmds = configure(api => {\n  async function cmds(options = {}) {\n    const res = await api.post('diag/cmds', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return res.json();\n  }\n  return cmds;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createNet = configure(api => {\n  async function net(options = {}) {\n    const res = await api.post('diag/net', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return res.json();\n  }\n  return net;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createSys = configure(api => {\n  async function sys(options = {}) {\n    const res = await api.post('diag/sys', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return res.json();\n  }\n  return sys;\n});","import { createCmds } from './cmds.js';\nimport { createNet } from './net.js';\nimport { createSys } from './sys.js';\nexport function createDiag(config) {\n  return {\n    cmds: createCmds(config),\n    net: createNet(config),\n    sys: createSys(config)\n  };\n}","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createChmod = configure(api => {\n  async function chmod(path, mode, options = {}) {\n    const res = await api.post('files/chmod', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        mode,\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return chmod;\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createCp = configure(api => {\n  async function cp(sources, destination, options = {}) {\n    const sourceArr = Array.isArray(sources) ? sources : [sources];\n    const res = await api.post('files/cp', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sourceArr.concat(destination).map(src => CID.asCID(src) ? `/ipfs/${ src }` : src),\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return cp;\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createFlush = configure(api => {\n  async function flush(path, options = {}) {\n    if (!path || typeof path !== 'string') {\n      throw new Error('ipfs.files.flush requires a path');\n    }\n    const res = await api.post('files/flush', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return CID.parse(data.Cid);\n  }\n  return flush;\n});","import { CID } from 'multiformats/cid';\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLs = configure(api => {\n  async function* ls(path, options = {}) {\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path');\n    }\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: CID.asCID(path) ? `/ipfs/${ path }` : path,\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    });\n    for await (const result of res.ndjson()) {\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata(entry));\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata(result));\n      }\n    }\n  }\n  return ls;\n});\nfunction toCoreInterface(entry) {\n  if (entry.hash) {\n    entry.cid = CID.parse(entry.hash);\n  }\n  delete entry.hash;\n  entry.type = entry.type === 1 ? 'directory' : 'file';\n  return entry;\n}","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createMkdir = configure(api => {\n  async function mkdir(path, options = {}) {\n    const res = await api.post('files/mkdir', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return mkdir;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createMv = configure(api => {\n  async function mv(sources, destination, options = {}) {\n    if (!Array.isArray(sources)) {\n      sources = [sources];\n    }\n    const res = await api.post('files/mv', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.concat(destination),\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return mv;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport toIterable from 'stream-to-it/source.js';\nexport const createRead = configure(api => {\n  async function* read(path, options = {}) {\n    const res = await api.post('files/read', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.length,\n        ...options\n      }),\n      headers: options.headers\n    });\n    yield* toIterable(res.body);\n  }\n  return read;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport HTTP from 'ipfs-utils/src/http.js';\nexport const createRm = configure(api => {\n  async function rm(path, options = {}) {\n    const res = await api.post('files/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const body = await res.text();\n    if (body !== '') {\n      const error = new HTTP.HTTPError(res);\n      error.message = body;\n      throw error;\n    }\n  }\n  return rm;\n});","import { CID } from 'multiformats/cid';\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(path, options = {}) {\n    const res = await api.post('files/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    data.WithLocality = data.WithLocality || false;\n    return toCoreInterface(objectToCamelWithMetadata(data));\n  }\n  return stat;\n});\nfunction toCoreInterface(entry) {\n  entry.cid = CID.parse(entry.hash);\n  delete entry.hash;\n  return entry;\n}","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createTouch = configure(api => {\n  async function touch(path, options = {}) {\n    const res = await api.post('files/touch', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return touch;\n});","import { modeToString } from '../lib/mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\nimport { configure } from '../lib/configure.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport const createWrite = configure(api => {\n  async function write(path, input, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...await multipartRequest([{\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: parseMtime(options.mtime)\n        }], controller, options.headers)\n    });\n    await res.text();\n  }\n  return write;\n});","import { createChmod } from './chmod.js';\nimport { createCp } from './cp.js';\nimport { createFlush } from './flush.js';\nimport { createLs } from './ls.js';\nimport { createMkdir } from './mkdir.js';\nimport { createMv } from './mv.js';\nimport { createRead } from './read.js';\nimport { createRm } from './rm.js';\nimport { createStat } from './stat.js';\nimport { createTouch } from './touch.js';\nimport { createWrite } from './write.js';\nexport function createFiles(config) {\n  return {\n    chmod: createChmod(config),\n    cp: createCp(config),\n    flush: createFlush(config),\n    ls: createLs(config),\n    mkdir: createMkdir(config),\n    mv: createMv(config),\n    read: createRead(config),\n    rm: createRm(config),\n    stat: createStat(config),\n    touch: createTouch(config),\n    write: createWrite(config)\n  };\n}","import { configure } from '../lib/configure.js';\nimport errCode from 'err-code';\nexport const createExport = configure(api => {\n  const exportKey = async (name, password, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n  };\n  return exportKey;\n});","import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGen = configure(api => {\n  async function gen(name, options = {\n    type: 'rsa',\n    size: 2048\n  }) {\n    const res = await api.post('key/gen', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return objectToCamel(data);\n  }\n  return gen;\n});","import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createImport = configure(api => {\n  async function importKey(name, pem, password, options = {}) {\n    const res = await api.post('key/import', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        pem,\n        password,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return objectToCamel(data);\n  }\n  return importKey;\n});","import { configure } from '../lib/configure.js';\nimport errCode from 'err-code';\nexport const createInfo = configure(api => {\n  const info = async (name, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n  };\n  return info;\n});","import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createList = configure(api => {\n  async function list(options = {}) {\n    const res = await api.post('key/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return (data.Keys || []).map(k => objectToCamel(k));\n  }\n  return list;\n});","import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createRename = configure(api => {\n  async function rename(oldName, newName, options = {}) {\n    const res = await api.post('key/rename', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          oldName,\n          newName\n        ],\n        ...options\n      }),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return rename;\n});","import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createRm = configure(api => {\n  async function rm(name, options = {}) {\n    const res = await api.post('key/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return objectToCamel(data.Keys[0]);\n  }\n  return rm;\n});","import { createExport } from './export.js';\nimport { createGen } from './gen.js';\nimport { createImport } from './import.js';\nimport { createInfo } from './info.js';\nimport { createList } from './list.js';\nimport { createRename } from './rename.js';\nimport { createRm } from './rm.js';\nexport function createKey(config) {\n  return {\n    export: createExport(config),\n    gen: createGen(config),\n    import: createImport(config),\n    info: createInfo(config),\n    list: createList(config),\n    rename: createRename(config),\n    rm: createRm(config)\n  };\n}","import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLevel = configure(api => {\n  async function level(subsystem, level, options = {}) {\n    const res = await api.post('log/level', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          subsystem,\n          level\n        ],\n        ...options\n      }),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return level;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLs = configure(api => {\n  async function ls(options = {}) {\n    const res = await api.post('log/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Strings;\n  }\n  return ls;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createTail = configure(api => {\n  async function* tail(options = {}) {\n    const res = await api.post('log/tail', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    yield* res.ndjson();\n  }\n  return tail;\n});","import { createLevel } from './level.js';\nimport { createLs } from './ls.js';\nimport { createTail } from './tail.js';\nexport function createLog(config) {\n  return {\n    level: createLevel(config),\n    ls: createLs(config),\n    tail: createTail(config)\n  };\n}","import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createPublish = configure(api => {\n  async function publish(path, options = {}) {\n    const res = await api.post('name/publish', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ path }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return publish;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createResolve = configure(api => {\n  async function* resolve(path, options = {}) {\n    const res = await api.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const result of res.ndjson()) {\n      yield result.Path;\n    }\n  }\n  return resolve;\n});","import { objectToCamel } from '../../lib/object-to-camel.js';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createCancel = configure(api => {\n  async function cancel(name, options = {}) {\n    const res = await api.post('name/pubsub/cancel', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return cancel;\n});","import { objectToCamel } from '../../lib/object-to-camel.js';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createState = configure(api => {\n  async function state(options = {}) {\n    const res = await api.post('name/pubsub/state', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return state;\n});","import { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createSubs = configure(api => {\n  async function subs(options = {}) {\n    const res = await api.post('name/pubsub/subs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Strings || [];\n  }\n  return subs;\n});","import { createCancel } from './cancel.js';\nimport { createState } from './state.js';\nimport { createSubs } from './subs.js';\nexport function createPubsub(config) {\n  return {\n    cancel: createCancel(config),\n    state: createState(config),\n    subs: createSubs(config)\n  };\n}","import { createPublish } from './publish.js';\nimport { createResolve } from './resolve.js';\nimport { createPubsub } from './pubsub/index.js';\nexport function createName(config) {\n  return {\n    publish: createPublish(config),\n    resolve: createResolve(config),\n    pubsub: createPubsub(config)\n  };\n}","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createData = configure(api => {\n  async function data(cid, options = {}) {\n    const res = await api.post('object/data', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid instanceof Uint8Array ? CID.decode(cid) : cid }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.arrayBuffer();\n    return new Uint8Array(data, 0, data.byteLength);\n  }\n  return data;\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport const createGet = configure(api => {\n  async function get(cid, options = {}) {\n    const res = await api.post('object/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid instanceof Uint8Array ? CID.decode(cid) : cid }`,\n        dataEncoding: 'base64',\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      Data: uint8ArrayFromString(data.Data, 'base64pad'),\n      Links: (data.Links || []).map(link => ({\n        Name: link.Name,\n        Hash: CID.parse(link.Hash),\n        Tsize: link.Size\n      }))\n    };\n  }\n  return get;\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLinks = configure(api => {\n  async function links(cid, options = {}) {\n    const res = await api.post('object/links', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid instanceof Uint8Array ? CID.decode(cid) : cid }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return (data.Links || []).map(l => ({\n      Name: l.Name,\n      Tsize: l.Size,\n      Hash: CID.parse(l.Hash)\n    }));\n  }\n  return links;\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createNew = configure(api => {\n  async function newObject(options = {}) {\n    const res = await api.post('object/new', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.template,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return newObject;\n});","import { configure } from '../lib/configure.js';\nimport { createPut as createDagPut } from '../dag/put.js';\nexport const createPut = (codecs, options) => {\n  const fn = configure(api => {\n    const dagPut = createDagPut(codecs, options);\n    async function put(obj, options = {}) {\n      return dagPut(obj, {\n        ...options,\n        storeCodec: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 1\n      });\n    }\n    return put;\n  });\n  return fn(options);\n};","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(cid, options = {}) {\n    const res = await api.post('object/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const output = await res.json();\n    return {\n      ...output,\n      Hash: CID.parse(output.Hash)\n    };\n  }\n  return stat;\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createAddLink = configure(api => {\n  async function addLink(cid, dLink, options = {}) {\n    const res = await api.post('object/patch/add-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${ cid }`,\n          dLink.Name || dLink.name || '',\n          (dLink.Hash || dLink.cid || '').toString() || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return addLink;\n});","import { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nimport { abortSignal } from '../../lib/abort-signal.js';\nexport const createAppendData = configure(api => {\n  async function appendData(cid, data, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('object/patch/append-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid }`,\n        ...options\n      }),\n      ...await multipartRequest([data], controller, options.headers)\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return appendData;\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createRmLink = configure(api => {\n  async function rmLink(cid, dLink, options = {}) {\n    const res = await api.post('object/patch/rm-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${ cid }`,\n          dLink.Name || dLink.name || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return rmLink;\n});","import { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nimport { abortSignal } from '../../lib/abort-signal.js';\nexport const createSetData = configure(api => {\n  async function setData(cid, data, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('object/patch/set-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [`${ cid }`],\n        ...options\n      }),\n      ...await multipartRequest([data], controller, options.headers)\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return setData;\n});","import { createAddLink } from './add-link.js';\nimport { createAppendData } from './append-data.js';\nimport { createRmLink } from './rm-link.js';\nimport { createSetData } from './set-data.js';\nexport function createPatch(config) {\n  return {\n    addLink: createAddLink(config),\n    appendData: createAppendData(config),\n    rmLink: createRmLink(config),\n    setData: createSetData(config)\n  };\n}","import { createData } from './data.js';\nimport { createGet } from './get.js';\nimport { createLinks } from './links.js';\nimport { createNew } from './new.js';\nimport { createPut } from './put.js';\nimport { createStat } from './stat.js';\nimport { createPatch } from './patch/index.js';\nexport function createObject(codecs, config) {\n  return {\n    data: createData(config),\n    get: createGet(config),\n    links: createLinks(config),\n    new: createNew(config),\n    put: createPut(codecs, config),\n    stat: createStat(config),\n    patch: createPatch(config)\n  };\n}","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createAddAll = configure(api => {\n  async function* addAll(source, options = {}) {\n    for await (const {path, recursive, metadata} of normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      });\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) {\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid);\n          }\n          continue;\n        }\n        yield CID.parse(pin);\n      }\n    }\n  }\n  return addAll;\n});","import { createAddAll } from './add-all.js';\nimport last from 'it-last';\nimport { configure } from '../lib/configure.js';\nexport function createAdd(config) {\n  const all = createAddAll(config);\n  return configure(() => {\n    async function add(path, options = {}) {\n      return last(all([{\n          path,\n          ...options\n        }], options));\n    }\n    return add;\n  })(config);\n}","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nfunction toPin(type, cid, metadata) {\n  const pin = {\n    type,\n    cid: CID.parse(cid)\n  };\n  if (metadata) {\n    pin.metadata = metadata;\n  }\n  return pin;\n}\nexport const createLs = configure(api => {\n  async function* ls(options = {}) {\n    let paths = [];\n    if (options.paths) {\n      paths = Array.isArray(options.paths) ? options.paths : [options.paths];\n    }\n    const res = await api.post('pin/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        arg: paths.map(path => `${ path }`),\n        stream: true\n      }),\n      headers: options.headers\n    });\n    for await (const pin of res.ndjson()) {\n      if (pin.Keys) {\n        for (const cid of Object.keys(pin.Keys)) {\n          yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata);\n        }\n        return;\n      }\n      yield toPin(pin.Type, pin.Cid, pin.Metadata);\n    }\n  }\n  return ls;\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createRmAll = configure(api => {\n  async function* rmAll(source, options = {}) {\n    for await (const {path, recursive} of normaliseInput(source)) {\n      const searchParams = new URLSearchParams(options.searchParams);\n      searchParams.append('arg', `${ path }`);\n      if (recursive != null)\n        searchParams.set('recursive', String(recursive));\n      const res = await api.post('pin/rm', {\n        signal: options.signal,\n        headers: options.headers,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: `${ path }`,\n          recursive\n        })\n      });\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) {\n          yield* pin.Pins.map(cid => CID.parse(cid));\n          continue;\n        }\n        yield CID.parse(pin);\n      }\n    }\n  }\n  return rmAll;\n});","import { createRmAll } from './rm-all.js';\nimport last from 'it-last';\nimport { configure } from '../lib/configure.js';\nexport const createRm = config => {\n  const all = createRmAll(config);\n  return configure(() => {\n    async function rm(path, options = {}) {\n      return last(all([{\n          path,\n          ...options\n        }], options));\n    }\n    return rm;\n  })(config);\n};","import { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const decodePin = ({\n  Name: name,\n  Status: status,\n  Cid: cid\n}) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  };\n};\nexport const encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nexport const encodeCID = cid => {\n  if (CID.asCID(cid)) {\n    return cid.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${ typeof cid }`);\n  }\n};\nexport const encodeQuery = ({service, cid, name, status, all}) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  });\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n  if (status) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n  return query;\n};\nexport const encodeAddParams = ({cid, service, background, name, origins}) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  });\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n  return params;\n};","import {\n  encodeAddParams,\n  decodePin\n} from './utils.js';\nexport function createAdd(client) {\n  async function add(cid, {timeout, signal, headers, ...query}) {\n    const response = await client.post('pin/remote/add', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeAddParams({\n        cid,\n        ...query\n      })\n    });\n    return decodePin(await response.json());\n  }\n  return add;\n}","import {\n  encodeQuery,\n  decodePin\n} from './utils.js';\nexport function createLs(client) {\n  async function* ls({timeout, signal, headers, ...query}) {\n    const response = await client.post('pin/remote/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery(query)\n    });\n    for await (const pin of response.ndjson()) {\n      yield decodePin(pin);\n    }\n  }\n  return ls;\n}","import { encodeQuery } from './utils.js';\nexport function createRm(client) {\n  async function rm({timeout, signal, headers, ...query}) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: false\n      })\n    });\n  }\n  return rm;\n}","import { encodeQuery } from './utils.js';\nexport function createRmAll(client) {\n  async function rmAll({timeout, signal, headers, ...query}) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: true\n      })\n    });\n  }\n  return rmAll;\n}","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\nimport { encodeEndpoint } from './utils.js';\nexport function createAdd(client) {\n  async function add(name, options) {\n    const {endpoint, key, headers, timeout, signal} = options;\n    await client.post('pin/remote/service/add', {\n      timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          name,\n          encodeEndpoint(endpoint),\n          key\n        ]\n      }),\n      headers\n    });\n  }\n  return add;\n}","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\nimport { decodeRemoteService } from './utils.js';\nexport function createLs(client) {\n  async function ls(options = {}) {\n    const {stat, headers, timeout, signal} = options;\n    const response = await client.post('pin/remote/service/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined\n    });\n    const {RemoteServices} = await response.json();\n    return RemoteServices.map(decodeRemoteService);\n  }\n  return ls;\n}","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\nexport function createRm(client) {\n  async function rm(name, options = {}) {\n    await client.post('pin/remote/service/rm', {\n      signal: options.signal,\n      headers: options.headers,\n      searchParams: toUrlSearchParams({ arg: name })\n    });\n  }\n  return rm;\n}","import { Client } from '../../../lib/core.js';\nimport { createAdd } from './add.js';\nimport { createLs } from './ls.js';\nimport { createRm } from './rm.js';\nexport function createService(config) {\n  const client = new Client(config);\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client)\n  };\n}","import { Client } from '../../lib/core.js';\nimport { createAdd } from './add.js';\nimport { createLs } from './ls.js';\nimport { createRm } from './rm.js';\nimport { createRmAll } from './rm-all.js';\nimport { createService } from './service/index.js';\nexport function createRemote(config) {\n  const client = new Client(config);\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client),\n    rmAll: createRmAll(client),\n    service: createService(config)\n  };\n}","import { createAddAll } from './add-all.js';\nimport { createAdd } from './add.js';\nimport { createLs } from './ls.js';\nimport { createRmAll } from './rm-all.js';\nimport { createRm } from './rm.js';\nimport { createRemote } from './remote/index.js';\nexport function createPin(config) {\n  return {\n    addAll: createAddAll(config),\n    add: createAdd(config),\n    ls: createLs(config),\n    rmAll: createRmAll(config),\n    rm: createRm(config),\n    remote: createRemote(config)\n  };\n}","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { base64url } from 'multiformats/bases/base64';\nconst rpcArrayToTextArray = strings => {\n  if (Array.isArray(strings)) {\n    return strings.map(rpcToText);\n  }\n  return strings;\n};\nconst rpcToText = mb => uint8ArrayToString(rpcToBytes(mb));\nconst rpcToBytes = mb => base64url.decode(mb);\nconst textToUrlSafeRpc = text => base64url.encode(uint8ArrayFromString(text));\nexport {\n  rpcArrayToTextArray,\n  rpcToText,\n  rpcToBytes,\n  textToUrlSafeRpc\n};","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { rpcArrayToTextArray } from '../lib/http-rpc-wire-format.js';\nexport const createLs = configure(api => {\n  async function ls(options = {}) {\n    const {Strings} = await (await api.post('pubsub/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json();\n    return rpcArrayToTextArray(Strings) || [];\n  }\n  return ls;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js';\nexport const createPeers = configure(api => {\n  async function peers(topic, options = {}) {\n    const res = await api.post('pubsub/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: textToUrlSafeRpc(topic),\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return Strings || [];\n  }\n  return peers;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js';\nexport const createPublish = configure(api => {\n  async function publish(topic, data, options = {}) {\n    const searchParams = toUrlSearchParams({\n      arg: textToUrlSafeRpc(topic),\n      ...options\n    });\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('pubsub/pub', {\n      signal,\n      searchParams,\n      ...await multipartRequest([data], controller, options.headers)\n    });\n    await res.text();\n  }\n  return publish;\n});","import debug from 'debug';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport {\n  textToUrlSafeRpc,\n  rpcArrayToTextArray,\n  rpcToBytes\n} from '../lib/http-rpc-wire-format.js';\nconst log = debug('ipfs-http-client:pubsub:subscribe');\nexport const createSubscribe = (options, subsTracker) => {\n  return configure(api => {\n    async function subscribe(topic, handler, options = {}) {\n      options.signal = subsTracker.subscribe(topic, handler, options.signal);\n      let done;\n      let fail;\n      const result = new Promise((resolve, reject) => {\n        done = resolve;\n        fail = reject;\n      });\n      const ffWorkaround = setTimeout(() => done(), 1000);\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: textToUrlSafeRpc(topic),\n          ...options\n        }),\n        headers: options.headers\n      }).catch(err => {\n        subsTracker.unsubscribe(topic, handler);\n        fail(err);\n      }).then(response => {\n        clearTimeout(ffWorkaround);\n        if (!response) {\n          return;\n        }\n        readMessages(response, {\n          onMessage: handler,\n          onEnd: () => subsTracker.unsubscribe(topic, handler),\n          onError: options.onError\n        });\n        done();\n      });\n      return result;\n    }\n    return subscribe;\n  })(options);\n};\nasync function readMessages(response, {onMessage, onEnd, onError}) {\n  onError = onError || log;\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue;\n        }\n        onMessage({\n          from: msg.from,\n          data: rpcToBytes(msg.data),\n          seqno: rpcToBytes(msg.seqno),\n          topicIDs: rpcArrayToTextArray(msg.topicIDs)\n        });\n      } catch (err) {\n        err.message = `Failed to parse pubsub message: ${ err.message }`;\n        onError(err, false, msg);\n      }\n    }\n  } catch (err) {\n    if (!isAbortError(err)) {\n      onError(err, true);\n    }\n  } finally {\n    onEnd();\n  }\n}\nconst isAbortError = error => {\n  switch (error.type) {\n  case 'aborted':\n    return true;\n  case 'abort':\n    return true;\n  default:\n    return error.name === 'AbortError';\n  }\n};","import { createLs } from './ls.js';\nimport { createPeers } from './peers.js';\nimport { createPublish } from './publish.js';\nimport { createSubscribe } from './subscribe.js';\nimport { createUnsubscribe } from './unsubscribe.js';\nimport { SubscriptionTracker } from './subscription-tracker.js';\nexport function createPubsub(config) {\n  const subscriptionTracker = new SubscriptionTracker();\n  return {\n    ls: createLs(config),\n    peers: createPeers(config),\n    publish: createPublish(config),\n    subscribe: createSubscribe(config, subscriptionTracker),\n    unsubscribe: createUnsubscribe(config, subscriptionTracker)\n  };\n}","import { CID } from 'multiformats/cid';\nimport { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { createLocal } from './local.js';\nexport const createRefs = configure((api, opts) => {\n  const refs = async function* (args, options = {}) {\n    const argsArr = Array.isArray(args) ? args : [args];\n    const res = await api.post('refs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: argsArr.map(arg => `${ arg instanceof Uint8Array ? CID.decode(arg) : arg }`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    });\n    yield* res.ndjson();\n  };\n  return Object.assign(refs, { local: createLocal(opts) });\n});","import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGc = configure(api => {\n  async function* gc(options = {}) {\n    const res = await api.post('repo/gc', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: res => {\n        return {\n          err: res.Error ? new Error(res.Error) : null,\n          cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n        };\n      }\n    });\n    yield* res.ndjson();\n  }\n  return gc;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(options = {}) {\n    const res = await api.post('repo/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      numObjects: BigInt(data.NumObjects),\n      repoSize: BigInt(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: BigInt(data.StorageMax)\n    };\n  }\n  return stat;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createVersion = configure(api => {\n  async function version(options = {}) {\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json();\n    return res.Version;\n  }\n  return version;\n});","import { createGc } from './gc.js';\nimport { createStat } from './stat.js';\nimport { createVersion } from './version.js';\nexport function createRepo(config) {\n  return {\n    gc: createGc(config),\n    stat: createStat(config),\n    version: createVersion(config)\n  };\n}","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createBw = configure(api => {\n  async function* bw(options = {}) {\n    const res = await api.post('stats/bw', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: stats => ({\n        totalIn: BigInt(stats.TotalIn),\n        totalOut: BigInt(stats.TotalOut),\n        rateIn: parseFloat(stats.RateIn),\n        rateOut: parseFloat(stats.RateOut)\n      })\n    });\n    yield* res.ndjson();\n  }\n  return bw;\n});","import { createStat as createBitswap } from '../bitswap/stat.js';\nimport { createStat as createRepo } from '../repo/stat.js';\nimport { createBw } from './bw.js';\nexport function createStats(config) {\n  return {\n    bitswap: createBitswap(config),\n    repo: createRepo(config),\n    bw: createBw(config)\n  };\n}","import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createAddrs = configure(api => {\n  async function addrs(options = {}) {\n    const res = await api.post('swarm/addrs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Addrs} = await res.json();\n    return Object.keys(Addrs).map(id => ({\n      id,\n      addrs: (Addrs[id] || []).map(a => new Multiaddr(a))\n    }));\n  }\n  return addrs;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createConnect = configure(api => {\n  async function connect(addr, options = {}) {\n    const res = await api.post('swarm/connect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return Strings || [];\n  }\n  return connect;\n});","import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createDisconnect = configure(api => {\n  async function disconnect(addr, options = {}) {\n    const res = await api.post('swarm/disconnect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return Strings || [];\n  }\n  return disconnect;\n});","import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLocalAddrs = configure(api => {\n  async function localAddrs(options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return (Strings || []).map(a => new Multiaddr(a));\n  }\n  return localAddrs;\n});","import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createPeers = configure(api => {\n  async function peers(options = {}) {\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return (Peers || []).map(peer => {\n      return {\n        addr: new Multiaddr(peer.Addr),\n        peer: peer.Peer,\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      };\n    });\n  }\n  return peers;\n});","import { createAddrs } from './addrs.js';\nimport { createConnect } from './connect.js';\nimport { createDisconnect } from './disconnect.js';\nimport { createLocalAddrs } from './local-addrs.js';\nimport { createPeers } from './peers.js';\nexport function createSwarm(config) {\n  return {\n    addrs: createAddrs(config),\n    connect: createConnect(config),\n    disconnect: createDisconnect(config),\n    localAddrs: createLocalAddrs(config),\n    peers: createPeers(config)\n  };\n}","import { CID } from 'multiformats/cid';\nimport { objectToCamel } from './lib/object-to-camel.js';\nimport { configure } from './lib/configure.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nimport { abortSignal } from './lib/abort-signal.js';\nexport const createAddAll = configure(api => {\n  async function* addAll(source, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const {headers, body, total, parts} = await multipartRequest(source, controller, options.headers);\n    const [progressFn, onUploadProgress] = typeof options.progress === 'function' ? createProgressHandler(total, parts, options.progress) : [\n      undefined,\n      undefined\n    ];\n    const res = await api.post('add', {\n      searchParams: toUrlSearchParams({\n        'stream-channels': true,\n        ...options,\n        progress: Boolean(progressFn)\n      }),\n      onUploadProgress,\n      signal,\n      headers,\n      body\n    });\n    for await (let file of res.ndjson()) {\n      file = objectToCamel(file);\n      if (file.hash !== undefined) {\n        yield toCoreInterface(file);\n      } else if (progressFn) {\n        progressFn(file.bytes || 0, file.name);\n      }\n    }\n  }\n  return addAll;\n});\nconst createProgressHandler = (total, parts, progress) => parts ? [\n  undefined,\n  createOnUploadProgress(total, parts, progress)\n] : [\n  progress,\n  undefined\n];\nconst createOnUploadProgress = (size, parts, progress) => {\n  let index = 0;\n  const count = parts.length;\n  return ({loaded, total}) => {\n    const position = Math.floor(loaded / total * size);\n    while (index < count) {\n      const {start, end, name} = parts[index];\n      if (position < end) {\n        progress(position - start, name);\n        break;\n      } else {\n        progress(end - start, name);\n        index += 1;\n      }\n    }\n  };\n};\nfunction toCoreInterface({name, hash, size, mode, mtime, mtimeNsecs}) {\n  const output = {\n    path: name,\n    cid: CID.parse(hash),\n    size: parseInt(size)\n  };\n  if (mode != null) {\n    output.mode = parseInt(mode, 8);\n  }\n  if (mtime != null) {\n    output.mtime = {\n      secs: mtime,\n      nsecs: mtimeNsecs || 0\n    };\n  }\n  return output;\n}","import { createAddAll } from './add-all.js';\nimport last from 'it-last';\nimport { configure } from './lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single';\nexport function createAdd(options) {\n  const all = createAddAll(options);\n  return configure(() => {\n    async function add(input, options = {}) {\n      return await last(all(normaliseInput(input), options));\n    }\n    return add;\n  })(options);\n}","import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createCat = configure(api => {\n  async function* cat(path, options = {}) {\n    const res = await api.post('cat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    yield* res.iterator();\n  }\n  return cat;\n});","import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createCommands = configure(api => {\n  const commands = async (options = {}) => {\n    const res = await api.post('commands', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return res.json();\n  };\n  return commands;\n});","import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createDns = configure(api => {\n  const dns = async (domain, options = {}) => {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Path;\n  };\n  return dns;\n});","import { configure } from './lib/configure.js';\nexport const createGetEndpointConfig = configure(api => {\n  return () => {\n    const url = new URL(api.opts.base || '');\n    return {\n      host: url.hostname,\n      port: url.port,\n      protocol: url.protocol,\n      pathname: url.pathname,\n      'api-path': url.pathname\n    };\n  };\n});","import { CID } from 'multiformats/cid';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createGet = configure(api => {\n  async function* get(path, options = {}) {\n    const opts = {\n      arg: `${ path instanceof Uint8Array ? CID.decode(path) : path }`,\n      ...options\n    };\n    if (opts.compressionLevel) {\n      opts['compression-level'] = opts.compressionLevel;\n      delete opts.compressionLevel;\n    }\n    const res = await api.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(opts),\n      headers: options.headers\n    });\n    yield* res.iterator();\n  }\n  return get;\n});","import { objectToCamel } from './lib/object-to-camel.js';\nimport { Multiaddr } from 'multiaddr';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createId = configure(api => {\n  async function id(options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    const output = { ...objectToCamel(data) };\n    if (output.addresses) {\n      output.addresses = output.addresses.map(ma => new Multiaddr(ma));\n    }\n    return output;\n  }\n  return id;\n});","import { createId } from './id.js';\nexport const createIsOnline = options => {\n  const id = createId(options);\n  async function isOnline(options = {}) {\n    const res = await id(options);\n    return Boolean(res && res.addresses && res.addresses.length);\n  }\n  return isOnline;\n};","import { CID } from 'multiformats/cid';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nimport { createStat } from './files/stat.js';\nexport const createLs = configure((api, opts) => {\n  async function* ls(path, options = {}) {\n    const pathStr = `${ path instanceof Uint8Array ? CID.decode(path) : path }`;\n    async function mapLink(link) {\n      let hash = link.Hash;\n      if (hash.includes('/')) {\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${ hash }`;\n        const stats = await createStat(opts)(ipfsPath);\n        hash = stats.cid;\n      } else {\n        hash = CID.parse(hash);\n      }\n      const entry = {\n        name: link.Name,\n        path: pathStr + (link.Name ? `/${ link.Name }` : ''),\n        size: link.Size,\n        cid: hash,\n        type: typeOf(link)\n      };\n      if (link.Mode) {\n        entry.mode = parseInt(link.Mode, 8);\n      }\n      if (link.Mtime !== undefined && link.Mtime !== null) {\n        entry.mtime = { secs: link.Mtime };\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n          entry.mtime.nsecs = link.MtimeNsecs;\n        }\n      }\n      return entry;\n    }\n    const res = await api.post('ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: pathStr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (let result of res.ndjson()) {\n      result = result.Objects;\n      if (!result) {\n        throw new Error('expected .Objects in results');\n      }\n      result = result[0];\n      if (!result) {\n        throw new Error('expected one array in results.Objects');\n      }\n      const links = result.Links;\n      if (!Array.isArray(links)) {\n        throw new Error('expected one array in results.Objects[0].Links');\n      }\n      if (!links.length) {\n        yield mapLink(result);\n        return;\n      }\n      yield* links.map(mapLink);\n    }\n  }\n  return ls;\n});\nfunction typeOf(link) {\n  switch (link.Type) {\n  case 1:\n  case 5:\n    return 'dir';\n  case 2:\n    return 'file';\n  default:\n    return 'file';\n  }\n}","import { objectToCamel } from './lib/object-to-camel.js';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createMount = configure(api => {\n  async function mount(options = {}) {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return mount;\n});","import { objectToCamel } from './lib/object-to-camel.js';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createPing = configure(api => {\n  async function* ping(peerId, options = {}) {\n    const res = await api.post('ping', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ peerId }`,\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    });\n    yield* res.ndjson();\n  }\n  return ping;\n});","import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createResolve = configure(api => {\n  async function resolve(path, options = {}) {\n    const res = await api.post('resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Path} = await res.json();\n    return Path;\n  }\n  return resolve;\n});","import { configure } from './lib/configure.js';\nimport errCode from 'err-code';\nexport const createStart = configure(api => {\n  const start = async (options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n  };\n  return start;\n});","import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createStop = configure(api => {\n  async function stop(options = {}) {\n    const res = await api.post('shutdown', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return stop;\n});","import { objectToCamel } from './lib/object-to-camel.js';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createVersion = configure(api => {\n  async function version(options = {}) {\n    const res = await api.post('version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return {\n      ...objectToCamel(await res.json()),\n      'ipfs-http-client': '1.0.0'\n    };\n  }\n  return version;\n});","import * as ipns from 'ipns';\nexport const validator = { func: (key, record) => ipns.validator.validate(record, key) };\nexport function selector(_k, records) {\n  return ipns.validator.select(records[0], records[1]);\n}","import get from 'dlv';\nimport mergeOpts from 'merge-options';\nimport errCode from 'err-code';\nimport { routers } from 'ipfs-core-config/libp2p-pubsub-routers';\nimport DelegatedPeerRouter from 'libp2p-delegated-peer-routing';\nimport DelegatedContentRouter from 'libp2p-delegated-content-routing';\nimport { create as ipfsHttpClient } from 'ipfs-http-client';\nimport { Multiaddr } from 'multiaddr';\nimport { ipfsCore as pkgversion } from '../version.js';\nimport { libp2pConfig as getEnvLibp2pOptions } from 'ipfs-core-config/libp2p';\nimport bootstrap from 'libp2p-bootstrap';\nimport Libp2p from 'libp2p';\nimport * as ipns from 'ipns';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nexport function createLibp2p({options = {}, peerId, multiaddrs = [], repo, keychainConfig = {}, config = {}}) {\n  const {datastore, keys} = repo;\n  const libp2pOptions = getLibp2pOptions({\n    options,\n    config,\n    datastore,\n    keys,\n    keychainConfig,\n    peerId,\n    multiaddrs\n  });\n  if (typeof options.libp2p === 'function') {\n    return options.libp2p({\n      libp2pOptions,\n      options,\n      config,\n      datastore,\n      peerId\n    });\n  }\n  return Libp2p.create(libp2pOptions);\n}\nfunction getLibp2pOptions({options, config, datastore, keys, keychainConfig, peerId, multiaddrs}) {\n  const getPubsubRouter = () => {\n    const router = get(config, 'Pubsub.Router') || 'gossipsub';\n    if (!routers[router]) {\n      throw errCode(new Error(`Router unavailable. Configure libp2p.modules.pubsub to use the ${ router } router.`), 'ERR_NOT_SUPPORTED');\n    }\n    return routers[router];\n  };\n  const libp2pDefaults = {\n    datastore,\n    peerId: peerId,\n    modules: {}\n  };\n  const libp2pOptions = {\n    modules: {\n      pubsub: getPubsubRouter(),\n      contentRouting: [],\n      peerRouting: []\n    },\n    config: {\n      peerDiscovery: {\n        mdns: { enabled: get(options, 'config.Discovery.MDNS.Enabled', get(config, 'Discovery.MDNS.Enabled', true)) },\n        webRTCStar: { enabled: get(options, 'config.Discovery.webRTCStar.Enabled', get(config, 'Discovery.webRTCStar.Enabled', true)) },\n        bootstrap: { list: get(options, 'config.Bootstrap', get(config, 'Bootstrap', [])) }\n      },\n      relay: {\n        enabled: get(options, 'relay.enabled', get(config, 'relay.enabled', true)),\n        hop: {\n          enabled: get(options, 'relay.hop.enabled', get(config, 'relay.hop.enabled', false)),\n          active: get(options, 'relay.hop.active', get(config, 'relay.hop.active', false))\n        }\n      },\n      dht: {\n        enabled: get(config, 'Routing.Type', 'dhtclient') !== 'none',\n        clientMode: get(config, 'Routing.Type', 'dht') !== 'dhtserver',\n        kBucketSize: get(options, 'dht.kBucketSize', 20),\n        validators: { ipns: ipns.validator }\n      },\n      pubsub: { enabled: get(options, 'config.Pubsub.Enabled', get(config, 'Pubsub.Enabled', true)) },\n      nat: { enabled: !get(config, 'Swarm.DisableNatPortMap', false) }\n    },\n    addresses: {\n      listen: multiaddrs.map(ma => ma.toString()),\n      announce: get(options, 'addresses.announce', get(config, 'Addresses.Announce', [])),\n      noAnnounce: get(options, 'addresses.noAnnounce', get(config, 'Addresses.NoAnnounce', []))\n    },\n    connectionManager: get(options, 'connectionManager', {\n      maxConnections: get(options, 'config.Swarm.ConnMgr.HighWater', get(config, 'Swarm.ConnMgr.HighWater')),\n      minConnections: get(options, 'config.Swarm.ConnMgr.LowWater', get(config, 'Swarm.ConnMgr.LowWater'))\n    }),\n    keychain: {\n      datastore: keys,\n      ...keychainConfig\n    },\n    host: { agentVersion: `js-ipfs/${ pkgversion }` }\n  };\n  let constructorOptions = get(options, 'libp2p', undefined);\n  if (typeof constructorOptions === 'function') {\n    constructorOptions = undefined;\n  }\n  const libp2pConfig = mergeOptions(libp2pDefaults, getEnvLibp2pOptions(), libp2pOptions, constructorOptions);\n  const bootstrapList = get(libp2pConfig, 'config.peerDiscovery.bootstrap.list', []);\n  if (bootstrapList.length > 0) {\n    libp2pConfig.modules.peerDiscovery.push(bootstrap);\n  }\n  const delegateHosts = get(options, 'config.Addresses.Delegates', get(config, 'Addresses.Delegates', []));\n  if (delegateHosts.length > 0) {\n    const delegateString = delegateHosts[Math.floor(Math.random() * delegateHosts.length)];\n    const delegateAddr = new Multiaddr(delegateString).toOptions();\n    const delegateApiOptions = {\n      host: delegateAddr.host,\n      protocol: parseInt(delegateAddr.port) === 443 ? 'https' : 'http',\n      port: delegateAddr.port\n    };\n    const delegateHttpClient = ipfsHttpClient(delegateApiOptions);\n    libp2pOptions.modules.contentRouting = libp2pOptions.modules.contentRouting || [];\n    libp2pOptions.modules.contentRouting.push(new DelegatedContentRouter(peerId, delegateHttpClient));\n    libp2pOptions.modules.peerRouting = libp2pOptions.modules.peerRouting || [];\n    libp2pOptions.modules.peerRouting.push(new DelegatedPeerRouter(delegateHttpClient));\n  }\n  return libp2pConfig;\n}","import WS from 'libp2p-websockets';\nimport WebRTCStar from 'libp2p-webrtc-star';\nimport Multiplex from 'libp2p-mplex';\nimport { NOISE } from '@chainsafe/libp2p-noise';\nimport KadDHT from 'libp2p-kad-dht';\nimport GossipSub from 'libp2p-gossipsub';\nimport {\n  validator,\n  selector\n} from './utils/ipns.js';\nexport function libp2pConfig() {\n  const options = {\n    dialer: {\n      maxParallelDials: 150,\n      maxDialsPerPeer: 4,\n      dialTimeout: 10000\n    },\n    modules: {\n      transport: [\n        WS,\n        WebRTCStar\n      ],\n      streamMuxer: [Multiplex],\n      connEncryption: [NOISE],\n      peerDiscovery: [],\n      dht: KadDHT,\n      pubsub: GossipSub\n    },\n    config: {\n      peerDiscovery: {\n        autoDial: true,\n        bootstrap: { enabled: true },\n        webRTCStar: { enabled: true }\n      },\n      dht: {\n        kBucketSize: 20,\n        enabled: true,\n        clientMode: true,\n        validators: { ipns: validator },\n        selectors: { ipns: selector }\n      },\n      pubsub: {\n        enabled: true,\n        emitSelf: true\n      },\n      nat: { enabled: false }\n    },\n    metrics: { enabled: true },\n    peerStore: { persistence: true }\n  };\n  return options;\n}","import { Multibases } from 'ipfs-core-utils/multibases';\nimport { Multicodecs } from 'ipfs-core-utils/multicodecs';\nimport { Multihashes } from 'ipfs-core-utils/multihashes';\nimport * as dagPB from '@ipld/dag-pb';\nimport * as dagCBOR from '@ipld/dag-cbor';\nimport * as dagJSON from '@ipld/dag-json';\nimport * as dagJOSE from 'dag-jose';\nimport { identity } from 'multiformats/hashes/identity';\nimport {\n  bases,\n  hashes,\n  codecs\n} from 'multiformats/basics';\nimport { createBitswap } from './bitswap/index.js';\nimport { createBlock } from './block/index.js';\nimport { createBootstrap } from './bootstrap/index.js';\nimport { createConfig } from './config/index.js';\nimport { createDag } from './dag/index.js';\nimport { createDht } from './dht/index.js';\nimport { createDiag } from './diag/index.js';\nimport { createFiles } from './files/index.js';\nimport { createKey } from './key/index.js';\nimport { createLog } from './log/index.js';\nimport { createName } from './name/index.js';\nimport { createObject } from './object/index.js';\nimport { createPin } from './pin/index.js';\nimport { createPubsub } from './pubsub/index.js';\nimport { createRefs } from './refs/index.js';\nimport { createRepo } from './repo/index.js';\nimport { createStats } from './stats/index.js';\nimport { createSwarm } from './swarm/index.js';\nimport { createAdd } from './add.js';\nimport { createAddAll } from './add-all.js';\nimport { createCat } from './cat.js';\nimport { createCommands } from './commands.js';\nimport { createDns } from './dns.js';\nimport { createGetEndpointConfig } from './get-endpoint-config.js';\nimport { createGet } from './get.js';\nimport { createId } from './id.js';\nimport { createIsOnline } from './is-online.js';\nimport { createLs } from './ls.js';\nimport { createMount } from './mount.js';\nimport { createPing } from './ping.js';\nimport { createResolve } from './resolve.js';\nimport { createStart } from './start.js';\nimport { createStop } from './stop.js';\nimport { createVersion } from './version.js';\nimport globSourceImport from 'ipfs-utils/src/files/glob-source.js';\nexport function create(options = {}) {\n  const id = {\n    name: identity.name,\n    code: identity.code,\n    encode: id => id,\n    decode: id => id\n  };\n  const multibaseCodecs = Object.values(bases);\n  (options.ipld && options.ipld.bases ? options.ipld.bases : []).forEach(base => multibaseCodecs.push(base));\n  const multibases = new Multibases({\n    bases: multibaseCodecs,\n    loadBase: options.ipld && options.ipld.loadBase\n  });\n  const blockCodecs = Object.values(codecs);\n  [\n    dagPB,\n    dagCBOR,\n    dagJSON,\n    dagJOSE,\n    id\n  ].concat(options.ipld && options.ipld.codecs || []).forEach(codec => blockCodecs.push(codec));\n  const multicodecs = new Multicodecs({\n    codecs: blockCodecs,\n    loadCodec: options.ipld && options.ipld.loadCodec\n  });\n  const multihashHashers = Object.values(hashes);\n  (options.ipld && options.ipld.hashers ? options.ipld.hashers : []).forEach(hasher => multihashHashers.push(hasher));\n  const multihashes = new Multihashes({\n    hashers: multihashHashers,\n    loadHasher: options.ipld && options.ipld.loadHasher\n  });\n  const client = {\n    add: createAdd(options),\n    addAll: createAddAll(options),\n    bitswap: createBitswap(options),\n    block: createBlock(options),\n    bootstrap: createBootstrap(options),\n    cat: createCat(options),\n    commands: createCommands(options),\n    config: createConfig(options),\n    dag: createDag(multicodecs, options),\n    dht: createDht(options),\n    diag: createDiag(options),\n    dns: createDns(options),\n    files: createFiles(options),\n    get: createGet(options),\n    getEndpointConfig: createGetEndpointConfig(options),\n    id: createId(options),\n    isOnline: createIsOnline(options),\n    key: createKey(options),\n    log: createLog(options),\n    ls: createLs(options),\n    mount: createMount(options),\n    name: createName(options),\n    object: createObject(multicodecs, options),\n    pin: createPin(options),\n    ping: createPing(options),\n    pubsub: createPubsub(options),\n    refs: createRefs(options),\n    repo: createRepo(options),\n    resolve: createResolve(options),\n    start: createStart(options),\n    stats: createStats(options),\n    stop: createStop(options),\n    swarm: createSwarm(options),\n    version: createVersion(options),\n    bases: multibases,\n    codecs: multicodecs,\n    hashers: multihashes\n  };\n  return client;\n}\nexport {\n  CID\n} from 'multiformats/cid';\nexport {\n  Multiaddr as multiaddr\n} from 'multiaddr';\nexport {\n  default as urlSource\n} from 'ipfs-utils/src/files/url-source.js';\nexport const globSource = globSourceImport;","import debug from 'debug';\nimport { createRepo } from 'ipfs-core-config/repo';\nimport getDefaultConfig from 'ipfs-core-config/config';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport PeerId from 'peer-id';\nimport mergeOpts from 'merge-options';\nimport { profiles as configProfiles } from './config/profiles.js';\nimport {\n  NotEnabledError,\n  NotInitializedError\n} from '../errors.js';\nimport { createLibp2p } from './libp2p.js';\nimport { ERR_REPO_NOT_INITIALIZED } from 'ipfs-repo/errors';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nconst log = debug('ipfs:components:peer:storage');\nexport class Storage {\n  constructor(peerId, keychain, repo, print, isNew) {\n    this.print = print;\n    this.peerId = peerId;\n    this.keychain = keychain;\n    this.repo = repo;\n    this.print = print;\n    this.isNew = isNew;\n  }\n  static async start(print, codecs, options) {\n    const {\n      repoAutoMigrate,\n      repo: inputRepo,\n      onMigrationProgress\n    } = options;\n    const repo = typeof inputRepo === 'string' || inputRepo == null ? createRepo(print, codecs, {\n      path: inputRepo,\n      autoMigrate: repoAutoMigrate,\n      onMigrationProgress: onMigrationProgress\n    }) : inputRepo;\n    const {peerId, keychain, isNew} = await loadRepo(print, repo, options);\n    return new Storage(peerId, keychain, repo, print, isNew);\n  }\n}\nconst loadRepo = async (print, repo, options) => {\n  if (!repo.closed) {\n    return {\n      ...await configureRepo(repo, options),\n      isNew: false\n    };\n  }\n  try {\n    await repo.open();\n    return {\n      ...await configureRepo(repo, options),\n      isNew: false\n    };\n  } catch (err) {\n    if (err.code !== ERR_REPO_NOT_INITIALIZED) {\n      throw err;\n    }\n    if (options.init && options.init.allowNew === false) {\n      throw new NotEnabledError('Initialization of new repos disabled by config, pass `config.init.isNew: true` to enable it');\n    }\n    return {\n      ...await initRepo(print, repo, options),\n      isNew: true\n    };\n  }\n};\nconst initRepo = async (print, repo, options) => {\n  const initOptions = options.init || {};\n  const exists = await repo.exists();\n  log('repo exists?', exists);\n  if (exists === true) {\n    throw new Error('repo already exists');\n  }\n  const peerId = initOptions.privateKey ? await decodePeerId(initOptions.privateKey) : await initPeerId(print, initOptions);\n  const identity = peerIdToIdentity(peerId);\n  log('peer identity: %s', identity.PeerID);\n  const config = {\n    ...mergeOptions(applyProfiles(getDefaultConfig(), initOptions.profiles), options.config),\n    Identity: identity\n  };\n  await repo.init(config);\n  await repo.open();\n  log('repo opened');\n  const keychainConfig = { pass: options.pass };\n  try {\n    keychainConfig.dek = await repo.config.get('Keychain.DEK');\n  } catch (err) {\n    if (err.code !== 'ERR_NOT_FOUND') {\n      throw err;\n    }\n  }\n  const libp2p = await createLibp2p({\n    options: undefined,\n    multiaddrs: undefined,\n    peerId,\n    repo,\n    config,\n    keychainConfig\n  });\n  if (libp2p.keychain && libp2p.keychain.opts) {\n    await libp2p.loadKeychain();\n    await repo.config.set('Keychain', { DEK: libp2p.keychain.opts.dek });\n  }\n  return {\n    peerId,\n    keychain: libp2p.keychain\n  };\n};\nconst decodePeerId = peerId => {\n  log('using user-supplied private-key');\n  return typeof peerId === 'object' ? peerId : PeerId.createFromPrivKey(uint8ArrayFromString(peerId, 'base64pad'));\n};\nconst initPeerId = (print, {algorithm = 'Ed25519', bits = 2048}) => {\n  print('generating %s keypair...', algorithm);\n  return PeerId.create({\n    keyType: algorithm,\n    bits\n  });\n};\nconst peerIdToIdentity = peerId => ({\n  PeerID: peerId.toB58String(),\n  PrivKey: uint8ArrayToString(peerId.privKey.bytes, 'base64pad')\n});\nconst configureRepo = async (repo, options) => {\n  const config = options.config;\n  const profiles = options.init && options.init.profiles || [];\n  const pass = options.pass;\n  const original = await repo.config.getAll();\n  const changed = mergeConfigs(applyProfiles(original, profiles), config);\n  if (original !== changed) {\n    await repo.config.replace(changed);\n  }\n  if (!changed.Identity || !changed.Identity.PrivKey) {\n    throw new NotInitializedError('No private key was found in the config, please intialize the repo');\n  }\n  const peerId = await PeerId.createFromPrivKey(changed.Identity.PrivKey);\n  const libp2p = await createLibp2p({\n    options: undefined,\n    multiaddrs: undefined,\n    peerId,\n    repo,\n    config: changed,\n    keychainConfig: {\n      pass,\n      ...changed.Keychain\n    }\n  });\n  if (libp2p.keychain) {\n    await libp2p.loadKeychain();\n  }\n  return {\n    peerId,\n    keychain: libp2p.keychain\n  };\n};\nconst mergeConfigs = (config, changes) => changes ? mergeOptions(config, changes) : config;\nconst applyProfiles = (config, profiles) => {\n  return (profiles || []).reduce((config, name) => {\n    const profile = configProfiles[name];\n    if (!profile) {\n      throw new Error(`Could not find profile with name '${ name }'`);\n    }\n    log('applying profile %s', name);\n    return profile.transform(config);\n  }, config);\n};","import debug from 'debug';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { BitswapMessageEntry } from '../message/entry.js';\nexport const logger = (id, subsystem) => {\n  const name = ['bitswap'];\n  if (subsystem) {\n    name.push(subsystem);\n  }\n  if (id) {\n    name.push(`${ id.toB58String().slice(0, 8) }`);\n  }\n  return Object.assign(debug(name.join(':')), { error: debug(name.concat(['error']).join(':')) });\n};\nexport const includesWith = (pred, x, list) => {\n  let idx = 0;\n  const len = list.length;\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\nexport const uniqWith = (pred, list) => {\n  let idx = 0;\n  const len = list.length;\n  const result = [];\n  let item;\n  while (idx < len) {\n    item = list[idx];\n    if (!includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n};\nexport const groupBy = (pred, list) => {\n  return list.reduce((acc, v) => {\n    const k = pred(v);\n    if (acc[k]) {\n      acc[k].push(v);\n    } else {\n      acc[k] = [v];\n    }\n    return acc;\n  }, {});\n};\nexport const pullAllWith = (pred, list, values) => {\n  return list.filter(i => {\n    return !includesWith(pred, i, values);\n  });\n};\nexport const sortBy = (fn, list) => {\n  return Array.prototype.slice.call(list, 0).sort((a, b) => {\n    const aa = fn(a);\n    const bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n};\nexport const isMapEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const [key, valueA] of a) {\n    const valueB = b.get(key);\n    if (valueB === undefined) {\n      return false;\n    }\n    if (valueA instanceof Uint8Array && valueB instanceof Uint8Array && !uint8ArrayEquals(valueA, valueB)) {\n      return false;\n    }\n    if (valueA instanceof BitswapMessageEntry && valueB instanceof BitswapMessageEntry && !valueA.equals(valueB)) {\n      return false;\n    }\n  }\n  return true;\n};","import { CID } from 'multiformats/cid';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { base58btc } from 'multiformats/bases/base58';\nimport vd from 'varint-decoder';\nimport ve from '../utils/varint-encoder.js';\nimport { isMapEqual } from '../utils/index.js';\nimport { Message } from './message.js';\nimport { BitswapMessageEntry as Entry } from './entry.js';\nimport errcode from 'err-code';\nexport class BitswapMessage {\n  constructor(full) {\n    this.full = full;\n    this.wantlist = new Map();\n    this.blocks = new Map();\n    this.blockPresences = new Map();\n    this.pendingBytes = 0;\n  }\n  get empty() {\n    return this.blocks.size === 0 && this.wantlist.size === 0 && this.blockPresences.size === 0;\n  }\n  addEntry(cid, priority, wantType, cancel, sendDontHave) {\n    if (wantType == null) {\n      wantType = BitswapMessage.WantType.Block;\n    }\n    const cidStr = cid.toString(base58btc);\n    const entry = this.wantlist.get(cidStr);\n    if (entry) {\n      if (entry.wantType === wantType) {\n        entry.priority = priority;\n      }\n      if (cancel) {\n        entry.cancel = Boolean(cancel);\n      }\n      if (sendDontHave) {\n        entry.sendDontHave = Boolean(sendDontHave);\n      }\n      if (wantType === BitswapMessage.WantType.Block && entry.wantType === BitswapMessage.WantType.Have) {\n        entry.wantType = wantType;\n      }\n    } else {\n      this.wantlist.set(cidStr, new Entry(cid, priority, wantType, cancel, sendDontHave));\n    }\n  }\n  addBlock(cid, block) {\n    const cidStr = cid.toString(base58btc);\n    this.blocks.set(cidStr, block);\n  }\n  addHave(cid) {\n    const cidStr = cid.toString(base58btc);\n    if (!this.blockPresences.has(cidStr)) {\n      this.blockPresences.set(cidStr, BitswapMessage.BlockPresenceType.Have);\n    }\n  }\n  addDontHave(cid) {\n    const cidStr = cid.toString(base58btc);\n    if (!this.blockPresences.has(cidStr)) {\n      this.blockPresences.set(cidStr, BitswapMessage.BlockPresenceType.DontHave);\n    }\n  }\n  cancel(cid) {\n    const cidStr = cid.toString(base58btc);\n    this.wantlist.delete(cidStr);\n    this.addEntry(cid, 0, BitswapMessage.WantType.Block, true, false);\n  }\n  setPendingBytes(size) {\n    this.pendingBytes = size;\n  }\n  serializeToBitswap100() {\n    const msg = {\n      wantlist: {\n        entries: Array.from(this.wantlist.values()).map(entry => {\n          return {\n            block: entry.cid.bytes,\n            priority: Number(entry.priority),\n            cancel: Boolean(entry.cancel)\n          };\n        }),\n        full: this.full ? true : undefined\n      },\n      blocks: Array.from(this.blocks.values())\n    };\n    return Message.encode(msg).finish();\n  }\n  serializeToBitswap110() {\n    const msg = {\n      wantlist: {\n        entries: Array.from(this.wantlist.values()).map(entry => {\n          return {\n            block: entry.cid.bytes,\n            priority: Number(entry.priority),\n            wantType: entry.wantType,\n            cancel: Boolean(entry.cancel),\n            sendDontHave: Boolean(entry.sendDontHave)\n          };\n        }),\n        full: this.full ? true : undefined\n      },\n      blockPresences: [],\n      payload: [],\n      pendingBytes: this.pendingBytes\n    };\n    for (const [cidStr, data] of this.blocks.entries()) {\n      const cid = CID.parse(cidStr);\n      const version = cid.version;\n      const codec = cid.code;\n      const multihash = cid.multihash.code;\n      const digestLength = cid.multihash.digest.length;\n      const prefix = ve([\n        version,\n        codec,\n        multihash,\n        digestLength\n      ]);\n      msg.payload.push(new Message.Block({\n        prefix,\n        data\n      }));\n    }\n    for (const [cidStr, bpType] of this.blockPresences) {\n      msg.blockPresences.push(new Message.BlockPresence({\n        cid: CID.parse(cidStr).bytes,\n        type: bpType\n      }));\n    }\n    if (this.pendingBytes > 0) {\n      msg.pendingBytes = this.pendingBytes;\n    }\n    return Message.encode(msg).finish();\n  }\n  equals(other) {\n    if (this.full !== other.full || this.pendingBytes !== other.pendingBytes || !isMapEqual(this.wantlist, other.wantlist) || !isMapEqual(this.blocks, other.blocks) || !isMapEqual(this.blockPresences, other.blockPresences)) {\n      return false;\n    }\n    return true;\n  }\n  get [Symbol.toStringTag]() {\n    const list = Array.from(this.wantlist.keys());\n    const blocks = Array.from(this.blocks.keys());\n    return `BitswapMessage <full: ${ this.full }, list: ${ list }, blocks: ${ blocks }>`;\n  }\n}\nBitswapMessage.deserialize = async (raw, hashLoader) => {\n  const decoded = Message.decode(raw);\n  const isFull = decoded.wantlist && decoded.wantlist.full || false;\n  const msg = new BitswapMessage(isFull);\n  if (decoded.wantlist && decoded.wantlist.entries) {\n    decoded.wantlist.entries.forEach(entry => {\n      if (!entry.block) {\n        return;\n      }\n      const cid = CID.decode(entry.block);\n      msg.addEntry(cid, entry.priority || 0, entry.wantType, Boolean(entry.cancel), Boolean(entry.sendDontHave));\n    });\n  }\n  if (decoded.blockPresences) {\n    decoded.blockPresences.forEach(blockPresence => {\n      if (!blockPresence.cid) {\n        return;\n      }\n      const cid = CID.decode(blockPresence.cid);\n      if (blockPresence.type === BitswapMessage.BlockPresenceType.Have) {\n        msg.addHave(cid);\n      } else {\n        msg.addDontHave(cid);\n      }\n    });\n  }\n  if (decoded.blocks.length > 0) {\n    await Promise.all(decoded.blocks.map(async b => {\n      const hash = await sha256.digest(b);\n      const cid = CID.createV0(hash);\n      msg.addBlock(cid, b);\n    }));\n    return msg;\n  }\n  if (decoded.payload.length > 0) {\n    await Promise.all(decoded.payload.map(async p => {\n      if (!p.prefix || !p.data) {\n        return;\n      }\n      const values = vd(p.prefix);\n      const cidVersion = values[0];\n      const multicodec = values[1];\n      const hashAlg = values[2];\n      const hasher = hashAlg === sha256.code ? sha256 : hashLoader && await hashLoader.getHasher(hashAlg);\n      if (!hasher) {\n        throw errcode(new Error('Unknown hash algorithm'), 'ERR_UNKNOWN_HASH_ALG');\n      }\n      const hash = await hasher.digest(p.data);\n      const cid = CID.create(cidVersion, multicodec, hash);\n      msg.addBlock(cid, p.data);\n    }));\n    msg.setPendingBytes(decoded.pendingBytes);\n    return msg;\n  }\n  return msg;\n};\nBitswapMessage.blockPresenceSize = cid => {\n  return cid.bytes.length + 1;\n};\nBitswapMessage.Entry = Entry;\nBitswapMessage.WantType = {\n  Block: Message.Wantlist.WantType.Block,\n  Have: Message.Wantlist.WantType.Have\n};\nBitswapMessage.BlockPresenceType = {\n  Have: Message.BlockPresenceType.Have,\n  DontHave: Message.BlockPresenceType.DontHave\n};","const SECOND = 1000;\nexport const maxProvidersPerRequest = 3;\nexport const providerRequestTimeout = 10 * SECOND;\nexport const hasBlockTimeout = 15 * SECOND;\nexport const provideTimeout = 15 * SECOND;\nexport const kMaxPriority = Math.pow(2, 31) - 1;\nexport const maxListeners = 1000;\nexport const wantlistSendDebounceMs = 1;","import debounce from 'just-debounce-it';\nimport { BitswapMessage as Message } from '../message/index.js';\nimport { logger } from '../utils/index.js';\nimport { wantlistSendDebounceMs } from '../constants.js';\nexport class MsgQueue {\n  constructor(selfPeerId, otherPeerId, network) {\n    this.peerId = otherPeerId;\n    this.network = network;\n    this.refcnt = 1;\n    this._entries = [];\n    this._log = logger(selfPeerId, 'msgqueue');\n    this.sendEntries = debounce(this._sendEntries.bind(this), wantlistSendDebounceMs);\n  }\n  addMessage(msg) {\n    if (msg.empty) {\n      return;\n    }\n    this.send(msg);\n  }\n  addEntries(entries) {\n    this._entries = this._entries.concat(entries);\n    this.sendEntries();\n  }\n  _sendEntries() {\n    if (!this._entries.length) {\n      return;\n    }\n    const msg = new Message(false);\n    this._entries.forEach(entry => {\n      if (entry.cancel) {\n        msg.cancel(entry.cid);\n      } else {\n        msg.addEntry(entry.cid, entry.priority);\n      }\n    });\n    this._entries = [];\n    this.addMessage(msg);\n  }\n  async send(msg) {\n    try {\n      await this.network.connectTo(this.peerId);\n    } catch (err) {\n      this._log.error('cant connect to peer %s: %s', this.peerId.toB58String(), err.message);\n      return;\n    }\n    this._log('sending message to peer %s', this.peerId.toB58String());\n    this.network.sendMessage(this.peerId, msg).catch(err => {\n      this._log.error('send error: %s', err.message);\n    });\n  }\n}","import { BitswapMessage as Message } from '../message/index.js';\nimport { Wantlist } from '../wantlist/index.js';\nimport * as CONSTANTS from '../constants.js';\nimport { MsgQueue } from './msg-queue.js';\nimport { logger } from '../utils/index.js';\nimport { base58btc } from 'multiformats/bases/base58';\nimport trackedMap from 'libp2p/src/metrics/tracked-map.js';\nexport class WantManager {\n  constructor(peerId, network, stats, libp2p) {\n    this.peers = trackedMap({\n      system: 'ipfs',\n      component: 'bitswap',\n      metric: 'want-manager-peers',\n      metrics: libp2p.metrics\n    });\n    this.wantlist = new Wantlist(stats, libp2p);\n    this.network = network;\n    this._stats = stats;\n    this._peerId = peerId;\n    this._log = logger(peerId, 'want');\n  }\n  _addEntries(cids, cancel, force) {\n    const entries = cids.map((cid, i) => {\n      return new Message.Entry(cid, CONSTANTS.kMaxPriority - i, Message.WantType.Block, cancel);\n    });\n    entries.forEach(e => {\n      if (e.cancel) {\n        if (force) {\n          this.wantlist.removeForce(e.cid.toString(base58btc));\n        } else {\n          this.wantlist.remove(e.cid);\n        }\n      } else {\n        this._log('adding to wl');\n        this.wantlist.add(e.cid, e.priority);\n      }\n    });\n    for (const p of this.peers.values()) {\n      p.addEntries(entries);\n    }\n  }\n  _startPeerHandler(peerId) {\n    let mq = this.peers.get(peerId.toB58String());\n    if (mq) {\n      mq.refcnt++;\n      return;\n    }\n    mq = new MsgQueue(this._peerId, peerId, this.network);\n    const fullwantlist = new Message(true);\n    for (const entry of this.wantlist.entries()) {\n      fullwantlist.addEntry(entry[1].cid, entry[1].priority);\n    }\n    mq.addMessage(fullwantlist);\n    this.peers.set(peerId.toB58String(), mq);\n    return mq;\n  }\n  _stopPeerHandler(peerId) {\n    const mq = this.peers.get(peerId.toB58String());\n    if (!mq) {\n      return;\n    }\n    mq.refcnt--;\n    if (mq.refcnt > 0) {\n      return;\n    }\n    this.peers.delete(peerId.toB58String());\n  }\n  wantBlocks(cids, options = {}) {\n    this._addEntries(cids, false);\n    if (options && options.signal) {\n      options.signal.addEventListener('abort', () => {\n        this.cancelWants(cids);\n      });\n    }\n  }\n  unwantBlocks(cids) {\n    this._log('unwant blocks: %s', cids.length);\n    this._addEntries(cids, true, true);\n  }\n  cancelWants(cids) {\n    this._log('cancel wants: %s', cids.length);\n    this._addEntries(cids, true);\n  }\n  connectedPeers() {\n    return Array.from(this.peers.keys());\n  }\n  connected(peerId) {\n    this._startPeerHandler(peerId);\n  }\n  disconnected(peerId) {\n    this._stopPeerHandler(peerId);\n  }\n  start() {\n  }\n  stop() {\n    this.peers.forEach(mq => this.disconnected(mq.peerId));\n  }\n}","import lp from 'it-length-prefixed';\nimport { pipe } from 'it-pipe';\nimport MulticodecTopology from 'libp2p-interfaces/src/topology/multicodec-topology.js';\nimport { BitswapMessage as Message } from './message/index.js';\nimport * as CONSTANTS from './constants.js';\nimport { logger } from './utils/index.js';\nconst BITSWAP100 = '/ipfs/bitswap/1.0.0';\nconst BITSWAP110 = '/ipfs/bitswap/1.1.0';\nconst BITSWAP120 = '/ipfs/bitswap/1.2.0';\nexport class Network {\n  constructor(libp2p, bitswap, stats, options = {}) {\n    this._log = logger(libp2p.peerId, 'network');\n    this._libp2p = libp2p;\n    this._bitswap = bitswap;\n    this._protocols = [BITSWAP100];\n    if (!options.b100Only) {\n      this._protocols.unshift(BITSWAP110);\n      this._protocols.unshift(BITSWAP120);\n    }\n    this._stats = stats;\n    this._running = false;\n    this._onPeerConnect = this._onPeerConnect.bind(this);\n    this._onPeerDisconnect = this._onPeerDisconnect.bind(this);\n    this._onConnection = this._onConnection.bind(this);\n    this._hashLoader = options.hashLoader;\n  }\n  async start() {\n    this._running = true;\n    await this._libp2p.handle(this._protocols, this._onConnection);\n    const topology = new MulticodecTopology({\n      multicodecs: this._protocols,\n      handlers: {\n        onConnect: this._onPeerConnect,\n        onDisconnect: this._onPeerDisconnect\n      }\n    });\n    this._registrarId = await this._libp2p.registrar.register(topology);\n    for await (const peer of this._libp2p.peerStore.getPeers()) {\n      const conn = this._libp2p.connectionManager.get(peer.id);\n      conn && this._onPeerConnect(conn.remotePeer);\n    }\n  }\n  async stop() {\n    this._running = false;\n    await this._libp2p.unhandle(this._protocols);\n    if (this._registrarId != null) {\n      this._libp2p.registrar.unregister(this._registrarId);\n    }\n  }\n  async _onConnection({protocol, stream, connection}) {\n    if (!this._running) {\n      return;\n    }\n    this._log('incoming new bitswap %s connection from %s', protocol, connection.remotePeer.toB58String());\n    try {\n      await pipe(stream, lp.decode(), async source => {\n        for await (const data of source) {\n          try {\n            const message = await Message.deserialize(data.slice(), this._hashLoader);\n            await this._bitswap._receiveMessage(connection.remotePeer, message);\n          } catch (err) {\n            this._bitswap._receiveError(err);\n            break;\n          }\n        }\n      });\n    } catch (err) {\n      this._log(err);\n    }\n  }\n  _onPeerConnect(peerId) {\n    this._bitswap._onPeerConnected(peerId);\n  }\n  _onPeerDisconnect(peerId) {\n    this._bitswap._onPeerDisconnected(peerId);\n  }\n  findProviders(cid, maxProviders, options = {}) {\n    return this._libp2p.contentRouting.findProviders(cid, {\n      timeout: CONSTANTS.providerRequestTimeout,\n      maxNumProviders: maxProviders\n    });\n  }\n  async findAndConnect(cid, options) {\n    const connectAttempts = [];\n    for await (const provider of this.findProviders(cid, CONSTANTS.maxProvidersPerRequest, options)) {\n      this._log(`connecting to provider ${ provider.id }`);\n      connectAttempts.push(this.connectTo(provider.id, options).catch(err => {\n        this._log.error(err);\n      }));\n    }\n    await Promise.all(connectAttempts);\n  }\n  async provide(cid, options) {\n    await this._libp2p.contentRouting.provide(cid, options);\n  }\n  async sendMessage(peer, msg) {\n    if (!this._running)\n      throw new Error('network isn\\'t running');\n    const stringId = peer.toB58String();\n    this._log('sendMessage to %s', stringId, msg);\n    const connection = await this._libp2p.dial(peer);\n    const {stream, protocol} = await connection.newStream([\n      BITSWAP120,\n      BITSWAP110,\n      BITSWAP100\n    ]);\n    let serialized;\n    switch (protocol) {\n    case BITSWAP100:\n      serialized = msg.serializeToBitswap100();\n      break;\n    case BITSWAP110:\n    case BITSWAP120:\n      serialized = msg.serializeToBitswap110();\n      break;\n    default:\n      throw new Error('Unknown protocol: ' + protocol);\n    }\n    writeMessage(stream, serialized, this._log);\n    this._updateSentStats(peer, msg.blocks);\n  }\n  async connectTo(peer, options) {\n    if (!this._running) {\n      throw new Error('network isn\\'t running');\n    }\n    return this._libp2p.dial(peer, options);\n  }\n  _updateSentStats(peer, blocks) {\n    const peerId = peer.toB58String();\n    if (this._stats) {\n      for (const block of blocks.values()) {\n        this._stats.push(peerId, 'dataSent', block.length);\n      }\n      this._stats.push(peerId, 'blocksSent', blocks.size);\n    }\n  }\n}\nasync function writeMessage(stream, msg, log) {\n  try {\n    await pipe([msg], lp.encode(), stream);\n  } catch (err) {\n    log(err);\n  }\n}","import { Wantlist } from '../wantlist/index.js';\nexport class Ledger {\n  constructor(peerId) {\n    this.partner = peerId;\n    this.wantlist = new Wantlist();\n    this.exchangeCount = 0;\n    this.sentToPeer = new Map();\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    };\n  }\n  sentBytes(n) {\n    this.exchangeCount++;\n    this.lastExchange = new Date().getTime();\n    this.accounting.bytesSent += n;\n  }\n  receivedBytes(n) {\n    this.exchangeCount++;\n    this.lastExchange = new Date().getTime();\n    this.accounting.bytesRecv += n;\n  }\n  wants(cid, priority, wantType) {\n    this.wantlist.add(cid, priority, wantType);\n  }\n  cancelWant(cid) {\n    this.wantlist.remove(cid);\n  }\n  wantlistContains(cid) {\n    return this.wantlist.get(cid);\n  }\n  debtRatio() {\n    return this.accounting.bytesSent / (this.accounting.bytesRecv + 1);\n  }\n}","export class SortedMap extends Map {\n  constructor(entries, cmp) {\n    super();\n    this._cmp = cmp || this._defaultSort;\n    this._keys = [];\n    for (const [k, v] of entries || []) {\n      this.set(k, v);\n    }\n  }\n  update(i) {\n    if (i < 0 || i >= this._keys.length) {\n      return;\n    }\n    const k = this._keys[i];\n    this._keys.splice(i, 1);\n    const newIdx = this._find(k);\n    this._keys.splice(newIdx, 0, k);\n  }\n  set(k, v) {\n    if (this.has(k)) {\n      const i = this.indexOf(k);\n      this._keys.splice(i, 1);\n    }\n    super.set(k, v);\n    const i = this._find(k);\n    this._keys.splice(i, 0, k);\n    return this;\n  }\n  clear() {\n    super.clear();\n    this._keys = [];\n  }\n  delete(k) {\n    if (!this.has(k)) {\n      return false;\n    }\n    const i = this.indexOf(k);\n    this._keys.splice(i, 1);\n    return super.delete(k);\n  }\n  indexOf(k) {\n    if (!this.has(k)) {\n      return -1;\n    }\n    const i = this._find(k);\n    if (this._keys[i] === k) {\n      return i;\n    }\n    for (let j = 1; j < this._keys.length; j++) {\n      if (this._keys[i + j] === k)\n        return i + j;\n      if (this._keys[i - j] === k)\n        return i - j;\n    }\n    return -1;\n  }\n  _find(k) {\n    let lower = 0;\n    let upper = this._keys.length;\n    while (lower < upper) {\n      const pivot = lower + upper >>> 1;\n      const cmp = this._kCmp(this._keys[pivot], k);\n      if (cmp < 0) {\n        lower = pivot + 1;\n      } else if (cmp > 0) {\n        upper = pivot;\n      } else {\n        return pivot;\n      }\n    }\n    return lower;\n  }\n  *keys() {\n    for (const k of this._keys) {\n      yield k;\n    }\n    return undefined;\n  }\n  *values() {\n    for (const k of this._keys) {\n      yield this.get(k);\n    }\n    return undefined;\n  }\n  *entries() {\n    for (const k of this._keys) {\n      yield [\n        k,\n        this.get(k)\n      ];\n    }\n    return undefined;\n  }\n  *[Symbol.iterator]() {\n    yield* this.entries();\n  }\n  forEach(cb, thisArg) {\n    if (!cb) {\n      return;\n    }\n    for (const k of this._keys) {\n      cb.apply(thisArg, [[\n          k,\n          this.get(k)\n        ]]);\n    }\n  }\n  _defaultSort(a, b) {\n    if (a[0] < b[0])\n      return -1;\n    if (b[0] < a[0])\n      return 1;\n    return 0;\n  }\n  _kCmp(a, b) {\n    return this._cmp([\n      a,\n      this.get(a)\n    ], [\n      b,\n      this.get(b)\n    ]);\n  }\n}","import { SortedMap } from '../utils/sorted-map.js';\nconst DefaultTaskMerger = {\n  hasNewInfo() {\n    return false;\n  },\n  merge() {\n  }\n};\nexport class RequestQueue {\n  constructor(taskMerger = DefaultTaskMerger) {\n    this._taskMerger = taskMerger;\n    this._byPeer = new SortedMap([], PeerTasks.compare);\n  }\n  pushTasks(peerId, tasks) {\n    let peerTasks = this._byPeer.get(peerId.toB58String());\n    if (!peerTasks) {\n      peerTasks = new PeerTasks(peerId, this._taskMerger);\n    }\n    peerTasks.pushTasks(tasks);\n    this._byPeer.set(peerId.toB58String(), peerTasks);\n  }\n  popTasks(targetMinBytes) {\n    const peerTasks = this._head();\n    if (peerTasks === undefined) {\n      return {\n        tasks: [],\n        pendingSize: 0\n      };\n    }\n    const {tasks, pendingSize} = peerTasks.popTasks(targetMinBytes);\n    if (tasks.length === 0) {\n      return {\n        tasks,\n        pendingSize\n      };\n    }\n    const peerId = peerTasks.peerId;\n    if (peerTasks.isIdle()) {\n      this._byPeer.delete(peerId.toB58String());\n    } else {\n      this._byPeer.update(0);\n    }\n    return {\n      peerId,\n      tasks,\n      pendingSize\n    };\n  }\n  _head() {\n    if (this._byPeer.size === 0) {\n      return undefined;\n    }\n    for (const [, v] of this._byPeer) {\n      return v;\n    }\n    return undefined;\n  }\n  remove(topic, peerId) {\n    const peerTasks = this._byPeer.get(peerId.toB58String());\n    peerTasks && peerTasks.remove(topic);\n  }\n  tasksDone(peerId, tasks) {\n    const peerTasks = this._byPeer.get(peerId.toB58String());\n    if (!peerTasks) {\n      return;\n    }\n    const i = this._byPeer.indexOf(peerId.toB58String());\n    for (const task of tasks) {\n      peerTasks.taskDone(task);\n    }\n    this._byPeer.update(i);\n  }\n}\nclass PeerTasks {\n  constructor(peerId, taskMerger) {\n    this.peerId = peerId;\n    this._taskMerger = taskMerger;\n    this._activeTotalSize = 0;\n    this._pending = new PendingTasks();\n    this._active = new Set();\n  }\n  pushTasks(tasks) {\n    for (const t of tasks) {\n      this._pushTask(t);\n    }\n  }\n  _pushTask(task) {\n    if (!this._taskHasMoreInfoThanActiveTasks(task)) {\n      return;\n    }\n    const existingTask = this._pending.get(task.topic);\n    if (existingTask) {\n      if (task.priority > existingTask.priority) {\n        this._pending.updatePriority(task.topic, task.priority);\n      }\n      this._taskMerger.merge(task, existingTask);\n      return;\n    }\n    this._pending.add(task);\n  }\n  _taskHasMoreInfoThanActiveTasks(task) {\n    const tasksWithTopic = [];\n    for (const activeTask of this._active) {\n      if (activeTask.topic === task.topic) {\n        tasksWithTopic.push(activeTask);\n      }\n    }\n    if (tasksWithTopic.length === 0) {\n      return true;\n    }\n    return this._taskMerger.hasNewInfo(task, tasksWithTopic);\n  }\n  popTasks(targetMinBytes) {\n    let size = 0;\n    const tasks = [];\n    const pendingTasks = this._pending.tasks();\n    for (let i = 0; i < pendingTasks.length && size < targetMinBytes; i++) {\n      const task = pendingTasks[i];\n      tasks.push(task);\n      size += task.size;\n      this._pending.delete(task.topic);\n      this._activeTotalSize += task.size;\n      this._active.add(task);\n    }\n    return {\n      tasks,\n      pendingSize: this._pending.totalSize\n    };\n  }\n  taskDone(task) {\n    if (this._active.has(task)) {\n      this._activeTotalSize -= task.size;\n      this._active.delete(task);\n    }\n  }\n  remove(topic) {\n    this._pending.delete(topic);\n  }\n  isIdle() {\n    return this._pending.length === 0 && this._active.size === 0;\n  }\n  static compare(a, b) {\n    if (a[1]._pending.length === 0) {\n      return 1;\n    }\n    if (b[1]._pending.length === 0) {\n      return -1;\n    }\n    if (a[1]._activeTotalSize === b[1]._activeTotalSize) {\n      return b[1]._pending.length - a[1]._pending.length;\n    }\n    return a[1]._activeTotalSize - b[1]._activeTotalSize;\n  }\n}\nclass PendingTasks {\n  constructor() {\n    this._tasks = new SortedMap([], this._compare);\n  }\n  get length() {\n    return this._tasks.size;\n  }\n  get totalSize() {\n    return [...this._tasks.values()].reduce((a, t) => a + t.task.size, 0);\n  }\n  get(topic) {\n    return (this._tasks.get(topic) || {}).task;\n  }\n  add(task) {\n    this._tasks.set(task.topic, {\n      created: Date.now(),\n      task\n    });\n  }\n  delete(topic) {\n    this._tasks.delete(topic);\n  }\n  tasks() {\n    return [...this._tasks.values()].map(i => i.task);\n  }\n  updatePriority(topic, priority) {\n    const obj = this._tasks.get(topic);\n    if (!obj) {\n      return;\n    }\n    const i = this._tasks.indexOf(topic);\n    obj.task.priority = priority;\n    this._tasks.update(i);\n  }\n  _compare(a, b) {\n    if (a[1].task.priority === b[1].task.priority) {\n      return a[1].created - b[1].created;\n    }\n    return b[1].task.priority - a[1].task.priority;\n  }\n}","export const TaskMerger = {\n  hasNewInfo(task, tasksWithTopic) {\n    let haveBlock = false;\n    let isWantBlock = false;\n    for (const existing of tasksWithTopic) {\n      if (existing.data.haveBlock) {\n        haveBlock = true;\n      }\n      if (existing.data.isWantBlock) {\n        isWantBlock = true;\n      }\n    }\n    if (!isWantBlock && task.data.isWantBlock) {\n      return true;\n    }\n    if (!haveBlock && task.data.haveBlock) {\n      return true;\n    }\n    return false;\n  },\n  merge(newTask, existingTask) {\n    const taskData = newTask.data;\n    const existingData = existingTask.data;\n    if (!existingData.haveBlock && taskData.haveBlock) {\n      existingData.haveBlock = taskData.haveBlock;\n      existingData.blockSize = taskData.blockSize;\n    }\n    if (!existingData.isWantBlock && taskData.isWantBlock) {\n      existingData.isWantBlock = true;\n      if (!existingData.haveBlock || taskData.haveBlock) {\n        existingData.haveBlock = taskData.haveBlock;\n        existingTask.size = newTask.size;\n      }\n    }\n    if (existingData.isWantBlock && existingData.haveBlock) {\n      existingTask.size = existingData.blockSize;\n    }\n  }\n};","import { CID } from 'multiformats/cid';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { BitswapMessage as Message } from '../message/index.js';\nimport { Wantlist } from '../wantlist/index.js';\nimport { Ledger } from './ledger.js';\nimport { RequestQueue } from './req-queue.js';\nimport { TaskMerger } from './task-merger.js';\nimport { logger } from '../utils/index.js';\nimport trackedMap from 'libp2p/src/metrics/tracked-map.js';\nconst WantType = Message.WantType;\nconst TARGET_MESSAGE_SIZE = 16 * 1024;\nconst MAX_SIZE_REPLACE_HAS_WITH_BLOCK = 1024;\nexport class DecisionEngine {\n  constructor(peerId, blockstore, network, stats, libp2p, opts = {}) {\n    this._log = logger(peerId, 'engine');\n    this.blockstore = blockstore;\n    this.network = network;\n    this._stats = stats;\n    this._opts = this._processOpts(opts);\n    this.ledgerMap = trackedMap({\n      system: 'ipfs',\n      component: 'bitswap',\n      metric: 'ledger-map',\n      metrics: libp2p.metrics\n    });\n    this._running = false;\n    this._requestQueue = new RequestQueue(TaskMerger);\n  }\n  _processOpts(opts) {\n    return {\n      maxSizeReplaceHasWithBlock: MAX_SIZE_REPLACE_HAS_WITH_BLOCK,\n      targetMessageSize: TARGET_MESSAGE_SIZE,\n      ...opts\n    };\n  }\n  _scheduleProcessTasks() {\n    setTimeout(() => {\n      this._processTasks();\n    });\n  }\n  async _processTasks() {\n    if (!this._running) {\n      return;\n    }\n    const {peerId, tasks, pendingSize} = this._requestQueue.popTasks(this._opts.targetMessageSize);\n    if (tasks.length === 0) {\n      return;\n    }\n    const msg = new Message(false);\n    msg.setPendingBytes(pendingSize);\n    const blockCids = [];\n    const blockTasks = new Map();\n    for (const task of tasks) {\n      const cid = CID.parse(task.topic);\n      if (task.data.haveBlock) {\n        if (task.data.isWantBlock) {\n          blockCids.push(cid);\n          blockTasks.set(task.topic, task.data);\n        } else {\n          msg.addHave(cid);\n        }\n      } else {\n        msg.addDontHave(cid);\n      }\n    }\n    const blocks = await this._getBlocks(blockCids);\n    for (const [topic, taskData] of blockTasks) {\n      const cid = CID.parse(topic);\n      const blk = blocks.get(topic);\n      if (blk) {\n        msg.addBlock(cid, blk);\n      } else {\n        if (taskData.sendDontHave) {\n          msg.addDontHave(cid);\n        }\n      }\n    }\n    if (msg.empty) {\n      peerId && this._requestQueue.tasksDone(peerId, tasks);\n      this._scheduleProcessTasks();\n      return;\n    }\n    try {\n      peerId && await this.network.sendMessage(peerId, msg);\n      for (const [cidStr, block] of blocks.entries()) {\n        peerId && this.messageSent(peerId, CID.parse(cidStr), block);\n      }\n    } catch (err) {\n      this._log.error(err);\n    }\n    peerId && this._requestQueue.tasksDone(peerId, tasks);\n    this._scheduleProcessTasks();\n  }\n  wantlistForPeer(peerId) {\n    const peerIdStr = peerId.toB58String();\n    const ledger = this.ledgerMap.get(peerIdStr);\n    return ledger ? ledger.wantlist.sortedEntries() : new Map();\n  }\n  ledgerForPeer(peerId) {\n    const peerIdStr = peerId.toB58String();\n    const ledger = this.ledgerMap.get(peerIdStr);\n    if (!ledger) {\n      return null;\n    }\n    return {\n      peer: ledger.partner,\n      value: ledger.debtRatio(),\n      sent: ledger.accounting.bytesSent,\n      recv: ledger.accounting.bytesRecv,\n      exchanged: ledger.exchangeCount\n    };\n  }\n  peers() {\n    return Array.from(this.ledgerMap.values()).map(l => l.partner);\n  }\n  receivedBlocks(blocks) {\n    if (!blocks.length) {\n      return;\n    }\n    for (const ledger of this.ledgerMap.values()) {\n      for (const block of blocks) {\n        const want = ledger.wantlistContains(block.cid);\n        if (!want) {\n          continue;\n        }\n        const blockSize = block.data.length;\n        const isWantBlock = this._sendAsBlock(want.wantType, blockSize);\n        let entrySize = blockSize;\n        if (!isWantBlock) {\n          entrySize = Message.blockPresenceSize(want.cid);\n        }\n        this._requestQueue.pushTasks(ledger.partner, [{\n            topic: want.cid.toString(base58btc),\n            priority: want.priority,\n            size: entrySize,\n            data: {\n              blockSize,\n              isWantBlock,\n              haveBlock: true,\n              sendDontHave: false\n            }\n          }]);\n      }\n    }\n    this._scheduleProcessTasks();\n  }\n  async messageReceived(peerId, msg) {\n    const ledger = this._findOrCreate(peerId);\n    if (msg.empty) {\n      return;\n    }\n    if (msg.full) {\n      ledger.wantlist = new Wantlist();\n    }\n    this._updateBlockAccounting(msg.blocks, ledger);\n    if (msg.wantlist.size === 0) {\n      this._scheduleProcessTasks();\n      return;\n    }\n    const cancels = [];\n    const wants = [];\n    msg.wantlist.forEach(entry => {\n      if (entry.cancel) {\n        ledger.cancelWant(entry.cid);\n        cancels.push(entry.cid);\n      } else {\n        ledger.wants(entry.cid, entry.priority, entry.wantType);\n        wants.push(entry);\n      }\n    });\n    this._cancelWants(peerId, cancels);\n    await this._addWants(peerId, wants);\n    this._scheduleProcessTasks();\n  }\n  _cancelWants(peerId, cids) {\n    for (const c of cids) {\n      this._requestQueue.remove(c.toString(base58btc), peerId);\n    }\n  }\n  async _addWants(peerId, wants) {\n    const blockSizes = await this._getBlockSizes(wants.map(w => w.cid));\n    const tasks = [];\n    for (const want of wants) {\n      const id = want.cid.toString(base58btc);\n      const blockSize = blockSizes.get(id);\n      if (blockSize == null) {\n        if (want.sendDontHave) {\n          tasks.push({\n            topic: id,\n            priority: want.priority,\n            size: Message.blockPresenceSize(want.cid),\n            data: {\n              isWantBlock: want.wantType === WantType.Block,\n              blockSize: 0,\n              haveBlock: false,\n              sendDontHave: want.sendDontHave\n            }\n          });\n        }\n      } else {\n        const isWantBlock = this._sendAsBlock(want.wantType, blockSize);\n        let entrySize = blockSize;\n        if (!isWantBlock) {\n          entrySize = Message.blockPresenceSize(want.cid);\n        }\n        tasks.push({\n          topic: id,\n          priority: want.priority,\n          size: entrySize,\n          data: {\n            isWantBlock,\n            blockSize,\n            haveBlock: true,\n            sendDontHave: want.sendDontHave\n          }\n        });\n      }\n      this._requestQueue.pushTasks(peerId, tasks);\n    }\n  }\n  _sendAsBlock(wantType, blockSize) {\n    return wantType === WantType.Block || blockSize <= this._opts.maxSizeReplaceHasWithBlock;\n  }\n  async _getBlockSizes(cids) {\n    const blocks = await this._getBlocks(cids);\n    return new Map([...blocks].map(([k, v]) => [\n      k,\n      v.length\n    ]));\n  }\n  async _getBlocks(cids) {\n    const res = new Map();\n    await Promise.all(cids.map(async cid => {\n      try {\n        const block = await this.blockstore.get(cid);\n        res.set(cid.toString(base58btc), block);\n      } catch (e) {\n        if (e.code !== 'ERR_NOT_FOUND') {\n          this._log.error('failed to query blockstore for %s: %s', cid, e);\n        }\n      }\n    }));\n    return res;\n  }\n  _updateBlockAccounting(blocksMap, ledger) {\n    for (const block of blocksMap.values()) {\n      this._log('got block (%s bytes)', block.length);\n      ledger.receivedBytes(block.length);\n    }\n  }\n  messageSent(peerId, cid, block) {\n    const ledger = this._findOrCreate(peerId);\n    ledger.sentBytes(block.length);\n    ledger.wantlist.remove(cid);\n  }\n  numBytesSentTo(peerId) {\n    return this._findOrCreate(peerId).accounting.bytesSent;\n  }\n  numBytesReceivedFrom(peerId) {\n    return this._findOrCreate(peerId).accounting.bytesRecv;\n  }\n  peerDisconnected(peerId) {\n    this.ledgerMap.delete(peerId.toB58String());\n  }\n  _findOrCreate(peerId) {\n    const peerIdStr = peerId.toB58String();\n    const ledger = this.ledgerMap.get(peerIdStr);\n    if (ledger) {\n      return ledger;\n    }\n    const l = new Ledger(peerId);\n    this.ledgerMap.set(peerIdStr, l);\n    if (this._stats) {\n      this._stats.push(peerIdStr, 'peerCount', 1);\n    }\n    return l;\n  }\n  start() {\n    this._running = true;\n  }\n  stop() {\n    this._running = false;\n  }\n}","import { EventEmitter } from 'events';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport * as CONSTANTS from './constants.js';\nimport { logger } from './utils/index.js';\nconst unwantEvent = cid => `unwant:${ uint8ArrayToString(cid.multihash.bytes, 'base64') }`;\nconst blockEvent = cid => `block:${ uint8ArrayToString(cid.multihash.bytes, 'base64') }`;\nexport class Notifications extends EventEmitter {\n  constructor(peerId) {\n    super();\n    this.setMaxListeners(CONSTANTS.maxListeners);\n    this._log = logger(peerId, 'notif');\n  }\n  hasBlock(cid, block) {\n    const event = blockEvent(cid);\n    this._log(event);\n    this.emit(event, block);\n  }\n  wantBlock(cid, options = {}) {\n    if (!cid) {\n      throw new Error('Not a valid cid');\n    }\n    const blockEvt = blockEvent(cid);\n    const unwantEvt = unwantEvent(cid);\n    this._log(`wantBlock:${ cid }`);\n    return new Promise((resolve, reject) => {\n      const onUnwant = () => {\n        this.removeListener(blockEvt, onBlock);\n        reject(new Error(`Block for ${ cid } unwanted`));\n      };\n      const onBlock = data => {\n        this.removeListener(unwantEvt, onUnwant);\n        resolve(data);\n      };\n      this.once(unwantEvt, onUnwant);\n      this.once(blockEvt, onBlock);\n      if (options && options.signal) {\n        options.signal.addEventListener('abort', () => {\n          this.removeListener(blockEvt, onBlock);\n          this.removeListener(unwantEvt, onUnwant);\n          reject(new Error(`Want for ${ cid } aborted`));\n        });\n      }\n    });\n  }\n  unwantBlock(cid) {\n    const event = unwantEvent(cid);\n    this._log(event);\n    this.emit(event);\n  }\n}","import { EventEmitter } from 'events';\nimport MovingAverage from '@vascosantos/moving-average';\nexport class Stat extends EventEmitter {\n  constructor(initialCounters, options) {\n    super();\n    this._options = options;\n    this._queue = [];\n    this._stats = {};\n    this._frequencyLastTime = Date.now();\n    this._frequencyAccumulators = {};\n    this._movingAverages = {};\n    this._update = this._update.bind(this);\n    initialCounters.forEach(key => {\n      this._stats[key] = BigInt(0);\n      this._movingAverages[key] = {};\n      this._options.movingAverageIntervals.forEach(interval => {\n        const ma = this._movingAverages[key][interval] = MovingAverage(interval);\n        ma.push(this._frequencyLastTime, 0);\n      });\n    });\n    this._enabled = this._options.enabled;\n  }\n  enable() {\n    this._enabled = true;\n  }\n  disable() {\n    this._disabled = true;\n  }\n  stop() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n  get snapshot() {\n    return Object.assign({}, this._stats);\n  }\n  get movingAverages() {\n    return Object.assign({}, this._movingAverages);\n  }\n  push(counter, inc) {\n    if (this._enabled) {\n      this._queue.push([\n        counter,\n        inc,\n        Date.now()\n      ]);\n      this._resetComputeTimeout();\n    }\n  }\n  _resetComputeTimeout() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n    this._timeout = setTimeout(this._update, this._nextTimeout());\n  }\n  _nextTimeout() {\n    const urgency = this._queue.length / this._options.computeThrottleMaxQueueSize;\n    return Math.max(this._options.computeThrottleTimeout * (1 - urgency), 0);\n  }\n  _update() {\n    this._timeout = null;\n    if (this._queue.length) {\n      let last;\n      while (this._queue.length) {\n        const op = last = this._queue.shift();\n        op && this._applyOp(op);\n      }\n      last && this._updateFrequency(last[2]);\n      this.emit('update', this._stats);\n    }\n  }\n  _updateFrequency(latestTime) {\n    const timeDiff = latestTime - this._frequencyLastTime;\n    if (timeDiff) {\n      Object.keys(this._stats).forEach(key => {\n        this._updateFrequencyFor(key, timeDiff, latestTime);\n      });\n    }\n    this._frequencyLastTime = latestTime;\n  }\n  _updateFrequencyFor(key, timeDiffMS, latestTime) {\n    const count = this._frequencyAccumulators[key] || 0;\n    this._frequencyAccumulators[key] = 0;\n    const hz = count / timeDiffMS * 1000;\n    let movingAverages = this._movingAverages[key];\n    if (!movingAverages) {\n      movingAverages = this._movingAverages[key] = {};\n    }\n    this._options.movingAverageIntervals.forEach(movingAverageInterval => {\n      let movingAverage = movingAverages[movingAverageInterval];\n      if (!movingAverage) {\n        movingAverage = movingAverages[movingAverageInterval] = MovingAverage(movingAverageInterval);\n      }\n      movingAverage.push(latestTime, hz);\n    });\n  }\n  _applyOp(op) {\n    const key = op[0];\n    const inc = op[1];\n    if (typeof inc !== 'number') {\n      throw new Error(`invalid increment number: ${ inc }`);\n    }\n    if (!Object.prototype.hasOwnProperty.call(this._stats, key)) {\n      this._stats[key] = BigInt(0);\n    }\n    this._stats[key] = BigInt(this._stats[key]) + BigInt(inc);\n    if (!this._frequencyAccumulators[key]) {\n      this._frequencyAccumulators[key] = 0;\n    }\n    this._frequencyAccumulators[key] += inc;\n  }\n}","import { EventEmitter } from 'events';\nimport { Stat } from './stat.js';\nimport trackedMap from 'libp2p/src/metrics/tracked-map.js';\nconst defaultOptions = {\n  enabled: false,\n  computeThrottleTimeout: 1000,\n  computeThrottleMaxQueueSize: 1000,\n  movingAverageIntervals: [\n    60 * 1000,\n    5 * 60 * 1000,\n    15 * 60 * 1000\n  ]\n};\nexport class Stats extends EventEmitter {\n  constructor(libp2p, initialCounters = [], _options = defaultOptions) {\n    super();\n    const options = Object.assign({}, defaultOptions, _options);\n    if (typeof options.computeThrottleTimeout !== 'number') {\n      throw new Error('need computeThrottleTimeout');\n    }\n    if (typeof options.computeThrottleMaxQueueSize !== 'number') {\n      throw new Error('need computeThrottleMaxQueueSize');\n    }\n    this._initialCounters = initialCounters;\n    this._options = options;\n    this._enabled = this._options.enabled;\n    this._global = new Stat(initialCounters, options);\n    this._global.on('update', stats => this.emit('update', stats));\n    this._peers = trackedMap({\n      system: 'ipfs',\n      component: 'bitswap',\n      metric: 'stats-peers',\n      metrics: libp2p.metrics\n    });\n  }\n  enable() {\n    this._enabled = true;\n    this._options.enabled = true;\n    this._global.enable();\n  }\n  disable() {\n    this._enabled = false;\n    this._options.enabled = false;\n    this._global.disable();\n  }\n  stop() {\n    this._enabled = false;\n    this._global.stop();\n    for (const peerStat of this._peers) {\n      peerStat[1].stop();\n    }\n  }\n  get snapshot() {\n    return this._global.snapshot;\n  }\n  get movingAverages() {\n    return this._global.movingAverages;\n  }\n  forPeer(peerId) {\n    const peerIdStr = typeof peerId !== 'string' && peerId.toB58String ? peerId.toB58String() : `${ peerId }`;\n    return this._peers.get(peerIdStr);\n  }\n  push(peer, counter, inc) {\n    if (this._enabled) {\n      this._global.push(counter, inc);\n      if (peer) {\n        let peerStats = this._peers.get(peer);\n        if (!peerStats) {\n          peerStats = new Stat(this._initialCounters, this._options);\n          this._peers.set(peer, peerStats);\n        }\n        peerStats.push(counter, inc);\n      }\n    }\n  }\n  disconnected(peer) {\n    const peerId = peer.toB58String();\n    const peerStats = this._peers.get(peerId);\n    if (peerStats) {\n      peerStats.stop();\n      this._peers.delete(peerId);\n    }\n  }\n}","import { WantManager } from './want-manager/index.js';\nimport { Network } from './network.js';\nimport { DecisionEngine } from './decision-engine/index.js';\nimport { Notifications } from './notifications.js';\nimport { logger } from './utils/index.js';\nimport { Stats } from './stats/index.js';\nimport { anySignal } from 'any-signal';\nimport { BaseBlockstore } from 'blockstore-core/base';\nimport { CID } from 'multiformats/cid';\nconst defaultOptions = {\n  statsEnabled: false,\n  statsComputeThrottleTimeout: 1000,\n  statsComputeThrottleMaxQueueSize: 1000\n};\nconst statsKeys = [\n  'blocksReceived',\n  'dataReceived',\n  'dupBlksReceived',\n  'dupDataReceived',\n  'blocksSent',\n  'dataSent',\n  'providesBufferLength',\n  'wantListLength',\n  'peerCount'\n];\nexport class Bitswap extends BaseBlockstore {\n  constructor(libp2p, blockstore, options = {}) {\n    super();\n    this._libp2p = libp2p;\n    this._log = logger(this.peerId);\n    this._options = Object.assign({}, defaultOptions, options);\n    this._stats = new Stats(libp2p, statsKeys, {\n      enabled: this._options.statsEnabled,\n      computeThrottleTimeout: this._options.statsComputeThrottleTimeout,\n      computeThrottleMaxQueueSize: this._options.statsComputeThrottleMaxQueueSize\n    });\n    this.network = new Network(libp2p, this, this._stats, { hashLoader: options.hashLoader });\n    this.blockstore = blockstore;\n    this.engine = new DecisionEngine(this.peerId, blockstore, this.network, this._stats, libp2p);\n    this.wm = new WantManager(this.peerId, this.network, this._stats, libp2p);\n    this.notifications = new Notifications(this.peerId);\n    this.started = false;\n  }\n  isStarted() {\n    return this.started;\n  }\n  get peerId() {\n    return this._libp2p.peerId;\n  }\n  async _receiveMessage(peerId, incoming) {\n    try {\n      await this.engine.messageReceived(peerId, incoming);\n    } catch (err) {\n      this._log('failed to receive message', incoming);\n    }\n    if (incoming.blocks.size === 0) {\n      return;\n    }\n    const received = [];\n    for (const [cidStr, data] of incoming.blocks.entries()) {\n      const cid = CID.parse(cidStr);\n      received.push({\n        wasWanted: this.wm.wantlist.contains(cid),\n        cid,\n        data\n      });\n    }\n    this.wm.cancelWants(received.filter(({wasWanted}) => wasWanted).map(({cid}) => cid));\n    await Promise.all(received.map(({cid, wasWanted, data}) => this._handleReceivedBlock(peerId, cid, data, wasWanted)));\n  }\n  async _handleReceivedBlock(peerId, cid, data, wasWanted) {\n    this._log('received block');\n    const has = await this.blockstore.has(cid);\n    this._updateReceiveCounters(peerId.toB58String(), cid, data, has);\n    if (!wasWanted) {\n      return;\n    }\n    await this.put(cid, data);\n  }\n  _updateReceiveCounters(peerIdStr, cid, data, exists) {\n    this._stats.push(peerIdStr, 'blocksReceived', 1);\n    this._stats.push(peerIdStr, 'dataReceived', data.length);\n    if (exists) {\n      this._stats.push(peerIdStr, 'dupBlksReceived', 1);\n      this._stats.push(peerIdStr, 'dupDataReceived', data.length);\n    }\n  }\n  _receiveError(err) {\n    this._log.error('ReceiveError: %s', err.message);\n  }\n  _onPeerConnected(peerId) {\n    this.wm.connected(peerId);\n  }\n  _onPeerDisconnected(peerId) {\n    this.wm.disconnected(peerId);\n    this.engine.peerDisconnected(peerId);\n    this._stats.disconnected(peerId);\n  }\n  enableStats() {\n    this._stats.enable();\n  }\n  disableStats() {\n    this._stats.disable();\n  }\n  wantlistForPeer(peerId, _options) {\n    return this.engine.wantlistForPeer(peerId);\n  }\n  ledgerForPeer(peerId) {\n    return this.engine.ledgerForPeer(peerId);\n  }\n  async get(cid, options = {}) {\n    const fetchFromNetwork = (cid, options) => {\n      this.wm.wantBlocks([cid], options);\n      return this.notifications.wantBlock(cid, options);\n    };\n    let promptedNetwork = false;\n    const loadOrFetchFromNetwork = async (cid, options) => {\n      try {\n        const block = await this.blockstore.get(cid, options);\n        return block;\n      } catch (err) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err;\n        }\n        if (!promptedNetwork) {\n          promptedNetwork = true;\n          this.network.findAndConnect(cid).catch(err => this._log.error(err));\n        }\n        return fetchFromNetwork(cid, options);\n      }\n    };\n    const controller = new AbortController();\n    const signal = options.signal ? anySignal([\n      options.signal,\n      controller.signal\n    ]) : controller.signal;\n    const block = await Promise.race([\n      this.notifications.wantBlock(cid, { signal }),\n      loadOrFetchFromNetwork(cid, { signal })\n    ]);\n    controller.abort();\n    return block;\n  }\n  async *getMany(cids, options = {}) {\n    for await (const cid of cids) {\n      yield this.get(cid, options);\n    }\n  }\n  unwant(cids) {\n    const cidsArray = Array.isArray(cids) ? cids : [cids];\n    this.wm.unwantBlocks(cidsArray);\n    cidsArray.forEach(cid => this.notifications.unwantBlock(cid));\n  }\n  cancelWants(cids) {\n    this.wm.cancelWants(Array.isArray(cids) ? cids : [cids]);\n  }\n  async put(cid, block, _options) {\n    await this.blockstore.put(cid, block);\n    this._sendHaveBlockNotifications(cid, block);\n  }\n  async *putMany(source, options) {\n    for await (const {key, value} of this.blockstore.putMany(source, options)) {\n      this._sendHaveBlockNotifications(key, value);\n      yield {\n        key,\n        value\n      };\n    }\n  }\n  _sendHaveBlockNotifications(cid, data) {\n    this.notifications.hasBlock(cid, data);\n    this.engine.receivedBlocks([{\n        cid,\n        data\n      }]);\n    this.network.provide(cid).catch(err => {\n      this._log.error('Failed to provide: %s', err.message);\n    });\n  }\n  getWantlist() {\n    return this.wm.wantlist.entries();\n  }\n  peers() {\n    return this.engine.peers();\n  }\n  stat() {\n    return this._stats;\n  }\n  async start() {\n    this.wm.start();\n    await this.network.start();\n    this.engine.start();\n    this.started = true;\n  }\n  async stop() {\n    this._stats.stop();\n    this.wm.stop();\n    await this.network.stop();\n    this.engine.stop();\n    this.started = false;\n  }\n  unwrap() {\n    return this.blockstore;\n  }\n}","import { BaseBlockstore } from 'blockstore-core';\nimport merge from 'it-merge';\nimport pushable from 'it-pushable';\nimport filter from 'it-filter';\nexport class BlockStorage extends BaseBlockstore {\n  constructor(blockstore, bitswap) {\n    super();\n    this.child = blockstore;\n    this.bitswap = bitswap;\n  }\n  open() {\n    return this.child.open();\n  }\n  close() {\n    return this.child.close();\n  }\n  unwrap() {\n    return this.child;\n  }\n  async put(cid, block, options = {}) {\n    if (await this.has(cid)) {\n      return;\n    }\n    if (this.bitswap.isStarted()) {\n      await this.bitswap.put(cid, block, options);\n    } else {\n      await this.child.put(cid, block, options);\n    }\n  }\n  async *putMany(blocks, options = {}) {\n    const missingBlocks = filter(blocks, async ({key}) => {\n      return !await this.has(key);\n    });\n    if (this.bitswap.isStarted()) {\n      yield* this.bitswap.putMany(missingBlocks, options);\n    } else {\n      yield* this.child.putMany(missingBlocks, options);\n    }\n  }\n  async get(cid, options = {}) {\n    if (!await this.has(cid) && this.bitswap.isStarted()) {\n      return this.bitswap.get(cid, options);\n    } else {\n      return this.child.get(cid, options);\n    }\n  }\n  async *getMany(cids, options = {}) {\n    const getFromBitswap = pushable();\n    const getFromChild = pushable();\n    Promise.resolve().then(async () => {\n      for await (const cid of cids) {\n        if (!await this.has(cid) && this.bitswap.isStarted()) {\n          getFromBitswap.push(cid);\n        } else {\n          getFromChild.push(cid);\n        }\n      }\n      getFromBitswap.end();\n      getFromChild.end();\n    });\n    yield* merge(this.bitswap.getMany(getFromBitswap, options), this.child.getMany(getFromChild, options));\n  }\n  async delete(cid, options) {\n    await this.child.delete(cid, options);\n  }\n  async *deleteMany(cids, options) {\n    yield* this.child.deleteMany(cids, options);\n  }\n  async has(cid, options = {}) {\n    return this.child.has(cid, options);\n  }\n  async *query(q, options = {}) {\n    yield* this.child.query(q, options);\n  }\n  async *queryKeys(q, options = {}) {\n    yield* this.child.queryKeys(q, options);\n  }\n}","import { createBitswap } from 'ipfs-bitswap';\nimport { createLibp2p } from './libp2p.js';\nimport { Multiaddr } from 'multiaddr';\nimport errCode from 'err-code';\nimport { BlockStorage } from '../block-storage.js';\nexport class Network {\n  constructor(peerId, libp2p, bitswap, repo, blockstore) {\n    this.peerId = peerId;\n    this.libp2p = libp2p;\n    this.bitswap = bitswap;\n    this.repo = repo;\n    this.blockstore = blockstore;\n  }\n  static async start({peerId, repo, print, hashers, options}) {\n    if (repo.closed) {\n      await repo.open();\n    }\n    const config = await repo.config.getAll();\n    const libp2p = await createLibp2p({\n      options,\n      repo,\n      peerId,\n      multiaddrs: readAddrs(peerId, config),\n      config,\n      keychainConfig: undefined\n    });\n    if (libp2p.keychain) {\n      await libp2p.loadKeychain();\n    }\n    await libp2p.start();\n    for (const ma of libp2p.multiaddrs) {\n      print(`Swarm listening on ${ ma }/p2p/${ peerId.toB58String() }`);\n    }\n    const bitswap = createBitswap(libp2p, repo.blocks, {\n      statsEnabled: true,\n      hashLoader: hashers\n    });\n    await bitswap.start();\n    const blockstore = new BlockStorage(repo.blocks, bitswap);\n    repo.blocks = blockstore;\n    repo.pins.blockstore = blockstore;\n    return new Network(peerId, libp2p, bitswap, repo, blockstore);\n  }\n  static async stop(network) {\n    network.repo.blocks = network.blockstore.unwrap();\n    network.repo.pins.blockstore = network.blockstore.unwrap();\n    await network.bitswap.stop();\n    await network.libp2p.stop();\n  }\n}\nconst readAddrs = (peerId, config) => {\n  const peerIdStr = peerId.toB58String();\n  const addrs = [];\n  const swarm = config.Addresses && config.Addresses.Swarm || [];\n  for (const addr of swarm) {\n    let ma = new Multiaddr(addr);\n    if (ma.protoCodes().includes(WEBSOCKET_STAR_PROTO_CODE)) {\n      throw errCode(new Error('websocket-star swarm addresses are not supported. See https://github.com/ipfs/js-ipfs/issues/2779'), 'ERR_WEBSOCKET_STAR_SWARM_ADDR_NOT_SUPPORTED');\n    }\n    const maId = ma.getPeerId();\n    if (maId && maId !== peerIdStr) {\n      ma = ma.encapsulate(`/p2p/${ peerIdStr }`);\n    }\n    addrs.push(ma);\n  }\n  return addrs;\n};\nconst WEBSOCKET_STAR_PROTO_CODE = 479;","import { Bitswap } from './bitswap.js';\nexport const createBitswap = (libp2p, blockstore, options = {}) => {\n  return new Bitswap(libp2p, blockstore, options);\n};","import { createAddrs } from './addrs.js';\nimport { createConnect } from './connect.js';\nimport { createDisconnect } from './disconnect.js';\nimport { createLocalAddrs } from './local-addrs.js';\nimport { createPeers } from './peers.js';\nexport class SwarmAPI {\n  constructor({network}) {\n    this.addrs = createAddrs({ network });\n    this.connect = createConnect({ network });\n    this.disconnect = createDisconnect({ network });\n    this.localAddrs = createLocalAddrs({ network });\n    this.peers = createPeers({ network });\n  }\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createAddrs({network}) {\n  async function addrs(options = {}) {\n    const peers = [];\n    const {libp2p} = await network.use(options);\n    for await (const peer of libp2p.peerStore.getPeers()) {\n      peers.push({\n        id: peer.id.toB58String(),\n        addrs: peer.addresses.map(mi => mi.multiaddr)\n      });\n    }\n    return peers;\n  }\n  return withTimeoutOption(addrs);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createConnect({network}) {\n  async function connect(addr, options = {}) {\n    const {libp2p} = await network.use(options);\n    await libp2p.dial(addr, options);\n  }\n  return withTimeoutOption(connect);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createDisconnect({network}) {\n  async function disconnect(addr, options = {}) {\n    const {libp2p} = await network.use(options);\n    await libp2p.hangUp(addr);\n  }\n  return withTimeoutOption(disconnect);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createLocalAddrs({network}) {\n  async function localAddrs(options = {}) {\n    const {libp2p} = await network.use(options);\n    return libp2p.multiaddrs;\n  }\n  return withTimeoutOption(localAddrs);\n}","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createPeers({network}) {\n  async function peers(options = {}) {\n    const {libp2p} = await network.use(options);\n    const peers = [];\n    for (const [peerId, connections] of libp2p.connections) {\n      for (const connection of connections) {\n        const peer = {\n          addr: connection.remoteAddr,\n          peer: peerId\n        };\n        if (options.verbose || options.direction) {\n          peer.direction = connection.stat.direction;\n        }\n        if (options.verbose) {\n          peer.muxer = connection.stat.multiplexer;\n          peer.latency = 'n/a';\n          peer.streams = [];\n        }\n        peers.push(peer);\n      }\n    }\n    return peers;\n  }\n  return withTimeoutOption(peers);\n}","import PeerId from 'peer-id';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nconst basePacket = {\n  success: true,\n  time: 0,\n  text: ''\n};\nexport function createPing({network}) {\n  async function* ping(peerId, options = {}) {\n    const {libp2p} = await network.use();\n    options.count = options.count || 10;\n    const peer = PeerId.createFromB58String(peerId);\n    const storedPeer = await libp2p.peerStore.get(peer);\n    let id = storedPeer && storedPeer.id;\n    if (!id) {\n      yield {\n        ...basePacket,\n        text: `Looking up peer ${ peerId }`\n      };\n      const remotePeer = await libp2p.peerRouting.findPeer(peer);\n      id = remotePeer && remotePeer.id;\n    }\n    if (!id) {\n      throw new Error('Peer was not found');\n    }\n    yield {\n      ...basePacket,\n      text: `PING ${ id.toB58String() }`\n    };\n    let packetCount = 0;\n    let totalTime = 0;\n    for (let i = 0; i < options.count; i++) {\n      try {\n        const time = await libp2p.ping(id);\n        totalTime += time;\n        packetCount++;\n        yield {\n          ...basePacket,\n          time\n        };\n      } catch (err) {\n        yield {\n          ...basePacket,\n          success: false,\n          text: err.toString()\n        };\n      }\n    }\n    if (packetCount) {\n      const average = totalTime / packetCount;\n      yield {\n        ...basePacket,\n        text: `Average latency: ${ average }ms`\n      };\n    }\n  }\n  return withTimeoutOption(ping);\n}","import PeerId from 'peer-id';\nimport errCode from 'err-code';\nimport { NotEnabledError } from '../errors.js';\nimport get from 'dlv';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport map from 'it-map';\nimport { CID } from 'multiformats/cid';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base36 } from 'multiformats/bases/base36';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nconst IPNS_PREFIX = '/ipns/';\nfunction toDHTKey(str) {\n  if (str.startsWith(IPNS_PREFIX)) {\n    str = str.substring(IPNS_PREFIX.length);\n  }\n  let buf;\n  if (str[0] === '1' || str[0] === 'Q') {\n    str = `z${ str }`;\n  }\n  if (str[0] === 'z') {\n    buf = base58btc.decode(str);\n  }\n  if (str[0] === 'k') {\n    buf = base36.decode(str);\n  }\n  if (!buf) {\n    throw new Error('Could not parse string');\n  }\n  if (buf[0] !== 1 && buf[1] !== 114) {\n    buf = uint8ArrayConcat([\n      [\n        1,\n        114\n      ],\n      buf\n    ]);\n  }\n  if (buf.length !== 40) {\n    throw new Error('Incorrect length ' + buf.length);\n  }\n  return uint8ArrayConcat([\n    uint8ArrayFromString(IPNS_PREFIX),\n    buf.subarray(2)\n  ]);\n}\nfunction mapEvent(event) {\n  if (event.name === 'SENDING_QUERY') {\n    return {\n      type: event.type,\n      name: event.name,\n      to: event.to.toB58String()\n    };\n  }\n  if (event.name === 'PEER_RESPONSE') {\n    return {\n      type: event.type,\n      name: event.name,\n      messageType: event.messageType,\n      messageName: event.messageName,\n      closer: event.closer.map(({id, multiaddrs}) => ({\n        id: id.toB58String(),\n        multiaddrs\n      })),\n      providers: event.providers.map(({id, multiaddrs}) => ({\n        id: id.toB58String(),\n        multiaddrs\n      })),\n      record: event.record,\n      from: event.from.toB58String()\n    };\n  }\n  if (event.name === 'FINAL_PEER') {\n    return {\n      type: event.type,\n      name: event.name,\n      from: event.from.toB58String(),\n      peer: {\n        id: event.peer.id.toB58String(),\n        multiaddrs: event.peer.multiaddrs\n      }\n    };\n  }\n  if (event.name === 'QUERY_ERROR') {\n    return {\n      type: event.type,\n      name: event.name,\n      error: event.error,\n      from: event.from.toB58String()\n    };\n  }\n  if (event.name === 'PROVIDER') {\n    return {\n      type: event.type,\n      name: event.name,\n      providers: event.providers.map(({id, multiaddrs}) => ({\n        id: id.toB58String(),\n        multiaddrs\n      })),\n      from: event.from.toB58String()\n    };\n  }\n  if (event.name === 'VALUE') {\n    return {\n      type: event.type,\n      name: event.name,\n      value: event.value,\n      from: event.from.toB58String()\n    };\n  }\n  if (event.name === 'ADDING_PEER') {\n    return {\n      type: event.type,\n      name: event.name,\n      peer: event.peer.toB58String()\n    };\n  }\n  if (event.name === 'DIALING_PEER') {\n    return {\n      type: event.type,\n      name: event.name,\n      peer: event.peer.toB58String()\n    };\n  }\n  throw errCode(new Error('Unknown DHT event type'), 'ERR_UNKNOWN_DHT_EVENT');\n}\nexport function createDht({network, repo, peerId}) {\n  const {get, put, findProvs, findPeer, provide, query} = {\n    async *get(key, options = {}) {\n      const {libp2p} = await use(network, peerId, options);\n      const dhtKey = key instanceof Uint8Array ? key : toDHTKey(key);\n      yield* map(libp2p._dht.get(dhtKey, options), mapEvent);\n    },\n    async *put(key, value, options) {\n      const {libp2p} = await use(network, peerId, options);\n      const dhtKey = key instanceof Uint8Array ? key : toDHTKey(key);\n      yield* map(libp2p._dht.put(dhtKey, value), mapEvent);\n    },\n    async *findProvs(cid, options = {}) {\n      const {libp2p} = await use(network, peerId, options);\n      yield* map(libp2p._dht.findProviders(cid, { signal: options.signal }), mapEvent);\n    },\n    async *findPeer(peerIdToFind, options = {}) {\n      const {libp2p} = await use(network, peerId, options);\n      yield* map(libp2p._dht.findPeer(PeerId.parse(peerIdToFind), { signal: options.signal }), mapEvent);\n    },\n    async *provide(cid, options = { recursive: false }) {\n      const {libp2p} = await use(network, peerId, options);\n      const hasBlock = await repo.blocks.has(cid);\n      if (!hasBlock) {\n        throw errCode(new Error('block(s) not found locally, cannot provide'), 'ERR_BLOCK_NOT_FOUND');\n      }\n      if (options.recursive) {\n        throw errCode(new Error('not implemented yet'), 'ERR_NOT_IMPLEMENTED_YET');\n      }\n      yield* map(libp2p._dht.provide(cid), mapEvent);\n    },\n    async *query(peerIdToQuery, options = {}) {\n      const {libp2p} = await use(network, peerId, options);\n      let bytes;\n      const asCid = CID.asCID(peerIdToQuery);\n      if (asCid != null) {\n        bytes = asCid.multihash.bytes;\n      } else {\n        bytes = PeerId.parse(peerIdToQuery.toString()).toBytes();\n      }\n      yield* map(libp2p._dht.getClosestPeers(bytes, options), mapEvent);\n    }\n  };\n  return {\n    get: withTimeoutOption(get),\n    put: withTimeoutOption(put),\n    findProvs: withTimeoutOption(findProvs),\n    findPeer: withTimeoutOption(findPeer),\n    provide: withTimeoutOption(provide),\n    query: withTimeoutOption(query)\n  };\n}\nconst use = async (network, peerId, options) => {\n  const net = await network.use(options);\n  if (get(net.libp2p, '_config.dht.enabled', false)) {\n    return net;\n  } else {\n    const fn = async function* () {\n      yield {\n        from: peerId,\n        name: 'QUERY_ERROR',\n        type: 3,\n        error: new NotEnabledError('dht not enabled')\n      };\n    };\n    return {\n      libp2p: {\n        _dht: {\n          get: fn,\n          put: fn,\n          findProvs: fn,\n          findPeer: fn,\n          provide: fn,\n          query: fn\n        }\n      }\n    };\n  }\n};","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport errCode from 'err-code';\nimport { NotEnabledError } from '../errors.js';\nimport get from 'dlv';\nexport function createPubsub({network, config}) {\n  const isEnabled = get(config || {}, 'Pubsub.Enabled', true);\n  return {\n    subscribe: isEnabled ? withTimeoutOption(subscribe) : notEnabled,\n    unsubscribe: isEnabled ? withTimeoutOption(unsubscribe) : notEnabled,\n    publish: isEnabled ? withTimeoutOption(publish) : notEnabled,\n    ls: isEnabled ? withTimeoutOption(ls) : notEnabled,\n    peers: isEnabled ? withTimeoutOption(peers) : notEnabled\n  };\n  async function subscribe(topic, handler, options = {}) {\n    const {libp2p} = await network.use(options);\n    return libp2p.pubsub.subscribe(topic, handler, options);\n  }\n  async function unsubscribe(topic, handler, options = {}) {\n    const {libp2p} = await network.use(options);\n    libp2p.pubsub.unsubscribe(topic, handler, options);\n  }\n  async function publish(topic, data, options = {}) {\n    const {libp2p} = await network.use(options);\n    if (!data) {\n      throw errCode(new Error('argument \"data\" is required'), 'ERR_ARG_REQUIRED');\n    }\n    await libp2p.pubsub.publish(topic, data);\n  }\n  async function ls(options = {}) {\n    const {libp2p} = await network.use(options);\n    return libp2p.pubsub.getTopics();\n  }\n  async function peers(topic, options = {}) {\n    const {libp2p} = await network.use(options);\n    return libp2p.pubsub.getSubscribers(topic);\n  }\n}\nconst notEnabled = async () => {\n  throw new NotEnabledError('pubsub not enabled');\n};","import mergeOpts from 'merge-options';\nimport { isTest } from 'ipfs-utils/src/env.js';\nimport debug from 'debug';\nimport errCode from 'err-code';\nimport { UnixFS } from 'ipfs-unixfs';\nimport * as dagPB from '@ipld/dag-pb';\nimport * as dagCBOR from '@ipld/dag-cbor';\nimport * as dagJSON from '@ipld/dag-json';\nimport * as dagJOSE from 'dag-jose';\nimport { identity } from 'multiformats/hashes/identity';\nimport {\n  bases,\n  hashes,\n  codecs\n} from 'multiformats/basics';\nimport { initAssets } from 'ipfs-core-config/init-assets';\nimport { AlreadyInitializedError } from '../errors.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { createStart } from './start.js';\nimport { createStop } from './stop.js';\nimport { createDns } from './dns.js';\nimport { createIsOnline } from './is-online.js';\nimport { createResolve } from './resolve.js';\nimport { PinAPI } from './pin/index.js';\nimport { IPNSAPI } from './ipns.js';\nimport { NameAPI } from './name/index.js';\nimport { createRefs } from './refs/index.js';\nimport { createLocal } from './refs/local.js';\nimport { BitswapAPI } from './bitswap/index.js';\nimport { BootstrapAPI } from './bootstrap/index.js';\nimport { BlockAPI } from './block/index.js';\nimport { RootAPI } from './root.js';\nimport { createVersion } from './version.js';\nimport { createId } from './id.js';\nimport { createConfig } from './config/index.js';\nimport { DagAPI } from './dag/index.js';\nimport { createPreloader } from '../preload.js';\nimport { createMfsPreloader } from '../mfs-preload.js';\nimport { createFiles } from './files/index.js';\nimport { KeyAPI } from './key/index.js';\nimport { ObjectAPI } from './object/index.js';\nimport { RepoAPI } from './repo/index.js';\nimport { StatsAPI } from './stats/index.js';\nimport { Storage } from './storage.js';\nimport { Network } from './network.js';\nimport { Service } from '../utils/service.js';\nimport { SwarmAPI } from './swarm/index.js';\nimport { createPing } from './ping.js';\nimport { createDht } from './dht.js';\nimport { createPubsub } from './pubsub.js';\nimport { Multicodecs } from 'ipfs-core-utils/multicodecs';\nimport { Multihashes } from 'ipfs-core-utils/multihashes';\nimport { Multibases } from 'ipfs-core-utils/multibases';\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true });\nconst log = Object.assign(debug('ipfs'), { error: debug('ipfs:error') });\nclass IPFS {\n  constructor({print, storage, codecs, options}) {\n    const {peerId, repo, keychain} = storage;\n    const network = Service.create(Network);\n    const preload = createPreloader(options.preload);\n    const dns = createDns();\n    const isOnline = createIsOnline({ network });\n    const ipns = new IPNSAPI(options);\n    const multihashHashers = Object.values(hashes);\n    (options.ipld && options.ipld.hashers ? options.ipld.hashers : []).forEach(hasher => multihashHashers.push(hasher));\n    this.hashers = new Multihashes({\n      hashers: multihashHashers,\n      loadHasher: options.ipld && options.ipld.loadHasher\n    });\n    const multibaseCodecs = Object.values(bases);\n    (options.ipld && options.ipld.bases ? options.ipld.bases : []).forEach(base => multibaseCodecs.push(base));\n    this.bases = new Multibases({\n      bases: multibaseCodecs,\n      loadBase: options.ipld && options.ipld.loadBase\n    });\n    const pin = new PinAPI({\n      repo,\n      codecs\n    });\n    const block = new BlockAPI({\n      codecs,\n      hashers: this.hashers,\n      preload,\n      repo\n    });\n    const name = new NameAPI({\n      dns,\n      ipns,\n      repo,\n      codecs,\n      peerId,\n      isOnline,\n      keychain,\n      options\n    });\n    const resolve = createResolve({\n      repo,\n      codecs,\n      bases: this.bases,\n      name\n    });\n    const dag = new DagAPI({\n      repo,\n      codecs,\n      hashers: this.hashers,\n      preload\n    });\n    const refs = Object.assign(createRefs({\n      repo,\n      codecs,\n      resolve,\n      preload\n    }), { local: createLocal({ repo: storage.repo }) });\n    const {add, addAll, cat, get, ls} = new RootAPI({\n      preload,\n      repo,\n      options: options.EXPERIMENTAL,\n      hashers: this.hashers\n    });\n    const files = createFiles({\n      repo,\n      preload,\n      hashers: this.hashers,\n      options\n    });\n    const mfsPreload = createMfsPreloader({\n      files,\n      preload,\n      options: options.preload\n    });\n    this.preload = preload;\n    this.name = name;\n    this.ipns = ipns;\n    this.pin = pin;\n    this.resolve = resolve;\n    this.block = block;\n    this.refs = refs;\n    this.start = createStart({\n      network,\n      peerId,\n      repo,\n      preload,\n      ipns,\n      mfsPreload,\n      print,\n      keychain,\n      hashers: this.hashers,\n      options\n    });\n    this.stop = createStop({\n      network,\n      preload,\n      mfsPreload,\n      ipns,\n      repo\n    });\n    this.dht = createDht({\n      network,\n      repo,\n      peerId\n    });\n    this.pubsub = createPubsub({\n      network,\n      config: options.config\n    });\n    this.dns = dns;\n    this.isOnline = isOnline;\n    this.id = createId({\n      network,\n      peerId\n    });\n    this.version = createVersion({ repo });\n    this.bitswap = new BitswapAPI({ network });\n    this.bootstrap = new BootstrapAPI({ repo });\n    this.config = createConfig({ repo });\n    this.ping = createPing({ network });\n    this.add = add;\n    this.addAll = addAll;\n    this.cat = cat;\n    this.get = get;\n    this.ls = ls;\n    this.dag = dag;\n    this.files = files;\n    this.key = new KeyAPI({ keychain });\n    this.object = new ObjectAPI({\n      preload,\n      codecs,\n      repo\n    });\n    this.repo = new RepoAPI({\n      repo,\n      hashers: this.hashers\n    });\n    this.stats = new StatsAPI({\n      repo,\n      network\n    });\n    this.swarm = new SwarmAPI({ network });\n    Object.defineProperty(this, 'libp2p', {\n      get() {\n        const net = network.try();\n        return net ? net.libp2p : undefined;\n      }\n    });\n    const notImplemented = () => Promise.reject(errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED'));\n    const notImplementedIter = async function* () {\n      throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n    };\n    this.commands = notImplemented;\n    this.diag = {\n      cmds: notImplemented,\n      net: notImplemented,\n      sys: notImplemented\n    };\n    this.log = {\n      level: notImplemented,\n      ls: notImplemented,\n      tail: notImplementedIter\n    };\n    this.mount = notImplemented;\n    this.codecs = codecs;\n  }\n  async init() {\n    throw new AlreadyInitializedError();\n  }\n}\nconst addEmptyDir = async ipfs => {\n  const buf = dagPB.encode({\n    Data: new UnixFS({ type: 'directory' }).marshal(),\n    Links: []\n  });\n  const cid = await ipfs.block.put(buf, {\n    mhtype: 'sha2-256',\n    format: 'dag-pb'\n  });\n  await ipfs.pin.add(cid);\n  return cid;\n};\nconst getDefaultOptions = () => ({\n  start: true,\n  EXPERIMENTAL: {},\n  preload: {\n    enabled: !isTest,\n    addresses: [\n      '/dns4/node0.preload.ipfs.io/https',\n      '/dns4/node1.preload.ipfs.io/https',\n      '/dns4/node2.preload.ipfs.io/https',\n      '/dns4/node3.preload.ipfs.io/https'\n    ]\n  }\n});\nexport async function create(options = {}) {\n  options = mergeOptions(getDefaultOptions(), options);\n  const initOptions = options.init || {};\n  const id = {\n    name: identity.name,\n    code: identity.code,\n    encode: id => id,\n    decode: id => id\n  };\n  const blockCodecs = Object.values(codecs);\n  [\n    dagPB,\n    dagCBOR,\n    dagJSON,\n    dagJOSE,\n    id\n  ].concat(options.ipld && options.ipld.codecs || []).forEach(codec => blockCodecs.push(codec));\n  const multicodecs = new Multicodecs({\n    codecs: blockCodecs,\n    loadCodec: options.ipld && options.ipld.loadCodec\n  });\n  const print = options.silent ? log : console.log;\n  log('creating repo');\n  const storage = await Storage.start(print, multicodecs, options);\n  log('getting repo config');\n  const config = await storage.repo.config.getAll();\n  const ipfs = new IPFS({\n    storage,\n    print,\n    codecs: multicodecs,\n    options: {\n      ...options,\n      config\n    }\n  });\n  log('starting preload');\n  await ipfs.preload.start();\n  log('starting storage');\n  ipfs.ipns.startOffline(storage);\n  if (storage.isNew && !initOptions.emptyRepo) {\n    const cid = await addEmptyDir(ipfs);\n    log('adding default assets');\n    await initAssets({\n      addAll: ipfs.addAll,\n      print\n    });\n    log('initializing IPNS keyspace');\n    await ipfs.ipns.initializeKeyspace(storage.peerId.privKey, uint8ArrayFromString(`/ipfs/${ cid }`));\n  }\n  if (options.start !== false) {\n    log('starting node');\n    await ipfs.start();\n  }\n  return ipfs;\n}","import { Service } from '../utils/service.js';\nexport function createStart({network, preload, peerId, keychain, repo, ipns, mfsPreload, print, hashers, options}) {\n  const start = async () => {\n    const {libp2p} = await Service.start(network, {\n      peerId,\n      repo,\n      print,\n      hashers,\n      options\n    });\n    await Promise.all([\n      ipns.startOnline({\n        keychain,\n        libp2p,\n        peerId,\n        repo\n      }),\n      preload.start(),\n      mfsPreload.start()\n    ]);\n  };\n  return start;\n}","import { Service } from '../utils/service.js';\nexport function createStop({network, preload, ipns, repo, mfsPreload}) {\n  const stop = async () => {\n    await Promise.all([\n      preload.stop(),\n      ipns.stop(),\n      mfsPreload.stop()\n    ]);\n    await Service.stop(network);\n    await repo.close();\n  };\n  return stop;\n}","import {\n  ipfsCore,\n  interfaceIpfsCore,\n  commit\n} from '../version.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nexport function createVersion({repo}) {\n  async function version(_options = {}) {\n    const repoVersion = await repo.version.get();\n    return {\n      version: ipfsCore,\n      commit,\n      repo: `${ repoVersion }`,\n      'ipfs-core': ipfsCore,\n      'interface-ipfs-core': interfaceIpfsCore\n    };\n  }\n  return withTimeoutOption(version);\n}","import { create as createImport } from './components/index.js';\nimport cryptoImport from 'libp2p-crypto';\nimport isIPFSImport from 'is-ipfs';\nimport PeerIdImport from 'peer-id';\nimport globSourceImport from 'ipfs-utils/src/files/glob-source.js';\nimport urlSourceImport from 'ipfs-utils/src/files/url-source.js';\nexport const create = createImport;\nexport const crypto = cryptoImport;\nexport const isIPFS = isIPFSImport;\nexport {\n  CID\n} from 'multiformats/cid';\nexport {\n  Multiaddr as multiaddr\n} from 'multiaddr';\nexport const PeerId = PeerIdImport;\nexport const globSource = globSourceImport;\nexport const urlSource = urlSourceImport;","import isIpfs from 'is-ipfs';\nimport { CID } from 'multiformats/cid';\nimport { Key } from 'interface-datastore/key';\nimport errCode from 'err-code';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path';\nimport * as dagPB from '@ipld/dag-pb';\nconst ERR_BAD_PATH = 'ERR_BAD_PATH';\nexport const OFFLINE_ERROR = 'This command must be run in online mode. Try running \\'ipfs daemon\\' first.';\nexport const MFS_ROOT_KEY = new Key('/local/filesroot');\nexport const MFS_MAX_CHUNK_SIZE = 262144;\nexport const MFS_MAX_LINKS = 174;\nexport const normalizePath = pathStr => {\n  const cid = CID.asCID(pathStr);\n  if (cid) {\n    return `/ipfs/${ pathStr }`;\n  }\n  const str = pathStr.toString();\n  try {\n    return `/ipfs/${ CID.parse(str) }`;\n  } catch {\n  }\n  if (isIpfs.path(str)) {\n    return str;\n  } else {\n    throw errCode(new Error(`invalid path: ${ pathStr }`), ERR_BAD_PATH);\n  }\n};\nexport const normalizeCidPath = path => {\n  if (path instanceof Uint8Array) {\n    return CID.decode(path).toString();\n  }\n  path = path.toString();\n  if (path.indexOf('/ipfs/') === 0) {\n    path = path.substring('/ipfs/'.length);\n  }\n  if (path.charAt(path.length - 1) === '/') {\n    path = path.substring(0, path.length - 1);\n  }\n  return path;\n};\nexport const resolvePath = async function (repo, codecs, ipfsPath, options = {}) {\n  const {cid, path} = toCidAndPath(ipfsPath);\n  if (path) {\n    options.path = path;\n  }\n  let lastCid = cid;\n  let lastRemainderPath = options.path || '';\n  if (lastRemainderPath.startsWith('/')) {\n    lastRemainderPath = lastRemainderPath.substring(1);\n  }\n  if (options.path) {\n    try {\n      for await (const {value, remainderPath} of resolve(cid, options.path, codecs, repo, { signal: options.signal })) {\n        if (!CID.asCID(value)) {\n          break;\n        }\n        lastRemainderPath = remainderPath;\n        lastCid = value;\n      }\n    } catch (err) {\n      if (err.message.startsWith('Object has no property')) {\n        err.message = `no link named \"${ lastRemainderPath.split('/')[0] }\" under ${ lastCid }`;\n        err.code = 'ERR_NO_LINK';\n      }\n      throw err;\n    }\n  }\n  return {\n    cid: lastCid,\n    remainderPath: lastRemainderPath || ''\n  };\n};\nexport const mapFile = file => {\n  if (file.type !== 'file' && file.type !== 'directory' && file.type !== 'raw') {\n    throw new Error(`Unknown node type '${ file.type }'`);\n  }\n  const output = {\n    cid: file.cid,\n    path: file.path,\n    name: file.name,\n    size: file.size,\n    type: 'file'\n  };\n  if (file.type === 'directory') {\n    output.type = 'dir';\n  }\n  if (file.type === 'file') {\n    output.size = file.unixfs.fileSize();\n  }\n  if (file.type === 'file' || file.type === 'directory') {\n    output.mode = file.unixfs.mode;\n    if (file.unixfs.mtime !== undefined) {\n      output.mtime = file.unixfs.mtime;\n    }\n  }\n  return output;\n};\nexport const withTimeout = withTimeoutOption(async (promise, _options) => await promise);\nexport const resolve = async function* (cid, path, codecs, repo, options) {\n  const load = async cid => {\n    const codec = await codecs.getCodec(cid.code);\n    const block = await repo.blocks.get(cid, options);\n    return codec.decode(block);\n  };\n  const parts = path.split('/').filter(Boolean);\n  let value = await load(cid);\n  let lastCid = cid;\n  while (parts.length) {\n    const key = parts.shift();\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${ path }\"`), 'ERR_INVALID_PATH');\n    }\n    if (cid.code === dagPB.code && Array.isArray(value.Links)) {\n      const link = value.Links.find(l => l.Name === key);\n      if (link) {\n        yield {\n          value: link.Hash,\n          remainderPath: parts.join('/')\n        };\n        value = await load(link.Hash);\n        lastCid = link.Hash;\n        continue;\n      }\n    }\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key];\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      };\n    } else {\n      throw errCode(new Error(`no link named \"${ key }\" under ${ lastCid }`), 'ERR_NO_LINK');\n    }\n    if (CID.asCID(value)) {\n      lastCid = value;\n      value = await load(value);\n    }\n  }\n  yield {\n    value,\n    remainderPath: ''\n  };\n};","import { Client } from './core.js';\nexport const configure = fn => {\n  return options => {\n    return fn(new Client(options), options);\n  };\n};","import { Multiaddr } from 'multiaddr';\nimport {\n  isBrowser,\n  isWebWorker,\n  isNode\n} from 'ipfs-utils/src/env.js';\nimport parseDuration from 'parse-duration';\nimport debug from 'debug';\nimport HTTP from 'ipfs-utils/src/http.js';\nimport mergeOpts from 'merge-options';\nimport { toUrlString } from 'ipfs-core-utils/to-url-string';\nimport getAgent from 'ipfs-core-utils/agent';\nconst log = debug('ipfs-http-client:lib:error-handler');\nconst merge = mergeOpts.bind({ ignoreUndefined: true });\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http';\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost';\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001';\nconst normalizeOptions = (options = {}) => {\n  let url;\n  let opts = {};\n  let agent;\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options));\n  } else if (options instanceof URL) {\n    url = options;\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url));\n    opts = options;\n  } else if (options.url instanceof URL) {\n    url = options.url;\n    opts = options;\n  } else {\n    opts = options || {};\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');\n    const host = (opts.host || DEFAULT_HOST).split(':')[0];\n    const port = opts.port || DEFAULT_PORT;\n    url = new URL(`${ protocol }://${ host }:${ port }`);\n  }\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath;\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0';\n  }\n  if (isNode) {\n    const Agent = getAgent(url);\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      maxSockets: 6\n    });\n  }\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  };\n};\nexport const errorHandler = async response => {\n  let msg;\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json();\n      log(data);\n      msg = data.Message || data.message;\n    } else {\n      msg = await response.text();\n    }\n  } catch (err) {\n    log('Failed to parse error response', err);\n    msg = err.message;\n  }\n  let error = new HTTP.HTTPError(response);\n  if (msg) {\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError();\n    }\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError();\n    }\n  }\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError();\n  }\n  if (msg) {\n    error.message = msg;\n  }\n  throw error;\n};\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\nconst kebabCase = str => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase();\n  });\n};\nconst parseTimeout = value => {\n  return typeof value === 'string' ? parseDuration(value) : value;\n};\nexport class Client extends HTTP {\n  constructor(options = {}) {\n    const opts = normalizeOptions(options);\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${ opts.url }`,\n      handleError: errorHandler,\n      transformSearchParams: search => {\n        const out = new URLSearchParams();\n        for (const [key, value] of search) {\n          if (value !== 'undefined' && value !== 'null' && key !== 'signal') {\n            out.append(kebabCase(key), value);\n          }\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value);\n          }\n        }\n        return out;\n      },\n      agent: opts.agent\n    });\n    delete this.get;\n    delete this.put;\n    delete this.delete;\n    delete this.options;\n    const fetch = this.fetch;\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${ opts.url }/${ resource }`;\n      }\n      return fetch.call(this, resource, merge(options, { method: 'POST' }));\n    };\n  }\n}\nexport const HTTPError = HTTP.HTTPError;","import { modeToString } from './mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\nexport function toUrlSearchParams({arg, searchParams, hashAlg, mtime, mode, ...options} = {}) {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    };\n  }\n  if (hashAlg) {\n    options.hash = hashAlg;\n  }\n  if (mtime != null) {\n    mtime = parseMtime(mtime);\n    options.mtime = mtime.secs;\n    options.mtimeNsecs = mtime.nsecs;\n  }\n  if (mode != null) {\n    options.mode = modeToString(mode);\n  }\n  if (options.timeout && !isNaN(options.timeout)) {\n    options.timeout = `${ options.timeout }ms`;\n  }\n  if (arg === undefined || arg === null) {\n    arg = [];\n  } else if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n  const urlSearchParams = new URLSearchParams(options);\n  arg.forEach(arg => urlSearchParams.append('arg', arg));\n  return urlSearchParams;\n}","export class NonReversibleMigrationError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'NonReversibleMigrationError';\n    this.code = NonReversibleMigrationError.code;\n    this.message = message;\n  }\n}\nNonReversibleMigrationError.code = 'ERR_NON_REVERSIBLE_MIGRATION';\nexport class NotInitializedRepoError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'NotInitializedRepoError';\n    this.code = NotInitializedRepoError.code;\n    this.message = message;\n  }\n}\nNotInitializedRepoError.code = 'ERR_NOT_INITIALIZED_REPO';\nexport class RequiredParameterError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'RequiredParameterError';\n    this.code = RequiredParameterError.code;\n    this.message = message;\n  }\n}\nRequiredParameterError.code = 'ERR_REQUIRED_PARAMETER';\nexport class InvalidValueError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'InvalidValueError';\n    this.code = InvalidValueError.code;\n    this.message = message;\n  }\n}\nInvalidValueError.code = 'ERR_INVALID_VALUE';\nexport class MissingRepoOptionsError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'MissingRepoOptionsError';\n    this.code = MissingRepoOptionsError.code;\n    this.message = message;\n  }\n}\nMissingRepoOptionsError.code = 'ERR_MISSING_REPO_OPTIONS';","import { Key } from 'interface-datastore/key';\nimport { notFoundError } from 'datastore-core/errors';\nexport const CONFIG_KEY = new Key('/config');\nexport const VERSION_KEY = new Key('/version');\nexport function findLevelJs(store) {\n  let db = store;\n  while (db.db || db.child) {\n    db = db.db || db.child;\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db;\n    }\n  }\n}\nexport async function hasWithFallback(key, has, store) {\n  const result = await has(key);\n  if (result) {\n    return result;\n  }\n  const levelJs = findLevelJs(store);\n  if (!levelJs) {\n    return false;\n  }\n  return new Promise((resolve, reject) => {\n    const req = levelJs.store('readonly').get(key.toString());\n    req.transaction.onabort = () => {\n      reject(req.transaction.error);\n    };\n    req.transaction.oncomplete = () => {\n      resolve(Boolean(req.result));\n    };\n  });\n}\nasync function getWithFallback(key, get, has, store) {\n  if (await has(key)) {\n    return get(key);\n  }\n  const levelJs = findLevelJs(store);\n  if (!levelJs) {\n    throw notFoundError();\n  }\n  return new Promise((resolve, reject) => {\n    const req = levelJs.store('readonly').get(key.toString());\n    req.transaction.onabort = () => {\n      reject(req.transaction.error);\n    };\n    req.transaction.oncomplete = () => {\n      if (req.result) {\n        return resolve(req.result);\n      }\n      reject(notFoundError());\n    };\n  });\n}\nfunction wrapStore(store) {\n  const originalGet = store.get.bind(store);\n  const originalHas = store.has.bind(store);\n  store.get = key => getWithFallback(key, originalGet, originalHas, store);\n  store.has = key => hasWithFallback(key, originalHas, store);\n  return store;\n}\nexport function wrapBackends(backends) {\n  return {\n    ...backends,\n    root: wrapStore(backends.root),\n    datastore: wrapStore(backends.datastore),\n    pins: wrapStore(backends.pins),\n    keys: wrapStore(backends.keys)\n  };\n}","import errCode from 'err-code';\nimport { CID } from 'multiformats/cid';\nimport resolve from './resolvers/index.js';\nimport last from 'it-last';\nconst toPathComponents = (path = '') => {\n  return (path.trim().match(/([^\\\\^/]|\\\\\\/)+/g) || []).filter(Boolean);\n};\nconst cidAndRest = path => {\n  if (path instanceof Uint8Array) {\n    return {\n      cid: CID.decode(path),\n      toResolve: []\n    };\n  }\n  const cid = CID.asCID(path);\n  if (cid) {\n    return {\n      cid,\n      toResolve: []\n    };\n  }\n  if (typeof path === 'string') {\n    if (path.indexOf('/ipfs/') === 0) {\n      path = path.substring(6);\n    }\n    const output = toPathComponents(path);\n    return {\n      cid: CID.parse(output[0]),\n      toResolve: output.slice(1)\n    };\n  }\n  throw errCode(new Error(`Unknown path type ${ path }`), 'ERR_BAD_PATH');\n};\nexport async function* walkPath(path, blockstore, options = {}) {\n  let {cid, toResolve} = cidAndRest(path);\n  let name = cid.toString();\n  let entryPath = name;\n  const startingDepth = toResolve.length;\n  while (true) {\n    const result = await resolve(cid, name, entryPath, toResolve, startingDepth, blockstore, options);\n    if (!result.entry && !result.next) {\n      throw errCode(new Error(`Could not resolve ${ path }`), 'ERR_NOT_FOUND');\n    }\n    if (result.entry) {\n      yield result.entry;\n    }\n    if (!result.next) {\n      return;\n    }\n    toResolve = result.next.toResolve;\n    cid = result.next.cid;\n    name = result.next.name;\n    entryPath = result.next.path;\n  }\n}\nexport async function exporter(path, blockstore, options = {}) {\n  const result = await last(walkPath(path, blockstore, options));\n  if (!result) {\n    throw errCode(new Error(`Could not resolve ${ path }`), 'ERR_NOT_FOUND');\n  }\n  return result;\n}\nexport async function* recursive(path, blockstore, options = {}) {\n  const node = await exporter(path, blockstore, options);\n  if (!node) {\n    return;\n  }\n  yield node;\n  if (node.type === 'directory') {\n    for await (const child of recurse(node, options)) {\n      yield child;\n    }\n  }\n  async function* recurse(node, options) {\n    for await (const file of node.content(options)) {\n      yield file;\n      if (file instanceof Uint8Array) {\n        continue;\n      }\n      if (file.type === 'directory') {\n        yield* recurse(file, options);\n      }\n    }\n  }\n}","import parallelBatch from 'it-parallel-batch';\nimport defaultOptions from './options.js';\nimport dagBuilderFn from './dag-builder/index.js';\nimport treeBuilderFn from './tree-builder.js';\nexport async function* importer(source, blockstore, options = {}) {\n  const opts = defaultOptions(options);\n  let dagBuilder;\n  if (typeof options.dagBuilder === 'function') {\n    dagBuilder = options.dagBuilder;\n  } else {\n    dagBuilder = dagBuilderFn;\n  }\n  let treeBuilder;\n  if (typeof options.treeBuilder === 'function') {\n    treeBuilder = options.treeBuilder;\n  } else {\n    treeBuilder = treeBuilderFn;\n  }\n  let candidates;\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    candidates = source;\n  } else {\n    candidates = [source];\n  }\n  for await (const entry of treeBuilder(parallelBatch(dagBuilder(candidates, blockstore, opts), opts.fileImportConcurrency), blockstore, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    };\n  }\n}","import errcode from 'err-code';\nimport * as Pb from './unixfs.js';\nconst PBData = Pb.Data;\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n];\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n];\nconst DEFAULT_FILE_MODE = parseInt('0644', 8);\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8);\nexport function parseMode(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n  if (typeof mode === 'number') {\n    return mode & 4095;\n  }\n  mode = mode.toString();\n  if (mode.substring(0, 1) === '0') {\n    return parseInt(mode, 8) & 4095;\n  }\n  return parseInt(mode, 10) & 4095;\n}\nexport function parseMtime(input) {\n  if (input == null) {\n    return undefined;\n  }\n  let mtime;\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    };\n  }\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    };\n  }\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    };\n  }\n  if (input instanceof Date) {\n    const ms = input.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');\n  }\n  return mtime;\n}\nclass UnixFS {\n  static unmarshal(marshaled) {\n    const message = PBData.decode(marshaled);\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    });\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime ? {\n        secs: decoded.mtime.Seconds,\n        nsecs: decoded.mtime.FractionalNanoseconds\n      } : undefined\n    });\n    data._originalMode = decoded.mode || 0;\n    return data;\n  }\n  constructor(options = { type: 'file' }) {\n    const {type, data, blockSizes, hashType, fanout, mtime, mode} = options;\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    this.type = type || 'file';\n    this.data = data;\n    this.hashType = hashType;\n    this.fanout = fanout;\n    this.blockSizes = blockSizes || [];\n    this._originalMode = 0;\n    this.mode = parseMode(mode);\n    if (mtime) {\n      this.mtime = parseMtime(mtime);\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0;\n      }\n    }\n  }\n  set mode(mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE;\n    const parsedMode = parseMode(mode);\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode;\n    }\n  }\n  get mode() {\n    return this._mode;\n  }\n  isDirectory() {\n    return Boolean(this.type && dirTypes.includes(this.type));\n  }\n  addBlockSize(size) {\n    this.blockSizes.push(size);\n  }\n  removeBlockSize(index) {\n    this.blockSizes.splice(index, 1);\n  }\n  fileSize() {\n    if (this.isDirectory()) {\n      return 0;\n    }\n    let sum = 0;\n    this.blockSizes.forEach(size => {\n      sum += size;\n    });\n    if (this.data) {\n      sum += this.data.length;\n    }\n    return sum;\n  }\n  marshal() {\n    let type;\n    switch (this.type) {\n    case 'raw':\n      type = PBData.DataType.Raw;\n      break;\n    case 'directory':\n      type = PBData.DataType.Directory;\n      break;\n    case 'file':\n      type = PBData.DataType.File;\n      break;\n    case 'metadata':\n      type = PBData.DataType.Metadata;\n      break;\n    case 'symlink':\n      type = PBData.DataType.Symlink;\n      break;\n    case 'hamt-sharded-directory':\n      type = PBData.DataType.HAMTShard;\n      break;\n    default:\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    let data = this.data;\n    if (!this.data || !this.data.length) {\n      data = undefined;\n    }\n    let mode;\n    if (this.mode != null) {\n      mode = this._originalMode & 4294963200 | (parseMode(this.mode) || 0);\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined;\n      }\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined;\n      }\n    }\n    let mtime;\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime);\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        };\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds;\n        }\n      }\n    }\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    };\n    return PBData.encode(pbData).finish();\n  }\n}\nexport {\n  UnixFS\n};","/**\n * Thin ESM wrapper for CJS named exports.\n *\n * Ref: https://redfin.engineering/node-modules-at-war-why-commonjs-and-es-modules-cant-get-along-9617135eeca1\n */\n\nimport mergeOptions from './index.js';\nexport default mergeOptions;\n","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","import {\n  bytes as binary,\n  CID\n} from './index.js';\nconst readonly = ({enumerable = true, configurable = false} = {}) => ({\n  enumerable,\n  configurable,\n  writable: false\n});\nconst links = function* (source, base) {\n  if (source == null)\n    return;\n  if (source instanceof Uint8Array)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          const cid = CID.asCID(element);\n          if (cid) {\n            yield [\n              elementPath.join('/'),\n              cid\n            ];\n          } else if (typeof element === 'object') {\n            yield* links(element, elementPath);\n          }\n        }\n      } else {\n        const cid = CID.asCID(value);\n        if (cid) {\n          yield [\n            path.join('/'),\n            cid\n          ];\n        } else {\n          yield* links(value, path);\n        }\n      }\n    }\n  }\n};\nconst tree = function* (source, base) {\n  if (source == null)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    yield path.join('/');\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !CID.asCID(value)) {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          yield elementPath.join('/');\n          if (typeof element === 'object' && !CID.asCID(element)) {\n            yield* tree(element, elementPath);\n          }\n        }\n      } else {\n        yield* tree(value, path);\n      }\n    }\n  }\n};\nconst get = (source, path) => {\n  let node = source;\n  for (const [index, key] of path.entries()) {\n    node = node[key];\n    if (node == null) {\n      throw new Error(`Object has no property at ${ path.slice(0, index + 1).map(part => `[${ JSON.stringify(part) }]`).join('') }`);\n    }\n    const cid = CID.asCID(node);\n    if (cid) {\n      return {\n        value: cid,\n        remaining: path.slice(index + 1).join('/')\n      };\n    }\n  }\n  return { value: node };\n};\nclass Block {\n  constructor({cid, bytes, value}) {\n    if (!cid || !bytes || typeof value === 'undefined')\n      throw new Error('Missing required argument');\n    this.cid = cid;\n    this.bytes = bytes;\n    this.value = value;\n    this.asBlock = this;\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    });\n  }\n  links() {\n    return links(this.value, []);\n  }\n  tree() {\n    return tree(this.value, []);\n  }\n  get(path = '/') {\n    return get(this.value, path.split('/').filter(Boolean));\n  }\n}\nconst encode = async ({value, codec, hasher}) => {\n  if (typeof value === 'undefined')\n    throw new Error('Missing required argument \"value\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const bytes = codec.encode(value);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst decode = async ({bytes, codec, hasher}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst createUnsafe = ({\n  bytes,\n  cid,\n  value: maybeValue,\n  codec\n}) => {\n  const value = maybeValue !== undefined ? maybeValue : codec && codec.decode(bytes);\n  if (value === undefined)\n    throw new Error('Missing required argument, must either provide \"value\" or \"codec\"');\n  return new Block({\n    cid,\n    bytes,\n    value\n  });\n};\nconst create = async ({bytes, cid, hasher, codec}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!hasher)\n    throw new Error('Missing required argument \"hasher\"');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  if (!binary.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes');\n  }\n  return createUnsafe({\n    bytes,\n    cid,\n    value,\n    codec\n  });\n};\nexport {\n  encode,\n  decode,\n  create,\n  createUnsafe,\n  Block\n};","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","let durationRE = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([\\p{L}]*)/uig\r\n\r\n\r\n/**\r\n * conversion ratios\r\n */\r\n\r\nparse.nanosecond =\r\nparse.ns = 1 / 1e6\r\n\r\nparse['µs'] =\r\nparse['μs'] =\r\nparse.us =\r\nparse.microsecond = 1 / 1e3\r\n\r\nparse.millisecond =\r\nparse.ms =\r\nparse[''] = 1\r\n\r\nparse.second =\r\nparse.sec =\r\nparse.s = parse.ms * 1000\r\n\r\nparse.minute =\r\nparse.min =\r\nparse.m = parse.s * 60\r\n\r\nparse.hour =\r\nparse.hr =\r\nparse.h = parse.m * 60\r\n\r\nparse.day =\r\nparse.d = parse.h * 24\r\n\r\nparse.week =\r\nparse.wk =\r\nparse.w = parse.d * 7\r\n\r\nparse.month =\r\nparse.b =\r\nparse.d * (365.25 / 12)\r\n\r\nparse.year =\r\nparse.yr =\r\nparse.y = parse.d * 365.25\r\n\r\n/**\r\n * convert `str` to ms\r\n *\r\n * @param {String} str\r\n * @param {String} format\r\n * @return {Number}\r\n */\r\n\r\nfunction parse(str='', format='ms'){\r\n  var result = null\r\n  // ignore commas/placeholders\r\n  str = (str+'').replace(/(\\d)[,_](\\d)/g, '$1$2')\r\n  str.replace(durationRE, function(_, n, units){\r\n    units = unitRatio(units)\r\n    if (units) result = (result || 0) + parseFloat(n, 10) * units\r\n  })\r\n\r\n  return result && (result / (unitRatio(format) || 1))\r\n}\r\n\r\nfunction unitRatio(str) {\r\n  return parse[str] || parse[str.toLowerCase().replace(/s$/, '')]\r\n}\r\n\r\nexport default parse\r\n","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.encoder.encode(array).substring(1);\n}"],"names":["__exportStar","exports","noise_1","exp","Math","module","timespan","Error","ma","previousTime","v","d","f","ret","push","time","value","a","diff","sqrt","movingAverage","variance","deviation","forecast","anySignal","signals","controller","globalThis","AbortController","onAbort","abort","signal","removeEventListener","addEventListener","aborted","array","Array","isArray","TypeError","index","length","newIndex","floor","random","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","Uint8Array","code","indexOf","start","end","num","output","browserReadableStreamToIt","require","blob","stream","Response","body","async","options","reader","getReader","result","read","done","preventCancel","cancel","releaseLock","parse","format","formatThousandsRegExp","formatDecimalsRegExp","map","b","kb","mb","gb","tb","pow","pb","parseRegExp","Number","isFinite","mag","abs","thousandsSeparator","unitSeparator","decimalPlaces","undefined","fixedDecimals","Boolean","unit","toLowerCase","str","toFixed","replace","split","s","val","isNaN","floatValue","results","exec","parseFloat","parseInt","isDagJWS","jose","payload","signatures","isDagJWE","ciphertext","iv","protected","tag","toGeneral","signing_1","fromSplit","encryption_1","obj","encodedJose","encode","cbor","data","encoded","decode","e","isEncodedJWE","formatArgs","args","this","useColors","namespace","humanize","c","color","splice","lastC","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","DEBUG","window","type","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","log","debug","formatters","j","JSON","stringify","message","key","def","p","undef","assign","props","Object","defineProperty","enumerable","configurable","err","_","stack","ErrClass","prototype","create","getPrototypeOf","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","Function","call","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","EventEmitter","init","once","emitter","name","Promise","resolve","reject","errorListener","removeListener","resolver","slice","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","m","events","existing","warning","newListener","emit","unshift","w","String","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","n","copy","wrapListener","arg","get","set","RangeError","setMaxListeners","getMaxListeners","doError","er","context","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","pop","spliceOne","off","removeAllListeners","keys","rawListeners","eventNames","max","size","cache","_cache","update","has","remove","clear","pako","isElectron","IS_ENV_WITH_DOM","nodeType","IS_ELECTRON","IS_BROWSER","IS_ELECTRON_MAIN","IS_ELECTRON_RENDERER","IS_NODE","release","IS_WEBWORKER","importScripts","self","WorkerGlobalScope","IS_TEST","env","NODE_ENV","IS_REACT_NATIVE","product","isTest","isElectronMain","isElectronRenderer","isNode","isBrowser","isWebWorker","isEnvWithDom","isReactNative","fetch","Request","Headers","TimeoutError","HTTPError","merge","ignoreUndefined","URL","URLSearchParams","defaults","throwHttpErrors","credentials","HTTP","constructor","opts","resource","headers","url","toString","base","searchParams","transformSearchParams","json","search","abortController","response","promise","ms","Date","now","timedOut","timeoutID","setTimeout","after","next","res","clearTimeout","then","timeout","ok","handleError","iterator","fromStream","ndjson","chunk","transform","post","method","put","delete","source","decoder","TextDecoder","buf","lines","l","trim","isNodeReadableStream","iter","Symbol","asyncIterator","return","isWebReadableStream","isAsyncIterable","hasOwnProperty","streamToAsyncIterator","domainNameRegex","domainName","rootDot","lastChar","test","entry","varintEncode","varintDecode","int32BEEncode","int32BEDecode","batch","tasks","things","defer","concurrency","Infinity","ordered","ops","sourceErr","slotAvailable","resultAvailable","sourceFinished","opErred","valuesAvailable","find","op","yieldOrderedValues","yieldUnOrderedValues","task","iterable","symbol","queue","peek","FIFO","onEnd","pushable","onNext","ended","buffer","bufferNext","bufferError","isEmpty","writev","values","throw","_pushable","all","sorter","sort","pack","Buffer","BufferList","S_IFMT","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","DMODE","FMODE","END_OF_TAR","alloc","modeToType","mode","getPadding","header","pax","paxHeader","encodePax","linkname","newHeader","uid","gid","mtime","uname","gname","devmajor","devminor","from","isBuffer","isBufferList","written","overflow","uint8ArrayConcat","fn","wait","callFirst","debouncedFn","debounceWrapper","callNow","flush","propsArg","defaultValue","prop","prototypeCheck","lastProp","thisProp","PeerId","Multiaddr","mafmt","super","_list","_interval","interval","_timer","setInterval","_discoverBootstrapPeers","forEach","candidate","P2P","matches","peerIdStr","getPeerId","peerId","createFromB58String","id","multiaddrs","stop","clearInterval","drain","default","PQueue","client","_client","_httpQueue","_httpQueueRefs","protocol","host","port","getEndpointConfig","providers","onStart","onFinish","add","addrs","dht","findProvs","numProviders","block","stat","provide","base58btc","idStr","isPeerId","toB58String","findPeer","includes","keyStr","substring","query","responses","__createBinding","o","k","k2","__setModuleDefault","__importStar","mod","__esModule","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","pubsub_1","message_cache_1","rpc_1","constants","heartbeat_1","get_gossip_peers_1","utils_1","score_1","tracer_1","time_cache_1","Envelope","constants_1","Gossipsub","libp2p","_a","multicodecs","GossipsubIDv11","GossipsubIDv10","gossipIncoming","fallbackToFloodsub","floodPublish","doPX","directPeers","D","GossipsubD","Dlo","GossipsubDlo","Dhi","GossipsubDhi","Dscore","GossipsubDscore","Dout","GossipsubDout","Dlazy","GossipsubDlazy","heartbeatInterval","GossipsubHeartbeatInterval","fanoutTTL","GossipsubFanoutTTL","mcacheLength","GossipsubHistoryLength","mcacheGossip","GossipsubHistoryGossip","seenTTL","GossipsubSeenTTL","scoreParams","createPeerScoreParams","scoreThresholds","createPeerScoreThresholds","FloodsubID","debugName","_options","direct","Set","acceptFromWhitelist","Map","peerStore","addressBook","seenCache","SimpleTimeCache","validityMs","mesh","fanout","lastpub","gossip","control","peerhave","iasked","backoff","outbound","messageCache","MessageCache","getFastMsgIdStr","fastMsgIdFn","fastMsgIdCache","heartbeat","Heartbeat","heartbeatTicks","gossipTracer","IWantTracer","_libp2p","score","PeerScore","connectionManager","_decodeRpc","bytes","RPC","_encodeRpc","rpc","finish","_addPeer","addPeer","getAll","direction","registry","some","rvalue","_removePeer","peerStreams","peers","removePeer","_processRpc","_super","_processRpcControlMessage","controlMsg","iwant","ihave","_handleIHave","_handleIWant","prune","graft","_handleGraft","_handlePrune","outRpc","createGossipRpc","_sendRpc","_processRpcMessage","msg","canonicalMsgIdStr","fastMsgIdStr","duplicateMessage","messageIdToString","getMsgId","validateMessage","_acceptFrom","messagesAccepted","ACCEPT_FROM_WHITELIST_MAX_MESSAGES","acceptUntil","ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE","ACCEPT_FROM_WHITELIST_DURATION_MS","graylistThreshold","validate","getCanonicalMsgIdStr","rejectMessage","gossipThreshold","GossipsubMaxIHaveMessages","GossipsubMaxIHaveLength","topicID","messageIDs","msgId","msgIdStr","iask","iwantList","shuffle","addPromise","getForPeer","GossipsubGossipRetransmission","utils","normalizeOutRpcMessage","_now","peersInMesh","expire","addPenalty","floodCutoff","GossipsubGraftFloodThreshold","GossipsubPruneBackoff","_addBackoff","topic","_makePrune","_doAddBackoff","acceptPXThreshold","_pxConnect","_applyIwantPenalties","getBrokenPromises","_clearBackoff","GossipsubPruneBackoffTicks","_directConnect","GossipsubDirectConnectTicks","toconnect","peer","isWritable","_connect","GossipsubPrunePeers","pi","peerID","createFromBytes","signedPeerRecord","envelope","openAndCertify","eid","consumePeerRecord","_directPeerInitial","GossipsubDirectConnectInitialDelay","dialProtocol","subscribe","unsubscribe","leave","started","fanoutPeers","getGossipPeers","_sendGraft","meshPeers","_sendPrune","_b","getCachedMsgIdStr","_publish","receivedFrom","deliverMessage","tosend","topicIDs","peersInTopic","topics","publishThreshold","out","ctrl","_piggybackControl","_piggybackGossip","write","tograft","filter","toprune","_sendGraftPrune","noPX","pruning","_emitGossip","exclude","getGossipIDs","peersToGossip","topicPeers","hasGossipProtocol","factor","GossipsubGossipFactor","peerMessageIDs","_pushGossip","_flush","entries","controlIHaveMsgs","xid","px","toBytes","getRawEnvelope","multicodec","Topology","multicodecTopologySymbol","for","MulticodecTopology","min","handlers","onConnect","onDisconnect","_registrar","_onProtocolChange","_onPeerConnect","toStringTag","other","registrar","_updatePeers","getPeers","peerDataIterable","protocols","connection","getConnection","_onConnect","hadPeer","hasProtocol","_onDisconnect","peerData","remotePeer","protoBook","KadDHT","DualKadDHT","lan","clientMode","pipe","abortable","Coder","restrictSize","MessageTypes","MessageTypeNames","createStream","Mplex","onStream","_streamId","_streams","initiators","receivers","sink","_createSink","_createSource","onStreamEnd","streams","newStream","_newStream","_newReceiverStream","send","enabled","maxMsgSize","msgs","_handleIncoming","NEW_STREAM","MESSAGE_INITIATOR","MESSAGE_RECEIVER","CLOSE_INITIATOR","CLOSE_RECEIVER","close","RESET_INITIATOR","RESET_RECEIVER","reset","Record","validator","selection","errcode","withIs","AbortError","SimplePeer","supportsWebRTCDataChannels","webrtcSupport","CODE_CIRCUIT","createListener","toConnection","cleanMultiaddr","cleanUrlSIO","noop","upgrader","_upgrader","sioOptions","transports","wrtc","sigReferences","discovery","_isStarted","_peerDiscovered","rawConn","maConn","remoteAddr","conn","upgradeOutbound","spOptions","initiator","trickle","cOpts","toOptions","intentId","sio","sioClient","io","connected","channel","onError","onTimeout","srcMultiaddr","signallingAddr","dstMultiaddr","offer","answer","destroyed","protoCodes","WebRTCStar","maStr","className","symbolName","connect","toUri","pDefer","filters","_filter","socket","errorPromise","errfn","rawSocket","binary","onerror","race","dnsWss","errCode","MemoryDatastore","PeerRouting","ContentRouting","getPeer","validateConfig","codes","messages","AddressManager","ConnectionManager","AutoDialler","Circuit","Relay","Dialer","Keychain","Metrics","TransportManager","Upgrader","PeerStore","PubsubAdapter","Registrar","IdentifyService","FetchService","PingService","NatManager","updateSelfPeerRecord","Libp2p","datastore","metrics","connectionGater","denyDialPeer","denyDialMultiaddr","denyInboundConnection","denyOutboundConnection","denyInboundEncryptedConnection","denyOutboundEncryptedConnection","denyInboundUpgradedConnection","denyOutboundUpgradedConnection","filterMultiaddrForPeer","persistence","addressFilter","addresses","addressManager","catch","_modules","modules","_config","config","_transport","_discovery","_autodialler","peerDiscovery","autoDial","minConnections","autoDialInterval","keychain","keychainOpts","generateOptions","localPeer","onConnection","onConnectionEnd","transportManager","faultTolerance","natManager","nat","handle","connEncryption","CONN_ENCRYPTION_REQUIRED","crypto","cryptos","dialer","transport","Transport","transportOptions","relay","streamMuxer","muxer","muxers","identifyService","connProtector","protector","LIBP2P_FORCE_PNET","DHT","_dht","pubsub","Pubsub","peerRouting","contentRouting","_onDiscoveryPeer","fetchService","pingService","eventName","getProtocolStr","handleMessage","PROTOCOL","_onStarting","_onDidStart","service","unhandle","findKeyByName","importPeer","isStarted","connections","dial","_dial","ERR_INVALID_PROTOCOLS_FOR_STREAM","equals","ERR_DIALED_SELF","connectToPeer","getAnnounceAddrs","getAddrs","getObservedAddrs","announceFilter","addrSet","ping","getListenAddrs","listen","_maybeConnect","_setupPeerDiscovery","ERR_DISCOVERED_SELF","setupService","DiscoveryService","discoveryService","getTransports","TrackedMap","system","component","metric","_system","_component","_metric","_metrics","updateComponentMetric","deleted","DNS4","DNS6","DNSADDR","DNS","or","IP","TCP","and","UDP","UTP","QUIC","WebSockets","WebSocketsSecure","HTTPS","WebSocketStar","WebRTCDirect","Reliable","Stardust","_P2P","_Circuit","CircuitRecursive","makeMatchesFunction","partialMatch","isMultiaddr","protoNames","input","pnames","protos","IPFS","node","browser","Queue","observe","mutexes","implementation","createReleaseable","defaultOptions","global","singleProcess","isWorker","readLock","finally","writeLock","masterQueue","readQueue","autoStart","localReadQueue","readPromise","onIdle","createMutex","Worker","script","Impl","worker","reduceValue","Reducers","ip4","ip6","content","tcp","assumeHttp","explicitPort","tcpUri","udp","dnsaddr","dns4","dns6","ipfs","p2p","http","https","ws","wss","multiaddr","tuples","tuple","reduce","part","isPlainObject","object","deep","seenInput","seenOutput","deepSortArray","seenIndex","item","sortKeys","compare","newValue","getOwnPropertyDescriptor","retimer","TimeoutController","_ms","setPrototypeOf","encodingLength","encodeOptions","float64","typeEncoders","asCID","cid","CID","cborg","number","decodeOptions","allowIndefinite","coerceUndefinedToNull","allowNaN","allowInfinity","allowBigInt","strict","useMaps","tags","subarray","textDecoder","decodeVarint","offset","decodeBytes","byteLen","postOffset","decodeKey","wire","decodeLink","link","wireType","fieldNum","Hash","Name","Tsize","byts","textEncoder","TextEncoder","maxInt32","encodeLink","isSafeInteger","encodeVarint","nameBytes","encodeNode","Data","sov","Links","sizeLink","sizeNode","x","len8tab","len64","pbNodeProperties","pbLinkProperties","linkComparator","abuf","bbuf","y","hasOnlyProperties","properties","asLink","pbl","prepare","pbn","createNode","links","createLink","linksBeforeData","decodeNode","useBuffer","asU8A","byteOffset","utf8Slice","fromString","string","utf8ToBytes","fromArray","chunks","allocUnsafe","b1","b2","codePoint","units","leadSurrogate","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","fromCharCode","decodeErrPrefix","encodeErrPrefix","uintMinorPrefixBytes","assertEnoughData","pos","need","defaultDecodeOptions","allowUndefined","Tokeniser","byt","token","quick","jump","padStart","minor","encodedLength","DONE","BREAK","tokensToObject","tokeniser","Type","terminal","tokenToArray","tokenToMap","tagged","tokenizer","decoded","defaultEncodeOptions","mapSorter","e1","e2","keyToken1","keyToken2","major","tcmp","cborEncoders","compareTokens","quickEncodeToken","encoders","encodeUint","encodeNegint","encodeBytes","encodeString","encodeArray","encodeMap","encodeTag","encodeFloat","makeCborEncoders","Bl","Ref","parent","simpleTokens","null","Token","true","false","emptyArray","emptyMap","_typ","_refStack","isInteger","bigint","BigInt","boolean","_obj","ArrayBuffer","DataView","refStack","addBreakTokens","createCheck","objectToTokens","typ","isMap","sortMapEntries","is","customTypeEncoder","tokens","typeEncoder","tokensToEncoded","encodeCustom","quickBytes","encoder","encodedSize","JSONEncoder","inRecursive","prefix","recurs","elements","isa","_buf","_token","dp","invalidMinor","errorer","uint","negint","float","majorEncoded","break","encodedBytes","byteValue","Errors","ErrorsImport","shard","ShardImport","WantType","Message","Wantlist","stats","trackedMap","_stats","priority","wantType","cidStr","inc","Entry","dec","hasRefs","removeForce","sortedEntries","aa","bb","contains","normaliseCandidateMultiple","normaliseContent","isBytes","isBlob","_readableState","isReadableStream","browserStreamToIt","peekable","itPeekable","toFileObject","isFileObject","path","file","parseMode","parseMtime","withTimeoutOption","optionsArgIndex","parseDuration","fnRes","timeoutPromise","_resolve","maybeThrowTimeoutError","it","lock","createLock","repoOwner","mutex","mortice","func","loadMfsRoot","repo","open","MFS_ROOT_KEY","dagPB","UnixFS","marshal","hash","sha256","blocks","bytesEncoder","bytesString","base64","cidString","DagJsonTokenizer","cborgJson","tokenBuffer","_next","keyToken","valueToken","innerKeyToken","innerValueToken","NotInitializedError","AlreadyInitializingError","AlreadyInitializedError","NotStartedError","AlreadyStartingError","AlreadyStartedError","NotEnabledError","Service","activate","status","ready","panic","deactivate","withTimeout","use","try","TLRU","httpQueue","ipfsPath","Path","resolveDnslink","fqdn","nocache","fqdnFixups","domain","endsWith","parseBytes","normaliseInput","toPin","first","pin","recursive","metadata","PinTypes","indirect","PinAPI","codecs","addAll","pinAdd","resolvePath","reason","pins","isPinnedWithType","pinRecursively","pinDirectly","gcLock","createAddAll","last","createAdd","rmAll","pinned","unpin","createRmAll","rm","createRm","ls","paths","matched","recursiveKeys","indirectKeys","directKeys","createLs","remote","ID_MULTIHASH_CODE","identity","IPNS_PREFIX","uint8ArrayFromString","namespaceLength","_create","privateKey","seq","validityType","expirationDate","ttl","isoValidity","signatureV1","sign","createCborData","sigData","ipnsEntryDataForV2Sig","signature","validity","sequence","signatureV2","Value","Validity","ValidityType","Sequence","TTL","publicKey","dataForSignature","isValid","validateCborDataMatchesPbData","ipnsEntryDataForV1Sig","verify","ERRORS","ipnsEntryProto","validityDate","parseRFC3339","uint8ArrayToString","getTime","uint8ArrayEquals","extractPublicKey","pubKey","rawStdEncoding","base32upper","getLocalKey","Key","getIdKeys","pid","pkBuffer","ipnsBuffer","routingPubKey","pkKey","routingKey","ipnsKey","validityTypeBuffer","getValidityType","entryData","extractPublicKeyFromId","digest","Digest","Long","unmarshal","arrays","objects","marshalledData","receivedEntry","bufferId","select","dataA","dataB","entryA","entryB","entryAValidityDate","ERR_NOT_FOUND","notFoundError","defaultRecordLifetime","IpnsPublisher","routing","_routing","_datastore","privKey","lifetime","record","_updateOrCreateRecord","_putRecordToRouting","publish","publishWithEOL","errMsg","embedPublicKeyRecord","extractedPublicKey","ipns","_publishEntry","uint8Array","checkRouting","dsVal","_unmarshalData","getPublishedOptions","_getPublished","seqNumber","NanoDate","ns","lifetimeNs","IpnsRepublisher","publisher","pass","_publisher","_peerId","_keychain","_republishHandle","republishHandle","_task","_inflightTask","_timeoutId","runPeriodically","period","firstRun","_republishEntries","initialBroadcastInterval","broadcastInterval","_republishEntry","listKeys","pem","exportKey","_getPreviousValue","notFound","IpnsResolver","nameSegments","depth","_resolveName","ipnsEntry","_validateRecord","maxSize","lru","hashlru","IPNS","republisher","createFromPrivKey","ttEol","encodeBase32","keyToTopic","PubsubDatastore","BaseDatastore","subscriptionKeyFn","_pubsub","_validator","_handleSubscriptionKeyFn","_onMessage","stringifiedTopic","subscriptions","getTopics","_getLocal","topicToKey","_storeIfSubscriptionIsBetter","isBetter","_isBetter","_storeRecord","records","dsKey","currentRecord","_selectRecord","IpnsPubsubDatastore","localDatastore","_subscriptions","_handleSubscriptionKey","_pubsubDs","subscriber","getSubscriptions","sub","startsWith","canceled","bufTopic","OfflineDatastore","_repo","stores","_routingKey","serialize","DHTDatastore","event","IPNSAPI","offline","online","getIPNS","startOffline","ipnsStores","pubsubDs","offlineDatastore","TieredDatastore","createRouting","initializeKeyspace","isIPFS","toCidAndPath","mergeOptions","mergeOpts","appendRemainder","remainder","getPubsubRouting","ipnsPubsub","PubSubAPI","experimental","EXPERIMENTAL","createCancel","createState","subs","createSubs","NameAPI","dns","isOnline","lookupKey","keyName","OFFLINE_ERROR","normalizePath","pubLifetime","createPublish","base36","version","isDomain","createResolve","Format","getFullPath","preload","refsStream","resPath","maxDepth","unique","rootCid","uniqueOnly","seen","traverseLevel","nextLevelDepth","getCodec","isDagPb","getLinks","isDuplicate","objectStream","ref","formatLink","srcCid","dstCid","linkName","element","elementPath","createLocal","queryKeys","createStat","network","bitswap","snapshot","provideBufLen","providesBufferLength","blocksReceived","wantlist","getWantlist","dupBlksReceived","dupDataReceived","dataReceived","blocksSent","dataSent","BitswapAPI","createWantlist","wantlistForPeer","createWantlistForPeer","unwant","cids","createUnwant","isValidMultiaddr","BootstrapAPI","boostrappers","Bootstrap","localeCompare","Peers","createList","removed","createClear","defaultConfig","createReset","cleanCid","BlockAPI","hashers","createGet","cidVersion","codecName","hasher","getHasher","mhtype","codec","createPut","force","parallel","quiet","toAsyncIterable","thing","blobToIt","isView","normaliseCandidateSingle","transformFile","toV1","wrapWithDirectory","unixfs","preloadFile","onlyHash","pinFile","isRootDir","RootAPI","isShardingEnabled","sharding","shardSplitThreshold","strategy","parseChunkerString","chunker","hashAlg","leafType","reduceSingleLeafToSelf","rawLeaves","totals","progress","prog","importer","added","cat","normalizeCidPath","pathComponents","exporter","createCat","compressionLevel","ipfsPathOrCid","compress","archive","secs","toBuffer","Pako","level","legacyPath","child","mapFile","findPeerOnDht","keyBook","getPublicKey","addr","profiles","server","description","Swarm","DisableNatPortMap","getDefaultConfig","Addresses","API","Gateway","Delegates","Discovery","MDNS","Enabled","webRTCStar","lowpower","ConnMgr","LowWater","HighWater","listProfiles","createHeader","roots","headerBytes","dagCborEncode","varintBytes","varint","Kinds","Null","Int","Float","Bool","Bytes","Link","List","Types","every","CarHeader","CIDV0_BYTES","readVarint","upTo","seek","readHeader","strictVersion","exactly","decodeDagCbor","headerValidator","hasRoots","v2Header","dv","characteristics","getBigUint64","dataOffset","dataSize","indexOffset","readV2Header","v1Header","readCid","multihash","codeLength","mhLength","readMultihash","readBlockHead","blockLength","readBlock","readBlockIndex","blockOffset","createDecoder","headerPromise","v1length","byteLimit","bytesRead","limitReader","bytesReader","asyncIterableReader","asyncIterable","readChunk","have","currentChunk","bufa","chunkReader","CarWriter","_encoder","_mutex","setRoots","_ended","writeBlock","_roots","root","_root","toRoots","encodeWriter","writer","CarWriterOut","_iterator","_iterating","iw","iteratorChannel","createEncoder","walk","b58Cid","NO_LINKS_CODECS","raw","makeLoader","createUnsafe","CarIteratorBase","_version","_iterable","_decoded","CarBlockIterator","fromBytes","fromIterable","decodeIterator","importCar","getRoots","putMany","DagAPI","export","createExport","localResolve","remainderPath","import","sources","abortOptions","cars","car","pinRoots","pinErrorMsg","createImport","dagNode","storeCodec","inputCodec","createPreloader","api","stopped","requests","apiUris","fallbackApiUris","success","uri","encodeURIComponent","readOperations","writeOperations","chmod","createChmod","cp","createCp","createFlush","mkdir","createMkdir","mv","createMv","touch","createTouch","unwrappedOperations","createWrite","createRead","wrap","mfs","operations","createFiles","constructorOptions","methods","operation","createMfs","withPreload","isIpfs","DEFAULT_KEY_TYPE","DEFAULT_KEY_SIZE","KeyAPI","gen","createKey","createGen","removeKey","rename","oldName","newName","renameKey","was","overwrite","createRename","password","importKey","info","createInfo","findLinks","ObjectPatchAPI","addLink","createAddLink","appendData","newData","createAppendData","rmLink","createRmLink","setData","createSetData","ObjectAPI","createData","dagCBOR","dagJSON","createLinks","new","template","createNew","blockSize","linkLength","NumLinks","BlockSize","LinksSize","DataSize","CumulativeSize","patch","numObjects","repoSize","repoPath","storageMax","RepoAPI","gc","mfsRootCid","createGc","_checkInitialized","repoVersion","createVersion","setApiAddr","apiAddr","getBandwidthStats","forPeer","proto","forProtocol","totalIn","totalOut","rateIn","rateOut","movingAverages","integerValue","StatsAPI","createRepo","bw","poll","timeoutId","createBw","createBitswap","emptyMigration","migrate","revert","empty","migration8","migration9","migration10","migration11","migration12","backends","repoOptions","toVersion","ignoreLock","onProgress","isDryRun","migrations","defaultMigrations","errors","RequiredParameterError","InvalidValueError","wrapBackends","currentVersion","verifyAvailableMigrations","repoLock","migration","progressCallback","percent","lastSuccessfullyMigratedVersion","getLatestMigrationVersion","fromVersion","checkReversibility","migrationCounter","NonReversibleMigrationError","LockExistsError","NotFoundError","InvalidRepoVersionError","ERR_REPO_NOT_INITIALIZED","hasWithFallback","store","levelJs","findLevelJs","req","transaction","onabort","oncomplete","getWithFallback","db","versionKey","configKey","specKey","apiFile","extractContents","isIdentity","lockFile","LOCKS","MemoryLock","dir","locked","autoMigrate","onMigrationProgress","Spec","mounts","mountpoint","sync","shardFunc","compression","cidToKey","base32","toUpperCase","keyToMultihash","walkDag","blockstore","loadCodec","childCid","PinManager","pinstore","directPins","recursivePins","dagPb","fetchCompleteDag","types","limit","parentCid","findChild","invalidPinTypeErr","ensureNotPinned","markedSet","mfsSource","mh","pinsSource","createMarkedSet","blockKeys","blocksCount","removedBlocksCount","removeBlock","b32","parallelBatch","deleteUnmarkedBlocks","noLimit","MAX_SAFE_INTEGER","Repo","closed","pinnedBlockstore","getMany","pairs","deleteMany","extracted","nextTick","setImmediate","commit","createIdStore","expected","setQueue","configStore","encodedValue","_get","_maybeDoSet","_set","_saveAll","spec","exists","_openRoot","Datastore","defaultDatastore","mounting","buildDatastoreSpec","CONSTANTS","_lockfile","_openLock","check","_isAutoMigrationEnabled","_migrate","_closeLock","err2","lockfile","_storageMaxStat","_blockStat","getSize","autoMigrateConfig","reversedMigrationArray","reverse","lastSuccessfullyRevertedVersion","migrator","sum","LevelDatastore","database","Level","_initDb","valueEncoding","del","q","_query","orders","take","iteratorOpts","keyAsBuffer","gte","lt","li","keyToCid","convertPrefix","firstChar","base32pad","BlockstoreDatastoreAdapter","BaseBlockstore","pair","order","convertQuery","convertKeyQuery","print","codeOrName","routers","gossipsub","libp2pGossipsub","configure","toUrlSearchParams","Keys","toCoreInterface","ProvideBufLen","BlocksReceived","DataReceived","BlocksSent","DataSent","DupBlksReceived","DupDataReceived","arrayBuffer","multipartRequest","formData","FormData","total","fileSuffix","fieldName","qs","modeToString","nsecs","File","abortSignal","Size","createBlock","createBootstrap","createApply","profile","original","OldCfg","updated","NewCfg","objectToCamel","createProfiles","createGetAll","createReplace","text","createSet","params","encodeParam","bool","createConfig","getBlock","lastCid","createBlockGet","Root","Cid","PinErrorMsg","settings","serialized","RemPath","createDag","createFindPeer","mapEvent","createFindProvs","createProvide","cidArr","createQuery","createDht","createCmds","createNet","createSys","createDiag","cmds","net","sys","destination","sourceArr","src","long","Entries","objectToCamelWithMetadata","toIterable","WithLocality","streamChannels","createLevel","subsystem","Strings","createTail","createLog","tail","createPubsub","createName","dataEncoding","dagPut","createDagPut","dLink","createPatch","createObject","Pins","Metadata","append","decodePin","Status","encodeService","encodeCID","encodeQuery","encodeAddParams","background","origins","origin","endpoint","encodeEndpoint","RemoteServices","decodeRemoteService","createService","Client","createRemote","createPin","rpcArrayToTextArray","strings","rpcToText","rpcToBytes","base64url","textToUrlSafeRpc","createPeers","readMessages","onMessage","seqno","isAbortError","subscriptionTracker","SubscriptionTracker","subsTracker","fail","ffWorkaround","createUnsubscribe","createRefs","argsArr","local","NumObjects","RepoSize","RepoPath","Version","StorageMax","TotalIn","TotalOut","RateIn","RateOut","createStats","createAddrs","Addrs","createConnect","createDisconnect","createLocalAddrs","Addr","Peer","Muxer","latency","Latency","Streams","Direction","createSwarm","disconnect","localAddrs","progressFn","onUploadProgress","createProgressHandler","createOnUploadProgress","loaded","mtimeNsecs","createCommands","createDns","createGetEndpointConfig","hostname","pathname","createId","createIsOnline","pathStr","mapLink","typeOf","Mode","Mtime","MtimeNsecs","Objects","createMount","createPing","createStart","createStop","selector","_k","createLibp2p","keychainConfig","libp2pOptions","libp2pDefaults","router","getPubsubRouter","mdns","bootstrap","hop","active","kBucketSize","validators","announce","noAnnounce","maxConnections","agentVersion","pkgversion","libp2pConfig","maxParallelDials","maxDialsPerPeer","dialTimeout","WS","Multiplex","NOISE","GossipSub","selectors","emitSelf","delegateHosts","delegateString","delegateAddr","delegateHttpClient","multibaseCodecs","bases","ipld","multibases","Multibases","loadBase","blockCodecs","dagJOSE","Multicodecs","multihashHashers","hashes","multihashes","Multihashes","loadHasher","commands","dag","diag","files","mount","refs","swarm","ipfsHttpClient","DelegatedContentRouter","DelegatedPeerRouter","getLibp2pOptions","Storage","isNew","repoAutoMigrate","inputRepo","loadRepo","configureRepo","allowNew","initRepo","initOptions","decodePeerId","initPeerId","peerIdToIdentity","PeerID","applyProfiles","Identity","dek","loadKeychain","DEK","algorithm","bits","keyType","PrivKey","changed","mergeConfigs","changes","configProfiles","logger","isMapEqual","valueA","valueB","BitswapMessageEntry","BitswapMessage","full","blockPresences","pendingBytes","addEntry","sendDontHave","Block","Have","addBlock","addHave","BlockPresenceType","addDontHave","DontHave","setPendingBytes","serializeToBitswap100","serializeToBitswap110","digestLength","ve","bpType","deserialize","hashLoader","isFull","blockPresence","vd","blockPresenceSize","kMaxPriority","MsgQueue","selfPeerId","otherPeerId","refcnt","_entries","_log","sendEntries","debounce","_sendEntries","addMessage","addEntries","connectTo","sendMessage","WantManager","_addEntries","_startPeerHandler","mq","fullwantlist","_stopPeerHandler","wantBlocks","cancelWants","unwantBlocks","connectedPeers","disconnected","BITSWAP100","BITSWAP110","BITSWAP120","Network","_bitswap","_protocols","b100Only","_running","_onPeerDisconnect","_onConnection","_hashLoader","topology","_registrarId","register","unregister","lp","_receiveMessage","_receiveError","_onPeerConnected","_onPeerDisconnected","findProviders","maxProviders","maxNumProviders","connectAttempts","provider","stringId","writeMessage","_updateSentStats","Ledger","partner","exchangeCount","sentToPeer","accounting","bytesSent","bytesRecv","sentBytes","lastExchange","receivedBytes","wants","cancelWant","wantlistContains","debtRatio","SortedMap","cmp","_cmp","_defaultSort","_keys","newIdx","_find","lower","upper","pivot","_kCmp","cb","DefaultTaskMerger","hasNewInfo","RequestQueue","taskMerger","_taskMerger","_byPeer","PeerTasks","pushTasks","peerTasks","popTasks","targetMinBytes","_head","pendingSize","isIdle","tasksDone","taskDone","_activeTotalSize","_pending","PendingTasks","_active","t","_pushTask","_taskHasMoreInfoThanActiveTasks","existingTask","updatePriority","tasksWithTopic","activeTask","pendingTasks","totalSize","_tasks","_compare","created","TaskMerger","haveBlock","isWantBlock","newTask","taskData","existingData","DecisionEngine","_opts","_processOpts","ledgerMap","_requestQueue","maxSizeReplaceHasWithBlock","targetMessageSize","_scheduleProcessTasks","_processTasks","blockCids","blockTasks","_getBlocks","blk","messageSent","ledger","ledgerForPeer","sent","recv","exchanged","receivedBlocks","want","_sendAsBlock","entrySize","_findOrCreate","_updateBlockAccounting","cancels","_cancelWants","_addWants","blockSizes","_getBlockSizes","blocksMap","numBytesSentTo","numBytesReceivedFrom","peerDisconnected","unwantEvent","blockEvent","Notifications","hasBlock","wantBlock","blockEvt","unwantEvt","onUnwant","onBlock","unwantBlock","Stat","initialCounters","_queue","_frequencyLastTime","_frequencyAccumulators","_movingAverages","_update","movingAverageIntervals","MovingAverage","_enabled","enable","disable","_disabled","_timeout","counter","_resetComputeTimeout","_nextTimeout","urgency","computeThrottleMaxQueueSize","computeThrottleTimeout","_applyOp","_updateFrequency","latestTime","timeDiff","_updateFrequencyFor","timeDiffMS","hz","movingAverageInterval","Stats","_initialCounters","_global","_peers","peerStat","peerStats","statsEnabled","statsComputeThrottleTimeout","statsComputeThrottleMaxQueueSize","statsKeys","Bitswap","engine","wm","notifications","incoming","messageReceived","received","wasWanted","_handleReceivedBlock","_updateReceiveCounters","enableStats","disableStats","fetchFromNetwork","promptedNetwork","findAndConnect","loadOrFetchFromNetwork","cidsArray","_sendHaveBlockNotifications","BlockStorage","missingBlocks","getFromBitswap","getFromChild","readAddrs","WEBSOCKET_STAR_PROTO_CODE","maId","encapsulate","SwarmAPI","mi","hangUp","verbose","multiplexer","basePacket","toDHTKey","to","messageType","messageName","closer","notEnabled","resolvedPath","schema","rest","cidBase","getBase","edges","mfsPreload","preloadMfs","nextRootCid","createMfsPreloader","startOnline","dhtKey","peerIdToFind","peerIdToQuery","asCid","getClosestPeers","isEnabled","getSubscribers","protocolVersion","peerIdToId","publicKeyStr","ipfsCore","interfaceIpfsCore","profileName","dryRun","oldCfg","newCfg","storedPeer","packetCount","totalTime","average","notImplemented","addEmptyDir","getDefaultOptions","silent","emptyRepo","initAssets","isIPFSImport","MFS_MAX_CHUNK_SIZE","charAt","lastRemainderPath","fileSize","DEFAULT_PROTOCOL","location","DEFAULT_HOST","DEFAULT_PORT","errorHandler","KEBAB_REGEX","kebabCase","agent","toUrlString","apiPath","Agent","getAgent","keepAlive","maxSockets","normalizeOptions","urlSearchParams","NotInitializedRepoError","MissingRepoOptionsError","CONFIG_KEY","VERSION_KEY","wrapStore","originalGet","originalHas","cidAndRest","toResolve","toPathComponents","walkPath","entryPath","startingDepth","recurse","dagBuilder","treeBuilder","candidates","dagBuilderFn","treeBuilderFn","fileImportConcurrency","PBData","Pb","dirTypes","DEFAULT_FILE_MODE","DEFAULT_DIRECTORY_MODE","Seconds","FractionalNanoseconds","marshaled","toObject","longs","blocksizes","_originalMode","hashType","_mode","isDirectory","parsedMode","addBlockSize","removeBlockSize","DataType","Raw","Directory","Symlink","HAMTShard","parsed","pbData","filesize","baseX","alphabet","base36upper","base58flickr","identityBase","base2","base8","base10","base16","base58","sha2","readonly","writable","tree","asBlock","defineProperties","remaining","maybeValue","coerce","sha","subtle","sha512","durationRE","unitRatio","nanosecond","us","microsecond","millisecond","second","sec","minute","hour","hr","h","day","week","wk","month","year","yr","encoding"],"sourceRoot":""}