{"version":3,"file":"static/js/916.c724dfee.chunk.js","mappings":"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","sources":["shared/antd/ionicon/assets/icon-telegram.svg","shared/antd/ionicon/customs.tsx","shared/antd/ionicon/index.tsx","app/helper/index.ts","app/model/main.controller.tsx","app/hooks/useMerkleSDK.ts","app/static/images/redeem.svg","shared/hooks/useMintDecimals.ts","shared/antd/mint/mintAvatar.tsx","shared/antd/mint/mintSymbol.tsx","app/configs/manifest.config.ts","app/configs/sol.config.ts","app/configs/index.ts","app/hooks/useAppRoute.ts","app/components/modalRedeem.tsx","app/constants/index.ts","app/model/steps.controller.tsx","app/model/recipients.controller.tsx","app/hooks/useValidateAmount.ts","app/view/auto/action.tsx","app/components/commonModal.tsx","shared/antd/numericInput.tsx","app/components/inputInfoTransfer.tsx","app/hooks/useTotal.ts","app/components/cardTotal.tsx","app/view/auto/accountInfoHeader.tsx","app/view/auto/accountInfo.tsx","app/view/auto/fileDetails.tsx","app/static/images/icon-upload.svg","app/view/auto/uploadFile.tsx","app/model/setting.controller.tsx","app/components/header/switch.tsx","app/components/header/setting.tsx","app/static/images/twitter.svg","app/components/modalShare.tsx","app/components/header/history/column/shareButton.tsx","app/components/header/history/column/index.tsx","app/components/header/history/index.tsx","app/components/header/index.tsx","app/view/auto/index.tsx","app/view/manual/index.tsx","app/components/selectTokens.tsx","shared/hooks/useAccountBalance.ts","app/view/confirmTransfer.tsx","app/view/container.tsx","app/hooks/useSingleMints.ts","app/view/index.tsx","app/static/javascript/index.tsx","app/model/index.ts","app/bootstrap.app.tsx","shared/dataloader/cache.ts","shared/dataloader/constant.ts","shared/dataloader/index.ts","shared/dataloader/request.ts","shared/devTools.ts","shared/pdb/index.ts","shared/pdb/ipfs.ts","shared/storage.ts","shared/runtime.ts","shared/util.ts"],"sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgIconTelegram(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"inherit\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.137,6.552c-0.75-0.636-1.928-0.727-3.146-0.238l-0.002,0C41.708,6.828,6.728,21.832,5.304,22.445 c-0.259,0.09-2.521,0.934-2.288,2.814c0.208,1.695,2.026,2.397,2.248,2.478l8.893,3.045c0.59,1.964,2.765,9.21,3.246,10.758 c0.3,0.965,0.789,2.233,1.646,2.494c0.752,0.29,1.5,0.025,1.984-0.355l5.437-5.043l8.777,6.845l0.209,0.125 c0.596,0.264,1.167,0.396,1.712,0.396c0.421,0,0.825-0.079,1.211-0.237c1.315-0.54,1.841-1.793,1.896-1.935l6.556-34.077 C47.231,7.933,46.675,7.007,46.137,6.552z M22,32l-3,8l-3-10l23-17L22,32z\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconTelegram);\nexport default __webpack_public_path__ + \"static/media/icon-telegram.2450489f40d03000fe65fc1c6f238d85.svg\";\nexport { ForwardRef as ReactComponent };","import IconTele from './assets/icon-telegram.svg'\n\nexport const CUSTOM_ICONS: Record<string, string> = {\n  'logo-telegram': IconTele,\n}\n","/**\n * IonIcon 5\n * Credit https://ionic.io/ionicons\n */\n\nimport { forwardRef } from 'react'\nimport { CUSTOM_ICONS } from './customs'\n\n/**\n * IonIcon\n * @param name The icon name. You can find it here https://ionic.io/ionicons\n * @param className To modify the span class\n */\nconst IonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string } & any\n>(({ name, className, ...props }, ref) => {\n  const cln = className ? 'anticon ' + className : 'anticon'\n\n  return (\n    <span className={cln} {...props}>\n      {CUSTOM_ICONS[name] ? (\n        <ion-icon ref={ref} src={CUSTOM_ICONS[name]} />\n      ) : (\n        <ion-icon ref={ref} name={name} />\n      )}\n    </span>\n  )\n})\n\nexport default IonIcon\n","import { MerkleDistributorInfo } from '@saberhq/merkle-distributor/dist/cjs/utils'\n\nimport { explorer } from 'shared/util'\n\nexport type DistributorInfo = {\n  distributor: string\n  distributorATA: string\n}\n\nexport type ClaimProof = {\n  index: number\n  amount: string\n  proof: any\n  claimant: string\n  distributorInfo?: DistributorInfo\n  mintAddress: string\n}\n\nexport type EncodeData = Record<string, ClaimProof>\n\nexport const notifySuccess = (content: string, txId: string) => {\n  return window.notify({\n    type: 'success',\n    description: `${content} successfully. Click to view details.`,\n    onClick: () => window.open(explorer(txId), '_blank'),\n  })\n}\n\nexport const notifyError = (er: any) => {\n  return window.notify({\n    type: 'error',\n    description: er.message,\n  })\n}\n\nexport const generateCsv = (data: Record<string, any>[]) => {\n  const titles: string[] = []\n  // generate title\n  for (const elm of data) {\n    for (const key in elm) {\n      if (!titles.includes(key)) titles.push(key)\n    }\n  }\n  // generate row data\n  const csvData = [titles]\n  for (const elm of data) {\n    const rowData = []\n    for (const title of titles) {\n      const val = String(elm[title]) || ''\n      rowData.push(val)\n    }\n    csvData.push(rowData)\n  }\n  return {\n    data: csvData,\n    download: () => {\n      let csvContent =\n        'data:text/csv;charset=utf-8,' +\n        csvData.map((e) => e.join(',')).join('\\n')\n\n      var encodedUri = encodeURI(csvContent)\n      var link = document.createElement('a')\n      link.setAttribute('href', encodedUri)\n      link.setAttribute(\n        'download',\n        `sentre_cheques_${new Date().toString()}.csv`,\n      )\n      document.body.appendChild(link)\n      link.click()\n    },\n  }\n}\n\nexport const encodeData = (\n  tree: MerkleDistributorInfo,\n  distributorInfo: DistributorInfo,\n  mintAddress: string,\n): EncodeData => {\n  if (!tree) return {}\n  const { claims } = tree\n  const data: EncodeData = {}\n  const listClaimant = Object.keys(claims)\n  listClaimant.forEach((claimant) => {\n    const { amount, index, proof } = claims[claimant]\n    const newClaim = {\n      index,\n      proof,\n      amount: amount.toString(),\n      claimant,\n      distributorInfo,\n      mintAddress,\n    }\n    data[claimant] = newClaim\n  })\n  return data\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\nexport type MainState = {\n  methodSelected?: number\n  mintSelected: string\n  fileName?: string\n  selectedFile: number[]\n  visible: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'main'\nconst initialState: MainState = {\n  methodSelected: undefined,\n  mintSelected: '',\n  fileName: '',\n  selectedFile: [],\n  visible: false,\n}\n\n/**\n * Actions\n */\n\nexport const onSelectMethod = createAsyncThunk(\n  `${NAME}/onSelectMethod`,\n  async (methodSelected?: number) => {\n    return { methodSelected }\n  },\n)\n\nexport const setFileName = createAsyncThunk(\n  `${NAME}/setFileName`,\n  async (fileName: string) => {\n    return { fileName }\n  },\n)\n\nexport const onSelectedMint = createAsyncThunk(\n  `${NAME}/onSelectedMint`,\n  async (mintSelected: string) => {\n    return { mintSelected }\n  },\n)\n\nexport const setVisible = createAsyncThunk(\n  `${NAME}/setVisible`,\n  async (visible: boolean) => {\n    return { visible }\n  },\n)\n\nexport const onSelectedFile = createAsyncThunk<\n  Partial<MainState>,\n  {\n    checked: boolean\n    index?: number\n  },\n  { state: any }\n>(`${NAME}/onSelectedFile`, async ({ checked, index }, { getState }) => {\n  const {\n    main: { selectedFile },\n    recipients: { recipients, errorData },\n  } = getState()\n\n  // on select all\n  if (index === undefined) {\n    const nextRecipients = [...recipients]\n    const nextErrorData = [...(errorData || [])]\n    if (!checked) return { selectedFile: [] }\n    const selectedAll = []\n    for (const idx in nextRecipients) selectedAll.push(Number(idx))\n    for (const idxError in nextErrorData)\n      selectedAll.push(nextRecipients.length + Number(idxError))\n    return { selectedFile: selectedAll }\n  }\n\n  const nextSelected = [...selectedFile]\n  if (checked) nextSelected.push(index)\n  else {\n    const idx = nextSelected.indexOf(index)\n    nextSelected.splice(idx, 1)\n  }\n  return { selectedFile: nextSelected }\n})\nexport const removeSelectedFile = createAsyncThunk(\n  `${NAME}/removeSelectedFile`,\n  async () => {\n    return { selectedFile: [] }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        onSelectMethod.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setFileName.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        onSelectedMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        onSelectedFile.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        removeSelectedFile.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisible.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useCallback, useEffect, useState } from 'react'\nimport { WalletInterface } from '@senswap/sen-js'\nimport { Provider, web3 } from '@project-serum/anchor'\nimport { MerkleDistributorSDK } from '@saberhq/merkle-distributor'\nimport { SolanaProvider } from '@saberhq/solana-contrib'\n\nlet merkleSDK: MerkleDistributorSDK | null = null\n\nconst useMerkleSDK = () => {\n  const [sdk, setSdk] = useState<MerkleDistributorSDK | null>(null)\n\n  const getAnchorProvider = useCallback(\n    (\n      node: string,\n      walletAddress: string,\n      wallet: WalletInterface,\n    ): Provider => {\n      const connection = new web3.Connection(node, 'confirmed')\n\n      const signAllTransactions = async (transactions: web3.Transaction[]) => {\n        const signedTransactions = []\n        for (const transaction of transactions) {\n          const signedTransaction = await wallet.signTransaction(transaction)\n          signedTransactions.push(signedTransaction)\n        }\n        return signedTransactions\n      }\n\n      const publicKey = new web3.PublicKey(walletAddress)\n      return new Provider(\n        connection,\n        {\n          publicKey: new web3.PublicKey(publicKey),\n          signTransaction: wallet.signTransaction,\n          signAllTransactions,\n        },\n        {\n          commitment: 'confirmed',\n          skipPreflight: true,\n        },\n      )\n    },\n    [],\n  )\n\n  const createSDK = useCallback(async () => {\n    const {\n      sentre: { wallet, splt },\n    } = window\n    if (!wallet) return setSdk((merkleSDK = null))\n    if (!merkleSDK) {\n      const walletAddress = await wallet.getAddress()\n      const anchorProvider = getAnchorProvider(\n        splt.nodeUrl,\n        walletAddress,\n        wallet,\n      )\n      const provider = SolanaProvider.init({\n        connection: anchorProvider.connection,\n        wallet: anchorProvider.wallet,\n        opts: anchorProvider.opts,\n      })\n\n      merkleSDK = MerkleDistributorSDK.load({ provider })\n    }\n    setSdk(merkleSDK)\n  }, [getAnchorProvider])\n\n  useEffect(() => {\n    createSDK()\n  }, [createSDK])\n\n  return sdk\n}\n\nexport default useMerkleSDK\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _rect, _rect2, _rect3, _circle, _path17, _rect4, _rect5, _rect6, _circle2, _path18, _rect7, _rect8, _rect9, _circle3, _path19;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgRedeem(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 276,\n    height: 172,\n    viewBox: \"0 0 276 172\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.0346 166.536C27.2557 168.182 28.7694 169.589 30.5001 170.686C30.8682 170.919 31.246 171.14 31.6305 171.343H40.6765C40.5682 171.126 40.463 170.906 40.3611 170.686C37.5563 164.767 36.6767 158.119 37.8461 151.674C39.0155 145.23 42.175 139.314 46.8805 134.758C41.4127 136.447 36.3589 139.739 33.0533 144.409C31.4471 146.682 30.3048 149.251 29.6918 151.966C29.1455 146.535 30.0137 141.055 32.212 136.059C27.7728 139.67 24.3159 144.616 22.9983 150.182C21.6807 155.752 22.6368 161.932 26.0346 166.536Z\",\n    fill: \"#4F5B5C\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M105.142 61.1883C104.606 61.1495 104.068 61.2288 103.566 61.4204C103.064 61.612 102.61 61.9113 102.237 62.2972C101.863 62.6831 101.579 63.1463 101.403 63.6541C101.228 64.1619 101.166 64.702 101.222 65.2363L89.3984 70.7793L95.1856 74.3228L105.526 68.5158C106.418 68.3623 107.222 67.8871 107.786 67.1803C108.35 66.4736 108.636 65.5844 108.589 64.6812C108.541 63.778 108.164 62.9235 107.529 62.2798C106.893 61.636 106.044 61.2476 105.142 61.1883Z\",\n    fill: \"#CC9292\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.2135 167.835L60.297 167.835L62.2396 152.085L56.2129 152.085L56.2135 167.835Z\",\n    fill: \"#CC9292\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.1738 166.502L63.2154 166.502H63.2158C64.5749 166.502 65.8783 167.042 66.8394 168.003C67.8004 168.964 68.3404 170.267 68.3405 171.627V171.793L55.1741 171.794L55.1738 166.502Z\",\n    fill: \"#394747\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.0514 167.835L81.1349 167.835L83.0775 152.085L77.0508 152.085L77.0514 167.835Z\",\n    fill: \"#CC9292\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.0098 166.502L84.0514 166.502H84.0517C85.4108 166.502 86.7143 167.042 87.6753 168.003C88.6364 168.964 89.1763 170.267 89.1764 171.627V171.793L76.01 171.794L76.0098 166.502Z\",\n    fill: \"#394747\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M79.7782 86.1436L81.8507 90.6055L85.5871 130.509L82.6827 164.807H75.8897L67.874 110.746L64.109 163.562L54.9432 163.192L53.1836 91.5847L79.7782 86.1436Z\",\n    fill: \"#394747\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.7509 49.3201L55.3434 45.8242L67.4714 46.5044L78.2535 50.4336L81.8508 90.6057C72.4707 95.7278 62.969 97.1259 53.3019 93.4633L44.3301 67.2982L46.7509 49.3201Z\",\n    fill: \"#7B8485\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74.9006 51.4953L78.7137 50.4332C78.7137 50.4332 81.5977 48.558 82.5466 54.1324C83.4955 59.7068 88.3781 68.3775 88.3781 68.3775L96.7364 63.923L100.606 72.374L87.4064 80.3698L73.5059 66.3638L74.9006 51.4953Z\",\n    fill: \"#7B8485\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.9847 38.381C53.5216 37.3302 53.2701 36.1986 53.2444 35.0507C53.2187 33.9027 53.4193 32.761 53.8349 31.6906C54.2504 30.6202 54.8727 29.6421 55.6662 28.8123C56.4597 27.9824 57.409 27.3169 58.4597 26.8538C59.5104 26.3908 60.642 26.1392 61.79 26.1135C62.9379 26.0878 64.0796 26.2885 65.15 26.704C66.2204 27.1195 67.1985 27.7418 68.0284 28.5354C68.8583 29.3289 69.5237 30.2781 69.9868 31.3288L70.0368 31.4445C70.9568 33.5736 70.9934 35.9809 70.1384 38.137C69.7151 39.2045 69.0857 40.1782 68.286 41.0025C67.4864 41.8268 66.5322 42.4856 65.478 42.9411C63.3489 43.8612 60.9416 43.8977 58.7856 43.0428C56.6295 42.1879 54.9014 40.5114 53.9814 38.3824L53.9847 38.381Z\",\n    fill: \"#CC9292\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.8546 30.3793C67.6726 30.7092 70.4862 31.8538 72.0476 30.511C71.2765 29.6099 70.3065 28.9004 69.2142 28.4384C68.999 28.3671 68.7998 28.2545 68.6277 28.107C68.0953 27.569 68.5066 26.642 68.263 25.9146C68.1447 25.6488 67.9663 25.4141 67.7419 25.229C67.5174 25.0439 67.253 24.9135 66.9695 24.848C66.4276 24.6859 65.8597 24.6595 65.3273 24.4629C64.0674 23.9894 63.1717 22.6344 61.8803 22.2661C60.7552 21.9407 59.623 22.4465 58.6519 23.0368C57.6809 23.6271 56.7202 24.3274 55.5842 24.4395C54.7353 24.5169 54.1979 25.9133 53.3456 25.9542C51.5596 26.0411 51.6588 24.8639 51.5267 26.7402C51.4505 27.8598 49.8507 30.0871 49.8767 31.2165C49.9031 31.9565 49.7722 32.6894 49.7933 33.4318C49.8414 34.8455 50.4084 36.1921 51.3862 37.2143C52.1993 38.0505 53.2568 38.6145 53.9413 39.5676C54.2972 40.0735 54.5441 40.6642 54.9585 41.122C55.3728 41.5798 56.0746 41.8553 56.5371 41.5285C56.9995 41.2016 57.0081 40.4943 57.2376 39.956C57.3783 39.626 57.6187 39.3482 57.9252 39.1617C58.2316 38.9751 58.5887 38.8891 58.9465 38.9157C59.3181 38.9642 59.6688 39.1155 59.9591 39.3525C60.2494 39.5895 60.4678 39.9028 60.5898 40.2572C60.3732 39.0676 59.8023 37.9531 59.5854 36.7626C59.3684 35.5722 59.6512 34.1501 60.6762 33.6853C61.1164 33.4805 61.7109 33.4255 61.8878 32.9536C61.9961 32.6693 61.897 32.3334 61.9388 32.026C62.164 30.5194 64.6691 30.1467 65.8546 30.3793Z\",\n    fill: \"#394747\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.3341 92.9994C54.2557 92.4679 54.0618 91.9601 53.7659 91.5117C53.4701 91.0633 53.0795 90.6852 52.6217 90.404C52.164 90.1229 51.6501 89.9456 51.1164 89.8845C50.5827 89.8234 50.0421 89.8802 49.5326 90.0506L41.5581 79.71L39.3535 86.1277L47.2642 94.9635C47.6073 95.8003 48.2455 96.4822 49.0578 96.88C49.8701 97.2777 50.8001 97.3637 51.6715 97.1216C52.543 96.8795 53.2953 96.3262 53.7861 95.5664C54.2768 94.8066 54.4718 93.8933 54.3341 92.9994V92.9994Z\",\n    fill: \"#CC9292\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.5054 51.2702L46.751 49.3199C46.751 49.3199 40.4496 48.9589 39.5329 54.1326L27.9785 73.1401L42.3045 92.9041L49.2502 85.5927L40.4863 75.3512L47.8445 61.8409L49.5054 51.2702Z\",\n    fill: \"#7B8485\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M116.612 54.2819H116.467V50.3233C116.467 50.0225 116.408 49.7245 116.293 49.4466C116.178 49.1686 116.009 48.916 115.796 48.7033C115.583 48.4905 115.331 48.3218 115.053 48.2066C114.775 48.0915 114.477 48.0322 114.176 48.0322H105.789C105.488 48.0322 105.19 48.0915 104.912 48.2066C104.634 48.3218 104.382 48.4905 104.169 48.7033C103.956 48.916 103.788 49.1686 103.672 49.4466C103.557 49.7245 103.498 50.0225 103.498 50.3233V72.0404C103.498 72.3413 103.557 72.6392 103.672 72.9172C103.788 73.1951 103.956 73.4477 104.169 73.6604C104.382 73.8732 104.634 74.042 104.912 74.1571C105.19 74.2722 105.488 74.3315 105.789 74.3315H114.176C114.477 74.3315 114.775 74.2722 115.053 74.1571C115.331 74.042 115.583 73.8732 115.796 73.6604C116.009 73.4477 116.178 73.1951 116.293 72.9172C116.408 72.6392 116.467 72.3413 116.467 72.0404V57.0997H116.612V54.2819Z\",\n    fill: \"#394747\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M114.269 48.6279H113.174C113.225 48.7514 113.244 48.8853 113.23 49.0179C113.217 49.1505 113.171 49.2777 113.096 49.3884C113.022 49.499 112.921 49.5896 112.804 49.6523C112.686 49.715 112.555 49.7478 112.422 49.7478H107.617C107.484 49.7478 107.352 49.715 107.235 49.6523C107.117 49.5896 107.017 49.499 106.942 49.3883C106.868 49.2777 106.822 49.1505 106.808 49.0179C106.795 48.8853 106.814 48.7514 106.864 48.6279H105.842C105.388 48.6279 104.953 48.8082 104.632 49.1291C104.311 49.4499 104.131 49.8851 104.131 50.3389V72.0241C104.131 72.4779 104.311 72.9131 104.632 73.2339C104.953 73.5548 105.388 73.7351 105.842 73.7351H114.269C114.723 73.7351 115.158 73.5548 115.479 73.2339C115.8 72.9131 115.98 72.4779 115.98 72.0241V50.3389C115.98 49.8851 115.8 49.4499 115.479 49.1291C115.158 48.8082 114.723 48.6279 114.269 48.6279Z\",\n    fill: \"#42E6EB\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.532 172H0.338358C0.25121 172 0.167631 171.965 0.106008 171.904C0.0443849 171.842 0.00976562 171.759 0.00976562 171.671C0.00976562 171.584 0.0443849 171.501 0.106008 171.439C0.167631 171.377 0.25121 171.343 0.338358 171.343H125.532C125.619 171.343 125.703 171.377 125.765 171.439C125.826 171.501 125.861 171.584 125.861 171.671C125.861 171.759 125.826 171.842 125.765 171.904C125.703 171.965 125.619 172 125.532 172Z\",\n    fill: \"#4F5B5C\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 212.24,\n    y: 51.25,\n    width: 63.5,\n    height: 40.5,\n    fill: \"#394747\",\n    stroke: \"#42E6EB\",\n    strokeWidth: 0.5\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 223.99,\n    y: 58,\n    width: 40,\n    height: 3,\n    fill: \"#7B8485\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 223.99,\n    y: 67,\n    width: 40,\n    height: 3,\n    fill: \"#7B8485\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 257.99,\n    cy: 81,\n    r: 6,\n    fill: \"#42E6EB\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.241 80.7758V79.21H259.38V78.6406H258.241V78H257.672V78.6406H257.529C256.903 78.6406 256.391 79.153 256.391 79.7793V80.2064C256.391 80.8398 256.903 81.3452 257.529 81.3452H257.672V82.911H256.533V83.4804H257.672V84.121H258.241V83.4804H258.383C259.01 83.4804 259.522 82.9751 259.522 82.3416V81.9146C259.522 81.2882 259.01 80.7758 258.383 80.7758H258.241ZM257.529 80.7758C257.216 80.7758 256.96 80.5267 256.96 80.2064V79.7793C256.96 79.4662 257.216 79.21 257.529 79.21H257.672V80.7758H257.529ZM258.241 82.911V81.3452H258.383C258.697 81.3452 258.953 81.6014 258.953 81.9146V82.3416C258.953 82.6619 258.697 82.911 258.383 82.911H258.241Z\",\n    fill: \"#233333\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 170.24,\n    y: 26.25,\n    width: 63.5,\n    height: 40.5,\n    fill: \"#394747\",\n    stroke: \"#42E6EB\",\n    strokeWidth: 0.5\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 181.99,\n    y: 33,\n    width: 40,\n    height: 3,\n    fill: \"#7B8485\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 181.99,\n    y: 42,\n    width: 40,\n    height: 3,\n    fill: \"#7B8485\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 215.99,\n    cy: 56,\n    r: 6,\n    fill: \"#42E6EB\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M216.241 55.7758V54.21H217.38V53.6406H216.241V53H215.672V53.6406H215.529C214.903 53.6406 214.391 54.153 214.391 54.7793V55.2064C214.391 55.8398 214.903 56.3452 215.529 56.3452H215.672V57.911H214.533V58.4804H215.672V59.121H216.241V58.4804H216.383C217.01 58.4804 217.522 57.9751 217.522 57.3416V56.9146C217.522 56.2882 217.01 55.7758 216.383 55.7758H216.241ZM215.529 55.7758C215.216 55.7758 214.96 55.5267 214.96 55.2064V54.7793C214.96 54.4662 215.216 54.21 215.529 54.21H215.672V55.7758H215.529ZM216.241 57.911V56.3452H216.383C216.697 56.3452 216.953 56.6014 216.953 56.9146V57.3416C216.953 57.6619 216.697 57.911 216.383 57.911H216.241Z\",\n    fill: \"#233333\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 127.24,\n    y: 0.25,\n    width: 63.5,\n    height: 40.5,\n    fill: \"#394747\",\n    stroke: \"#42E6EB\",\n    strokeWidth: 0.5\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 138.99,\n    y: 7,\n    width: 40,\n    height: 3,\n    fill: \"#7B8485\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 138.99,\n    y: 16,\n    width: 40,\n    height: 3,\n    fill: \"#7B8485\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 172.99,\n    cy: 30,\n    r: 6,\n    fill: \"#42E6EB\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.241 29.7758V28.21H174.38V27.6406H173.241V27H172.672V27.6406H172.529C171.903 27.6406 171.391 28.153 171.391 28.7793V29.2064C171.391 29.8398 171.903 30.3452 172.529 30.3452H172.672V31.911H171.533V32.4804H172.672V33.121H173.241V32.4804H173.383C174.01 32.4804 174.522 31.9751 174.522 31.3416V30.9146C174.522 30.2882 174.01 29.7758 173.383 29.7758H173.241ZM172.529 29.7758C172.216 29.7758 171.96 29.5267 171.96 29.2064V28.7793C171.96 28.4662 172.216 28.21 172.529 28.21H172.672V29.7758H172.529ZM173.241 31.911V30.3452H173.383C173.697 30.3452 173.953 30.6014 173.953 30.9146V31.3416C173.953 31.6619 173.697 31.911 173.383 31.911H173.241Z\",\n    fill: \"#233333\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRedeem);\nexport default __webpack_public_path__ + \"static/media/redeem.7e0fa96ccc80d536f7730bb34ab5753b.svg\";\nexport { ForwardRef as ReactComponent };","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\n/**\n * Get token decimals from multiple resources. This hook needs MintProvider for work.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintDecimals = (mintAddress: string) => {\n  const [decimals, setDecimals] = useState<number | undefined>(undefined)\n  const { getDecimals } = useMint()\n\n  const fetchDecimals = useCallback(async () => {\n    try {\n      const decimals = await getDecimals(mintAddress)\n      return setDecimals(decimals)\n    } catch (er: any) {\n      return setDecimals(undefined)\n    }\n  }, [mintAddress, getDecimals])\n\n  useEffect(() => {\n    fetchDecimals()\n  }, [fetchDecimals])\n\n  return decimals\n}\n\nexport default useMintDecimals\n","import { ReactNode, useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nimport { Avatar } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst DEFAULT_AVATARS: Array<string | undefined> = [undefined]\n\nexport type MintAvatarProps = {\n  mintAddress: string\n  size?: number\n  icon?: ReactNode\n  reversed?: boolean\n}\n\n/**\n * Mint/Token avatar, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param size - Avatar size. Default 24px.\n * @param icon - Fallback icon for unknown token\n * @param reversed - (Optional) The default LP token avatar is A-B. The reversed is to change it to B-A\n * @returns name\n */\nconst MintAvatar = ({\n  mintAddress,\n  size = 24,\n  icon = <IonIcon name=\"diamond-outline\" />,\n  reversed = false,\n  ...props\n}: MintAvatarProps) => {\n  const [avatars, setAvatars] = useState(DEFAULT_AVATARS)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveAvatar = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.logoURI) return token.logoURI\n      return undefined\n    },\n    [tokenProvider],\n  )\n\n  const deriveAvatars = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setAvatars(DEFAULT_AVATARS)\n    // LP mint\n    const poolData = Object.values(pools).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const avatars = await Promise.all([mint_a, mint_b].map(deriveAvatar))\n      if (reversed) avatars.reverse()\n      return setAvatars(avatars)\n    }\n    // Normal mint\n    const avatar = await deriveAvatar(mintAddress)\n    return setAvatars([avatar])\n  }, [mintAddress, reversed, deriveAvatar, pools])\n\n  useEffect(() => {\n    deriveAvatars()\n  }, [deriveAvatars])\n\n  if (avatars.length === 1)\n    return (\n      <Avatar\n        src={avatars[0]}\n        size={size}\n        style={{ backgroundColor: '#2D3355', border: 'none' }}\n        {...props}\n      >\n        {icon}\n      </Avatar>\n    )\n  return (\n    <Avatar.Group style={{ display: 'block', whiteSpace: 'nowrap' }} {...props}>\n      {avatars.map((avatar, i) => (\n        <Avatar\n          key={i}\n          src={avatar}\n          size={size}\n          style={{ backgroundColor: '#2D3355', border: 'none' }}\n        >\n          {icon}\n        </Avatar>\n      ))}\n    </Avatar.Group>\n  )\n}\n\nexport default MintAvatar\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nconst DEFAULT_SYMBOL = 'TOKN'\n\n/**\n * Mint/Token symbol, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param separator - (Optional) In case of LP tokens, the symbols is combined by 2 token symbols. The separator is to separate them.\n * @param reversed - (Optional) The default LP token symbol is A-B. The reversed is to change it to B-A\n * @returns symbol\n */\nconst MintSymbol = ({\n  mintAddress,\n  separator = ' • ',\n  reversed = false,\n}: {\n  mintAddress: string\n  separator?: string\n  reversed?: boolean\n}) => {\n  const [symbol, setSymbol] = useState(DEFAULT_SYMBOL)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveSymbol = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.symbol) return token.symbol\n      return address.substring(0, 4)\n    },\n    [tokenProvider],\n  )\n\n  const deriveSymbols = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setSymbol(DEFAULT_SYMBOL)\n    // LP mint\n    const poolData = Object.values(pools).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const symbols = await Promise.all([mint_a, mint_b].map(deriveSymbol))\n      if (reversed) symbols.reverse()\n      return setSymbol(symbols.join(separator))\n    }\n    // Normal mint\n    const symbol = await deriveSymbol(mintAddress)\n    return setSymbol(symbol)\n  }, [mintAddress, reversed, deriveSymbol, pools, separator])\n\n  useEffect(() => {\n    deriveSymbols()\n  }, [deriveSymbols])\n\n  return <span>{symbol}</span>\n}\n\nexport default MintSymbol\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net } from 'shared/runtime'\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  spltAddress: string\n  splataAddress: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    node: 'https://api.devnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    node: 'https://api.testnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    node: 'https://api.mainnet-beta.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from 'shared/runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { useCallback, useMemo } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const useAppRouter = () => {\n  const location = useLocation()\n  const history = useHistory()\n\n  const query = useMemo(() => {\n    return new URLSearchParams(location.search)\n  }, [location.search])\n\n  const getQuery = useCallback((queryId: string) => query.get(queryId), [query])\n\n  const generateQuery = useCallback((dataQuery: Record<string, any>) => {\n    const newQuery = new URLSearchParams()\n    for (const key in dataQuery) {\n      newQuery.set(key, dataQuery[key])\n    }\n    return newQuery.toString()\n  }, [])\n\n  const appRoute = useMemo(() => `/app/${appId}`, [])\n\n  const pushHistory = useCallback(\n    (url: string) => history.push(`${appRoute}${url}`),\n    [appRoute, history],\n  )\n\n  return { getQuery, generateQuery, pushHistory, appRoute }\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account, utils } from '@senswap/sen-js'\nimport { useWallet } from '@senhub/providers'\nimport { PublicKey } from '@solana/web3.js'\nimport { u64 } from '@saberhq/token-utils'\nimport { MerkleDistributorWrapper } from '@saberhq/merkle-distributor'\n\nimport { Modal, Image, Space, Typography, Row, Col, Button } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { ClaimProof } from 'app/helper'\nimport { notifySuccess, notifyError } from 'app/helper'\nimport { AppDispatch } from 'app/model'\nimport { setVisible } from 'app/model/main.controller'\nimport useMerkleSDK from 'app/hooks/useMerkleSDK'\n\nimport REDEEM from 'app/static/images/redeem.svg'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { MintSymbol } from 'shared/antd/mint'\nimport { useAppRouter } from 'app/hooks/useAppRoute'\n\nconst ModalRedeem = ({\n  visible,\n  claimProof,\n}: {\n  visible: boolean\n  claimProof?: ClaimProof\n}) => {\n  const [loading, setLoading] = useState(false)\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const sdk = useMerkleSDK()\n  const { pushHistory } = useAppRouter()\n  const mintDecimals = useMintDecimals(claimProof?.mintAddress || '') || 0\n\n  const fetchDistributor = useCallback(\n    async (distributorAddr: string) => {\n      if (!sdk) return\n\n      const publicKey = account.fromAddress(distributorAddr)\n      const distributorW = await MerkleDistributorWrapper.load(sdk, publicKey)\n\n      return distributorW\n    },\n    [sdk],\n  )\n\n  const bufferProof: Buffer[] = useMemo(() => {\n    const buffProof: Buffer[] = []\n\n    if (!claimProof?.proof) return buffProof\n    const { proof } = claimProof\n\n    proof.forEach(({ data }: any) => {\n      buffProof.push(Buffer.from(data))\n    })\n\n    return buffProof\n  }, [claimProof])\n\n  const onClaim = useCallback(async () => {\n    if (!claimProof || !claimProof.distributorInfo) return\n    setLoading(true)\n\n    const {\n      index,\n      amount,\n      claimant,\n      distributorInfo: { distributor: distributorAddr },\n    } = claimProof\n\n    const distributor = await fetchDistributor(distributorAddr)\n\n    if (\n      claimant !== walletAddress ||\n      !account.isAddress(distributorAddr) ||\n      !distributor\n    )\n      return window.notify({ type: 'warning', description: 'Invalid proof' })\n\n    try {\n      const { isClaimed } = await distributor.getClaimStatus(new u64(index))\n      if (isClaimed) {\n        return window.notify({\n          type: 'error',\n          description: 'Tokens has been redeemed',\n        })\n      }\n    } catch (err) {\n    } finally {\n      setLoading(false)\n      pushHistory('')\n      dispatch(setVisible(false))\n    }\n\n    try {\n      const tx = await distributor.claim({\n        index: new u64(index),\n        amount: new u64(amount),\n        proof: bufferProof,\n        claimant: new PublicKey(walletAddress),\n      })\n      const {\n        signature,\n        response: { meta },\n      } = await tx.confirm()\n\n      if (meta?.err) return notifyError('Something went wrong')\n\n      return notifySuccess('Claim successfully', signature)\n    } catch (err) {\n      notifyError(err)\n    } finally {\n      setLoading(false)\n      pushHistory('')\n      return dispatch(setVisible(false))\n    }\n  }, [\n    bufferProof,\n    claimProof,\n    dispatch,\n    fetchDistributor,\n    pushHistory,\n    walletAddress,\n  ])\n\n  return (\n    <Modal\n      visible={visible}\n      closeIcon={<IonIcon name=\"close-outline\" />}\n      onCancel={() => dispatch(setVisible(false))}\n      footer={null}\n      className=\"card-lightning\"\n      style={{ paddingBottom: 0 }}\n    >\n      <Row gutter={[32, 32]} style={{ textAlign: 'center' }}>\n        <Col span={24}>\n          <Image src={REDEEM} preview={false} />\n        </Col>\n        <Col span={24}>\n          <Space direction=\"vertical\" size={4}>\n            <Typography.Title level={3}>Redemption!</Typography.Title>\n            <Space size={4}>\n              <Typography.Text type=\"secondary\">Let's take</Typography.Text>{' '}\n              <Typography.Title level={5} style={{ color: '#42E6EB' }}>\n                {utils.undecimalize(\n                  BigInt(claimProof?.amount || 0),\n                  mintDecimals,\n                )}{' '}\n                <MintSymbol mintAddress={claimProof?.mintAddress || ''} />\n              </Typography.Title>\n            </Space>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Button type=\"primary\" onClick={onClaim} loading={loading}>\n            Redeem\n          </Button>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default ModalRedeem\n","export enum SelectMethod {\n  auto = 1,\n  manual = 2,\n}\n\nexport enum Step {\n  one = 1,\n  two = 2,\n  three = 3,\n}\n\nexport enum CollapseAddNew {\n  activeKey = 'collapse-upload-csv',\n}\n\nexport type History = {\n  time: string\n  mint: string\n  total: string | number\n  cid: string\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { Step } from 'app/constants'\n\n/**\n * Interface & Utility\n */\n\nexport type StepState = {\n  step: number\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'steps'\nconst initialState: StepState = {\n  step: Step.one,\n}\n\n/**\n * Actions\n */\n\nexport const onSelectStep = createAsyncThunk(\n  `${NAME}/onSelectStep`,\n  async (step: number) => {\n    return { step }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      onSelectStep.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type RecipientInfo = [string, string]\n\nexport type RecipientInfos = Array<RecipientInfo>\n\nexport type RecipientState = {\n  recipients: RecipientInfos\n  errorData: RecipientInfos\n}\n/**\n * Store constructor\n */\n\nconst NAME = 'recipients'\nconst initialState: RecipientState = {\n  recipients: [],\n  errorData: [],\n}\n\n/**\n * Actions\n */\nexport const addRecipients = createAsyncThunk<\n  Partial<RecipientState>,\n  { recipients: RecipientInfos }\n>(`${NAME}/addRecipients`, async ({ recipients }) => {\n  return { recipients }\n})\n\nexport const addRecipient = createAsyncThunk<\n  Partial<RecipientState>,\n  { recipient: RecipientInfo },\n  { state: any }\n>(`${NAME}/addRecipient`, async ({ recipient }, { getState }) => {\n  const {\n    recipients: { recipients },\n  } = getState()\n\n  const newRecipients = [...recipients]\n  newRecipients.push(recipient)\n\n  return { recipients: newRecipients }\n})\n\nexport const removeRecipients = createAsyncThunk(\n  `${NAME}/removeRecipients`,\n  async () => {\n    return { recipients: [] }\n  },\n)\n\nexport const removeRecipient = createAsyncThunk<\n  Partial<RecipientState>,\n  { recipient: RecipientInfo },\n  { state: any }\n>(`${NAME}/removeRecipient`, async ({ recipient }, { getState }) => {\n  const {\n    recipients: { recipients },\n  } = getState()\n  const newRecipients = [...recipients]\n  const index = newRecipients.indexOf(recipient)\n  if (index > -1) newRecipients.splice(index, 1)\n  return { recipients: newRecipients }\n})\n\nexport const setErrorData = createAsyncThunk<\n  Partial<RecipientState>,\n  { errorData: RecipientInfos }\n>(`${NAME}/setErrorDatas`, async ({ errorData }) => {\n  return { errorData }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        addRecipients.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        addRecipient.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        removeRecipients.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setErrorData.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n\n      .addCase(\n        removeRecipient.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { account } from '@senswap/sen-js'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\n\nconst useValidateAmount = () => {\n  const {\n    recipients: { recipients },\n    setting: { decimal },\n  } = useSelector((state: AppState) => state)\n\n  const isError = useMemo(() => {\n    for (const [address, amount] of recipients) {\n      if (!account.isAddress(address)) return true\n      if (!decimal && Number(amount) % 1 !== 0) return true\n    }\n    return false\n  }, [decimal, recipients])\n\n  return { isError }\n}\n\nexport default useValidateAmount\n","import { account } from '@senswap/sen-js'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Col, Row } from 'antd'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { onSelectStep } from 'app/model/steps.controller'\nimport { Step } from 'app/constants'\nimport { onSelectMethod } from 'app/model/main.controller'\nimport { removeRecipients } from 'app/model/recipients.controller'\nimport useValidateAmount from 'app/hooks/useValidateAmount'\n\nconst Action = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    recipients: { recipients, errorData },\n  } = useSelector((state: AppState) => state)\n  const { isError } = useValidateAmount()\n\n  const existedValidData = useMemo(() => {\n    if (!errorData) return false\n    for (const [address, amount] of errorData) {\n      if (!account.isAddress(address) || !amount) return true\n    }\n    return false\n  }, [errorData])\n\n  const disabled = useMemo(() => {\n    if (!recipients.length || isError || existedValidData) return true\n    return false\n  }, [existedValidData, isError, recipients.length])\n\n  const onBack = useCallback(async () => {\n    await dispatch(onSelectMethod())\n    dispatch(removeRecipients())\n    dispatch(onSelectStep(Step.one))\n  }, [dispatch])\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={12}>\n        <Button type=\"ghost\" size=\"large\" onClick={onBack} block>\n          Back\n        </Button>\n      </Col>\n      <Col span={12}>\n        <Button\n          size=\"large\"\n          onClick={() => dispatch(onSelectStep(Step.three))}\n          type=\"primary\"\n          disabled={disabled}\n          block\n        >\n          Continue\n        </Button>\n      </Col>\n    </Row>\n  )\n}\nexport default Action\n","import { Button, Col, Modal, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\ntype ModalProps = {\n  visible: boolean\n  setVisible: (visible: boolean) => void\n  title: string\n  description: string\n  onConfirm: () => void\n  onCancel: () => void\n  btnText: string\n}\n\nconst CommonModal = ({\n  visible,\n  setVisible,\n  title,\n  description,\n  onConfirm,\n  onCancel,\n  btnText,\n}: ModalProps) => {\n  return (\n    <Modal\n      visible={visible}\n      closeIcon={<IonIcon name=\"close-outline\" />}\n      onCancel={() => setVisible(false)}\n      footer={null}\n      className=\"card-lightning\"\n      style={{ paddingBottom: 0 }}\n    >\n      <Row gutter={[32, 32]}>\n        <Col span={24}>\n          <Space size={15} align=\"baseline\">\n            <IonIcon\n              name=\"alert-circle-outline\"\n              style={{ color: '#FA8C16', fontSize: 18 }}\n            />\n            <Space size={4} direction=\"vertical\">\n              <Typography.Text>{title}</Typography.Text>\n              <Typography.Text type=\"secondary\">{description}</Typography.Text>\n            </Space>\n          </Space>\n        </Col>\n\n        <Col span={24} style={{ textAlign: 'right' }}>\n          <Space>\n            <Button onClick={onCancel} type=\"ghost\">\n              cancel\n            </Button>\n            <Button onClick={onConfirm} type=\"primary\">\n              {btnText}\n            </Button>\n          </Space>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default CommonModal\n","import { ChangeEvent, useState, forwardRef, useCallback, useRef } from 'react'\n\nimport { Input, Tooltip, Space, InputProps } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nlet timeoutId: ReturnType<typeof setTimeout> | undefined\n\n/**\n * Numeric Input\n * - Check balance based on the max\n * - Only accept numeric characters\n * @remarks The props of input follows the same as https://ant.design/components/input/#API. Extra & Overrided props\n * @param max - Maximum\n * @param onValue - A triggerred function if a valid number\n */\nconst NumericInput = forwardRef(\n  (\n    {\n      max,\n      onValue = () => {},\n      onChange = () => {},\n      ...props\n    }: InputProps & {\n      onValue?: (val: string) => void\n      max?: string | number\n    },\n    ref: any,\n  ) => {\n    const [error, setError] = useState('')\n    const [cursor, setCursor] = useState<number | null>(null)\n    const innerRef = useRef(ref)\n\n    // Handle amount\n    const onAmount = useCallback(\n      (val: string) => {\n        const onError = (er: string) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId)\n            timeoutId = undefined\n          }\n          setError(er)\n          timeoutId = setTimeout(() => setError(''), 500)\n        }\n        const reg = /^\\d*(\\.\\d*)?$/\n        if (!reg.test(val)) return onError('Invalid character')\n        if (max && parseFloat(val) > parseFloat(max.toString()))\n          return onError('Not enough balance')\n        return onValue(val)\n      },\n      [max, onValue],\n    )\n\n    // Handle cursor jumping\n    // To prevent autofocus on mobile, we must strictly check cursor different from null\n    if (cursor !== null) innerRef?.current?.setSelectionRange(cursor, cursor)\n\n    return (\n      <Tooltip\n        title={\n          <Space>\n            <IonIcon name=\"warning\" />\n            {error}\n          </Space>\n        }\n        visible={!!error}\n      >\n        <Input\n          {...props}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            onChange(e)\n            setCursor(e.target.selectionStart)\n            onAmount(e.target.value || '')\n          }}\n          ref={innerRef}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nexport default NumericInput\n","import { ChangeEvent, Fragment, useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account, utils } from '@senswap/sen-js'\n\nimport { Button, Checkbox, Col, Input, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ModalMerge from './commonModal'\n\nimport { AppState } from 'app/model'\nimport {\n  addRecipient,\n  addRecipients,\n  RecipientInfo,\n  RecipientInfos,\n  removeRecipient,\n} from 'app/model/recipients.controller'\nimport { onSelectedFile } from 'app/model/main.controller'\nimport NumericInput from 'shared/antd/numericInput'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\ntype InputInfoTransferProps = {\n  walletAddress?: string\n  amount?: string\n  index?: number\n  isSelect?: boolean\n}\n\nconst DEFAULT_RECIPIENT = {\n  walletAddress: '',\n  amount: '',\n}\n\nconst ActionButton = ({\n  walletAddress,\n  addNewRecipient,\n  remove,\n}: {\n  walletAddress?: string\n  addNewRecipient: () => void\n  remove: () => void\n}) => {\n  return (\n    <Fragment>\n      {walletAddress ? (\n        <Button\n          type=\"text\"\n          size=\"small\"\n          style={{ padding: 0 }}\n          onClick={remove}\n          icon={<IonIcon style={{ fonSize: 20 }} name=\"trash-outline\" />}\n        />\n      ) : (\n        <Button\n          type=\"text\"\n          size=\"small\"\n          style={{ padding: 0, color: '#42E6EB' }}\n          onClick={addNewRecipient}\n        >\n          OK\n        </Button>\n      )}\n    </Fragment>\n  )\n}\n\nconst InputInfoTransfer = ({\n  walletAddress,\n  amount,\n  index,\n  isSelect = false,\n}: InputInfoTransferProps) => {\n  const [formInput, setRecipient] = useState(DEFAULT_RECIPIENT)\n  const [amountError, setAmountError] = useState('')\n  const [walletError, setWalletError] = useState('')\n  const [visible, setVisible] = useState(false)\n\n  const {\n    main: { selectedFile, mintSelected },\n    recipients: { recipients },\n    setting: { decimal },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch()\n  const mintDecimals = useMintDecimals(mintSelected) || 0\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setRecipient({ ...formInput, [e.target.name]: e.target.value })\n  }\n\n  const onAmount = (val: string) => setRecipient({ ...formInput, amount: val })\n\n  const onSelected = (checked: boolean, index?: number) =>\n    dispatch(onSelectedFile({ checked, index }))\n\n  const recipientInfo = useCallback(async () => {\n    if (account.isAddress(walletAddress) && amount) {\n      return setRecipient({ walletAddress, amount })\n    }\n    return setRecipient(DEFAULT_RECIPIENT)\n  }, [walletAddress, amount])\n\n  const addNewRecipient = async () => {\n    const { walletAddress, amount } = formInput\n\n    if (!account.isAddress(walletAddress))\n      return setWalletError('Wrong wallet address')\n\n    for (const [address] of recipients) {\n      if (walletAddress === address) return setVisible(true)\n    }\n\n    const recipient: RecipientInfo = [walletAddress, amount]\n    setWalletError('')\n    await dispatch(addRecipient({ recipient }))\n    return setRecipient(DEFAULT_RECIPIENT)\n  }\n\n  const onMerge = async () => {\n    const { walletAddress, amount } = formInput\n    const recipient = recipients.find(([address]) => address === walletAddress)\n    if (!recipient || !mintDecimals) return\n\n    const newAmount =\n      utils.decimalize(recipient[1], mintDecimals) +\n      utils.decimalize(amount, mintDecimals)\n\n    const nextRecipient: RecipientInfo = [\n      walletAddress,\n      utils.undecimalize(newAmount, mintDecimals),\n    ]\n\n    await dispatch(removeRecipient({ recipient }))\n    await dispatch(addRecipient({ recipient: nextRecipient }))\n    await setVisible(false)\n    if (amountError || walletError) {\n      setAmountError('')\n      setWalletError('')\n    }\n    return setRecipient(DEFAULT_RECIPIENT)\n  }\n\n  const remove = () => {\n    if (index === undefined) return\n    const nextData: RecipientInfos = [...recipients]\n    nextData.splice(index, 1)\n    return dispatch(addRecipients({ recipients: nextData }))\n  }\n\n  const validateAmount = useCallback(() => {\n    if (!amount) return\n    if (decimal) return setAmountError('')\n    if (Number(amount) % 1 !== 0)\n      return setAmountError('Should be natural numbers')\n  }, [amount, decimal])\n\n  const disabledInput = walletAddress ? true : false\n\n  useEffect(() => {\n    recipientInfo()\n  }, [recipientInfo])\n\n  useEffect(() => {\n    validateAmount()\n  }, [validateAmount])\n\n  return (\n    <Row gutter={[8, 8]} align=\"middle\" justify=\"space-between\">\n      {isSelect && (\n        <Col>\n          <Checkbox\n            checked={selectedFile?.includes(index as number)}\n            onChange={(e) => onSelected(e.target.checked, index)}\n          />\n        </Col>\n      )}\n      <Col span={16}>\n        <Input\n          disabled={disabledInput}\n          value={formInput.walletAddress}\n          name=\"walletAddress\"\n          placeholder=\"Wallet address\"\n          onChange={onChange}\n          className=\"recipient-input\"\n          autoComplete=\"off\"\n        />\n      </Col>\n      <Col span={6}>\n        <NumericInput\n          disabled={disabledInput}\n          value={amount ? amount : formInput.amount}\n          name=\"amount\"\n          placeholder=\"Amount\"\n          onValue={onAmount}\n          className={amountError ? 'recipient-input-error' : 'recipient-input'}\n          autoComplete=\"off\"\n        />\n      </Col>\n      {!isSelect && (\n        <Col>\n          <ActionButton\n            addNewRecipient={addNewRecipient}\n            walletAddress={walletAddress}\n            remove={remove}\n          />\n        </Col>\n      )}\n      {(walletError || amountError) && (\n        <Col span={24}>\n          <Space>\n            <IonIcon style={{ color: '#f2323f' }} name=\"warning-outline\" />\n            <Typography.Text type=\"danger\">\n              {walletError || amountError}\n            </Typography.Text>\n          </Space>\n        </Col>\n      )}\n      <ModalMerge\n        title=\"Do you want to merge wallet addresses?\"\n        description=\"There are some wallet addresses that are the same.\"\n        btnText=\"merge\"\n        onConfirm={onMerge}\n        visible={visible}\n        setVisible={setVisible}\n        onCancel={() => setVisible(false)}\n      />\n    </Row>\n  )\n}\n\nexport default InputInfoTransfer\n","import { useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account, utils } from '@senswap/sen-js'\n\nimport { AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { RecipientInfos } from 'app/model/recipients.controller'\n\nconst ADDRESS_INDEX = 0\nconst AMOUNT_INDEX = 1\n\nconst useTotal = () => {\n  const {\n    main: { mintSelected },\n    recipients: { recipients, errorData },\n    setting: { decimal: isDecimal },\n  } = useSelector((state: AppState) => state)\n  const mintDecimals = useMintDecimals(mintSelected) || 0\n\n  const calcTotalLamports = useCallback(\n    (recipientInfos: RecipientInfos) => {\n      if (!recipientInfos.length || !mintDecimals) return BigInt(0)\n      let lamports = BigInt(0)\n      for (const recipient of recipientInfos) {\n        const amount = recipient[AMOUNT_INDEX]\n        if (isDecimal) lamports += utils.decimalize(amount, mintDecimals)\n        else if (Number(amount) % 1 === 0) lamports += BigInt(amount)\n      }\n\n      return lamports\n    },\n    [isDecimal, mintDecimals],\n  )\n\n  const editedSuccessData = errorData.filter(\n    (data) => !data.includes('') && account.isAddress(data[ADDRESS_INDEX]),\n  )\n  const recipientTotal = calcTotalLamports(recipients)\n  const editedDataTotal = calcTotalLamports(editedSuccessData)\n\n  const total = recipientTotal + editedDataTotal\n  const editedDataLength = editedSuccessData.length\n  const quantity = useMemo(() => recipients.length, [recipients])\n\n  return {\n    total: utils.undecimalize(total, mintDecimals).toString(),\n    quantity: quantity + editedDataLength,\n  }\n}\n\nexport default useTotal\n","import { useSelector } from 'react-redux'\n\nimport { Card, Col, Row, Space, Typography } from 'antd'\nimport { MintSymbol } from 'shared/antd/mint'\n\nimport { AppState } from 'app/model'\nimport useTotal from 'app/hooks/useTotal'\n\nconst Content = ({\n  label,\n  value,\n  mintAddress,\n}: {\n  label: string\n  value: number | string\n  mintAddress?: string\n}) => {\n  return (\n    <Row>\n      <Col flex=\"auto\">\n        <Typography.Text type=\"secondary\">{label}</Typography.Text>\n      </Col>\n      <Col>\n        {mintAddress ? (\n          <Space size={4}>\n            <Typography.Title level={5}>{value}</Typography.Title>\n            <Typography.Title level={5}>\n              <MintSymbol mintAddress={mintAddress} />\n            </Typography.Title>\n          </Space>\n        ) : (\n          <Typography.Text>{value}</Typography.Text>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport const WrapTotal = () => {\n  const {\n    main: { mintSelected },\n  } = useSelector((sate: AppState) => sate)\n  const { total, quantity } = useTotal()\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Content label=\"Quantity\" value={quantity} />\n      </Col>\n      <Col span={24}>\n        <Content label=\"Total\" value={total} mintAddress={mintSelected} />\n      </Col>\n    </Row>\n  )\n}\n\nconst CardTotal = () => {\n  return (\n    <Card\n      bordered={false}\n      style={{ borderRadius: 8, boxShadow: 'unset' }}\n      bodyStyle={{ padding: '12px 16px' }}\n      className=\"card-total\"\n    >\n      <WrapTotal />\n    </Card>\n  )\n}\n\nexport default CardTotal\n","import { Checkbox, Col, Row, Space, Typography } from 'antd'\nimport { AppState } from 'app/model'\nimport { useSelector } from 'react-redux'\n\ntype AccountInfoHeaderProps = {\n  selected?: boolean\n  onChecked?: (checked: boolean) => void\n}\n\nconst AccountInfoHeader = ({\n  selected = false,\n  onChecked = () => {},\n}: AccountInfoHeaderProps) => {\n  const {\n    recipients: { errorData },\n  } = useSelector((state: AppState) => state)\n\n  return (\n    <Row gutter={[16, 8]} align=\"middle\" wrap={false} justify=\"space-between\">\n      <Col span={3}>\n        <Space>\n          {selected && (\n            <Checkbox\n              className=\"lightning-checkbox\"\n              onChange={(e) => onChecked(e.target.checked)}\n            />\n          )}\n          <Typography.Text type=\"secondary\">No.</Typography.Text>\n        </Space>\n      </Col>\n      <Col span={12}>\n        <Typography.Text type=\"secondary\">Wallet address</Typography.Text>\n      </Col>\n      <Col span={6}>\n        <Typography.Text type=\"secondary\">Amount</Typography.Text>\n      </Col>\n      {!!errorData.length && <Col span={3} />}\n    </Row>\n  )\n}\n\nexport default AccountInfoHeader\n","import { forwardRef, useCallback, useMemo, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Col, Row, Space, Typography, Tooltip, Checkbox } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport { shortenAddress } from 'shared/util'\nimport { AppDispatch, AppState } from 'app/model'\nimport { setErrorData } from 'app/model/recipients.controller'\nimport { account } from '@senswap/sen-js'\n\ntype AccountInfoProps = {\n  accountAddress?: string\n  selected?: boolean\n  email?: string\n  amount?: number | string\n  index: number\n  onChecked?: (checked: boolean, index: number) => void\n}\n\ntype EditButtonProps = {\n  wrongAddress?: boolean\n  isEdited?: boolean\n  onEdited?: (isEdited: boolean) => void\n  onUpdate?: () => void\n  onDelete?: () => void\n}\n\ntype AlertIconProps = { editable?: boolean; wrongAddress?: boolean }\n\nconst AlertIcon = ({\n  editable = false,\n  wrongAddress = false,\n}: AlertIconProps) => {\n  if (wrongAddress)\n    return (\n      <Tooltip\n        title=\"Wrong wallet address!\"\n        placement=\"topLeft\"\n        arrowPointAtCenter\n      >\n        <IonIcon name=\"close-circle-outline\" style={{ color: '#d72311' }} />\n      </Tooltip>\n    )\n  if (editable)\n    return (\n      <Tooltip title=\"Invalid  amount!\" placement=\"topLeft\" arrowPointAtCenter>\n        <IonIcon name=\"warning-outline\" style={{ color: '#d72311' }} />\n      </Tooltip>\n    )\n  return <IonIcon name=\"checkmark-outline\" style={{ color: '#03A326' }} />\n}\n\nconst EditButton = ({\n  wrongAddress = false,\n  isEdited = false,\n  onEdited = () => {},\n  onUpdate = () => {},\n  onDelete = () => {},\n}: EditButtonProps) => {\n  if (wrongAddress)\n    return (\n      <Button\n        type=\"text\"\n        icon={<IonIcon name=\"trash-outline\" />}\n        onClick={onDelete}\n      />\n    )\n  if (!isEdited)\n    return (\n      <Button\n        type=\"text\"\n        icon={<IonIcon name=\"create-outline\" />}\n        onClick={() => onEdited(true)}\n      />\n    )\n  return (\n    <Button\n      type=\"text\"\n      icon={<IonIcon name=\"cloud-upload-outline\" />}\n      onClick={onUpdate}\n    />\n  )\n}\n\nconst AccountInfo = forwardRef(\n  (\n    {\n      accountAddress = '',\n      amount = 0,\n      selected = false,\n      onChecked = () => {},\n      index,\n    }: AccountInfoProps,\n    ref: any,\n  ) => {\n    const dispatch = useDispatch<AppDispatch>()\n    const [isEdited, setIsEdited] = useState(false)\n    const [nextAmount, setNextAmount] = useState('')\n    const {\n      recipients: { errorData, recipients },\n      main: { selectedFile },\n      setting: { decimal },\n    } = useSelector((state: AppState) => state)\n    const amountRef = useRef(ref)\n\n    const editable = !amount\n    const isValidAddress = !account.isAddress(accountAddress)\n    const amountValue = isEdited ? nextAmount : amount\n    const idxErrData = index - recipients.length\n\n    const onUpdate = useCallback(() => {\n      if (!errorData.length || index - errorData.length < 0) return\n      const nextErrorData = [...errorData]\n      const [[address]] = nextErrorData.splice(idxErrData, 1)\n      nextErrorData.unshift([address, nextAmount])\n      dispatch(setErrorData({ errorData: nextErrorData }))\n    }, [dispatch, errorData, idxErrData, index, nextAmount])\n\n    const onDelete = useCallback(async () => {\n      if (!errorData.length) return\n      const nextErrData = [...errorData]\n      nextErrData.splice(idxErrData, 1)\n      dispatch(setErrorData({ errorData: nextErrData }))\n    }, [dispatch, errorData, idxErrData])\n\n    const onEdit = (visible: boolean) => {\n      setIsEdited(visible)\n      if (amountRef.current) amountRef.current.focus()\n    }\n\n    const validateAmount = useMemo(() => {\n      if (!amountValue) return false\n      if (!decimal && Number(amount) % 1 !== 0) return true\n      return false\n    }, [amount, amountValue, decimal])\n\n    return (\n      <Row gutter={[16, 8]} align=\"middle\" justify=\"space-between\" wrap={false}>\n        <Col span={3}>\n          <Space>\n            {selected && (\n              <Checkbox\n                checked={selectedFile?.includes(index)}\n                onChange={(e) => onChecked(e.target.checked, index)}\n                className=\"lightning-checkbox\"\n              />\n            )}\n            <Typography.Text type=\"secondary\">#{index + 1}</Typography.Text>\n          </Space>\n        </Col>\n        <Col span={12}>\n          <Tooltip title={accountAddress}>\n            <Typography.Text style={{ color: isValidAddress ? '#F9575E' : '' }}>\n              {shortenAddress(accountAddress)}\n            </Typography.Text>\n          </Tooltip>\n        </Col>\n        <Col span={6}>\n          <NumericInput\n            value={amountValue}\n            bordered={isEdited}\n            onValue={setNextAmount}\n            disabled={!isEdited}\n            style={{ padding: 0 }}\n            className={\n              validateAmount ? 'recipient-input-error' : 'recipient-input-auto'\n            }\n            ref={amountRef}\n          />\n        </Col>\n        {!!errorData.length && (\n          <Col span={3}>\n            {editable && (\n              <Space align=\"center\">\n                <AlertIcon editable={editable} wrongAddress={isValidAddress} />\n                <EditButton\n                  isEdited={isEdited}\n                  wrongAddress={isValidAddress}\n                  onEdited={onEdit}\n                  onUpdate={onUpdate}\n                  onDelete={onDelete}\n                />\n              </Space>\n            )}\n          </Col>\n        )}\n      </Row>\n    )\n  },\n)\n\nexport default AccountInfo\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Collapse, Row, Space, Spin, Typography } from 'antd'\nimport InputInfoTransfer from 'app/components/inputInfoTransfer'\nimport { WrapTotal } from 'app/components/cardTotal'\nimport AccountInfoHeader from './accountInfoHeader'\nimport IonIcon from 'shared/antd/ionicon'\nimport AccountInfo from './accountInfo'\nimport ModalDeleteFile from 'app/components/commonModal'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { CollapseAddNew } from 'app/constants'\nimport { addRecipients, setErrorData } from 'app/model/recipients.controller'\nimport { onSelectedFile, removeSelectedFile } from 'app/model/main.controller'\nimport useValidateAmount from 'app/hooks/useValidateAmount'\n\nconst ActionButton = ({\n  activeKey = '',\n  selected = false,\n  onSelect,\n  onCollapsed,\n}: {\n  activeKey?: string\n  selected?: boolean\n  onSelect: (selected: boolean) => void\n  onCollapsed: (activeKey: string) => void\n}) => {\n  if (selected)\n    return (\n      <Button type=\"text\" size=\"small\" onClick={() => onSelect(false)}>\n        Cancel\n      </Button>\n    )\n  if (activeKey)\n    return (\n      <Button type=\"text\" size=\"small\" onClick={() => onCollapsed('')}>\n        Close\n      </Button>\n    )\n\n  return (\n    <Space size={24}>\n      <Button type=\"text\" size=\"small\" onClick={() => onSelect(true)}>\n        SELECT\n      </Button>\n      <Button\n        type=\"text\"\n        size=\"small\"\n        onClick={() => onCollapsed(CollapseAddNew.activeKey)}\n        style={{ color: '#42E6EB' }}\n      >\n        ADD MORE\n      </Button>\n    </Space>\n  )\n}\n\nconst FileDetails = ({ remove = () => {} }: { remove?: () => void }) => {\n  const [selected, setSelected] = useState(false)\n  const [activeKey, setActiveKey] = useState<string>()\n  const [loading, setLoading] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    main: { fileName, selectedFile },\n    recipients: { recipients, errorData },\n  } = useSelector((state: AppState) => state)\n  const { isError } = useValidateAmount()\n\n  const onSelected = (checked: boolean, index: number) =>\n    dispatch(onSelectedFile({ checked, index }))\n\n  const onDelete = () => {\n    if (!selectedFile?.length) return\n    setLoading(true)\n    const nextRecipients = [...recipients]\n    const nextErrorData = [...(errorData || [])]\n\n    const filterRecipient = nextRecipients.filter(\n      (_, idx) => !selectedFile.includes(idx),\n    )\n    // Index of error data in listWalletPos begin from recipients.length\n    const filterErrorData = nextErrorData.filter(\n      (_, idx) => !selectedFile.includes(recipients.length + idx),\n    )\n\n    dispatch(setErrorData({ errorData: filterErrorData }))\n    dispatch(addRecipients({ recipients: filterRecipient }))\n    dispatch(removeSelectedFile())\n    setLoading(false)\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Card className=\"file-uploaded\" bodyStyle={{ padding: '8px 16px' }}>\n          <Row gutter={8}>\n            <Col flex=\"auto\">\n              <Space>\n                <IonIcon name=\"document-attach-outline\" />\n                <Typography.Text style={{ color: 'inherit' }}>\n                  {fileName}\n                </Typography.Text>\n              </Space>\n            </Col>\n            <Col>\n              <Button\n                type=\"text\"\n                size=\"small\"\n                style={{ color: 'inherit' }}\n                icon={<IonIcon name=\"close-outline\" />}\n                onClick={() => setVisible(true)}\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          <Col flex=\"auto\">\n            {selected && (\n              <Space>\n                <Button\n                  type=\"text\"\n                  size=\"small\"\n                  icon={<IonIcon name=\"trash-outline\" />}\n                  onClick={onDelete}\n                  disabled={!selectedFile?.length}\n                >\n                  Delete\n                </Button>\n              </Space>\n            )}\n          </Col>\n          <Col>\n            <ActionButton\n              activeKey={activeKey}\n              selected={selected}\n              onSelect={setSelected}\n              onCollapsed={setActiveKey}\n            />\n          </Col>\n          <Col span={24}>\n            <Collapse\n              activeKey={activeKey}\n              bordered={false}\n              className=\"auto-add-new\"\n            >\n              <Collapse.Panel header={undefined} key={CollapseAddNew.activeKey}>\n                <InputInfoTransfer />\n              </Collapse.Panel>\n            </Collapse>\n          </Col>\n          <Col span={24}>\n            <Spin spinning={loading}>\n              <Card bordered={false} className=\"card-content\">\n                <Row gutter={[8, 13]}>\n                  <Col span={24}>\n                    <AccountInfoHeader\n                      selected={selected}\n                      onChecked={(checked) =>\n                        dispatch(onSelectedFile({ checked }))\n                      }\n                    />\n                  </Col>\n                  {errorData.map(([address, amount], idx) => (\n                    <Col\n                      span={24}\n                      key={address + idx}\n                      className={\n                        idx + 1 === errorData.length\n                          ? 'last-item-error-data'\n                          : ''\n                      }\n                    >\n                      <AccountInfo\n                        accountAddress={address}\n                        amount={amount}\n                        selected={selected}\n                        onChecked={onSelected}\n                        index={recipients.length + idx}\n                      />\n                    </Col>\n                  ))}\n                  {recipients.map(([address, amount], idx) => (\n                    <Col span={24} key={address + idx}>\n                      <AccountInfo\n                        accountAddress={address}\n                        amount={amount}\n                        selected={selected}\n                        onChecked={onSelected}\n                        index={idx}\n                      />\n                    </Col>\n                  ))}\n                </Row>\n              </Card>\n            </Spin>\n          </Col>\n          {isError && (\n            <Col span={24}>\n              <Space size={12}>\n                <IonIcon style={{ color: '#F9575E' }} name=\"warning-outline\" />\n                <Typography.Text style={{ color: '#F9575E' }}>\n                  Should be natural numbers\n                </Typography.Text>\n              </Space>\n            </Col>\n          )}\n          <Col span={24}>\n            <WrapTotal />\n          </Col>\n        </Row>\n      </Col>\n      <ModalDeleteFile\n        title=\"Do you want to delete this file? \"\n        description=\"Data will not be saved.\"\n        visible={visible}\n        setVisible={setVisible}\n        onConfirm={remove}\n        onCancel={() => setVisible(false)}\n        btnText=\"delete\"\n      />\n    </Row>\n  )\n}\nexport default FileDetails\n","var _path, _path2, _path3;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgIconUpload(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 48,\n    height: 48,\n    viewBox: \"0 0 48 48\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.8 33.3058H34.5C38.625 33.3058 42 30.8743 42 26.3467C42 21.8191 38.025 19.5649 34.8 19.3876C34.1333 12.307 29.475 8 24 8C18.825 8 15.492 11.8117 14.4 15.5917C9.9 16.0662 6 19.2444 6 24.4488C6 29.6531 10.05 33.3058 15 33.3058H19.2\",\n    stroke: \"#42E6EB\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.7992 23.9818L23.9992 18.6543L19.1992 23.9818\",\n    stroke: \"#42E6EB\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 39.9996V19.9863\",\n    stroke: \"#42E6EB\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconUpload);\nexport default __webpack_public_path__ + \"static/media/icon-upload.a3c69638b092ea112d393cdc3d63d2c4.svg\";\nexport { ForwardRef as ReactComponent };","import { useCallback, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Papa from 'papaparse'\nimport fileDownload from 'js-file-download'\nimport { account, utils } from '@senswap/sen-js'\n\nimport { Space, Typography, Upload, Image, Spin, Row, Col, Button } from 'antd'\nimport FileDetails from './fileDetails'\nimport ModalMerge from 'app/components/commonModal'\n\nimport IonIcon from 'shared/antd/ionicon'\n\nimport iconUpload from 'app/static/images/icon-upload.svg'\nimport { AppState } from 'app/model'\nimport exampleCSV from 'app/static/base/example.csv'\nimport {\n  addRecipients,\n  RecipientInfo,\n  RecipientInfos,\n  removeRecipients,\n  setErrorData,\n} from 'app/model/recipients.controller'\nimport { setFileName } from 'app/model/main.controller'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nconst parse = (file: any): Promise<RecipientInfos> => {\n  return new Promise((resolve, reject) => {\n    return Papa.parse(file, {\n      skipEmptyLines: true,\n      complete: ({ data }) => resolve(data as RecipientInfos),\n    })\n  })\n}\n\nconst UploadFile = () => {\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [listDuplicate, setListDuplicate] = useState<\n    Record<string, RecipientInfo>\n  >({})\n  const {\n    recipients: { recipients },\n    main: { mintSelected },\n  } = useSelector((state: AppState) => state)\n  const mintDecimals = useMintDecimals(mintSelected) || 0\n\n  const detectErrorData = useCallback((data: RecipientInfos) => {\n    const errorData = data.filter(\n      (recipient) => recipient.includes('') || !account.isAddress(recipient[0]),\n    )\n\n    const successData = data.filter(\n      (recipient) => !recipient.includes('') && account.isAddress(recipient[0]),\n    )\n    return { errorData, successData }\n  }, [])\n\n  const upload = useCallback(\n    async (file: any) => {\n      setLoading(true)\n\n      const data = await parse(file)\n      const { errorData, successData: recipients } = await detectErrorData(data)\n      if (errorData) dispatch(setErrorData({ errorData }))\n      if (!mintDecimals) return\n\n      const recipient: Record<string, RecipientInfo> = {}\n      let isDuplicate = false\n      for (const [address, amount] of recipients) {\n        if (recipient[address]) {\n          isDuplicate = true\n          const [walletAddress, oldAmount] = recipient[address]\n\n          const newAmount =\n            utils.decimalize(oldAmount, mintDecimals) +\n            utils.decimalize(amount, mintDecimals)\n\n          recipient[address] = [\n            walletAddress,\n            utils.undecimalize(newAmount, mintDecimals),\n          ]\n        } else recipient[address] = [address, amount]\n      }\n\n      if (isDuplicate) {\n        setListDuplicate(recipient)\n        setLoading(false)\n        setVisible(true)\n        dispatch(setFileName(file.name))\n        return true\n      }\n\n      dispatch(setFileName(file.name))\n      dispatch(addRecipients({ recipients }))\n      setLoading(false)\n      setVisible(false)\n      return false\n    },\n    [detectErrorData, dispatch, mintDecimals],\n  )\n\n  const remove = async () => {\n    dispatch(removeRecipients())\n    setListDuplicate({})\n    return true\n  }\n\n  const onMerge = () => {\n    const recipients = Object.values(listDuplicate)\n    dispatch(addRecipients({ recipients }))\n    return setVisible(false)\n  }\n\n  const onCancel = () => {\n    setVisible(false)\n    dispatch(setFileName(''))\n    setListDuplicate({})\n  }\n\n  const getFileCSV = async (fileCSV: string) => {\n    return fetch(fileCSV).then(function (response) {\n      let reader = response.body?.getReader()\n      let decoder = new TextDecoder('utf-8')\n      return reader?.read().then(function (result) {\n        return decoder.decode(result.value)\n      })\n    })\n  }\n\n  const onDownload = async () => {\n    if (!exampleCSV) return\n    const file = (await getFileCSV(exampleCSV)) || ''\n    fileDownload(file, 'example.csv')\n  }\n\n  if (!recipients.length)\n    return (\n      <Row gutter={[8, 8]} justify=\"end\">\n        <Col span={24}>\n          <Spin spinning={loading}>\n            <Upload.Dragger\n              accept=\".csv,.txt\"\n              beforeUpload={upload}\n              onRemove={remove}\n              maxCount={1}\n              className=\"upload-file\"\n              showUploadList\n              progress={{ strokeWidth: 2, showInfo: true }}\n              fileList={[]}\n            >\n              <Space direction=\"vertical\" size={24} align=\"center\">\n                <Image src={iconUpload} preview={false} />\n                <Space direction=\"vertical\" size={4} align=\"center\">\n                  <Typography.Text>\n                    Click or Drop file to upload\n                  </Typography.Text>\n                  <Typography.Text type=\"secondary\">\n                    The accepted file types are <code>.csv</code>,{' '}\n                    <code>.txt</code>.\n                  </Typography.Text>\n                </Space>\n              </Space>\n            </Upload.Dragger>\n          </Spin>\n        </Col>\n        <Col>\n          <Button\n            type=\"text\"\n            style={{ padding: 0, background: 'transparent', fontWeight: 700 }}\n            icon={<IonIcon name=\"download-outline\" />}\n            onClick={onDownload}\n          >\n            Download sample\n          </Button>\n        </Col>\n        <ModalMerge\n          title=\"Do you want to merge wallet addresses?\"\n          description=\"There are some wallet addresses that are the same.\"\n          visible={visible}\n          setVisible={setVisible}\n          onConfirm={onMerge}\n          onCancel={onCancel}\n          btnText=\"merge\"\n        />\n      </Row>\n    )\n  return <FileDetails remove={remove} />\n}\n\nexport default UploadFile\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type SettingState = {\n  decimal: boolean\n  encryption: boolean\n  disabled: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'setting'\nconst initialState: SettingState = {\n  decimal: true,\n  encryption: false,\n  disabled: false,\n}\n\n/**\n * Actions\n */\n\nexport const setDecimal = createAsyncThunk(\n  `${NAME}/setDecimal`,\n  async (decimal: boolean) => {\n    return { decimal }\n  },\n)\n\nexport const setEncryption = createAsyncThunk(\n  `${NAME}/setEncryption`,\n  async (encryption: boolean) => {\n    return { encryption }\n  },\n)\n\nexport const setDisabled = createAsyncThunk(\n  `${NAME}/setDisabled`,\n  async (disabled: boolean) => {\n    return { disabled }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setDecimal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setEncryption.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setDisabled.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Switch } from 'antd'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { setDecimal } from 'app/model/setting.controller'\n\nconst SwitchDecimal = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    main: { mintSelected },\n    setting: { decimal: isDecimal, disabled },\n  } = useSelector((state: AppState) => state)\n  const decimals = useMintDecimals(mintSelected) || 0\n\n  const onSwitch = (checked: boolean) => {\n    dispatch(setDecimal(checked))\n  }\n\n  return (\n    <Switch\n      onChange={onSwitch}\n      checkedChildren={decimals}\n      unCheckedChildren={decimals}\n      disabled={disabled}\n      checked={isDecimal}\n    />\n  )\n}\n\nexport default SwitchDecimal\n","import { useDispatch } from 'react-redux'\n\nimport { Col, Popover, Row, Space, Switch } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { AppDispatch } from 'app/model'\nimport { setEncryption } from 'app/model/setting.controller'\nimport SwitchDecimal from './switch'\n\nconst Content = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space size={24}>\n          <SwitchDecimal />\n          Decimals\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space size={24}>\n          <Switch\n            disabled\n            onChange={(checked: boolean) => dispatch(setEncryption(checked))}\n          />\n          Encrypt confidential information\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nconst Setting = () => {\n  return (\n    <div className=\"setting\">\n      <Popover\n        trigger=\"click\"\n        placement=\"bottom\"\n        title={null}\n        content={<Content />}\n      >\n        <IonIcon\n          style={{ cursor: 'pointer', fontSize: 16 }}\n          name=\"cog-outline\"\n        />\n      </Popover>\n    </div>\n  )\n}\n\nexport default Setting\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgTwitter(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.6303 49C14.969 49 9.6918 47.3534 5.25 44.5123C9.02124 44.7564 15.6766 44.172 19.8163 40.2234C13.5889 39.9376 10.7805 35.1615 10.4141 33.1204C10.9433 33.3245 13.4668 33.5695 14.8913 32.998C7.72782 31.2018 6.62887 24.9153 6.87308 22.9967C8.21624 23.9356 10.4955 24.2622 11.391 24.1805C4.71589 19.4044 7.1173 12.2198 8.29765 10.6686C13.0879 17.3052 20.2671 21.0325 29.1487 21.2398C28.9812 20.5054 28.8928 19.7407 28.8928 18.9554C28.8928 13.3191 33.4485 8.75 39.0682 8.75C42.0045 8.75 44.6502 9.99732 46.5075 11.9925C48.4696 11.5327 51.4225 10.4564 52.8661 9.52561C52.1385 12.1382 49.8731 14.3176 48.5028 15.1254C48.5142 15.1529 48.4917 15.0978 48.5028 15.1254C49.7065 14.9433 52.9634 14.3174 54.25 13.4445C53.6137 14.9122 51.212 17.3525 49.241 18.7187C49.6077 34.8916 37.2338 49 20.6303 49Z\",\n    fill: \"#47ACDF\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTwitter);\nexport default __webpack_public_path__ + \"static/media/twitter.9cbdafef0605b5c84ec56b271a60a6e8.svg\";\nexport { ForwardRef as ReactComponent };","import CopyToClipboard from 'react-copy-to-clipboard'\nimport { useState } from 'react'\n\nimport {\n  Modal,\n  Image,\n  Space,\n  Typography,\n  Row,\n  Col,\n  Button,\n  Tooltip,\n} from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { asyncWait } from 'shared/util'\n\nimport TWITTER from 'app/static/images/twitter.svg'\n\nconst ModalShare = ({\n  visible,\n  redeemLink,\n  setVisible,\n}: {\n  visible: boolean\n  redeemLink: string\n  setVisible: (visible: boolean) => void\n}) => {\n  const [copied, setCopied] = useState(false)\n\n  const onShare = () => {\n    let url = 'http://twitter.com/intent/tweet?'\n\n    const params: Record<string, string> = {\n      url: redeemLink,\n      text: 'Your prize has arrived! Redeem now at Sen Hub: ',\n    }\n    for (const prop in params)\n      url += '&' + prop + '=' + encodeURIComponent(params[prop] || '')\n    window.open(url, '_blank')\n  }\n\n  const shortenRedeemLink = (redeemLink: string) => {\n    const perfectLength = 40\n    const delimiter = '...'\n    return redeemLink.substring(0, perfectLength) + delimiter\n  }\n\n  const onCopy = async () => {\n    setCopied(true)\n    await asyncWait(1500)\n    setCopied(false)\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      closeIcon={<IonIcon name=\"close-outline\" />}\n      onCancel={() => setVisible(false)}\n      footer={null}\n      className=\"card-lightning\"\n      style={{ paddingBottom: 0 }}\n    >\n      <Row gutter={[32, 32]} style={{ textAlign: 'center' }}>\n        <Col span={24}>\n          <Image src={TWITTER} preview={false} />\n        </Col>\n        <Col span={24}>\n          <Space direction=\"vertical\" size={4}>\n            <Typography.Title level={3}>Share on Twitter!</Typography.Title>\n            <Space size={4}>\n              <Typography.Text type=\"secondary\">\n                Share this link so your recipients can get their tokens\n              </Typography.Text>\n            </Space>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Row gutter={8} justify=\"space-between\">\n            <Col className=\"share-link\" span={20}>\n              <Typography.Text>{shortenRedeemLink(redeemLink)}</Typography.Text>\n            </Col>\n            <Col span={4}>\n              <Tooltip title=\"Copied\" visible={copied}>\n                <CopyToClipboard text={redeemLink}>\n                  <Button size=\"large\" type=\"ghost\" onClick={onCopy}>\n                    copy\n                  </Button>\n                </CopyToClipboard>\n              </Tooltip>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Button size=\"large\" type=\"primary\" block onClick={onShare}>\n            Share now\n          </Button>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default ModalShare\n","import { Fragment, useState } from 'react'\n\nimport { Button } from 'antd'\nimport ModalShare from 'app/components/modalShare'\n\nimport { useAppRouter } from 'app/hooks/useAppRoute'\n\nconst ShareButton = ({ cid }: { cid: string }) => {\n  const { appRoute, generateQuery } = useAppRouter()\n\n  const [visible, setVisible] = useState(false)\n  const redeemLink = `${window.location.origin}${appRoute}?${generateQuery({\n    redeem: cid,\n  })}`\n  return (\n    <Fragment>\n      <Button\n        onClick={() => setVisible(true)}\n        type=\"text\"\n        style={{ color: '#42E6EB' }}\n      >\n        share\n      </Button>\n      <ModalShare\n        visible={visible}\n        setVisible={setVisible}\n        redeemLink={redeemLink}\n      />\n    </Fragment>\n  )\n}\n\nexport default ShareButton\n","import moment from 'moment'\n\nimport { Space, Typography } from 'antd'\nimport ShareButton from './shareButton'\n\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport { numeric } from 'shared/util'\n\nexport const HISTORY_COLUMN = [\n  {\n    title: 'TIME',\n    dataIndex: 'time',\n    render: (time: string) => (\n      <Typography.Text>\n        {moment(time).format('MMM DD, YYYY HH:mm')}\n      </Typography.Text>\n    ),\n  },\n  {\n    title: 'TOKEN',\n    dataIndex: 'mint',\n    render: (mint: string) => (\n      <Space>\n        <MintAvatar mintAddress={mint} />\n        <MintSymbol mintAddress={mint} />\n      </Space>\n    ),\n  },\n\n  {\n    title: 'AMOUNT',\n    dataIndex: 'total',\n    render: (total: string) => (\n      <Typography.Text>{numeric(total).format('0,0.[0000]')}</Typography.Text>\n    ),\n  },\n  {\n    title: 'ACTION',\n    dataIndex: 'cid',\n    render: (cid: string) => <ShareButton cid={cid} />,\n  },\n]\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWallet } from '@senhub/providers'\n\nimport { Col, Modal, Row, Space, Typography, Table } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport PDB from 'shared/pdb'\nimport { HISTORY_COLUMN } from './column'\nimport { History } from 'app/constants'\n\nimport './index.less'\n\nconst ListHistory = ({\n  visible,\n  setVisible,\n}: {\n  visible: boolean\n  setVisible: (visible: boolean) => void\n}) => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const [histories, setHistories] = useState<History[]>([])\n\n  const fetchHistory = useCallback(async () => {\n    const db = new PDB(walletAddress).createInstance('lightning_tunnel')\n    const history: History[] = (await db.getItem('history')) || []\n    return setHistories(history)\n  }, [walletAddress])\n\n  useEffect(() => {\n    fetchHistory()\n  }, [fetchHistory])\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={() => setVisible(false)}\n      closeIcon={<IonIcon name=\"close-outline\" />}\n      footer={false}\n      className=\"card-lightning\"\n      style={{ paddingBottom: 0 }}\n    >\n      <Row gutter={[32, 32]} style={{ height: 500 }} className=\"scrollbar\">\n        <Col span={24}>\n          <Typography.Title level={5}>Transfer history</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Space align=\"baseline\">\n            <IonIcon name=\"information-circle-outline\" />\n            <Typography.Text>\n              The history of each transaction is saved only on the device where\n              the transaction was made.\n            </Typography.Text>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Table\n            columns={HISTORY_COLUMN}\n            dataSource={histories}\n            pagination={false}\n            rowKey={(record) => record.cid}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default ListHistory\n","import { useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Col, Radio, Row, Space, Typography } from 'antd'\nimport Setting from './setting'\nimport History from './history'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { Step } from 'app/constants'\nimport { AppState } from 'app/model'\n\nconst Header = ({ label }: { label: string }) => {\n  const [visible, setVisible] = useState(false)\n  const { step } = useSelector((state: AppState) => state.steps)\n\n  const stepOneValue = useMemo(() => {\n    if (step === Step.two) return Step.two\n    if (step === Step.three) return Step.three\n    return Step.one\n  }, [step])\n\n  const stepTwoValue = useMemo(() => {\n    if (step === Step.three) return Step.three\n    return Step.two\n  }, [step])\n\n  return (\n    <Row>\n      <Col flex=\"auto\">\n        <Space direction=\"vertical\" size={12}>\n          <Radio.Group value={step} className=\"steps\" buttonStyle=\"solid\">\n            <Space>\n              <Radio.Button className=\"rate-btn\" value={stepOneValue} />\n              <Radio.Button className=\"rate-btn\" value={stepTwoValue} />\n              <Radio.Button className=\"rate-btn\" value={Step.three} />\n            </Space>\n          </Radio.Group>\n          <Typography.Title level={5}>{label}</Typography.Title>\n        </Space>\n      </Col>\n      <Col>\n        <Space size={16}>\n          <IonIcon\n            style={{ cursor: 'pointer', fontSize: 16 }}\n            name=\"document-text-outline\"\n            onClick={() => setVisible(true)}\n          />\n          <Setting />\n        </Space>\n      </Col>\n      <History visible={visible} setVisible={setVisible} />\n    </Row>\n  )\n}\n\nexport default Header\n","import { Card, Col, Row } from 'antd'\nimport Action from './action'\nimport UploadFile from './uploadFile'\nimport Header from 'app/components/header'\n\nconst Auto = () => {\n  return (\n    <Card bordered={false} className=\"card-lightning\">\n      <Row gutter={[32, 32]}>\n        <Col span={24}>\n          <Header label=\"Fill in recipient information\" />\n        </Col>\n        <Col span={24}>\n          <UploadFile />\n        </Col>\n        <Col span={24}>\n          <Action />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Auto\n","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Row } from 'antd'\nimport Header from '../../components/header'\nimport InputInfoTransfer from '../../components/inputInfoTransfer'\nimport CardTotal from 'app/components/cardTotal'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { onSelectStep } from 'app/model/steps.controller'\nimport { onSelectMethod } from 'app/model/main.controller'\nimport { Step } from 'app/constants'\nimport { removeRecipients } from 'app/model/recipients.controller'\nimport useTotal from 'app/hooks/useTotal'\nimport useValidateAmount from 'app/hooks/useValidateAmount'\n\nconst Manual = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    recipients: { recipients },\n  } = useSelector((state: AppState) => state)\n  const { quantity } = useTotal()\n  const { isError } = useValidateAmount()\n\n  const onBack = useCallback(async () => {\n    await dispatch(onSelectMethod())\n    await dispatch(removeRecipients())\n    dispatch(onSelectStep(Step.one))\n  }, [dispatch])\n\n  return (\n    <Card className=\"card-lightning\" bordered={false}>\n      <Row gutter={[32, 32]}>\n        <Col span={24}>\n          <Header label=\"Fill in recipient information\" />\n        </Col>\n        <Col span={24}>\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <Row gutter={[8, 8]}>\n                {recipients &&\n                  recipients.map(([walletAddress, amount], index) => (\n                    <Col span={24} key={walletAddress + index}>\n                      <InputInfoTransfer\n                        amount={amount}\n                        walletAddress={walletAddress}\n                        index={index}\n                      />\n                    </Col>\n                  ))}\n                <Col span={24}>\n                  <InputInfoTransfer />\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <CardTotal />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[16, 16]}>\n            <Col span={12}>\n              <Button onClick={onBack} size=\"large\" type=\"ghost\" block>\n                Back\n              </Button>\n            </Col>\n            <Col span={12}>\n              <Button\n                size=\"large\"\n                type=\"primary\"\n                onClick={() => dispatch(onSelectStep(Step.three))}\n                block\n                disabled={quantity <= 0 || isError}\n              >\n                Continue\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Manual\n","import { Select, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\n\nconst DEFAULT_VALUE = 'Select'\n\nconst SelectToken = ({\n  tokens,\n  activeMintAddress,\n  onSelect,\n}: {\n  tokens: string[]\n  activeMintAddress: string\n  onSelect: (mintAddress: string) => void\n}) => {\n  return (\n    <Select\n      onChange={onSelect}\n      value={activeMintAddress || DEFAULT_VALUE}\n      className=\"select-token\"\n    >\n      <Select.Option value={DEFAULT_VALUE}>\n        <Space>\n          <IonIcon style={{ fontSize: 25 }} name=\"help-outline\" />\n          <Typography.Text style={{ fontSize: 16 }}>\n            Select a token\n          </Typography.Text>\n        </Space>\n      </Select.Option>\n      {tokens.map((tokenAddress) => (\n        <Select.Option key={tokenAddress}>\n          <Space>\n            <MintAvatar mintAddress={tokenAddress} />\n            <MintSymbol mintAddress={tokenAddress} />\n          </Space>\n        </Select.Option>\n      ))}\n    </Select>\n  )\n}\n\nexport default SelectToken\n","import { useEffect, useState } from 'react'\nimport { account, DEFAULT_EMPTY_ADDRESS, utils } from '@senswap/sen-js'\nimport { useAccount, useWallet } from '@senhub/providers'\n\nimport useMintDecimals from './useMintDecimals'\n\nexport type AccountBalanceReturn = {\n  amount: bigint\n  decimals: number\n  balance: number\n  mintAddress: string\n}\n\nconst buildResult = (\n  mintAddress?: string,\n  amount?: bigint,\n  decimals?: number,\n) => {\n  if (\n    !account.isAddress(mintAddress) ||\n    amount === undefined ||\n    decimals === undefined\n  )\n    return { amount: BigInt(0), decimals: 0, balance: 0 }\n  return {\n    mintAddress,\n    amount,\n    decimals,\n    balance: Number(utils.undecimalize(amount, decimals)),\n  }\n}\n\n/**\n * Get account balance. This hook needs WalletProvider, MintProvider, and AccountProvider for work.\n * WalletProvider Ref: https://docs.sentre.io/senhub/development/providers/wallet-provider\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * AccountProvider Ref: https://docs.sentre.io/senhub/development/providers/account-provider\n * @param accountAddress Associated account address\n * @returns AccountBalanceReturn\n * - AccountBalanceReturn.amount: The amount with decimals\n * - AccountBalanceReturn.decimals: The corresponding mint decimals\n * - AccountBalanceReturn.balance: The human-readable balance (undecimalized amount)\n * - AccountBalanceReturn.mintAddress: The corresponding mint\n */\nconst useAccountBalance = (accountAddress: string) => {\n  const {\n    wallet: { address: walletAddress, lamports },\n  } = useWallet()\n  const { accounts } = useAccount()\n  const { amount, mint: mintAddress } = accounts[accountAddress] || {}\n  const decimals = useMintDecimals(mintAddress) || 0\n\n  if (!account.isAddress(walletAddress) || !account.isAddress(accountAddress))\n    return buildResult()\n  if (accountAddress === walletAddress)\n    return buildResult(DEFAULT_EMPTY_ADDRESS, lamports, 9)\n\n  return buildResult(mintAddress, amount, decimals)\n}\n\nexport default useAccountBalance\n\n/**\n * The same as useAccountBalance but the input is mint address\n * @param mintAddress Mint address\n * @returns AccountBalanceReturn\n */\nexport const useAccountBalanceByMintAddress = (mintAddress: string) => {\n  const [accountAddress, setAccountAddress] = useState('')\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const data = useAccountBalance(accountAddress)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!account.isAddress(walletAddress) || !account.isAddress(mintAddress))\n        return setAccountAddress('')\n      const {\n        sentre: { splt },\n      } = window\n      try {\n        const address = await splt.deriveAssociatedAddress(\n          walletAddress,\n          mintAddress,\n        )\n        return setAccountAddress(address)\n      } catch (er) {\n        return setAccountAddress('')\n      }\n    })()\n  })\n\n  return data\n}\n","import { ReactNode, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useWallet } from '@senhub/providers'\nimport { account, utils } from '@senswap/sen-js'\nimport { NewFormat } from '@saberhq/merkle-distributor/dist/cjs/utils'\nimport { u64 } from '@saberhq/token-utils'\nimport { utils as MerkleUtils } from '@saberhq/merkle-distributor'\nimport moment from 'moment'\n\nimport { Button, Card, Col, Row, Space, Tag, Typography } from 'antd'\nimport Header from 'app/components/header'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { onSelectStep } from 'app/model/steps.controller'\nimport { History, Step } from 'app/constants'\nimport { explorer, numeric } from 'shared/util'\nimport { MintSymbol } from 'shared/antd/mint'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport useTotal from 'app/hooks/useTotal'\nimport useMerkleSDK from 'app/hooks/useMerkleSDK'\nimport { encodeData } from 'app/helper'\nimport { useAppRouter } from 'app/hooks/useAppRoute'\nimport PDB from 'shared/pdb'\nimport IPFS from 'shared/pdb/ipfs'\nimport ModalShare from 'app/components/modalShare'\nimport { useAccountBalanceByMintAddress } from 'shared/hooks/useAccountBalance'\n\nconst Content = ({\n  label = '',\n  value = '',\n}: {\n  label?: string\n  value?: ReactNode\n}) => {\n  return (\n    <Row>\n      <Col flex=\"auto\">\n        <Typography.Text type=\"secondary\">{label} </Typography.Text>\n      </Col>\n      <Col>{value}</Col>\n    </Row>\n  )\n}\n\nconst ConfirmTransfer = () => {\n  const [loading, setLoading] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [redeemLink, setRedeemLink] = useState('')\n  const {\n    main: { mintSelected },\n    recipients: { recipients },\n  } = useSelector((state: AppState) => state)\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n  const mintDecimals = useMintDecimals(mintSelected) || 0\n  const { total, quantity } = useTotal()\n  const sdk = useMerkleSDK()\n  const { appRoute, generateQuery } = useAppRouter()\n  const { balance } = useAccountBalanceByMintAddress(mintSelected)\n\n  const remainingBalance = useMemo(() => {\n    if (!balance) return 0\n    return balance - Number(total)\n  }, [balance, total])\n\n  const tree = useMemo(() => {\n    if (!recipients.length || !mintDecimals) return\n    const balanceTree: NewFormat[] = []\n    Object.values(recipients).forEach(([address, amount]) => {\n      balanceTree.push({\n        address,\n        earnings: (Number(amount) * 10 ** mintDecimals).toString(),\n      })\n    })\n    return MerkleUtils.parseBalanceMap(balanceTree)\n  }, [recipients, mintDecimals])\n\n  const onConfirm = async () => {\n    if (!sdk || !account.isAddress(mintSelected) || !tree) return\n\n    const { merkleRoot } = tree\n    setLoading(true)\n    try {\n      const { splt, wallet } = window.sentre\n      if (!wallet) throw Error('Please connect wallet')\n\n      const maxTotalClaim = utils.decimalize(total, mintDecimals).toString()\n      const accountAddress = account.fromAddress(mintSelected)\n\n      const { tx, distributor, distributorATA } = await sdk.createDistributor({\n        tokenMint: accountAddress,\n        root: merkleRoot,\n        maxNumNodes: new u64(quantity),\n        maxTotalClaim: new u64(maxTotalClaim),\n      })\n      const pendingTx = await tx.send()\n      await pendingTx.wait()\n\n      const distributorInfo = {\n        distributor: distributor.toBase58(),\n        distributorATA: distributorATA.toBase58(),\n      }\n\n      // Transfer token to DistributorATA\n      const srcAddress = await splt.deriveAssociatedAddress(\n        walletAddress,\n        mintSelected,\n      )\n\n      const { txId: txIdTransfer } = await splt.transfer(\n        BigInt(maxTotalClaim),\n        srcAddress,\n        distributorInfo.distributorATA,\n        wallet,\n      )\n      window.notify({\n        type: 'success',\n        description: 'Transfer successfully. Click to view details.',\n        onClick: () => window.open(explorer(txIdTransfer)),\n      })\n\n      /**Save history */\n      const ipfs = new IPFS()\n      const db = new PDB(walletAddress).createInstance('lightning_tunnel')\n\n      const oldHistory: History[] = (await db.getItem('history')) || []\n      const newHistory = [...oldHistory]\n      const dataEncoded = encodeData(tree, distributorInfo, mintSelected)\n      const cid = await ipfs.set(dataEncoded)\n\n      const history: History = {\n        cid,\n        total,\n        time: new Date().toString(),\n        mint: mintSelected,\n      }\n      newHistory.unshift(history)\n      db.setItem('history', newHistory)\n\n      const redeemAt = `${window.location.origin}${appRoute}?${generateQuery({\n        redeem: cid,\n      })}`\n      setRedeemLink(redeemAt)\n      return setVisible(true)\n    } catch (err: any) {\n      window.notify({ type: 'error', description: err.message })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Card bordered={false} className=\"card-lightning\">\n      <Row gutter={[32, 32]}>\n        <Col span={24}>\n          <Header label=\"Confirm transfer\" />\n        </Col>\n        <Col span={24}>\n          <Row gutter={[24, 24]} justify=\"center\">\n            <Col>\n              <Space direction=\"vertical\" size={12} align=\"center\">\n                <Typography.Text>Total transfer</Typography.Text>\n                <Typography.Title level={1}>{total}</Typography.Title>\n                <Tag\n                  style={{\n                    margin: 0,\n                    borderRadius: 4,\n                    color: 'rgb(66, 230, 235)',\n                    background: 'rgba(66, 230, 235, 0.1)',\n                    border: 'unset',\n                  }}\n                >\n                  <MintSymbol mintAddress={mintSelected} />\n                </Tag>\n              </Space>\n            </Col>\n            <Col span={24}>\n              <Card bordered={false} className=\"card-total\">\n                <Row gutter={[8, 8]}>\n                  <Col span={24}>\n                    <Content\n                      label=\"Time\"\n                      value={moment(new Date()).format('DD MMM, YYYY HH:MM')}\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <Content label=\"Quantity\" value={quantity} />\n                  </Col>\n                  <Col span={24}>\n                    <Content\n                      label=\"Your balance\"\n                      value={\n                        <Typography.Text>\n                          {numeric(balance).format('0,0.00[0000]')}{' '}\n                          <MintSymbol mintAddress={mintSelected} />\n                        </Typography.Text>\n                      }\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <Content\n                      label=\"Remaining\"\n                      value={\n                        <Typography.Text>\n                          {numeric(remainingBalance).format('0,0.00[00]')}{' '}\n                          <MintSymbol mintAddress={mintSelected} />\n                        </Typography.Text>\n                      }\n                    />\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[8, 8]}>\n            <Col span={12}>\n              <Button\n                size=\"large\"\n                onClick={() => dispatch(onSelectStep(Step.two))}\n                block\n                type=\"ghost\"\n              >\n                BACK\n              </Button>\n            </Col>\n            <Col span={12}>\n              <Button\n                size=\"large\"\n                onClick={onConfirm}\n                type=\"primary\"\n                loading={loading}\n                disabled={remainingBalance < 0}\n                block\n              >\n                TRANSFER\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <ModalShare\n        visible={visible}\n        setVisible={setVisible}\n        redeemLink={redeemLink}\n      />\n    </Card>\n  )\n}\n\nexport default ConfirmTransfer\n","import { Fragment, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAccount } from '@senhub/providers'\n\nimport { Button, Card, Col, Radio, Row, Space, Typography } from 'antd'\nimport Auto from './auto'\nimport Manual from './manual'\nimport SelectToken from 'app/components/selectTokens'\nimport IonIcon from 'shared/antd/ionicon'\nimport Header from 'app/components/header'\n\nimport { SelectMethod, Step } from 'app/constants'\nimport { AppState } from 'app/model'\nimport { onSelectedMint, onSelectMethod } from 'app/model/main.controller'\nimport { useSingleMints } from 'app/hooks/useSingleMints'\nimport { onSelectStep } from 'app/model/steps.controller'\nimport ConfirmTransfer from './confirmTransfer'\n\nconst CardOption = ({\n  label,\n  description,\n  active,\n}: {\n  label: string\n  description: string\n  active: boolean\n}) => {\n  return (\n    <Fragment>\n      {active ? (\n        <IonIcon\n          name=\"checkbox-sharp\"\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            color: '#42E6EB',\n            fontSize: 20,\n          }}\n        />\n      ) : null}\n      <Row gutter={[12, 12]}>\n        <Col span={24}>\n          <Typography.Title level={5}>{label}</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Typography.Text type=\"secondary\">{description}</Typography.Text>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nconst SelectInputMethod = () => {\n  const [method, setMethod] = useState<number>(SelectMethod.manual)\n  const [activeMintAddress, setActiveMintAddress] = useState('Select')\n  const dispatch = useDispatch()\n  const { accounts } = useAccount()\n\n  const myMints = useMemo(\n    () => Object.values(accounts).map((acc) => acc.mint),\n    [accounts],\n  )\n  const singleMints = useSingleMints(myMints)\n\n  const onContinue = () => {\n    dispatch(onSelectMethod(method))\n    dispatch(onSelectStep(Step.two))\n  }\n\n  const onSelectMint = (mintAddress: string) => {\n    setActiveMintAddress(mintAddress)\n    dispatch(onSelectedMint(mintAddress))\n  }\n\n  const disabled = useMemo(() => {\n    if (activeMintAddress === 'Select' || !method) return true\n    return false\n  }, [activeMintAddress, method])\n\n  return (\n    <Card className=\"card-lightning\" bordered={false}>\n      <Row gutter={[32, 32]} align=\"middle\">\n        <Col span={24}>\n          <Header label=\"Select token type and input method\" />\n        </Col>\n        <Col span={24}>\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <SelectToken\n                activeMintAddress={activeMintAddress}\n                tokens={singleMints}\n                onSelect={onSelectMint}\n              />\n            </Col>\n            <Col span={24}>\n              <Space size={12} direction=\"vertical\" style={{ width: '100%' }}>\n                <Typography.Text>\n                  Choose transfer info input method\n                </Typography.Text>\n                <Radio.Group\n                  onChange={(e) => setMethod(e.target.value)}\n                  style={{ width: '100%' }}\n                  className=\"select-card\"\n                >\n                  <Row gutter={[12, 12]}>\n                    <Col xs={24} lg={12}>\n                      <Radio.Button value={SelectMethod.manual}>\n                        <CardOption\n                          label=\"Manual\"\n                          description=\"With a small number of recipients.\"\n                          active={method === SelectMethod.manual}\n                        />\n                      </Radio.Button>\n                    </Col>\n                    <Col xs={24} lg={12}>\n                      <Radio.Button value={SelectMethod.auto}>\n                        <CardOption\n                          label=\"Automatic\"\n                          description=\"Support bulk import with a CSV file.\"\n                          active={method === SelectMethod.auto}\n                        />\n                      </Radio.Button>\n                    </Col>\n                  </Row>\n                </Radio.Group>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button\n            size=\"large\"\n            onClick={onContinue}\n            block\n            type=\"primary\"\n            disabled={disabled}\n          >\n            Continue\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nconst Container = () => {\n  const {\n    main: { methodSelected },\n    steps: { step },\n  } = useSelector((state: AppState) => state)\n\n  if (!methodSelected) return <SelectInputMethod />\n  if (step === Step.two)\n    return methodSelected === SelectMethod.auto ? <Auto /> : <Manual />\n  return <ConfirmTransfer />\n}\n\nexport default Container\n","import { useMint } from '@senhub/providers'\nimport { useCallback, useEffect, useState } from 'react'\n\nexport const useSingleMints = (mints: string[]) => {\n  const { tokenProvider } = useMint()\n  const [singleMints, setSingleMints] = useState<string[]>([])\n\n  const filterSingleMints = useCallback(async () => {\n    const newSingleMints: string[] = []\n    for (const mintAddr of mints) {\n      const token = await tokenProvider.findByAddress(mintAddr)\n      if (token) newSingleMints.push(mintAddr)\n    }\n    return setSingleMints(newSingleMints)\n  }, [tokenProvider, mints])\n\n  useEffect(() => {\n    filterSingleMints()\n  }, [filterSingleMints])\n\n  return singleMints\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\nimport { useUI, useWallet } from '@senhub/providers'\n\nimport { Col, Row } from 'antd'\nimport ModalRedeem from 'app/components/modalRedeem'\nimport Container from './container'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setVisible } from 'app/model/main.controller'\nimport { ClaimProof } from 'app/helper'\nimport IPFS from 'shared/pdb/ipfs'\n\nimport BG from 'app/static/images/background-LT.png'\n\nconst View = () => {\n  const [claimProof, setClaimProof] = useState<ClaimProof>()\n  const {\n    main: { visible },\n  } = useSelector((state: AppState) => state)\n  const { setBackground } = useUI()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n  const query = new URLSearchParams(useLocation().search)\n  const cid = query.get('redeem')\n\n  const canRedeem = useCallback(async () => {\n    if (!cid) return\n    const ipfs = new IPFS()\n    const claimantData = await ipfs.get(cid)\n\n    for (const claimant of Object.keys(claimantData)) {\n      if (claimant === walletAddress) {\n        setClaimProof(claimantData[claimant])\n        return dispatch(setVisible(true))\n      }\n    }\n\n    return window.notify({\n      type: 'warning',\n      description: 'You are not on the list.',\n    })\n  }, [cid, walletAddress, dispatch])\n\n  useEffect(() => {\n    canRedeem()\n  }, [canRedeem])\n\n  useEffect(() => {\n    setBackground({ light: BG, dark: BG })\n  }, [setBackground])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\" className=\"lightning-container\">\n      <Col xs={24} md={16} lg={10}>\n        <Container />\n      </Col>\n      <ModalRedeem visible={visible} claimProof={claimProof} />\n    </Row>\n  )\n}\n\nexport default View\n","import { ReactNode } from 'react'\n\nimport '../styles/star.scss'\n\nexport default function Background({ children }: { children: ReactNode }) {\n  return (\n    <div className=\"background-container\">\n      {children}\n      {Array.apply(null, Array(20)).map((e, idx) => (\n        <div className=\"circle-container\" key={idx}>\n          <div className=\"circle\" />\n        </div>\n      ))}\n    </div>\n  )\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport main from 'app/model/main.controller'\nimport steps from 'app/model/steps.controller'\nimport setting from 'app/model/setting.controller'\nimport recipients from 'app/model/recipients.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    main,\n    steps,\n    setting,\n    recipients,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport {\n  WalletProvider,\n  UIProvider,\n  MintProvider,\n  AccountProvider,\n  PoolProvider,\n} from '@senhub/providers'\n\nimport View from 'app/view'\nimport Background from './static/javascript'\n\nimport model from 'app/model'\nimport configs from 'app/configs'\n\nimport 'app/static/styles/light.less'\nimport 'app/static/styles/dark.less'\nimport 'app/static/styles/index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId} antd={{ prefixCls: appId }}>\n      <MintProvider>\n        <PoolProvider>\n          <AccountProvider>\n            <WalletProvider>\n              <Provider store={model}>\n                <Background>\n                  <View />\n                </Background>\n              </Provider>\n            </WalletProvider>\n          </AccountProvider>\n        </PoolProvider>\n      </MintProvider>\n    </UIProvider>\n  )\n}\n","import { DEFAULT_CACHE_CONFIG } from './constant'\nimport { CacheConfig } from './constant'\n\nexport class SingleFlightCache {\n  private static mapCache = new Map<string, any>()\n\n  static set(\n    key: string,\n    value: any,\n    configs: CacheConfig = DEFAULT_CACHE_CONFIG,\n  ) {\n    this.mapCache.set(key, value)\n    setTimeout(() => {\n      this.mapCache.delete(key)\n    }, configs.ttl)\n  }\n\n  static get(key: string) {\n    return this.mapCache.get(key)\n  }\n}\n","export type LimitConfig = {\n  calls: number\n  time: number\n}\n\nexport type CacheConfig = {\n  ttl: number // millisecond\n}\n\nexport type SingleFlightConfig = {\n  limit?: LimitConfig\n  cache?: CacheConfig\n}\n\n// 10 request per 1 second\nexport const DEFAULT_LIMIT_CONFIG: LimitConfig = {\n  calls: 10,\n  time: 1000,\n}\n\n// 10 request per 1 second\nexport const DEFAULT_CACHE_CONFIG: CacheConfig = {\n  ttl: 30000,\n}\n\nexport const DEFAULT_SINGLE_FLIGHT_CONFIG: SingleFlightConfig = {\n  limit : DEFAULT_LIMIT_CONFIG,\n  cache: DEFAULT_CACHE_CONFIG\n}","import { DEFAULT_SINGLE_FLIGHT_CONFIG, SingleFlightConfig } from './constant'\n\nimport { IRequestQueue, RequestQueue } from './request'\nimport { SingleFlightCache } from './cache'\n\nexport class DataLoader {\n  static mapInstance = new Map<string, SingleFlight>()\n\n  private static getSingleFlight(configs: SingleFlightConfig): SingleFlight {\n    const instanceKey = JSON.stringify(configs)\n    if (this.mapInstance.has(instanceKey)) {\n      const instance = this.mapInstance.get(instanceKey)\n      if (instance) return instance\n    }\n\n    let newSingleFlight = new SingleFlight(configs)\n    this.mapInstance.set(instanceKey, newSingleFlight)\n    return newSingleFlight\n  }\n\n  static async load<T>(\n    requestKey: string | object,\n    callback: () => Promise<T>,\n    configs: SingleFlightConfig = {},\n  ): Promise<T> {\n    if (typeof requestKey === 'object') requestKey = JSON.stringify(requestKey)\n\n    let singleFlight = DataLoader.getSingleFlight(configs)\n    DataLoader.mapInstance.set(requestKey, singleFlight)\n    const newRequest = new RequestQueue(requestKey)\n    return singleFlight.load<T>(newRequest, callback)\n  }\n}\n\nclass SingleFlight {\n  private config: SingleFlightConfig\n  private intervalRequest: any\n  private timeLogs: number[] = []\n\n  private mapRequestCalling = new Map<string, IRequestQueue>()\n  private requestQueue: IRequestQueue[] = []\n\n  constructor(configs: SingleFlightConfig) {\n    this.config = Object.assign(DEFAULT_SINGLE_FLIGHT_CONFIG, configs)\n  }\n\n  async load<T>(newRequest: IRequestQueue, callback: () => Promise<T>) {\n    const cacheData = SingleFlightCache.get(newRequest.key)\n    if (cacheData) return Promise.resolve(cacheData)\n\n    let isFetch = false\n    let request = this.mapRequestCalling.get(newRequest.key)\n    if (!request) {\n      request = newRequest\n      isFetch = true\n      this.mapRequestCalling.set(request.key, request)\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!request) return reject('Not found request!')\n      request.add(resolve, reject)\n      if (isFetch) {\n        this.fetch<T>(request, callback)\n      }\n    })\n  }\n\n  private fetch<T>(request: IRequestQueue, callback: () => Promise<T>) {\n    if (!this.validateLimit()) {\n      return this.addRequestQueue(request, callback)\n    }\n    this.createTimeLogs()\n\n    callback()\n      .then((response) => {\n        SingleFlightCache.set(request.key, response, this.config.cache)\n        request.resolves(response)\n      })\n      .catch((error) => {\n        request.rejects(error)\n      })\n      .finally(() => {\n        this.mapRequestCalling.delete(request.key)\n        this.fetchRequestQueue(callback)\n      })\n  }\n\n  private fetchRequestQueue(callback: () => Promise<any>) {\n    if (!this.validateLimit()) return\n    const request = this.requestQueue.shift()\n    if (request) this.load(request, callback)\n\n    if (this.requestQueue.length === 0 && this.intervalRequest) {\n      clearInterval(this.intervalRequest)\n    }\n  }\n\n  private addRequestQueue(\n    request: IRequestQueue,\n    callback: () => Promise<any>,\n  ) {\n    this.requestQueue.push(request)\n    this.intervalRequest = setInterval(() => {\n      this.fetchRequestQueue(callback)\n    }, this.config.limit?.time)\n  }\n\n  private validateLimit(): boolean {\n    return true\n  }\n\n  private createTimeLogs() {\n    if (!this.config.limit) return\n\n    const now = new Date().getTime()\n    this.timeLogs.push(now)\n    if (this.timeLogs.length > this.config.limit?.calls) {\n      this.timeLogs.shift()\n    }\n  }\n}\n","export interface IRequestQueue {\n  key: string\n  add(resolve: any, reject: any): void\n  resolves(data: any): void\n  rejects(error: any): void\n}\n\nexport class RequestQueue implements IRequestQueue {\n  key = ''\n  private resolveQueue: any[] = []\n  private rejectQueue: any[] = []\n  constructor(key: string) {\n    this.key = key\n  }\n\n  add(resolve: any, reject: any) {\n    this.resolveQueue.push(resolve)\n    this.rejectQueue.push(reject)\n  }\n\n  resolves(data: any) {\n    while (this.resolveQueue.length > 0) {\n      const resolve = this.resolveQueue.shift()\n      resolve(data)\n    }\n  }\n\n  rejects(error: any) {\n    while (this.rejectQueue.length > 0) {\n      const reject = this.rejectQueue.shift()\n      reject(error)\n    }\n  }\n}\n","// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint'\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import localForage from 'localforage'\nimport { account } from '@senswap/sen-js'\nimport IPFS from './ipfs'\n\n/**\n * Persistent Database\n */\nclass PDB {\n  readonly dbName: string\n  private driver: any\n  private ipfs: IPFS\n\n  constructor(walletAddress: string) {\n    if (!account.isAddress(walletAddress)) throw new Error('Invalid address')\n    this.dbName = walletAddress\n    this.driver = [localForage.WEBSQL, localForage.LOCALSTORAGE]\n    this.ipfs = new IPFS()\n  }\n\n  /**\n   * Local\n   */\n\n  createInstance = (appId: string): LocalForage => {\n    return localForage.createInstance({\n      driver: this.driver,\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  dropInstance = async (appId: string): Promise<void> => {\n    const instance = this.createInstance(appId)\n    await instance.clear()\n    return await localForage.dropInstance({\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  all = async (): Promise<any> => {\n    let data: any = {}\n    const appIds = (\n      ((await this.createInstance('sentre').getItem('appIds')) as string[]) ||\n      []\n    )\n      .flat()\n      .concat(['sentre'])\n    for (const appId of appIds) {\n      data[appId] = {}\n      const instance = this.createInstance(appId)\n      await instance.iterate((value: string, key: string) => {\n        data[appId][key] = value\n      })\n    }\n    return data\n  }\n\n  /**\n   * Cloud\n   */\n\n  fetch = async (cid: string) => {\n    return await this.ipfs.get(cid)\n  }\n\n  backup = async () => {\n    const data = await this.all()\n    return await this.ipfs.set(data)\n  }\n\n  restore = async (cid: string) => {\n    // Download data\n    const data = await this.fetch(cid)\n    // Apply to storage\n    for (const appId in data) {\n      const instance = await this.createInstance(appId)\n      for (const key in data[appId]) {\n        const value = data[appId][key]\n        await instance.setItem(key, value)\n      }\n    }\n    return data\n  }\n}\n\nexport default PDB\n\n/**\n * High abtraction pdb for app\n */\nexport const createPDB = (walletArress: string, appId: string) => {\n  return account.isAddress(walletArress)\n    ? new PDB(walletArress).createInstance(appId)\n    : undefined\n}\n","import { create, isIPFS } from 'ipfs-core'\nimport { asyncWait } from 'shared/util'\n\nclass IPFS {\n  private _ipfs: any = async () => {\n    try {\n      if (!window.ipfs) window.ipfs = await create()\n      return window.ipfs\n    } catch (er) {\n      await asyncWait(500)\n      return await this._ipfs()\n    }\n  }\n\n  static isCID = (cid: string | undefined | null): boolean => {\n    try {\n      if (!cid) return false\n      return isIPFS.multihash(cid)\n    } catch (er) {\n      return false\n    }\n  }\n\n  get = async (cid: string) => {\n    if (!IPFS.isCID(cid)) throw new Error('Invalid CID')\n    const ipfs = await this._ipfs()\n    const stream = await ipfs.cat(cid)\n    let raw = ''\n    for await (const chunk of stream) raw += Buffer.from(chunk).toString()\n    const data = JSON.parse(raw)\n    return data\n  }\n\n  set = async (data: object): Promise<string> => {\n    if (!data) throw new Error('Empty data')\n    const raw = JSON.stringify(data)\n    const ipfs = await this._ipfs()\n    const { path: cid } = await ipfs.add(raw)\n    return cid as string\n  }\n}\n\nexport default IPFS\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n\n/**\n * Chain ID\n */\nconst getChainId = () => {\n  switch (net) {\n    case 'devnet':\n      return 103\n    case 'testnet':\n      return 102\n    case 'mainnet':\n      return 101\n    default:\n      return 101\n  }\n}\nexport type ChainId = 101 | 102 | 103\nexport const chainId: ChainId = getChainId()\n","import { account, utils } from '@senswap/sen-js'\nimport numbro from 'numbro'\n\nimport { net } from 'shared/runtime'\nimport { DataLoader } from './dataloader'\n\n/**\n * Delay by async/await\n * @param ms - milisenconds\n * @returns\n */\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n/**\n * Shorten a long address\n * @param address - The long address\n * @param num - The number of the heading and trailing characters\n * @param delimiter - The delimiter\n * @returns Shortened address\n */\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\n/**\n * Build a explorer url by context including addresses or transaction ids\n * @param addressOrTxId - Address or TxId\n * @returns\n */\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n\n/**\n * Wrapped Numbro - https://numbrojs.com/old-format.html\n * @param value - value\n * @returns\n */\nexport const numeric = (\n  value?: number | string | BigInt,\n): ReturnType<typeof numbro> => {\n  if (!value) return numbro('0')\n  return numbro(value)\n}\n\n/**\n * Generate a random color\n * @param seed - Seed\n * @param opacity - Opacity\n * @returns\n */\nexport const randomColor = (seed?: string, opacity?: string | number) => {\n  let hash = Math.floor(Math.random() * 16777215)\n  if (seed) {\n    hash = 0\n    for (let i = 0; i < seed.length; i++) {\n      hash = seed.charCodeAt(i) + ((hash << 5) - hash)\n    }\n  }\n  var rgb = [0, 0, 0]\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255\n    rgb[i] = value\n  }\n  return `rgba(${rgb[0]}, 100, ${rgb[1]},${opacity || 1})`\n}\n\n/**\n * Fetch coingecko data with cache\n * @param ticket - Token ticket\n * @returns\n */\nexport const fetchCGK = async (ticket = '') => {\n  return DataLoader.load('fetchCGK' + ticket, () => utils.parseCGK(ticket))\n}\n"],"names":["CUSTOM_ICONS","forwardRef","ref","name","className","props","cln","src","notifyError","er","window","notify","type","description","message","NAME","initialState","methodSelected","undefined","mintSelected","fileName","selectedFile","visible","onSelectMethod","createAsyncThunk","async","setFileName","onSelectedMint","setVisible","onSelectedFile","checked","index","getState","main","recipients","errorData","nextRecipients","nextErrorData","selectedAll","idx","push","Number","idxError","length","nextSelected","indexOf","splice","removeSelectedFile","createSlice","reducers","extraReducers","builder","addCase","fulfilled","state","payload","Object","assign","merkleSDK","sdk","setSdk","useState","getAnchorProvider","useCallback","node","walletAddress","wallet","connection","web3","publicKey","Provider","signTransaction","signAllTransactions","signedTransactions","transaction","transactions","signedTransaction","commitment","skipPreflight","createSDK","sentre","splt","getAddress","anchorProvider","nodeUrl","provider","SolanaProvider","opts","MerkleDistributorSDK","useEffect","mintAddress","decimals","setDecimals","getDecimals","useMint","fetchDecimals","DEFAULT_AVATARS","size","icon","reversed","avatars","setAvatars","tokenProvider","pools","usePool","deriveAvatar","token","findByAddress","address","logoURI","deriveAvatars","account","poolData","values","find","mint_lpt","mint_a","mint_b","Promise","all","map","reverse","avatar","Avatar","style","backgroundColor","border","display","whiteSpace","i","DEFAULT_SYMBOL","separator","symbol","setSymbol","deriveSymbol","substring","deriveSymbols","symbols","join","shared","appId","process","url","devnet","spltAddress","splataAddress","testnet","mainnet","manifest","development","staging","production","env","sol","net","configs","useAppRouter","location","useLocation","history","useHistory","query","useMemo","URLSearchParams","search","getQuery","queryId","get","generateQuery","dataQuery","newQuery","key","set","toString","appRoute","pushHistory","claimProof","loading","setLoading","dispatch","useDispatch","useWallet","useMerkleSDK","mintDecimals","useMintDecimals","fetchDistributor","distributorAddr","MerkleDistributorWrapper","bufferProof","buffProof","proof","forEach","data","Buffer","from","onClaim","distributorInfo","amount","claimant","distributor","isClaimed","getClaimStatus","u64","err","tx","claim","PublicKey","signature","response","meta","confirm","content","txId","onClick","open","explorer","Modal","closeIcon","onCancel","footer","paddingBottom","Row","gutter","textAlign","Col","span","Image","REDEEM","preview","Space","direction","Typography","level","color","utils","BigInt","Button","SelectMethod","Step","CollapseAddNew","step","one","onSelectStep","addRecipients","addRecipient","recipient","newRecipients","removeRecipients","removeRecipient","setErrorData","setting","decimal","useSelector","isError","useValidateAmount","existedValidData","disabled","onBack","block","three","title","onConfirm","btnText","align","fontSize","timeoutId","max","onValue","onChange","error","setError","cursor","setCursor","innerRef","useRef","onAmount","val","onError","clearTimeout","setTimeout","test","parseFloat","current","setSelectionRange","Tooltip","Input","e","target","selectionStart","value","DEFAULT_RECIPIENT","ActionButton","addNewRecipient","remove","Fragment","padding","fonSize","isSelect","formInput","setRecipient","amountError","setAmountError","walletError","setWalletError","recipientInfo","validateAmount","disabledInput","justify","Checkbox","includes","onSelected","placeholder","autoComplete","nextData","newAmount","nextRecipient","isDecimal","calcTotalLamports","recipientInfos","lamports","editedSuccessData","filter","total","editedDataLength","quantity","Content","label","flex","WrapTotal","sate","useTotal","Card","bordered","borderRadius","boxShadow","bodyStyle","selected","onChecked","wrap","AlertIcon","editable","wrongAddress","placement","arrowPointAtCenter","EditButton","isEdited","onEdited","onUpdate","onDelete","accountAddress","setIsEdited","nextAmount","setNextAmount","amountRef","isValidAddress","amountValue","idxErrData","unshift","nextErrData","shortenAddress","focus","activeKey","onSelect","onCollapsed","setSelected","setActiveKey","filterRecipient","_","filterErrorData","Collapse","header","Spin","spinning","listDuplicate","setListDuplicate","detectErrorData","successData","upload","file","resolve","reject","Papa","skipEmptyLines","complete","parse","isDuplicate","oldAmount","Upload","accept","beforeUpload","onRemove","maxCount","showUploadList","progress","strokeWidth","showInfo","fileList","iconUpload","background","fontWeight","exampleCSV","fetch","fileCSV","then","reader","body","getReader","decoder","TextDecoder","read","result","decode","getFileCSV","fileDownload","setDecimal","setEncryption","encryption","setDisabled","Switch","checkedChildren","unCheckedChildren","Popover","trigger","redeemLink","copied","setCopied","TWITTER","shortenRedeemLink","text","asyncWait","params","prop","encodeURIComponent","cid","origin","redeem","HISTORY_COLUMN","dataIndex","render","time","moment","format","mint","numeric","histories","setHistories","fetchHistory","db","PDB","createInstance","getItem","height","Table","columns","dataSource","pagination","rowKey","record","steps","stepOneValue","two","stepTwoValue","Radio","buttonStyle","DEFAULT_VALUE","tokens","activeMintAddress","Select","tokenAddress","buildResult","balance","useAccountBalance","accounts","useAccount","DEFAULT_EMPTY_ADDRESS","setRedeemLink","setAccountAddress","deriveAssociatedAddress","useAccountBalanceByMintAddress","remainingBalance","tree","balanceTree","earnings","MerkleUtils","Tag","margin","Date","merkleRoot","Error","maxTotalClaim","distributorATA","createDistributor","tokenMint","root","maxNumNodes","pendingTx","send","wait","toBase58","srcAddress","txIdTransfer","transfer","ipfs","IPFS","newHistory","dataEncoded","claims","keys","newClaim","encodeData","setItem","redeemAt","CardOption","active","position","top","right","SelectInputMethod","method","setMethod","manual","setActiveMintAddress","singleMints","mints","setSingleMints","filterSingleMints","newSingleMints","mintAddr","useSingleMints","acc","width","xs","lg","auto","setClaimProof","setBackground","useUI","canRedeem","claimantData","light","BG","dark","md","Background","children","Array","apply","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","reducer","Page","UIProvider","antd","prefixCls","MintProvider","PoolProvider","AccountProvider","WalletProvider","store","model","SingleFlightCache","DEFAULT_CACHE_CONFIG","this","mapCache","delete","ttl","Map","DEFAULT_SINGLE_FLIGHT_CONFIG","limit","calls","cache","DataLoader","instanceKey","JSON","stringify","mapInstance","has","instance","newSingleFlight","SingleFlight","requestKey","callback","singleFlight","getSingleFlight","newRequest","RequestQueue","load","constructor","config","intervalRequest","timeLogs","mapRequestCalling","requestQueue","cacheData","isFetch","request","add","validateLimit","addRequestQueue","createTimeLogs","resolves","catch","rejects","finally","fetchRequestQueue","shift","clearInterval","setInterval","now","getTime","resolveQueue","rejectQueue","appName","prototype","toJSON","serializableCheck","isSerializable","isArray","obj","proto","getPrototypeOf","isPlainObject","dbName","driver","localForage","storeName","dropInstance","clear","appIds","flat","concat","iterate","backup","restore","_ipfs","create","isCID","stream","cat","raw","chunk","path","isIPFS","KEY","localStorage","convert","storage","getNetwork","chainId","getChainId","ms","num","delimiter","addressOrTxId","numbro"],"sourceRoot":""}