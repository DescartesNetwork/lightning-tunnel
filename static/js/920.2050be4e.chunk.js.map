{"version":3,"file":"static/js/920.2050be4e.chunk.js","mappings":"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","sources":["../../src/Layout.ts","../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/account.ts","../../src/bpf-loader-deprecated.ts","../../src/layout.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/util/assert.ts","../../src/transaction.ts","../../src/sysvar.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/nonce-account.ts","../../src/system-program.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/connection.ts","../../src/util/url.ts","../../src/util/promise-timeout.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/vote-program.ts","../../src/util/send-and-confirm-raw-transaction.ts","../../src/util/cluster.ts","../../src/index.ts","../node_modules/base64-js/index.js","../node_modules/bn.js/lib/bn.js","../node_modules/eventemitter3/index.js"],"sourcesContent":[null,"import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = await this.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkey: Uint8Array): boolean {\n    return is_on_curve(pubkey) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import nacl from 'tweetnacl';\nimport type {SignKeyPair as KeyPair} from 'tweetnacl';\nimport type {Buffer} from 'buffer';\n\nimport {toBuffer} from './util/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return toBuffer(this._keypair.secretKey);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {Connection} from './connection';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nconst SIGNATURE_LENGTH = 64;\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n */\nexport type TransactionCtorFields = {\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash | null;\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts?: TransactionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    accountMetas.sort(function (x, y) {\n      const pubkeySorting = x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58());\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable =\n        x.isWritable === y.isWritable ? pubkeySorting : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n    this._verifySignatures(message.serialize(), true);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction: TransactionInstruction): TransferParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): TransferWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: number;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        BufferLayout.ns64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: params.lamports});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport fetch from 'cross-fetch';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {IWSRequestParams} from 'rpc-websockets/dist/lib/client';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {promiseTimeout} from './util/promise-timeout';\nimport {toBuffer} from './util/to-buffer';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware:\n    | ((url: string, options: any) => Promise<Response>)\n    | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (url: string, options: any) => {\n      const modifiedFetchArgs = await new Promise<[string, any]>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(url, options, (modifiedUrl, modifiedOptions) =>\n              resolve([modifiedUrl, modifiedOptions]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64) */\n  encoding?: 'base64' | 'jsonParsed';\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype SubscriptionId = 'subscribing' | number;\n\n/**\n * @internal\n */\ntype AccountSubscriptionInfo = {\n  publicKey: string; // PublicKey of the account as a base 58 string\n  callback: AccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype ProgramAccountSubscriptionInfo = {\n  programId: string; // PublicKey of the program as a base 58 string\n  callback: ProgramAccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * @internal\n */\ntype SlotSubscriptionInfo = {\n  callback: SlotChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * @private\n */\ntype SlotUpdateSubscriptionInfo = {\n  callback: SlotUpdateCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * @internal\n */\ntype SignatureSubscriptionInfo = {\n  signature: TransactionSignature; // TransactionSignature as a base 58 string\n  callback: SignatureSubscriptionCallback;\n  options?: SignatureSubscriptionOptions;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\ntype RootSubscriptionInfo = {\n  callback: RootChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * @private\n */\ntype LogsSubscriptionInfo = {\n  callback: LogsCallback;\n  filter: LogsFilter;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  commitment?: Commitment;\n};\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  url: string,\n  options: any,\n  fetch: (modifiedUrl: string, modifiedOptions: any) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    recentBlockhash: Blockhash | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    recentBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ _accountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _accountChangeSubscriptions: {\n    [id: number]: AccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _programAccountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _programAccountChangeSubscriptions: {\n    [id: number]: ProgramAccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _rootSubscriptionCounter: number = 0;\n  /** @internal */ _rootSubscriptions: {\n    [id: number]: RootSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _signatureSubscriptionCounter: number = 0;\n  /** @internal */ _signatureSubscriptions: {\n    [id: number]: SignatureSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotSubscriptionCounter: number = 0;\n  /** @internal */ _slotSubscriptions: {\n    [id: number]: SlotSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _logsSubscriptionCounter: number = 0;\n  /** @internal */ _logsSubscriptions: {\n    [id: number]: LogsSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotUpdateSubscriptionCounter: number = 0;\n  /** @internal */ _slotUpdateSubscriptions: {\n    [id: number]: SlotUpdateSubscriptionInfo;\n  } = {};\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitment,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n  async confirmTransaction(\n    signature: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n\n    let subscriptionId;\n    let response: RpcResponseAndContext<SignatureResult> | null = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            response = {\n              context,\n              value: result,\n            };\n            resolve(null);\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip': {\n        timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n        break;\n      }\n      // exhaust enums to ensure full coverage\n      case 'finalized':\n      case 'max':\n      case 'root':\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(\n        `Transaction was not confirmed in ${duration.toFixed(\n          2,\n        )} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`,\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n  async getLatestBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; lastValidBlockHeight: number}> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n  async getLatestBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; lastValidBlockHeight: number}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get latest blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block height information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block production information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _recentBlockhash(disableCache: boolean): Promise<Blockhash> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<Blockhash> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      for (let i = 0; i < 50; i++) {\n        const {blockhash} = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return blockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      transaction = transactionOrMessage;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._resetSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  async _subscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n    rpcArgs: IWSRequestParams,\n  ) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n        if (typeof id === 'number' && sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n        if (err instanceof Error) {\n          console.error(\n            `${rpcMethod} error for argument`,\n            rpcArgs,\n            err.message,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async _unsubscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n  ) {\n    const subscriptionId = sub.subscriptionId;\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId: number = subscriptionId;\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error:`, err.message);\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _resetSubscriptions() {\n    Object.values(this._accountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._programAccountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._rootSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._signatureSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotUpdateSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(\n      Number,\n    );\n    const programKeys = Object.keys(\n      this._programAccountChangeSubscriptions,\n    ).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(\n      Number,\n    );\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    const logsKeys = Object.keys(this._logsSubscriptions).map(Number);\n    if (\n      accountKeys.length === 0 &&\n      programKeys.length === 0 &&\n      slotKeys.length === 0 &&\n      slotUpdateKeys.length === 0 &&\n      signatureKeys.length === 0 &&\n      rootKeys.length === 0 &&\n      logsKeys.length === 0\n    ) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'accountSubscribe',\n        this._buildArgs([sub.publicKey], sub.commitment, 'base64'),\n      );\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'programSubscribe',\n        this._buildArgs([sub.programId], sub.commitment, 'base64', {\n          filters: sub.filters,\n        }),\n      );\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of slotUpdateKeys) {\n      const sub = this._slotUpdateSubscriptions[id];\n      this._subscribe(sub, 'slotsUpdatesSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      const args: any[] = [sub.signature];\n      if (sub.options) args.push(sub.options);\n      this._subscribe(sub, 'signatureSubscribe', args);\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n\n    for (let id of logsKeys) {\n      const sub = this._logsSubscriptions[id];\n      let filter;\n      if (typeof sub.filter === 'object') {\n        filter = {mentions: [sub.filter.toString()]};\n      } else {\n        filter = sub.filter;\n      }\n      this._subscribe(\n        sub,\n        'logsSubscribe',\n        this._buildArgs([filter], sub.commitment),\n      );\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const res = create(notification, AccountNotificationResult);\n    for (const sub of Object.values(this._accountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeAccountChangeListener(id: number): Promise<void> {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown account change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const res = create(notification, ProgramAccountNotificationResult);\n    for (const sub of Object.values(this._programAccountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        const {value, context} = res.result;\n        sub.callback(\n          {\n            accountId: value.pubkey,\n            accountInfo: value.account,\n          },\n          context,\n        );\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): number {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n      filters,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(id: number): Promise<void> {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown program account change id: ${id}`);\n    }\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._logsSubscriptionCounter;\n    this._logsSubscriptions[id] = {\n      filter,\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id subscription id to deregister.\n   */\n  async removeOnLogsListener(id: number): Promise<void> {\n    if (!this._logsSubscriptions[id]) {\n      throw new Error(`Unknown logs id: ${id}`);\n    }\n    const subInfo = this._logsSubscriptions[id];\n    delete this._logsSubscriptions[id];\n    await this._unsubscribe(subInfo, 'logsUnsubscribe');\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const res = create(notification, LogsNotificationResult);\n    const keys = Object.keys(this._logsSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._logsSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const res = create(notification, SlotNotificationResult);\n    for (const sub of Object.values(this._slotSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): number {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotChangeListener(id: number): Promise<void> {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const res = create(notification, SlotUpdateNotificationResult);\n    for (const sub of Object.values(this._slotUpdateSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): number {\n    const id = ++this._slotUpdateSubscriptionCounter;\n    this._slotUpdateSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotUpdateListener(id: number): Promise<void> {\n    if (this._slotUpdateSubscriptions[id]) {\n      const subInfo = this._slotUpdateSubscriptions[id];\n      delete this._slotUpdateSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot update id: ${id}`);\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const res = create(notification, SignatureNotificationResult);\n    for (const [id, sub] of Object.entries(this._signatureSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        if (res.result.value === 'receivedSignature') {\n          sub.callback(\n            {\n              type: 'received',\n            },\n            res.result.context,\n          );\n        } else {\n          // Signatures subscriptions are auto-removed by the RPC service so\n          // no need to explicitly send an unsubscribe message\n          delete this._signatureSubscriptions[Number(id)];\n          this._updateSubscriptions();\n          sub.callback(\n            {\n              type: 'status',\n              result: res.result.value,\n            },\n            res.result.context,\n          );\n        }\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n        }\n      },\n      options: {commitment},\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      options,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSignatureListener(id: number): Promise<void> {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown signature result id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const res = create(notification, RootNotificationResult);\n    for (const sub of Object.values(this._rootSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): number {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeRootChangeListener(id: number): Promise<void> {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown root change id: ${id}`);\n    }\n  }\n}\n","export function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","export function promiseTimeout<T>(\n  promise: Promise<T>,\n  timeoutMs: number,\n): Promise<T | null> {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  const timeoutPromise: Promise<null> = new Promise(resolve => {\n    timeoutId = setTimeout(() => resolve(null), timeoutMs);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then((result: T | null) => {\n    clearTimeout(timeoutId);\n    return result;\n  });\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `std::mem::size_of::<StakeState>()`:\n   * https://docs.rs/solana-stake-program/1.4.4/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {Connection} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './ed25519-program';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './publickey';\nexport * from './stake-program';\nexport * from './system-program';\nexport * from './secp256k1-program';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './vote-program';\nexport * from './sysvar';\nexport * from './errors';\nexport * from './util/borsh-schema';\nexport * from './util/send-and-confirm-transaction';\nexport * from './util/send-and-confirm-raw-transaction';\nexport * from './util/cluster';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n"],"names":["checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","buffer_1","from","buffer","byteOffset","length","Layout","constructor","span","property","Number","isInteger","makeDestinationObject","getSpan","offset","RangeError","replicate","rv","Object","create","prototype","assign","fromArray","values","nameWithProperty","name","lo","ExternalLayout","isCount","Error","GreedyCount","elementSpan","decode","rem","Math","floor","encode","src","OffsetLayout","layout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","idx","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","hasOwnProperty","call","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","word","msb","value","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","exports","toBuffer","arr","Buffer","byteLength","minimalisticAssert","assert","val","msg","equal","l","r","inherits_browserModule","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","require$$0","inherits","require$$1","isSurrogatePair","charCodeAt","htonl","w","zero2","zero8","enc","res","replace","parseInt","p","c","endian","end","len","k","m","a","d","buf","pos","ah","al","bh","hi","bl","ch","cl","dh","dl","carry","eh","el","num","utils","BlockHash","this","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","update","toArray","concat","join32","_update","digest","_pad","_digest","bytes","t","rotr32","ch32","x","y","z","maj32","p32","s","common","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","h","W","_1","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","_256","f","g","T1","T2","SHA224","_224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","_512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","_384","require$$4","sum32_3","RIPEMD160","j","K","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","key","Hash","inner","outer","_init","hmac","sha","ripemd","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","_normalizeError","missing","forEach","form","normalize","join","fromCharCode","message","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","version","defineProperty","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","hex","JSON","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","checkAbstract","censorship","permanent","globalLogger","logger","addSlice","array","arguments","arrayify","options","result","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","isBytes","data","Struct","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Enum","super","enum","map","Map","MAX_SEED_LENGTH","PublicKey","_bn","isPublicKeyData","decoded","bs58","BN","equals","publicKey","eq","toBase58","toBytes","toJSON","toArrayLike","zeroPad","fromPublicKey","seed","programId","seeds","publicKeyBytes","is_on_curve","address","nonce","seedsWithNonce","createProgramAddress","err","pubkey","default","set","naclLowLevel","nacl","gf","chk","den","den2","den4","den6","set25519","gf1","unpack25519","S","M","Z","pow2523","neq25519","I","pack25519","crypto_verify_32","Account","secretKey","_keypair","BPF_LOADER_DEPRECATED_PROGRAM_ID","BufferLayout","rustString","rsl","_decode","_encode","rslShim","str","chars","alloc","decodeLength","size","elem","encodeLength","rem_len","Message","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","programIdIndex","isAccountSigner","index","numRequiredSignatures","isAccountWritable","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","isProgramId","has","programIds","nonProgramIds","filter","_","numKeys","keyCount","shortvec","instruction","accounts","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","PACKET_DATA_SIZE","instructionBufferLength","signDataLayout","transaction","signData","byteArray","accountCount","dataSlice","messageArgs","DEFAULT_SIGNATURE","fill","TransactionInstruction","opts","Transaction","signature","signatures","feePayer","nonceInfo","add","items","item","compileMessage","nonceInstruction","accountMetas","accountMeta","includes","isSigner","isWritable","sort","pubkeySorting","localeCompare","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","findIndex","feePayerIndex","payerMeta","splice","signedKeys","unsignedKeys","indexOf","meta","invariant","keyIndex","_compile","every","pair","serializeMessage","connection","getFeeForMessage","setSigners","signers","seen","Set","sign","uniqueSigners","signer","_partialSign","_verifySignatures","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","async","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","sleep","ms","Promise","resolve","setTimeout","encodeData","type","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","SystemInstruction","checkProgramId","typeIndex","ixType","entries","SYSTEM_INSTRUCTION_LAYOUTS","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","Transfer","toPubkey","TransferWithSeed","basePubkey","Allocate","accountPubkey","base","AllocateWithSeed","Assign","AssignWithSeed","CreateWithSeed","authorized","InitializeNonceAccount","noncePubkey","AdvanceNonceAccount","WithdrawNonceAccount","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","expectedLength","freeze","createAccountWithSeed","createAccount","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","ceil","chunkSize","payer","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLength","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","BPF_LOADER_PROGRAM_ID","BpfLoader","getMinNumSignatures","elf","loaderProgramId","load","global","self","__self__","F","fetch","DOMException","support","Symbol","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","normalizeName","test","normalizeValue","iteratorFor","iterator","next","done","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","rejected","arrayBuffer","then","text","readAsText","readBlobAsText","readArrayBufferAsText","formData","json","parse","oldValue","callback","thisArg","methods","Request","input","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","trim","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","location","stack","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","ctx","module","trailingZeros","n","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","PublicKeyFromString","coerce","instance","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","createRpcResult","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","schema","jsonRpcResultAndContext","context","number","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","state","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetBlockRpcResult","blockhash","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","lastValidBlockHeight","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","endpoint","commitmentOrConfig","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","lastFetch","transactionSignatures","simulatedSignatures","_accountChangeSubscriptionCounter","_accountChangeSubscriptions","_programAccountChangeSubscriptionCounter","_programAccountChangeSubscriptions","_rootSubscriptionCounter","_rootSubscriptions","_signatureSubscriptionCounter","_signatureSubscriptions","_slotSubscriptionCounter","_slotSubscriptions","_logsSubscriptionCounter","_logsSubscriptions","_slotUpdateSubscriptionCounter","_slotUpdateSubscriptions","URL","protocol","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","client","confirmTransactionInitialTimeout","useHttps","host","port","makeWebsocketUrl","fetchWithMiddleware","modifiedFetchArgs","modifiedUrl","modifiedOptions","RpcClient","agent","too_many_requests_retries","waitTime","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","_buildArgs","unsafeRes","getBalanceAndContext","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","arg","mintAddress","getAccountInfoAndContext","publicKeys","getMultipleAccountsInfoAndContext","configOrCommitment","extra","encoding","filters","decodedSignature","Date","now","subscriptionCommitment","subscriptionId","confirmPromise","onSignature","timeoutMs","timeoutId","timeoutPromise","race","clearTimeout","promiseTimeout","removeSignatureListener","duration","toFixed","startSlot","limit","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","addresses","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","rest","block","endSlot","transactionDetails","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","getSlot","before","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","getNonceAndContext","to","disableCache","expired","_pollNewBlockhash","startTime","getRecentBlockhash","MS_PER_SLOT","transactionOrMessage","includeAccounts","_recentBlockhash","encodedTransaction","sigVerify","traceIndent","logTrace","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","clearInterval","_resetSubscriptions","sub","rpcMethod","rpcArgs","unsubscribeId","programKeys","slotKeys","slotUpdateKeys","signatureKeys","rootKeys","logsKeys","_subscribe","mentions","connect","close","notification","onAccountChange","subInfo","_unsubscribe","accountId","onProgramAccountChange","onLogs","onSlotChange","onSlotUpdate","override","onSignatureWithOptions","onRootChange","Keypair","keypair","skipValidation","TextEncoder","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","fromSecretKey","createInstructionWithPublicKey","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","lockup","Initialize","stakePubkey","Delegate","newAuthorized","stakeAuthorizationType","Authorize","o","custodianPubkey","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","Split","splitStakePubkey","Merge","sourceStakePubKey","Withdraw","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","splitInstruction","publicKeyCreate","ecdsaSign","secp256k1","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","sha3","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","startsWith","substr","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","recid","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","authorizedWithdrawer","votes","authorizedVoters","priorVoters","lastTimestamp","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","authorizedVoter","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","VoteInit","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","voteInit","InitializeAccount","voteAuthorizationType","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","sendAndConfirmRawTransaction","http","devnet","testnet","https","clusterApiUrl","cluster","tls","LAMPORTS_PER_SOL","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","output","isBN","negative","words","red","wordSize","window","require","parseHex4Bits","parseHexByte","lowerBound","parseBase","mul","min","move","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","_strip","limbLen","limbPow","mod","imuln","_iaddn","_move","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","out","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","outLen","prev","mod3","one","nOne","lpow","inv","wnd","currentLen","mont","u","prefix","Events","EE","fn","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","removeAllListeners","prefixed"],"sourceRoot":""}