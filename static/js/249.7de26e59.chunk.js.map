{"version":3,"file":"static/js/249.7de26e59.chunk.js","mappings":"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","sources":["../node_modules/pako/dist/pako.esm.mjs","../../../../src/utils/bytes/hex.ts","../../../../src/utils/bytes/utf8.ts","../../../../src/utils/bytes/bs58.ts","../../../../src/utils/bytes/base64.ts","../../../../src/provider.ts","../../../../src/utils/features.ts","../../../../src/error.ts","../../../node_modules/snake-case/node_modules/tslib/tslib.es6.js","../../../node_modules/dot-case/node_modules/tslib/tslib.es6.js","../../../node_modules/lower-case/dist.es2015/index.js","../../../node_modules/no-case/dist.es2015/index.js","../../../node_modules/dot-case/dist.es2015/index.js","../../../../src/coder/borsh/idl.ts","../../../../src/coder/borsh/instruction.ts","../../../node_modules/snake-case/dist.es2015/index.js","../../../../src/coder/common.ts","../../../../src/coder/borsh/accounts.ts","../../../../src/coder/borsh/event.ts","../../../../src/coder/borsh/state.ts","../../../../src/coder/borsh/index.ts","../../../node_modules/buffer-layout/lib/Layout.js","../../../../src/coder/spl-token/instruction.ts","../../../../src/coder/spl-token/state.ts","../../../../src/coder/spl-token/buffer-layout.ts","../../../../src/coder/spl-token/accounts.ts","../../../../src/coder/spl-token/events.ts","../../../../src/coder/spl-token/index.ts","../../../../src/utils/sha256.ts","../../../../src/program/common.ts","../../../../src/utils/rpc.ts","../../../../src/utils/common.ts","../../../../src/utils/pubkey.ts","../../../../src/utils/token.ts","../../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../../../src/utils/registry.ts","../../../../src/idl.ts","../../../../src/program/context.ts","../../../../src/program/namespace/instruction.ts","../../../../src/program/namespace/rpc.ts","../../../../src/program/namespace/transaction.ts","../../../../src/program/namespace/state.ts","../../../../src/program/namespace/account.ts","../../../../src/program/event.ts","../../../../src/spl/token.ts","../../../../src/program/accounts-resolver.ts","../../../../src/program/namespace/methods.ts","../../../../src/program/index.ts","../../../../src/program/namespace/index.ts","../../../../src/program/namespace/simulate.ts","../../../../src/spl/index.ts","../../../src/error.ts","../../../../../src/program/namespace/instruction.ts","../../../src/index.ts","../../../src/errors.ts","../../../src/generateAccountParsers.ts","../../../../src/utils/provider.ts","../../../../src/utils/programs.ts","../../../../src/utils/coder.ts","../../../../src/utils/accounts.ts","../../../../src/idls/merkle_distributor.ts","../../../src/constants.ts","../node_modules/tslib/tslib.es6.js","../../../src/pda.ts","../../../../src/utils/merkle-tree.ts","../../../../src/utils/balance-tree.ts","../../../../src/utils/bytes32.ts","../../../../src/utils/parse-balance-map.ts","../../../src/wrapper.ts","../../../src/sdk.ts","../../../../src/computeBudget/layouts.ts","../../../../src/computeBudget/instructions.ts","../../../../src/computeBudget/index.ts","../../../../src/utils/instructions.ts","../../../../src/utils/misc.ts","../../../../src/utils/printTXTable.ts","../../../../src/utils/pubkeyCache.ts","../../../../src/utils/simulateTransactionWithCommitment.ts","../../../../src/transaction/txSizer.ts","../../../../src/transaction/utils.ts","../../../../src/transaction/TransactionEnvelope.ts","../../../src/provider.ts","../../../../src/transaction/programErr.ts","../../../../src/transaction/PendingTransaction.ts","../../../../src/transaction/TransactionReceipt.ts","../../../src/broadcaster.ts","../../../src/wallet.ts","../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/global.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/util.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/assert.js","../../node_modules/buffer-layout/lib/Layout.js","../../client/layout.js","../../client/util/send-and-confirm-transaction.js","../../client/token.js","../../../src/ata.ts","../../../src/layout.ts","../../../../src/instructions/ata.ts","../../../src/utils.ts","../../../src/fraction.ts","../../../src/percent.ts","../../../src/tokenAmount.ts","../../../src/splTokenRegistry.ts","../../../src/token.ts","../../../src/common.ts","../node_modules/@senswap/react-lazyload/lib/index.js","../node_modules/@senswap/react-lazyload/lib/utils/debounce.js","../node_modules/@senswap/react-lazyload/lib/utils/event.js","../node_modules/@senswap/react-lazyload/lib/utils/scrollParent.js","../node_modules/@senswap/react-lazyload/lib/utils/throttle.js","../node_modules/assert/build/assert.js","../node_modules/assert/build/internal/assert/assertion_error.js","../node_modules/assert/build/internal/errors.js","../node_modules/assert/build/internal/util/comparisons.js","../node_modules/big.js/big.js","../node_modules/buffer-layout/lib/Layout.js","../node_modules/camelcase/index.js","../node_modules/decimal.js-light/decimal.js","../node_modules/define-properties/index.js","../node_modules/es6-object-assign/index.js","../node_modules/has-property-descriptors/index.js","../node_modules/is-nan/implementation.js","../node_modules/is-nan/index.js","../node_modules/is-nan/polyfill.js","../node_modules/is-nan/shim.js","../node_modules/js-file-download/file-download.js","../node_modules/js-sha256/src/sha256.js","../../tsc-out/jsbi.mjs","../node_modules/lodash.camelcase/index.js","../node_modules/lodash.mapvalues/index.js","../node_modules/browser-pack/_prelude.js","../node_modules/bignumber.js/bignumber.js","en-US.js","formatting.js","globalState.js","loading.js","manipulating.js","numbro.js","parsing.js","unformatting.js","validating.js","../node_modules/object-is/implementation.js","../node_modules/object-is/index.js","../node_modules/object-is/polyfill.js","../node_modules/object-is/shim.js","../node_modules/object-keys/implementation.js","../node_modules/object-keys/index.js","../node_modules/object-keys/isArguments.js","../node_modules/papaparse/papaparse.min.js","../node_modules/promise-retry/index.js","../node_modules/promise-retry/node_modules/err-code/index.js","../node_modules/promise-retry/node_modules/retry/index.js","../node_modules/promise-retry/node_modules/retry/lib/retry.js","../node_modules/promise-retry/node_modules/retry/lib/retry_operation.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-copy-to-clipboard/lib/Component.js","../node_modules/react-copy-to-clipboard/lib/index.js","../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../node_modules/toformat/toFormat.js"],"sourcesContent":["\n/*! pako 2.0.4 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) =>\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nconst copy_block = (s, buf, len, header) =>\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  s.pending_buf.set(s.window.subarray(buf, buf + len), s.pending);\n  s.pending += len;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) =>\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) =>\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let lx = 0;         /* running index in l_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) =>\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let black_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) =>\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //let out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst EXTRA_STATE = 69;\nconst NAME_STATE = 73;\nconst COMMENT_STATE = 91;\nconst HCRC_STATE = 103;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  let max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    const max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n};\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH$2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$2; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR$2; }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\nconst deflate$2 = (strm, flush) => {\n\n  let beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  s.strm = strm; /* just in case */\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n      let level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 30;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n  let base_index = 0;\n//  let shoextra;    /* extra bits table to use */\n  let end;                    /* use base and extra for symbol > end */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n  let extra_index = 0;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 1;       /* i: waiting for magic header */\nconst    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 3;       /* i: waiting for modification time (gzip) */\nconst    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 7;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 9;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 10;    /* i: waiting for dictionary check value */\nconst    DICT = 11;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 14;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 18;   /* i: waiting for code length code lengths */\nconst        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nconst            LEN = 21;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 22;    /* i: waiting for length extra bits */\nconst            DIST = 23;      /* i: waiting for distance code */\nconst            DISTEXT = 24;   /* i: waiting for distance extra bits */\nconst            MATCH = 25;     /* o: waiting for output space to copy string */\nconst            LIT = 26;       /* o: waiting for output space to write literal */\nconst    CHECK = 27;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 29;      /* finished check, done -- remain here until reset */\nconst    BAD = 30;       /* got a data error -- remain here until reset */\nconst    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n",null,null,null,null,null,null,null,"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"\\u0069\\u0307\",\n            J: \"\\u006A\\u0307\",\n            Į: \"\\u012F\\u0307\",\n            Ì: \"\\u0069\\u0307\\u0300\",\n            Í: \"\\u0069\\u0307\\u0301\",\n            Ĩ: \"\\u0069\\u0307\\u0303\",\n        },\n    },\n};\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str) {\n    return str.toLowerCase();\n}\n//# sourceMappingURL=index.js.map","import { lowerCase } from \"lower-case\";\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nexport function dotCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \".\" }, options));\n}\n//# sourceMappingURL=index.js.map",null,null,"import { __assign } from \"tslib\";\nimport { dotCase } from \"dot-case\";\nexport function snakeCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return dotCase(input, __assign({ delimiter: \"_\" }, options));\n}\n//# sourceMappingURL=index.js.map",null,null,null,null,null,"/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n",null,null,null,null,null,null,null,null,null,null,null,null,"var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import type { Idl } from \"@project-serum/anchor\";\nimport type { IdlErrorCode } from \"@project-serum/anchor/dist/esm/idl\";\n\nimport type { AnchorError } from \".\";\n\nexport type ErrorMap<T extends Idl> = {\n  [K in AnchorError<T>[\"name\"]]: AnchorError<T> & { name: K };\n};\n\n/**\n * Generates the error mapping\n * @param idl\n * @returns\n */\nexport const generateErrorMap = <T extends Idl>(idl: T): ErrorMap<T> => {\n  return (idl.errors?.reduce((acc, err) => {\n    return {\n      ...acc,\n      [err.name]: err,\n    };\n  }, {}) ?? {}) as ErrorMap<T>;\n};\n\n/**\n * Returns a RegExp which matches the message of a program error.\n * @param err\n * @returns\n */\nexport const matchError = (err: IdlErrorCode): RegExp =>\n  matchErrorCode(err.code);\n\n/**\n * Returns a RegExp which matches the code of a custom program error.\n * @param err\n * @returns\n */\nexport const matchErrorCode = (code: number): RegExp =>\n  new RegExp(`custom program error: 0x${code.toString(16)}`);\n","import type { AccountsCoder, Idl } from \"@project-serum/anchor\";\nimport { BorshAccountsCoder } from \"@project-serum/anchor\";\nimport camelCase from \"lodash.camelcase\";\n\n/**\n * Parsers associated with an IDL.\n */\nexport type AccountParsers<M> = {\n  [K in keyof M]: (data: Buffer) => M[K];\n};\n\n/**\n * Creates parsers for accounts.\n *\n * This is intended to be called once at initialization.\n *\n * @param idl The IDL.\n */\nexport const generateAccountParsers = <M extends Record<string, object>>(\n  idl: Idl\n): AccountParsers<M> => {\n  const coder = new BorshAccountsCoder(idl);\n  return generateAccountParsersFromCoder(\n    idl.accounts?.map((a) => a.name),\n    coder\n  );\n};\n\n/**\n * Creates parsers for accounts.\n *\n * This is intended to be called once at initialization.\n *\n * @param idl The IDL.\n */\nexport const generateAccountParsersFromCoder = <M>(\n  accountNames: string[] | undefined,\n  coder: AccountsCoder\n): AccountParsers<M> => {\n  return (accountNames ?? []).reduce((parsers, account) => {\n    parsers[camelCase(account) as keyof M] = (data: Buffer) =>\n      coder.decode<M[keyof M]>(account, data);\n    return parsers;\n  }, {} as AccountParsers<M>);\n};\n","import type { Provider as IAnchorProvider } from \"@project-serum/anchor\";\nimport * as anchor from \"@project-serum/anchor\";\nimport type {\n  Provider as SaberProvider,\n  ReadonlyProvider as ReadonlySaberProvider,\n  Wallet,\n} from \"@saberhq/solana-contrib\";\nimport {\n  SolanaProvider,\n  SolanaReadonlyProvider,\n} from \"@saberhq/solana-contrib\";\nimport type { ConfirmOptions, Connection } from \"@solana/web3.js\";\n\nexport interface AnchorProvider extends IAnchorProvider {\n  wallet: Wallet;\n  opts: ConfirmOptions;\n}\n\nconst anchorModule = anchor;\n\n/**\n * Class used to create new {@link AnchorProvider}s.\n */\nexport const AnchorProviderClass: AnchorProviderCtor &\n  typeof anchor.AnchorProvider =\n  \"AnchorProvider\" in anchorModule\n    ? anchorModule.AnchorProvider\n    : (\n        anchorModule as unknown as {\n          Provider: AnchorProviderCtor & typeof anchor.AnchorProvider;\n        }\n      ).Provider;\n\n/**\n * Constructor for an Anchor provider.\n */\nexport type AnchorProviderCtor = new (\n  connection: Connection,\n  wallet: Wallet,\n  opts: ConfirmOptions\n) => AnchorProvider;\n\n/**\n * Create a new Anchor provider.\n *\n * @param connection\n * @param wallet\n * @param opts\n * @returns\n */\nexport const buildAnchorProvider = (\n  connection: Connection,\n  wallet: Wallet,\n  opts: ConfirmOptions\n) => {\n  return new AnchorProviderClass(connection, wallet, opts);\n};\n\n/**\n * Creates a readonly Saber Provider from an Anchor provider.\n * @param anchorProvider The Anchor provider.\n * @returns\n */\nexport const makeReadonlySaberProvider = (\n  anchorProvider: IAnchorProvider\n): ReadonlySaberProvider => {\n  return new SolanaReadonlyProvider(anchorProvider.connection);\n};\n\n/**\n * Creates a Saber Provider from an Anchor provider.\n * @param anchorProvider The Anchor provider.\n * @returns\n */\nexport const makeSaberProvider = (\n  anchorProvider: anchor.AnchorProvider\n): SaberProvider => {\n  return SolanaProvider.init({\n    connection: anchorProvider.connection,\n    wallet: anchorProvider.wallet,\n    opts: anchorProvider.opts,\n  });\n};\n\n/**\n * Creates an Anchor Provider from a Saber provider.\n * @param saberProvider\n * @returns\n */\nexport const makeAnchorProvider = (\n  saberProvider: ReadonlySaberProvider\n): AnchorProvider => {\n  return buildAnchorProvider(\n    saberProvider.connection,\n    saberProvider.wallet,\n    saberProvider.opts\n  );\n};\n","import type { Idl } from \"@project-serum/anchor\";\nimport { Program } from \"@project-serum/anchor\";\nimport type {\n  Provider as SaberProvider,\n  ReadonlyProvider as ReadonlySaberProvider,\n} from \"@saberhq/solana-contrib\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport mapValues from \"lodash.mapvalues\";\n\nimport { makeAnchorProvider } from \"./provider\";\n\n/**\n * Builds a program from its IDL.\n *\n * @param idl\n * @param address\n * @param provider\n * @returns\n */\nexport const newProgram = <P>(\n  idl: Idl,\n  address: PublicKey,\n  provider: SaberProvider | ReadonlySaberProvider\n) => {\n  return new Program(\n    idl,\n    address.toString(),\n    makeAnchorProvider(provider)\n  ) as unknown as P;\n};\n\n/**\n * Builds a map of programs from their IDLs and addresses.\n *\n * @param provider\n * @param programs\n * @returns\n */\nexport const newProgramMap = <P>(\n  provider: SaberProvider | ReadonlySaberProvider,\n  idls: {\n    [K in keyof P]: Idl;\n  },\n  addresses: {\n    [K in keyof P]: PublicKey;\n  }\n): {\n  [K in keyof P]: P[K];\n} => {\n  return mapValues(idls, (idl, k: keyof P) =>\n    newProgram(idl, addresses[k], provider)\n  ) as unknown as {\n    [K in keyof P]: P[K];\n  };\n};\n","import type { Accounts, Idl } from \"@project-serum/anchor\";\nimport { BorshCoder, EventParser, utils } from \"@project-serum/anchor\";\nimport type { InstructionDisplay } from \"@project-serum/anchor/dist/cjs/coder/borsh/instruction\";\nimport type {\n  IdlAccountItem,\n  IdlTypeDef,\n} from \"@project-serum/anchor/dist/cjs/idl\";\nimport InstructionNamespaceFactory from \"@project-serum/anchor/dist/cjs/program/namespace/instruction\";\nimport type { Provider as SaberProvider } from \"@saberhq/solana-contrib\";\nimport type { GetProgramAccountsFilter, PublicKey } from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\nimport mapValues from \"lodash.mapvalues\";\n\nimport type { ErrorMap } from \"../errors\";\nimport { generateErrorMap } from \"../errors\";\nimport type { AccountParsers } from \"../generateAccountParsers\";\nimport { generateAccountParsersFromCoder } from \"../generateAccountParsers\";\nimport type { AnchorAccount, AnchorAccountMap } from \"./accounts\";\nimport { generateAnchorAccounts } from \"./accounts\";\nimport { newProgram } from \"./programs\";\n\n/**\n * Formatted instruction with its name.\n */\nexport type InstructionParsed = InstructionDisplay & {\n  name: string;\n};\n\ntype CoderAnchorTypes = {\n  AccountMap: Record<string, object>;\n  Events: Record<string, unknown>;\n  IDL: Idl;\n  Instructions: Record<\n    string,\n    {\n      accounts: IdlAccountItem[];\n      args: unknown[];\n      namedArgs: Record<string, unknown>;\n    }\n  >;\n  Program: unknown;\n};\n\ntype IDLAccountName<IDL extends Idl> = NonNullable<\n  IDL[\"accounts\"]\n>[number][\"name\"];\n\ntype AccountTypeDefMap<IDL extends Idl> = {\n  [K in IDLAccountName<IDL>]: IdlTypeDef;\n};\n\n/**\n * Coder wrapper.\n *\n * Allows interacting with a program without a provider.\n */\nexport class SuperCoder<T extends CoderAnchorTypes> {\n  /**\n   * Underlying Coder.\n   */\n  readonly coder: BorshCoder;\n  /**\n   * Parses events.\n   */\n  readonly eventParser: EventParser;\n  /**\n   * All accounts.\n   */\n  readonly accounts: AnchorAccountMap<T[\"AccountMap\"]>;\n  /**\n   * Parses accounts.\n   * @deprecated use {@link SuperCoder#accounts}\n   */\n  readonly accountParsers: AccountParsers<T[\"AccountMap\"]>;\n  /**\n   * All account {@link IdlTypeDef}s.\n   * @deprecated use {@link SuperCoder#accounts}\n   */\n  readonly accountTypeDefs: {\n    [K in IDLAccountName<T[\"IDL\"]>]: IdlTypeDef;\n  };\n  /**\n   * Mapping of error name to error details.\n   */\n  readonly errorMap: ErrorMap<T[\"IDL\"]>;\n  /**\n   * Mapping of hex discriminator to the account name.\n   */\n  readonly discriminators: {\n    [hexDiscriminator: string]: string;\n  };\n  /**\n   * Mapping of hex discriminator to the account name.\n   * @deprecated use {@link SuperCoder#accounts}\n   */\n  readonly discriminatorsByAccount: {\n    [K in NonNullable<T[\"IDL\"][\"accounts\"]>[number][\"name\"]]: Buffer;\n  };\n\n  /**\n   * Constructor.\n   * @param address\n   * @param idl\n   */\n  constructor(\n    /**\n     * Program address.\n     */\n    readonly address: PublicKey,\n    /**\n     * Program IDL.\n     */\n    readonly idl: T[\"IDL\"]\n  ) {\n    this.coder = new BorshCoder<IDLAccountName<T[\"IDL\"]>>(idl);\n    this.eventParser = new EventParser(address, this.coder);\n    this.accounts = generateAnchorAccounts(\n      address,\n      idl.accounts ?? [],\n      this.coder.accounts\n    );\n\n    this.errorMap = generateErrorMap<T[\"IDL\"]>(idl);\n\n    const accountsList = Object.values(\n      this.accounts\n    ) as AnchorAccount<unknown>[];\n    const accountTypeDefs: Partial<AccountTypeDefMap<T[\"IDL\"]>> = {};\n    accountsList.forEach((account) => {\n      accountTypeDefs[account.name as IDLAccountName<T[\"IDL\"]>] = account.idl;\n    });\n\n    this.accountParsers = generateAccountParsersFromCoder(\n      idl.accounts?.map((acc) => acc.name),\n      this.coder.accounts\n    );\n    this.accountTypeDefs = accountTypeDefs as AccountTypeDefMap<T[\"IDL\"]>;\n    this.discriminators = accountsList.reduce(\n      (acc, el) => ({ ...acc, [el.discriminator.toString(\"hex\")]: el.name }),\n      {}\n    );\n    this.discriminatorsByAccount = accountsList.reduce(\n      (acc, el) => ({ ...acc, [el.name]: el.discriminator }),\n      {} as { [K in NonNullable<T[\"IDL\"][\"accounts\"]>[number][\"name\"]]: Buffer }\n    );\n  }\n\n  /**\n   * Creates a {@link GetProgramAccountsFilter} for the given account.\n   */\n  makeGPAFilter(\n    account: NonNullable<T[\"IDL\"][\"accounts\"]>[number][\"name\"],\n    ...filters: GetProgramAccountsFilter[]\n  ): GetProgramAccountsFilter[] {\n    return [\n      {\n        memcmp: {\n          offset: 0,\n          bytes: utils.bytes.bs58.encode(this.discriminatorsByAccount[account]),\n        },\n      },\n      ...filters,\n    ];\n  }\n\n  /**\n   * Parses events in the program log.\n   * @param logs\n   * @returns\n   */\n  parseProgramLogEvents<\n    E extends T[\"Events\"][keyof T[\"Events\"]] = T[\"Events\"][keyof T[\"Events\"]]\n  >(logs?: string[]): readonly E[] {\n    if (!logs) {\n      return [];\n    }\n    const events: E[] = [];\n    this.eventParser.parseLogs(logs ?? [], (event) =>\n      events.push(event as unknown as E)\n    );\n    return events;\n  }\n\n  /**\n   * Encodes a {@link TransactionInstruction}.\n   * @returns\n   */\n  encodeIX<\n    K extends keyof T[\"Instructions\"] & string = keyof T[\"Instructions\"] &\n      string,\n    I extends T[\"Instructions\"][K] = T[\"Instructions\"][K]\n  >(\n    name: K,\n    args: I[\"namedArgs\"],\n    accounts: Accounts<I[\"accounts\"][number]>\n  ): TransactionInstruction {\n    const idlIx = this.idl.instructions.find((ix) => ix.name === name);\n    if (!idlIx) {\n      throw new Error(`could not find ix: ${name}`);\n    }\n    const encoded = this.coder.instruction.encode(name, args);\n    const keys = InstructionNamespaceFactory.accountsArray(\n      accounts,\n      idlIx.accounts,\n      name\n    );\n    return new TransactionInstruction({\n      programId: this.address,\n      keys,\n      data: encoded,\n    });\n  }\n\n  /**\n   * Parses a {@link TransactionInstruction}.\n   * @returns\n   */\n  parseInstruction(txInstruction: TransactionInstruction): InstructionParsed {\n    const decoded = this.coder.instruction.decode(txInstruction.data);\n    if (!decoded) {\n      throw new Error(\"could not decode ix data\");\n    }\n    const fmt = this.coder.instruction.format(decoded, txInstruction.keys);\n    if (!fmt) {\n      throw new Error(\"invalid instruction\");\n    }\n    return { ...fmt, name: decoded.name };\n  }\n\n  /**\n   * Gets a {@link Program} from a provider.\n   * @param provider\n   * @returns\n   */\n  getProgram(provider: SaberProvider): T[\"Program\"] {\n    return newProgram(this.idl, this.address, provider);\n  }\n}\n\n/**\n * Builds a map of coders from their IDLs and addresses.\n *\n * @param provider\n * @param programs\n * @returns\n */\nexport const buildCoderMap = <\n  P extends {\n    [K in keyof P]: CoderAnchorTypes;\n  }\n>(\n  idls: {\n    [K in keyof P]: Idl;\n  },\n  addresses: {\n    [K in keyof P]: PublicKey;\n  }\n): {\n  [K in keyof P]: SuperCoder<P[K]>;\n} => {\n  return mapValues(\n    idls,\n    <K extends keyof P>(idl: P[K][\"IDL\"], k: K) =>\n      new SuperCoder<P[K]>(addresses[k], idl)\n  ) as unknown as {\n    [K in keyof P]: SuperCoder<P[K]>;\n  };\n};\n","import type { AccountsCoder } from \"@project-serum/anchor\";\nimport { BorshAccountsCoder } from \"@project-serum/anchor\";\nimport type { IdlTypeDef } from \"@project-serum/anchor/dist/cjs/idl\";\nimport type { ProgramAccountParser, PublicKey } from \"@saberhq/solana-contrib\";\nimport camelCase from \"lodash.camelcase\";\n\n/**\n * Account information.\n */\nexport interface AnchorAccount<T> extends ProgramAccountParser<T> {\n  /**\n   * {@link IdlTypeDef}.\n   */\n  idl: IdlTypeDef;\n  /**\n   * Size of the account in bytes\n   */\n  size: number;\n  /**\n   * The discriminator.\n   */\n  discriminator: Buffer;\n  /**\n   * Encodes the value.\n   */\n  encode: (value: T) => Promise<Buffer>;\n}\n\n/**\n * {@link ProgramAccountParser}s associated with an IDL.\n */\nexport type AnchorAccountMap<M> = {\n  [K in keyof M]: AnchorAccount<M[K]>;\n};\n/**\n * Generates the metadata of accounts.\n *\n * This is intended to be called once at initialization.\n */\nexport const generateAnchorAccounts = <M>(\n  programID: PublicKey,\n  accounts: IdlTypeDef[],\n  coder: AccountsCoder\n): AnchorAccountMap<M> => {\n  const parsers: Partial<AnchorAccountMap<M>> = {};\n  accounts.forEach((account) => {\n    parsers[camelCase(account.name) as keyof M] = {\n      programID,\n      name: account.name,\n      encode: (value) => coder.encode(account.name, value),\n      parse: (data: Buffer) => coder.decode<M[keyof M]>(account.name, data),\n      idl: account,\n      size: coder.size(account),\n      discriminator: BorshAccountsCoder.accountDiscriminator(account.name),\n    };\n  });\n  return parsers as AnchorAccountMap<M>;\n};\n","import { generateErrorMap } from \"@saberhq/anchor-contrib\";\n\nexport type MerkleDistributorIDL = {\n  version: \"0.3.3\";\n  name: \"merkle_distributor\";\n  instructions: [\n    {\n      name: \"newDistributor\";\n      accounts: [\n        {\n          name: \"base\";\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: \"distributor\";\n          isMut: true;\n          isSigner: false;\n          pda: {\n            seeds: [\n              {\n                kind: \"const\";\n                type: \"string\";\n                value: \"MerkleDistributor\";\n              },\n              {\n                kind: \"account\";\n                type: \"publicKey\";\n                path: \"base\";\n              }\n            ];\n          };\n        },\n        {\n          name: \"mint\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"payer\";\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: \"systemProgram\";\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: \"bump\";\n          type: \"u8\";\n        },\n        {\n          name: \"root\";\n          type: {\n            array: [\"u8\", 32];\n          };\n        },\n        {\n          name: \"maxTotalClaim\";\n          type: \"u64\";\n        },\n        {\n          name: \"maxNumNodes\";\n          type: \"u64\";\n        }\n      ];\n    },\n    {\n      name: \"claim\";\n      accounts: [\n        {\n          name: \"distributor\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"claimStatus\";\n          isMut: true;\n          isSigner: false;\n          pda: {\n            seeds: [\n              {\n                kind: \"const\";\n                type: \"string\";\n                value: \"ClaimStatus\";\n              },\n              {\n                kind: \"arg\";\n                type: \"u64\";\n                path: \"index\";\n              },\n              {\n                kind: \"account\";\n                type: \"publicKey\";\n                account: \"MerkleDistributor\";\n                path: \"distributor\";\n              }\n            ];\n          };\n        },\n        {\n          name: \"from\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"to\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"claimant\";\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: \"payer\";\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: \"systemProgram\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"tokenProgram\";\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: \"bump\";\n          type: \"u8\";\n        },\n        {\n          name: \"index\";\n          type: \"u64\";\n        },\n        {\n          name: \"amount\";\n          type: \"u64\";\n        },\n        {\n          name: \"proof\";\n          type: {\n            vec: {\n              array: [\"u8\", 32];\n            };\n          };\n        }\n      ];\n    }\n  ];\n  accounts: [\n    {\n      name: \"MerkleDistributor\";\n      type: {\n        kind: \"struct\";\n        fields: [\n          {\n            name: \"base\";\n            type: \"publicKey\";\n          },\n          {\n            name: \"bump\";\n            type: \"u8\";\n          },\n          {\n            name: \"root\";\n            type: {\n              array: [\"u8\", 32];\n            };\n          },\n          {\n            name: \"mint\";\n            type: \"publicKey\";\n          },\n          {\n            name: \"maxTotalClaim\";\n            type: \"u64\";\n          },\n          {\n            name: \"maxNumNodes\";\n            type: \"u64\";\n          },\n          {\n            name: \"totalAmountClaimed\";\n            type: \"u64\";\n          },\n          {\n            name: \"numNodesClaimed\";\n            type: \"u64\";\n          }\n        ];\n      };\n    },\n    {\n      name: \"ClaimStatus\";\n      type: {\n        kind: \"struct\";\n        fields: [\n          {\n            name: \"isClaimed\";\n            type: \"bool\";\n          },\n          {\n            name: \"claimant\";\n            type: \"publicKey\";\n          },\n          {\n            name: \"claimedAt\";\n            type: \"i64\";\n          },\n          {\n            name: \"amount\";\n            type: \"u64\";\n          }\n        ];\n      };\n    }\n  ];\n  events: [\n    {\n      name: \"ClaimedEvent\";\n      fields: [\n        {\n          name: \"index\";\n          type: \"u64\";\n          index: false;\n        },\n        {\n          name: \"claimant\";\n          type: \"publicKey\";\n          index: false;\n        },\n        {\n          name: \"amount\";\n          type: \"u64\";\n          index: false;\n        }\n      ];\n    }\n  ];\n  errors: [\n    {\n      code: 6000;\n      name: \"InvalidProof\";\n      msg: \"Invalid Merkle proof.\";\n    },\n    {\n      code: 6001;\n      name: \"DropAlreadyClaimed\";\n      msg: \"Drop already claimed.\";\n    },\n    {\n      code: 6002;\n      name: \"ExceededMaxClaim\";\n      msg: \"Exceeded maximum claim amount.\";\n    },\n    {\n      code: 6003;\n      name: \"ExceededMaxNumNodes\";\n      msg: \"Exceeded maximum number of claimed nodes.\";\n    },\n    {\n      code: 6004;\n      name: \"Unauthorized\";\n      msg: \"Account is not authorized to execute this instruction\";\n    },\n    {\n      code: 6005;\n      name: \"OwnerMismatch\";\n      msg: \"Token account owner did not match intended owner\";\n    }\n  ];\n};\nexport const MerkleDistributorJSON: MerkleDistributorIDL = {\n  version: \"0.3.3\",\n  name: \"merkle_distributor\",\n  instructions: [\n    {\n      name: \"newDistributor\",\n      accounts: [\n        {\n          name: \"base\",\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: \"distributor\",\n          isMut: true,\n          isSigner: false,\n          pda: {\n            seeds: [\n              {\n                kind: \"const\",\n                type: \"string\",\n                value: \"MerkleDistributor\",\n              },\n              {\n                kind: \"account\",\n                type: \"publicKey\",\n                path: \"base\",\n              },\n            ],\n          },\n        },\n        {\n          name: \"mint\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"payer\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"systemProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"bump\",\n          type: \"u8\",\n        },\n        {\n          name: \"root\",\n          type: {\n            array: [\"u8\", 32],\n          },\n        },\n        {\n          name: \"maxTotalClaim\",\n          type: \"u64\",\n        },\n        {\n          name: \"maxNumNodes\",\n          type: \"u64\",\n        },\n      ],\n    },\n    {\n      name: \"claim\",\n      accounts: [\n        {\n          name: \"distributor\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"claimStatus\",\n          isMut: true,\n          isSigner: false,\n          pda: {\n            seeds: [\n              {\n                kind: \"const\",\n                type: \"string\",\n                value: \"ClaimStatus\",\n              },\n              {\n                kind: \"arg\",\n                type: \"u64\",\n                path: \"index\",\n              },\n              {\n                kind: \"account\",\n                type: \"publicKey\",\n                account: \"MerkleDistributor\",\n                path: \"distributor\",\n              },\n            ],\n          },\n        },\n        {\n          name: \"from\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"to\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"claimant\",\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: \"payer\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"systemProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"tokenProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"bump\",\n          type: \"u8\",\n        },\n        {\n          name: \"index\",\n          type: \"u64\",\n        },\n        {\n          name: \"amount\",\n          type: \"u64\",\n        },\n        {\n          name: \"proof\",\n          type: {\n            vec: {\n              array: [\"u8\", 32],\n            },\n          },\n        },\n      ],\n    },\n  ],\n  accounts: [\n    {\n      name: \"MerkleDistributor\",\n      type: {\n        kind: \"struct\",\n        fields: [\n          {\n            name: \"base\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"bump\",\n            type: \"u8\",\n          },\n          {\n            name: \"root\",\n            type: {\n              array: [\"u8\", 32],\n            },\n          },\n          {\n            name: \"mint\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"maxTotalClaim\",\n            type: \"u64\",\n          },\n          {\n            name: \"maxNumNodes\",\n            type: \"u64\",\n          },\n          {\n            name: \"totalAmountClaimed\",\n            type: \"u64\",\n          },\n          {\n            name: \"numNodesClaimed\",\n            type: \"u64\",\n          },\n        ],\n      },\n    },\n    {\n      name: \"ClaimStatus\",\n      type: {\n        kind: \"struct\",\n        fields: [\n          {\n            name: \"isClaimed\",\n            type: \"bool\",\n          },\n          {\n            name: \"claimant\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"claimedAt\",\n            type: \"i64\",\n          },\n          {\n            name: \"amount\",\n            type: \"u64\",\n          },\n        ],\n      },\n    },\n  ],\n  events: [\n    {\n      name: \"ClaimedEvent\",\n      fields: [\n        {\n          name: \"index\",\n          type: \"u64\",\n          index: false,\n        },\n        {\n          name: \"claimant\",\n          type: \"publicKey\",\n          index: false,\n        },\n        {\n          name: \"amount\",\n          type: \"u64\",\n          index: false,\n        },\n      ],\n    },\n  ],\n  errors: [\n    {\n      code: 6000,\n      name: \"InvalidProof\",\n      msg: \"Invalid Merkle proof.\",\n    },\n    {\n      code: 6001,\n      name: \"DropAlreadyClaimed\",\n      msg: \"Drop already claimed.\",\n    },\n    {\n      code: 6002,\n      name: \"ExceededMaxClaim\",\n      msg: \"Exceeded maximum claim amount.\",\n    },\n    {\n      code: 6003,\n      name: \"ExceededMaxNumNodes\",\n      msg: \"Exceeded maximum number of claimed nodes.\",\n    },\n    {\n      code: 6004,\n      name: \"Unauthorized\",\n      msg: \"Account is not authorized to execute this instruction\",\n    },\n    {\n      code: 6005,\n      name: \"OwnerMismatch\",\n      msg: \"Token account owner did not match intended owner\",\n    },\n  ],\n};\nexport const MerkleDistributorErrors = generateErrorMap(MerkleDistributorJSON);\n","import { SuperCoder } from \"@saberhq/anchor-contrib\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport type { MerkleDistributorTypes } from \".\";\nimport { MerkleDistributorJSON } from \"./idls/merkle_distributor\";\n\nexport const PROGRAM_ID = new PublicKey(\n  \"MRKGLMizK9XSTaD1d1jbVkdHZbQVCSnPpYiTw9aKQv8\"\n);\n\nexport const MERKLE_DISTRIBUTOR_PROGRAM_ID = PROGRAM_ID;\n\nexport const MERKLE_DISTRIBUTOR_CODER = new SuperCoder<MerkleDistributorTypes>(\n  MERKLE_DISTRIBUTOR_PROGRAM_ID,\n  MerkleDistributorJSON\n);\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { utils } from \"@project-serum/anchor\";\nimport type { u64 } from \"@saberhq/token-utils\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { PROGRAM_ID } from \"./constants\";\n\nexport const findDistributorKey = async (\n  base: PublicKey\n): Promise<[PublicKey, number]> => {\n  return await PublicKey.findProgramAddress(\n    [utils.bytes.utf8.encode(\"MerkleDistributor\"), base.toBytes()],\n    PROGRAM_ID\n  );\n};\n\nexport const findClaimStatusKey = async (\n  index: u64,\n  distributor: PublicKey\n): Promise<[PublicKey, number]> => {\n  return await PublicKey.findProgramAddress(\n    [\n      utils.bytes.utf8.encode(\"ClaimStatus\"),\n      index.toArrayLike(Buffer, \"le\", 8),\n      distributor.toBytes(),\n    ],\n    PROGRAM_ID\n  );\n};\n","import { keccak_256 } from \"js-sha3\";\nimport invariant from \"tiny-invariant\";\n\nfunction getPairElement(idx: number, layer: Buffer[]): Buffer | null {\n  const pairIdx = idx % 2 === 0 ? idx + 1 : idx - 1;\n\n  if (pairIdx < layer.length) {\n    const pairEl = layer[pairIdx];\n    invariant(pairEl, \"pairEl\");\n    return pairEl;\n  } else {\n    return null;\n  }\n}\n\nfunction bufDedup(elements: Buffer[]): Buffer[] {\n  return elements.filter((el, idx) => {\n    return idx === 0 || !elements[idx - 1]?.equals(el);\n  });\n}\n\nfunction bufArrToHexArr(arr: Buffer[]): string[] {\n  if (arr.some((el) => !Buffer.isBuffer(el))) {\n    throw new Error(\"Array is not an array of buffers\");\n  }\n\n  return arr.map((el) => \"0x\" + el.toString(\"hex\"));\n}\n\nfunction sortAndConcat(...args: Buffer[]): Buffer {\n  return Buffer.concat([...args].sort(Buffer.compare.bind(null)));\n}\n\nexport class MerkleTree {\n  private readonly _elements: Buffer[];\n  private readonly _bufferElementPositionIndex: {\n    [hexElement: string]: number;\n  };\n  private readonly _layers: Buffer[][];\n\n  constructor(elements: Buffer[]) {\n    this._elements = [...elements];\n    // Sort elements\n    this._elements.sort(Buffer.compare.bind(null));\n    // Deduplicate elements\n    this._elements = bufDedup(this._elements);\n\n    this._bufferElementPositionIndex = this._elements.reduce<{\n      [hexElement: string]: number;\n    }>((memo, el, index) => {\n      memo[el.toString(\"hex\")] = index;\n      return memo;\n    }, {});\n\n    // Create layers\n    this._layers = this.getLayers(this._elements);\n  }\n\n  getLayers(elements: Buffer[]): Buffer[][] {\n    if (elements.length === 0) {\n      throw new Error(\"empty tree\");\n    }\n\n    const layers = [];\n    layers.push(elements);\n\n    // Get next layer until we reach the root\n    while ((layers[layers.length - 1]?.length ?? 0) > 1) {\n      const nextLayerIndex: Buffer[] | undefined = layers[layers.length - 1];\n      invariant(nextLayerIndex, \"nextLayerIndex\");\n      layers.push(this.getNextLayer(nextLayerIndex));\n    }\n\n    return layers;\n  }\n\n  getNextLayer(elements: Buffer[]): Buffer[] {\n    return elements.reduce<Buffer[]>((layer, el, idx, arr) => {\n      if (idx % 2 === 0) {\n        // Hash the current element with its pair element\n        const pairEl = arr[idx + 1];\n        layer.push(MerkleTree.combinedHash(el, pairEl));\n      }\n\n      return layer;\n    }, []);\n  }\n\n  static combinedHash(first: Buffer, second: Buffer | undefined): Buffer {\n    if (!first) {\n      invariant(second, \"second element of pair must exist\");\n      return second;\n    }\n    if (!second) {\n      invariant(first, \"first element of pair must exist\");\n      return first;\n    }\n\n    return Buffer.from(keccak_256.digest(sortAndConcat(first, second)));\n  }\n\n  getRoot(): Buffer {\n    const root = this._layers[this._layers.length - 1]?.[0];\n    invariant(root, \"root\");\n    return root;\n  }\n\n  getHexRoot(): string {\n    return this.getRoot().toString(\"hex\");\n  }\n\n  getProof(el: Buffer): Buffer[] {\n    const initialIdx = this._bufferElementPositionIndex[el.toString(\"hex\")];\n\n    if (typeof initialIdx !== \"number\") {\n      throw new Error(\"Element does not exist in Merkle tree\");\n    }\n\n    let idx = initialIdx;\n    return this._layers.reduce((proof, layer) => {\n      const pairElement = getPairElement(idx, layer);\n\n      if (pairElement) {\n        proof.push(pairElement);\n      }\n\n      idx = Math.floor(idx / 2);\n\n      return proof;\n    }, []);\n  }\n\n  getHexProof(el: Buffer): string[] {\n    const proof = this.getProof(el);\n\n    return bufArrToHexArr(proof);\n  }\n}\n","import { u64 } from \"@saberhq/token-utils\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport type BN from \"bn.js\";\nimport { keccak_256 } from \"js-sha3\";\n\nimport { MerkleTree } from \"./merkle-tree\";\n\nexport class BalanceTree {\n  private readonly _tree: MerkleTree;\n  constructor(balances: { account: PublicKey; amount: BN }[]) {\n    this._tree = new MerkleTree(\n      balances.map(({ account, amount }, index) => {\n        return BalanceTree.toNode(index, account, amount);\n      })\n    );\n  }\n\n  static verifyProof(\n    index: number,\n    account: PublicKey,\n    amount: BN,\n    proof: Buffer[],\n    root: Buffer\n  ): boolean {\n    let pair = BalanceTree.toNode(index, account, amount);\n    for (const item of proof) {\n      pair = MerkleTree.combinedHash(pair, item);\n    }\n\n    return pair.equals(root);\n  }\n\n  // keccak256(abi.encode(index, account, amount))\n  static toNode(index: number, account: PublicKey, amount: BN): Buffer {\n    const buf = Buffer.concat([\n      new u64(index).toArrayLike(Buffer, \"le\", 8),\n      account.toBuffer(),\n      new u64(amount).toArrayLike(Buffer, \"le\", 8),\n    ]);\n    return Buffer.from(keccak_256(buf), \"hex\");\n  }\n\n  getHexRoot(): string {\n    return this._tree.getHexRoot();\n  }\n\n  // returns the hex bytes32 values of the proof\n  getHexProof(index: number, account: PublicKey, amount: BN): string[] {\n    return this._tree.getHexProof(BalanceTree.toNode(index, account, amount));\n  }\n\n  getRoot(): Buffer {\n    return this._tree.getRoot();\n  }\n\n  getProof(index: number, account: PublicKey, amount: BN): Buffer[] {\n    return this._tree.getProof(BalanceTree.toNode(index, account, amount));\n  }\n}\n","import invariant from \"tiny-invariant\";\n\nexport const toBytes32Array = (b: Buffer): number[] => {\n  invariant(b.length <= 32, `invalid length ${b.length}`);\n  const buf = Buffer.alloc(32);\n  b.copy(buf, 32 - b.length);\n\n  return Array.from(buf);\n};\n","import { u64 } from \"@saberhq/token-utils\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\nimport invariant from \"tiny-invariant\";\n\nimport { BalanceTree } from \"./balance-tree\";\n\n// This is the blob that gets distributed and pinned to IPFS.\n// It is completely sufficient for recreating the entire merkle tree.\n// Anyone can verify that all air drops are included in the tree,\n// and the tree has no additional distributions.\nexport interface MerkleDistributorInfo {\n  merkleRoot: Buffer;\n  tokenTotal: string;\n  claims: {\n    [account: string]: {\n      index: number;\n      amount: u64;\n      proof: Buffer[];\n    };\n  };\n}\n\nexport type NewFormat = { address: string; earnings: string };\n\nexport function parseBalanceMap(balances: NewFormat[]): MerkleDistributorInfo {\n  const dataByAddress = balances.reduce<{\n    [address: string]: {\n      amount: BN;\n      flags?: { [flag: string]: boolean };\n    };\n  }>((memo, { address: account, earnings }) => {\n    if (memo[account.toString()]) {\n      throw new Error(`Duplicate address: ${account.toString()}`);\n    }\n    const parsedNum = new u64(earnings);\n    if (parsedNum.lte(new u64(0))) {\n      throw new Error(`Invalid amount for account: ${account.toString()}`);\n    }\n\n    memo[account.toString()] = {\n      amount: parsedNum,\n    };\n    return memo;\n  }, {});\n\n  const sortedAddresses = Object.keys(dataByAddress).sort();\n\n  // construct a tree\n  const tree = new BalanceTree(\n    sortedAddresses.map((address) => {\n      const addressData = dataByAddress[address];\n      invariant(addressData, \"addressData\");\n      return {\n        account: new PublicKey(address),\n        amount: addressData.amount,\n      };\n    })\n  );\n\n  // generate claims\n  const claims = sortedAddresses.reduce<{\n    [address: string]: {\n      amount: u64;\n      index: number;\n      proof: Buffer[];\n      flags?: { [flag: string]: boolean };\n    };\n  }>((memo, address, index) => {\n    const addressData = dataByAddress[address];\n    invariant(addressData, \"addressData\");\n    const { amount, flags } = addressData;\n    memo[address] = {\n      index,\n      amount: amount,\n      proof: tree.getProof(index, new PublicKey(address), amount),\n      ...(flags ? { flags } : {}),\n    };\n    return memo;\n  }, {});\n\n  const tokenTotal: BN = sortedAddresses.reduce<BN>(\n    (memo, key) => memo.add(dataByAddress[key]?.amount ?? new BN(0)),\n    new BN(0)\n  );\n\n  return {\n    merkleRoot: tree.getRoot(),\n    tokenTotal: tokenTotal.toString(),\n    claims,\n  };\n}\n","import { TransactionEnvelope } from \"@saberhq/solana-contrib\";\nimport type { u64 } from \"@saberhq/token-utils\";\nimport {\n  getATAAddress,\n  getOrCreateATA,\n  TOKEN_PROGRAM_ID,\n} from \"@saberhq/token-utils\";\nimport type { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { Keypair, SystemProgram } from \"@solana/web3.js\";\n\nimport { findClaimStatusKey, findDistributorKey } from \"./pda\";\nimport type { MerkleDistributorSDK } from \"./sdk\";\nimport type {\n  ClaimArgs,\n  ClaimStatus,\n  CreateDistributorArgs,\n  DistributorData,\n  MerkleDistributorProgram,\n  PendingDistributor,\n} from \"./types\";\nimport { toBytes32Array } from \"./utils\";\n\nexport class MerkleDistributorWrapper {\n  readonly program: MerkleDistributorProgram;\n  readonly key: PublicKey;\n  readonly distributorATA: PublicKey;\n  data: DistributorData;\n\n  constructor(\n    readonly sdk: MerkleDistributorSDK,\n    key: PublicKey,\n    distributorATA: PublicKey,\n    data: DistributorData\n  ) {\n    this.program = sdk.program;\n    this.key = key;\n    this.distributorATA = distributorATA;\n    this.data = data;\n  }\n\n  static async load(\n    sdk: MerkleDistributorSDK,\n    key: PublicKey\n  ): Promise<MerkleDistributorWrapper> {\n    const data = await sdk.program.account.merkleDistributor.fetch(key);\n    return new MerkleDistributorWrapper(\n      sdk,\n      key,\n      await getATAAddress({ mint: data.mint, owner: key }),\n      data\n    );\n  }\n\n  static async createDistributor(\n    args: CreateDistributorArgs\n  ): Promise<PendingDistributor> {\n    const { root, tokenMint } = args;\n\n    const { sdk } = args;\n    const { provider } = sdk;\n\n    const baseKey = args.base ?? Keypair.generate();\n    const [distributor, bump] = await findDistributorKey(baseKey.publicKey);\n\n    const ixs: TransactionInstruction[] = [];\n    ixs.push(\n      sdk.program.instruction.newDistributor(\n        bump,\n        toBytes32Array(root),\n        args.maxTotalClaim,\n        args.maxNumNodes,\n        {\n          accounts: {\n            base: baseKey.publicKey,\n            distributor,\n            mint: tokenMint,\n            payer: provider.wallet.publicKey,\n            systemProgram: SystemProgram.programId,\n          },\n        }\n      )\n    );\n\n    const { address, instruction } = await getOrCreateATA({\n      provider,\n      mint: tokenMint,\n      owner: distributor,\n    });\n    if (instruction) {\n      ixs.push(instruction);\n    }\n\n    return {\n      base: baseKey.publicKey,\n      bump,\n      distributor,\n      distributorATA: address,\n      tx: new TransactionEnvelope(provider, ixs, [baseKey]),\n    };\n  }\n\n  async claimIX(\n    args: ClaimArgs,\n    payer: PublicKey\n  ): Promise<TransactionInstruction> {\n    const { amount, claimant, index, proof } = args;\n    const [claimStatus, bump] = await findClaimStatusKey(index, this.key);\n\n    return this.program.instruction.claim(\n      bump,\n      index,\n      amount,\n      proof.map((p) => toBytes32Array(p)),\n      {\n        accounts: {\n          distributor: this.key,\n          claimStatus,\n          from: this.distributorATA,\n          to: await getATAAddress({ mint: this.data.mint, owner: claimant }),\n          claimant,\n          payer,\n          systemProgram: SystemProgram.programId,\n          tokenProgram: TOKEN_PROGRAM_ID,\n        },\n      }\n    );\n  }\n\n  async claim(args: ClaimArgs): Promise<TransactionEnvelope> {\n    const { provider } = this.sdk;\n    const tx = new TransactionEnvelope(provider, [\n      await this.claimIX(args, provider.wallet.publicKey),\n    ]);\n    const { instruction } = await getOrCreateATA({\n      provider,\n      mint: this.data.mint,\n      owner: args.claimant,\n    });\n    if (instruction) {\n      tx.instructions.unshift(instruction);\n    }\n    return tx;\n  }\n\n  async getClaimStatus(index: u64): Promise<ClaimStatus> {\n    const [key] = await findClaimStatusKey(index, this.key);\n    return this.program.account.claimStatus.fetch(key);\n  }\n\n  async reload(): Promise<void> {\n    this.data = await this.program.account.merkleDistributor.fetch(this.key);\n  }\n}\n","import { newProgram } from \"@saberhq/anchor-contrib\";\nimport type { AugmentedProvider, Provider } from \"@saberhq/solana-contrib\";\nimport { SolanaAugmentedProvider } from \"@saberhq/solana-contrib\";\nimport type { PublicKey, Signer } from \"@solana/web3.js\";\n\nimport { PROGRAM_ID } from \"./constants\";\nimport { MerkleDistributorJSON } from \"./idls/merkle_distributor\";\nimport type {\n  CreateDistributorArgs,\n  MerkleDistributorProgram,\n  PendingDistributor,\n} from \"./types\";\nimport { MerkleDistributorWrapper } from \"./wrapper\";\n\nexport class MerkleDistributorSDK {\n  constructor(\n    readonly provider: AugmentedProvider,\n    readonly program: MerkleDistributorProgram\n  ) {}\n\n  withSigner(signer: Signer): MerkleDistributorSDK {\n    return MerkleDistributorSDK.load({\n      provider: this.provider.withSigner(signer),\n    });\n  }\n\n  /**\n   * Loads the SDK.\n   * @returns {MerkleDistributorSDK}\n   */\n  static load({\n    provider,\n  }: {\n    // Provider\n    provider: Provider;\n  }): MerkleDistributorSDK {\n    const aug = new SolanaAugmentedProvider(provider);\n    return new MerkleDistributorSDK(\n      aug,\n      newProgram<MerkleDistributorProgram>(\n        MerkleDistributorJSON,\n        PROGRAM_ID,\n        aug\n      )\n    );\n  }\n\n  /**\n   * Load an existing merkle distributor.\n   * @returns {MerkleDistributorWrapper}\n   */\n  async loadDistributor(key: PublicKey): Promise<MerkleDistributorWrapper> {\n    return await MerkleDistributorWrapper.load(this, key);\n  }\n\n  /**\n   * Create a merkle distributor.\n   * @returns {PendingDistributor}\n   */\n  async createDistributor(\n    args: Omit<CreateDistributorArgs, \"sdk\">\n  ): Promise<PendingDistributor> {\n    return await MerkleDistributorWrapper.createDistributor({\n      sdk: this,\n      ...args,\n    });\n  }\n}\n","import * as BufferLayout from \"@solana/buffer-layout\";\n\nexport const RequestUnitsLayout = BufferLayout.struct<{\n  instruction: number;\n  units: number;\n  additionalFee: number;\n}>([\n  BufferLayout.u8(\"instruction\"),\n  BufferLayout.u32(\"units\"),\n  BufferLayout.u32(\"additionalFee\"),\n]);\n\nexport const RequestHeapFrameLayout = BufferLayout.struct<{\n  instruction: number;\n  bytes: number;\n}>([BufferLayout.u8(\"instruction\"), BufferLayout.u32(\"bytes\")]);\n","import { TransactionInstruction } from \"@solana/web3.js\";\n\nimport { COMPUTE_BUDGET_PROGRAM } from \"./index\";\nimport { RequestHeapFrameLayout, RequestUnitsLayout } from \"./layouts\";\n\n/**\n * Request a specific maximum number of compute units the transaction is\n * allowed to consume and an additional fee to pay.\n */\nexport const requestComputeUnitsInstruction = (\n  units: number,\n  additionalFee: number\n): TransactionInstruction => {\n  const data = Buffer.alloc(RequestUnitsLayout.span);\n  RequestUnitsLayout.encode({ instruction: 0, units, additionalFee }, data);\n  return new TransactionInstruction({\n    data,\n    keys: [],\n    programId: COMPUTE_BUDGET_PROGRAM,\n  });\n};\n\n/**\n * Request a specific transaction-wide program heap region size in bytes.\n * The value requested must be a multiple of 1024. This new heap region\n * size applies to each program executed, including all calls to CPIs.\n */\nexport const requestHeapFrameInstruction = (\n  bytes: number\n): TransactionInstruction => {\n  const data = Buffer.alloc(RequestHeapFrameLayout.span);\n  RequestHeapFrameLayout.encode({ instruction: 1, bytes }, data);\n  return new TransactionInstruction({\n    data,\n    keys: [],\n    programId: COMPUTE_BUDGET_PROGRAM,\n  });\n};\n","import { PublicKey } from \"@solana/web3.js\";\n\n/**\n * The compute budget program.\n * Source: https://github.com/solana-labs/solana/blob/master/program-runtime/src/compute_budget.rs#L101\n */\nexport const COMPUTE_BUDGET_PROGRAM = new PublicKey(\n  \"ComputeBudget111111111111111111111111111111\"\n);\n\nexport * from \"./instructions\";\n","import { TransactionInstruction } from \"@solana/web3.js\";\n\nimport { PublicKey } from \"./publicKey\";\n\n/**\n * ID of the memo program.\n */\nexport const MEMO_PROGRAM_ID = new PublicKey(\n  \"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"\n);\n\n/**\n * Creates a memo program instruction.\n *\n * More info: https://spl.solana.com/memo\n *\n * @param text Text of the memo.\n * @param signers Optional signers to validate.\n * @returns\n */\nexport const createMemoInstruction = (\n  text: string,\n  signers: readonly PublicKey[] = []\n): TransactionInstruction => {\n  return new TransactionInstruction({\n    programId: MEMO_PROGRAM_ID,\n    keys: signers.map((s) => ({\n      pubkey: s,\n      isSigner: true,\n      isWritable: false,\n    })),\n    data: Buffer.from(text, \"utf8\"),\n  });\n};\n","const noop = () => {\n  // noop\n};\n\n/**\n * Hide the console.error because @solana/web3.js often emits noisy errors as a\n * side effect.\n */\nexport const suppressConsoleErrorAsync = async <T>(\n  fn: () => Promise<T>\n): Promise<T> => {\n  const oldConsoleError = console.error;\n  console.error = noop;\n  try {\n    const result = await fn();\n    console.error = oldConsoleError;\n    return result;\n  } catch (e) {\n    console.error = oldConsoleError;\n    throw e;\n  }\n};\n\n/**\n * Hide the console.error because @solana/web3.js often emits noisy errors as a\n * side effect.\n */\nexport const suppressConsoleError = <T>(fn: () => T): T => {\n  const oldConsoleError = console.error;\n  console.error = noop;\n  try {\n    const result = fn();\n    console.error = oldConsoleError;\n    return result;\n  } catch (e) {\n    console.error = oldConsoleError;\n    throw e;\n  }\n};\n\n/**\n * Checks to see if the provided value is not null.\n *\n * Useful for preserving types in filtering out non-null values.\n *\n * @param value\n * @returns\n */\nexport const isNotNull = <TValue>(value: TValue | null): value is TValue => {\n  return value !== null;\n};\n\n/**\n * Checks to see if the provided value is not undefined.\n *\n * @param value\n * @returns\n */\nexport const isNotUndefined = <TValue>(\n  value: TValue | undefined\n): value is TValue => {\n  return value !== undefined;\n};\n\n/**\n * Checks to see if the provided value is not null or undefined.\n *\n * @param value\n * @returns\n */\nexport const exists = <TValue>(\n  value: TValue | null | undefined\n): value is TValue => {\n  return value !== null && value !== undefined;\n};\n\n/**\n * Applies a function to a null/undefined inner value if it is null or undefined,\n * otherwise returns null/undefined.\n *\n * @param obj\n * @param fn\n * @returns\n */\nexport const mapSome = <T, U>(\n  obj: NonNullable<T> | null | undefined,\n  fn: (obj: NonNullable<T>) => U\n): U | null | undefined => (exists(obj) ? fn(obj) : obj);\n\n/**\n * Applies a function to a list of null/undefined values, unwrapping the null/undefined value or passing it through.\n */\nexport const mapN = <T extends unknown[], U>(\n  fn: (\n    ...a: {\n      [K in keyof T]: NonNullable<T[K]>;\n    }\n  ) => U,\n  ...args: T\n): U | null | undefined => {\n  if (!args.every((arg) => arg !== undefined)) {\n    return undefined;\n  }\n  if (!args.every((arg) => arg !== null)) {\n    return null;\n  }\n  return fn(\n    ...(args as {\n      [K in keyof T]: NonNullable<T[K]>;\n    })\n  );\n};\n","import type {\n  Signer,\n  Transaction,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { Keypair, SystemProgram } from \"@solana/web3.js\";\n\nimport type { Provider } from \"..\";\nimport { TransactionEnvelope } from \"..\";\n\n/**\n * Takes in a simulation result of a transaction and prints it in a cool table.\n * ```\n *    ┌─────┬───┬───┬───┬───────────┬──────┬─────┬──────┬───┐\n *    │index│iso│mar│cum│ programId │quota │used │ left │CPI│\n *    ├─────┼───┼───┼───┼───────────┼──────┼─────┼──────┼───┤\n *    │  0  │298│281│464│'ATokenG..'│200000│24270│175730│ 1 │\n *    │  1  │298│ 74│538│'ATokenG..'│178730│21270│157460│ 1 │\n *    │  2  │298│ 74│612│'ATokenG..'│157460│27277│130183│ 1 │\n *    │  3  │298│ 42│686│'ATokenG..'│130183│21270│108913│ 1 │\n *    │  4  │338│265│951│'qExampL..'│108913│76289│ 32624│ 3 │\n *    └─────┴───┴───┴───┴───────────┴──────┴─────┴──────┴───┘\n * ```\n *\n * - **index**: the array index of the instruction within the transaction\n * - **iso**: the isolated size of the instruction (marginal cost of only the instruction)\n * - **mar**: the marginal size cost of the instruction (when added to previous)\n * - **cum**: the cumulative size of the instructions up until that instruction\n * - **quota/used/left**: [BPF instruction compute unit info](https://docs.solana.com/developing/programming-model/runtime)\n * - **CPI**: [the maximum depth of CPI](https://docs.solana.com/developing/programming-model/calling-between-programs) (current limit in Solana is 4)\n *\n * Safe for browser usage. Can be conveniently run with txEnvelope.simulateTable()\n */\nexport const printTXTable = (\n  tx: TransactionEnvelope,\n  transactionLogs: string[],\n  message: string\n) => {\n  if (message && message !== \"\") {\n    console.log(estimateTransactionSize(tx), message);\n  } else {\n    console.log(\"Transaction size:\", estimateTransactionSize(tx));\n  }\n\n  const computeUnitLogStack: string[] = [];\n  const cpiLogStack: number[] = [];\n  let currentIndex = -1;\n\n  transactionLogs.forEach((line) => {\n    if (line.includes(\" invoke [1]\")) {\n      currentIndex++;\n      cpiLogStack[currentIndex] = 0;\n    }\n    const cpiMatch = line.match(/ invoke \\[(\\d)\\]/);\n    if (cpiMatch && cpiMatch[1]) {\n      const cur = cpiLogStack[currentIndex];\n      cpiLogStack[currentIndex] =\n        cur === undefined\n          ? Number(cpiMatch[1]) - 1\n          : Math.max(Number(cpiMatch[1]) - 1, cur);\n    }\n\n    const computeMatch = line.match(/consumed \\d* of \\d* compute units/);\n    if (computeMatch && computeMatch[0]) {\n      computeUnitLogStack[currentIndex] = computeMatch[0];\n    }\n  });\n\n  const instructionTable: {\n    iso: number;\n    mar: number;\n    cum: number;\n    programId: string;\n    quota: number | undefined;\n    used: number | undefined;\n    left: number | undefined;\n    CPI: number | undefined;\n  }[] = [];\n\n  tx.instructions.forEach((instruction, i) => {\n    const computeUnitLog = computeUnitLogStack[i];\n\n    const computeUnitMatch = computeUnitLog?.match(/consumed (\\d*) of (\\d*)/);\n    const [consumed, quota] = computeUnitMatch\n      ?.slice(1, 3)\n      .map((num) => parseInt(num, 10)) || [undefined, undefined];\n\n    instructionTable.push({\n      iso: isolatedInstructionSize(tx.provider, instruction),\n      mar: marginalInstructionSize(\n        tx.provider,\n        tx.instructions.slice(0, i),\n        instruction\n      ),\n      cum: instructionsSize(tx.provider, tx.instructions.slice(0, i + 1)),\n      programId: instruction.programId.toBase58(),\n      quota: quota ? quota : i === 0 ? 200000 : undefined,\n      used: consumed,\n      left: quota && consumed ? quota - consumed : undefined,\n      CPI: cpiLogStack[i],\n    });\n  });\n\n  console.table(instructionTable);\n};\n\nexport class TXSizeEstimationError extends Error {\n  constructor(readonly underlyingError: unknown) {\n    super(`could not estimate transaction size`);\n    this.name = \"TXSizeEstimationError\";\n  }\n}\n\nexport class EstimatedTXTooBigError extends Error {\n  constructor(readonly tx: Transaction, readonly size: number) {\n    super(`Transaction too large`);\n    this.name = \"EstimatedTXTooBigError\";\n  }\n}\n\n/**\n * Builds a transaction and estimates the size in bytes. This number is primrily\n * to be used for checking to see if a transaction is too big and instructions\n * need to be split. It may not be 100% accurate.\n *\n * This is used in expectTXTable and is useful for increasing efficiency in\n * dapps that build large transactions.\n *\n * The max transaction size of a v1 Transaction in Solana is 1232 bytes.\n * For info about Transaction v2: https://docs.solana.com/proposals/transactions-v2\n *\n * Returns 8888 if the transaction was too big.\n * Returns 9999 if the transaction was unable to be built.\n */\nexport const estimateTransactionSize = (\n  txEnvelope: TransactionEnvelope\n): number => {\n  const result = txEnvelope.estimateSize();\n  if (\"size\" in result) {\n    return result.size;\n  }\n  if (result.error instanceof TXSizeEstimationError) {\n    console.error(\n      \"Unknown error estimating transaction size\",\n      result.error.underlyingError\n    );\n    return 9999;\n  }\n  return 8888;\n};\n\n/**\n * A dummy instruction that is probably tiny and has overlap with most instructions\n */\nconst simpleInstruction = () => {\n  const fs = getFakeSigner();\n\n  return SystemProgram.transfer({\n    fromPubkey: fs.publicKey,\n    toPubkey: fs.publicKey,\n    lamports: 1,\n  });\n};\n\nconst isolatedInstructionSize = (\n  randomProvider: Provider,\n  instruction: TransactionInstruction\n): number => {\n  return marginalInstructionSize(\n    randomProvider,\n    [simpleInstruction()],\n    instruction\n  );\n};\nconst marginalInstructionSize = (\n  randomProvider: Provider,\n  previousInstructions: TransactionInstruction[],\n  instruction: TransactionInstruction\n): number => {\n  const previousTxSize = instructionsSize(\n    randomProvider,\n    previousInstructions.length ? previousInstructions : [simpleInstruction()]\n  );\n\n  const biggerTxSize = instructionsSize(randomProvider, [\n    ...previousInstructions,\n    instruction,\n  ]);\n\n  return biggerTxSize - previousTxSize;\n};\nconst instructionsSize = (\n  randomProvider: Provider,\n  instructions: TransactionInstruction[]\n): number => {\n  const instructionedTx = new TransactionEnvelope(randomProvider, [\n    ...instructions,\n  ]);\n\n  return estimateTransactionSize(instructionedTx);\n};\n\nlet fakeSigner: Signer | undefined = undefined;\nconst getFakeSigner = (): Signer => {\n  if (!fakeSigner) {\n    fakeSigner = Keypair.generate();\n  }\n  return fakeSigner;\n};\n","import type { PublicKeyInitData } from \"@solana/web3.js\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nconst pubkeyCache: Record<string, PublicKey> = {};\n\n/**\n * PublicKey with a cached base58 value.\n */\nexport class CachedPublicKey extends PublicKey {\n  private readonly _base58: string;\n\n  constructor(value: PublicKeyInitData) {\n    super(value);\n    this._base58 = super.toBase58();\n  }\n\n  override equals(other: PublicKey): boolean {\n    if (other instanceof CachedPublicKey) {\n      return other._base58 === this._base58;\n    }\n    return super.equals(other);\n  }\n\n  override toString() {\n    return this._base58;\n  }\n\n  override toBase58(): string {\n    return this._base58;\n  }\n}\n\nconst getOrCreatePublicKey = (pk: string): PublicKey => {\n  const cached = pubkeyCache[pk];\n  if (!cached) {\n    return (pubkeyCache[pk] = new CachedPublicKey(pk));\n  }\n  return cached;\n};\n\n/**\n * Gets or parses a PublicKey.\n * @param pk\n * @returns\n */\nexport const getPublicKey = (\n  pk: string | PublicKey | PublicKeyInitData\n): PublicKey => {\n  if (typeof pk === \"string\") {\n    return getOrCreatePublicKey(pk);\n  } else if (pk instanceof PublicKey) {\n    return getOrCreatePublicKey(pk.toString());\n  } else {\n    return getOrCreatePublicKey(new PublicKey(pk).toString());\n  }\n};\n\nconst gpaCache: Record<string, PublicKey> = {};\n\n/**\n * Concatenates seeds to generate a unique number array.\n * @param seeds\n * @returns\n */\nconst concatSeeds = (seeds: Array<Buffer | Uint8Array>): Uint8Array => {\n  return Uint8Array.from(\n    seeds.reduce((acc: number[], seed) => [...acc, ...seed], [])\n  );\n};\n\n/**\n * Gets a cached program address for the given seeds.\n * @param seeds\n * @param programId\n * @returns\n */\nexport const getProgramAddress = (\n  seeds: Array<Buffer | Uint8Array>,\n  programId: PublicKey\n) => {\n  const normalizedSeeds = concatSeeds(seeds);\n  const cacheKey = `${normalizedSeeds.toString()}_${programId.toString()}`;\n  const cached = gpaCache[cacheKey];\n  if (cached) {\n    return cached;\n  }\n  const [key] = PublicKey.findProgramAddressSync(seeds, programId);\n  return (gpaCache[cacheKey] = getPublicKey(key));\n};\n","import type {\n  Commitment,\n  Connection,\n  RpcResponseAndContext,\n  SimulatedTransactionResponse,\n  Transaction,\n} from \"@solana/web3.js\";\nimport { SendTransactionError } from \"@solana/web3.js\";\n\n/**\n * Copy of Connection.simulateTransaction that takes a commitment parameter.\n */\nexport async function simulateTransactionWithCommitment(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment = \"confirmed\"\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  const connectionInner = connection as Connection & {\n    _disableBlockhashCaching: boolean;\n    _recentBlockhash: (disableBlockhashCaching: boolean) => Promise<string>;\n    _rpcRequest: (\n      rpc: \"simulateTransaction\",\n      args: [\n        string,\n        {\n          encoding: string;\n          commitment: Commitment;\n        }\n      ]\n    ) => Promise<{\n      error: Error;\n      result: RpcResponseAndContext<SimulatedTransactionResponse>;\n    }>;\n  };\n  const transactionTyped = transaction as Transaction & {\n    _serialize: (buffer: Buffer) => Buffer;\n  };\n\n  transaction.recentBlockhash = await connectionInner._recentBlockhash(\n    connectionInner._disableBlockhashCaching\n  );\n\n  const signData = transaction.serializeMessage();\n\n  const wireTransaction = transactionTyped._serialize(signData);\n  const encodedTransaction = wireTransaction.toString(\"base64\");\n  const config = { encoding: \"base64\", commitment };\n\n  const res = await connectionInner._rpcRequest(\"simulateTransaction\", [\n    encodedTransaction,\n    config,\n  ]);\n  if (res.error) {\n    throw new SendTransactionError(\n      \"failed to simulate transaction: \" + res.error.message,\n      res.result.value.logs ?? undefined\n    );\n  }\n  return res.result;\n}\n","import type { Transaction } from \"@solana/web3.js\";\n\nfunction shortvecEncodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len === 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\n/**\n * Calculates transaction size. If the transaction is too large, it does not throw.\n * @param tx\n * @returns\n */\nexport const calculateTxSizeUnsafe = (tx: Transaction): number => {\n  // check if fee payer signed.\n  const { feePayer } = tx;\n  const hasFeePayerSigned =\n    feePayer && tx.signatures.find((s) => s.publicKey.equals(feePayer));\n  const signData = tx.serializeMessage();\n  const numSigners = tx.signatures.length + (hasFeePayerSigned ? 1 : 0);\n  const signatureCount: number[] = [];\n  shortvecEncodeLength(signatureCount, numSigners);\n  return signatureCount.length + numSigners * 64 + signData.length;\n};\n","import type {\n  AccountMeta,\n  Cluster,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { PublicKey, Transaction } from \"@solana/web3.js\";\n\n/**\n * Instruction that can be serialized to JSON.\n */\nexport interface SerializableInstruction {\n  programId: string;\n  keys: (Omit<AccountMeta, \"pubkey\"> & { publicKey: string })[];\n  data: string;\n}\n\n/**\n * Stub of a recent blockhash that can be used to simulate transactions.\n */\nexport const RECENT_BLOCKHASH_STUB =\n  \"GfVcyD4kkTrj4bKc7WA9sZCin9JDbdT4Zkd3EittNR1W\";\n\n/**\n * Builds a transaction with a fake `recentBlockhash` and `feePayer` for the purpose\n * of simulating a sequence of instructions.\n *\n * @param cluster\n * @param ixs\n * @returns\n */\nexport const buildStubbedTransaction = (\n  cluster: Cluster,\n  ixs: TransactionInstruction[]\n): Transaction => {\n  const tx = new Transaction();\n  tx.recentBlockhash = RECENT_BLOCKHASH_STUB;\n\n  // random keys that always have money in them\n  tx.feePayer =\n    cluster === \"devnet\"\n      ? new PublicKey(\"A2jaCHPzD6346348JoEym2KFGX9A7uRBw6AhCdX7gTWP\")\n      : new PublicKey(\"9u9iZBWqGsp5hXBxkVZtBTuLSGNAG9gEQLgpuVw39ASg\");\n  tx.instructions = ixs;\n  return tx;\n};\n\n/**\n * Serializes a {@link Transaction} to base64 format without checking signatures.\n * @param tx\n * @returns\n */\nexport const serializeToBase64Unchecked = (tx: Transaction): string =>\n  tx\n    .serialize({\n      requireAllSignatures: false,\n      verifySignatures: false,\n    })\n    .toString(\"base64\");\n\n/**\n * Generates a link for inspecting the contents of a transaction.\n *\n * @returns URL\n */\nexport const generateInspectLinkFromBase64 = (\n  cluster: Cluster,\n  base64TX: string\n): string => {\n  return `https://${\n    cluster === \"mainnet-beta\" ? \"\" : `${cluster}.`\n  }anchor.so/tx/inspector?message=${encodeURIComponent(base64TX)}`;\n};\n\n/**\n * Generates a link for inspecting the contents of a transaction, not checking for\n * or requiring valid signatures.\n *\n * @returns URL\n */\nexport const generateUncheckedInspectLink = (\n  cluster: Cluster,\n  tx: Transaction\n): string => {\n  return generateInspectLinkFromBase64(cluster, serializeToBase64Unchecked(tx));\n};\n","import type {\n  Cluster,\n  ConfirmOptions,\n  RpcResponseAndContext,\n  Signer,\n  SimulatedTransactionResponse,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { PublicKey, Transaction } from \"@solana/web3.js\";\nimport invariant from \"tiny-invariant\";\n\nimport type { BroadcastOptions } from \"../broadcaster\";\nimport {\n  requestComputeUnitsInstruction,\n  requestHeapFrameInstruction,\n} from \"../computeBudget\";\nimport type { Provider } from \"../interfaces\";\nimport {\n  createMemoInstruction,\n  EstimatedTXTooBigError,\n  printTXTable,\n  suppressConsoleError,\n  TXSizeEstimationError,\n} from \"../utils\";\nimport type { PendingTransaction } from \"./PendingTransaction\";\nimport type { TransactionReceipt } from \"./TransactionReceipt\";\nimport { calculateTxSizeUnsafe } from \"./txSizer\";\nimport type { SerializableInstruction } from \"./utils\";\nimport { generateInspectLinkFromBase64, RECENT_BLOCKHASH_STUB } from \"./utils\";\n\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nconst ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\n/**\n * Filters the required signers for a list of instructions.\n * @param ixs\n * @returns\n */\nconst filterRequiredSigners = (\n  ixs: TransactionInstruction[],\n  signers: Signer[]\n): Signer[] => {\n  // filter out the signers required for the transaction\n  const requiredSigners = ixs.flatMap((ix) =>\n    ix.keys.filter((k) => k.isSigner).map((k) => k.pubkey)\n  );\n  return signers.filter((s) =>\n    requiredSigners.find((rs) => rs.equals(s.publicKey))\n  );\n};\n\n/**\n * Options for simulating a transaction.\n */\nexport interface TXEnvelopeSimulateOptions extends ConfirmOptions {\n  /**\n   * Verify that the signers of the TX enveloper are valid.\n   */\n  verifySigners?: boolean;\n}\n\n/**\n * Contains a Transaction that is being built.\n */\nexport class TransactionEnvelope {\n  constructor(\n    /**\n     * Provider that will be sending the transaction as the fee payer.\n     */\n    readonly provider: Provider,\n    /**\n     * Instructions associated with the transaction.\n     */\n    readonly instructions: TransactionInstruction[],\n    /**\n     * Optional signers of the transaction.\n     */\n    readonly signers: Signer[] = []\n  ) {}\n\n  /**\n   * Prepends the given {@link TransactionInstruction}s to the {@link TransactionEnvelope}.\n   * @param instructions The instructions to prepend.\n   * @returns\n   */\n  prepend(\n    ...instructions: (TransactionInstruction | null | undefined | boolean)[]\n  ): TransactionEnvelope {\n    this.instructions.unshift(\n      ...instructions.filter((ix): ix is TransactionInstruction => !!ix)\n    );\n    return this;\n  }\n\n  /**\n   * Appends the given {@link TransactionInstruction}s to the {@link TransactionEnvelope}.\n   * @param instructions The instructions to append.\n   * @returns\n   */\n  append(\n    ...instructions: (TransactionInstruction | null | undefined | boolean)[]\n  ): TransactionEnvelope {\n    this.instructions.push(\n      ...instructions.filter((ix): ix is TransactionInstruction => !!ix)\n    );\n    return this;\n  }\n\n  /**\n   * A the given {@link TransactionInstruction}s to the {@link TransactionEnvelope}.\n   * @param instructions The instructions to add.\n   * @deprecated Use {@link #append} instead.\n   * @returns\n   */\n  addInstructions(\n    ...instructions: (TransactionInstruction | null | undefined | boolean)[]\n  ): TransactionEnvelope {\n    return this.append(...instructions);\n  }\n\n  /**\n   * Adds the given {@link Signer}s to the {@link TransactionEnvelope}.\n   * @param signers The signers to add.\n   * @returns\n   */\n  addSigners(...signers: Signer[]): TransactionEnvelope {\n    this.signers.push(...signers);\n    return this;\n  }\n\n  /**\n   * Builds a transaction from this envelope.\n   * @param feePayer Optional override for the fee payer.\n   */\n  build(feePayer: PublicKey = this.provider.wallet.publicKey): Transaction {\n    const tx = new Transaction().add(...this.instructions);\n    tx.feePayer = feePayer;\n    return tx;\n  }\n\n  /**\n   * Builds a transaction and estimates the size in bytes.\n   * Does not check to see if the transaction is too big.\n   *\n   * @returns Byte count\n   */\n  estimateSizeUnsafe(): number {\n    const builtTx = this.build();\n    // dummy blockhash that is required for building the transaction\n    builtTx.recentBlockhash = \"MaryHadALittLeLambZNdhAUTrsLE1ydg6rmtvFEpKT\";\n\n    return calculateTxSizeUnsafe(builtTx);\n  }\n\n  /**\n   * Builds a transaction and estimates the size in bytes. This number is primrily\n   * to be used for checking to see if a transaction is too big and instructions\n   * need to be split. It may not be 100% accurate.\n   *\n   * This is used in expectTXTable and is useful for increasing efficiency in\n   * dapps that build large transactions.\n   *\n   * The max transaction size of a v1 Transaction in Solana is 1232 bytes.\n   * For info about Transaction v2: https://docs.solana.com/proposals/transactions-v2\n   */\n  estimateSize():\n    | { size: number }\n    | {\n        error: EstimatedTXTooBigError | TXSizeEstimationError;\n      } {\n    return suppressConsoleError(() => {\n      try {\n        const builtTx = this.build();\n        // dummy blockhash that is required for building the transaction\n        builtTx.recentBlockhash = \"MaryHadALittLeLambZNdhAUTrsLE1ydg6rmtvFEpKT\";\n\n        const size = calculateTxSizeUnsafe(builtTx);\n        if (size > PACKET_DATA_SIZE) {\n          return { error: new EstimatedTXTooBigError(builtTx, size) };\n        }\n        return { size };\n      } catch (e) {\n        return { error: new TXSizeEstimationError(e) };\n      }\n    });\n  }\n\n  /**\n   * Partition a large {@link TransactionEnvelope} into smaller, valid {@link Transaction}s.\n   * This relies on this envelope already having the correct number of signers.\n   *\n   * @param feePayer Optional fee payer override.\n   * @returns A list of {@link Transaction}s.\n   */\n  buildPartition(\n    feePayer: PublicKey = this.provider.wallet.publicKey\n  ): Transaction[] {\n    const partition = this.partition();\n    return partition.map((env) => env.build(feePayer));\n  }\n\n  /**\n   * Partition a large {@link TransactionEnvelope} into smaller, valid transaction envelopes which can be built.\n   * This relies on this envelope already having the correct number of signers.\n   *\n   * @returns\n   */\n  partition(): TransactionEnvelope[] {\n    const estimation = this.estimateSize();\n    if (\"size\" in estimation) {\n      return [this];\n    }\n\n    // empty partition should have no envelopes\n    if (this.instructions.length === 0) {\n      return [];\n    }\n\n    let lastTXEnv: TransactionEnvelope = new TransactionEnvelope(\n      this.provider,\n      this.instructions.slice(0, 1),\n      this._filterRequiredSigners(this.instructions.slice(0, 1))\n    );\n    let lastEstimation: number = lastTXEnv.estimateSizeUnsafe();\n    const txs: TransactionEnvelope[] = [];\n    this.instructions.slice(1).forEach((ix, i) => {\n      if (lastEstimation > PACKET_DATA_SIZE) {\n        throw new Error(\n          `cannot construct a valid partition: instruction ${i} is too large (${lastEstimation} > ${PACKET_DATA_SIZE})`\n        );\n      }\n      const nextIXs = [...lastTXEnv.instructions, ix];\n      const nextSigners = this._filterRequiredSigners(nextIXs);\n      const nextTXEnv = new TransactionEnvelope(\n        this.provider,\n        nextIXs,\n        nextSigners\n      );\n      const nextEstimation = nextTXEnv.estimateSizeUnsafe();\n\n      // move to next tx envelope if too big\n      if (nextEstimation > PACKET_DATA_SIZE) {\n        txs.push(lastTXEnv);\n        const nextIXs = [ix];\n        lastTXEnv = new TransactionEnvelope(\n          this.provider,\n          nextIXs,\n          this._filterRequiredSigners(nextIXs)\n        );\n        lastEstimation = lastTXEnv.estimateSizeUnsafe();\n      } else {\n        lastTXEnv = nextTXEnv;\n        lastEstimation = nextEstimation;\n      }\n    });\n    txs.push(lastTXEnv);\n\n    return txs;\n  }\n\n  /**\n   * Filters the required signers for a list of instructions.\n   * @param ixs\n   * @returns\n   */\n  private _filterRequiredSigners(ixs: TransactionInstruction[]): Signer[] {\n    return filterRequiredSigners(ixs, this.signers);\n  }\n\n  /**\n   * Generates a link for inspecting the contents of this {@link TransactionEnvelope}.\n   *\n   * @returns URL\n   */\n  generateInspectLink(cluster: Cluster = \"mainnet-beta\"): string {\n    const t = this.build();\n    t.recentBlockhash = RECENT_BLOCKHASH_STUB;\n    const str = t.serializeMessage().toString(\"base64\");\n    return generateInspectLinkFromBase64(cluster, str);\n  }\n\n  /**\n   * Simulates the transaction.\n   * @param opts\n   * @returns\n   */\n  simulate(\n    opts: TXEnvelopeSimulateOptions = {\n      verifySigners: true,\n    }\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    return this.provider.simulate(\n      this.build(),\n      opts.verifySigners ? this.signers : undefined,\n      opts\n    );\n  }\n\n  /**\n   * Simulates the transaction, without validating signers.\n   *\n   * @deprecated Use {@link TXEnvelope#simulate} instead.\n   * @param opts\n   * @returns\n   */\n  simulateUnchecked(\n    opts: ConfirmOptions\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    return this.simulate({ ...opts, verifySigners: false });\n  }\n\n  /**\n   * Simulates the transaction and prints a fancy table in the console.\n   * ```\n   *    ┌─────┬───┬───┬───┬───────────┬──────┬─────┬──────┬───┐\n   *    │index│iso│mar│cum│ programId │quota │used │ left │CPI│\n   *    ├─────┼───┼───┼───┼───────────┼──────┼─────┼──────┼───┤\n   *    │  0  │298│281│464│'ATokenG..'│200000│24270│175730│ 1 │\n   *    │  1  │298│ 74│538│'ATokenG..'│178730│21270│157460│ 1 │\n   *    │  2  │298│ 74│612│'ATokenG..'│157460│27277│130183│ 1 │\n   *    │  3  │298│ 42│686│'ATokenG..'│130183│21270│108913│ 1 │\n   *    │  4  │338│265│951│'qExampL..'│108913│76289│ 32624│ 3 │\n   *    └─────┴───┴───┴───┴───────────┴──────┴─────┴──────┴───┘\n   * ```\n   *\n   * - **index**: the array index of the instruction within the transaction\n   * - **iso**: the isolated size of the instruction (marginal cost of only the instruction)\n   * - **mar**: the marginal size cost of the instruction (when added to previous)\n   * - **cum**: the cumulative size of the instructions up until that instruction\n   * - **quota/used/left**: [BPF instruction compute unit info](https://docs.solana.com/developing/programming-model/runtime)\n   * - **CPI**: [the maximum depth of CPI](https://docs.solana.com/developing/programming-model/calling-between-programs) (current limit in Solana is 4)\n   *\n   * @param opts\n   * @returns\n   */\n  simulateTable(\n    opts?: TXEnvelopeSimulateOptions\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    return this.simulate(opts).then((simulation) => {\n      if (simulation?.value?.logs) {\n        printTXTable(this, simulation.value.logs, \"\");\n      }\n      return simulation;\n    });\n  }\n\n  /**\n   * Sends the transaction without confirming it.\n   * @param opts\n   * @returns\n   */\n  async send(opts?: BroadcastOptions): Promise<PendingTransaction> {\n    const signed = await this.provider.signer.sign(\n      this.build(),\n      this.signers,\n      opts\n    );\n    return this.provider.broadcaster.broadcast(signed, opts);\n  }\n\n  /**\n   * Sends the transaction and waits for confirmation.\n   * @param opts\n   */\n  async confirm(opts?: BroadcastOptions): Promise<TransactionReceipt> {\n    return (await this.send(opts)).wait();\n  }\n\n  /**\n   * Combines the instructions/signers of the other envelope to create one large transaction.\n   */\n  combine(other: TransactionEnvelope): TransactionEnvelope {\n    return new TransactionEnvelope(\n      this.provider,\n      [...this.instructions, ...other.instructions],\n      [...this.signers, ...other.signers]\n    );\n  }\n\n  /**\n   * Get a list of all writable accounts, deduped\n   * All of these accounts likely need to be updated after the transaction is confirmed.\n   */\n  get writableKeys(): PublicKey[] {\n    return [\n      ...new Set([\n        ...this.instructions\n          .map((inst) =>\n            inst.keys.filter((key) => key.isWritable).map((k) => k.pubkey)\n          )\n          .reduce((acc, el) => acc.concat(el)),\n      ]).values(),\n    ];\n  }\n\n  /**\n   * Gets the instructions in a format that can be serialized easily to JSON.\n   */\n  get instructionsJSON(): SerializableInstruction[] {\n    return this.instructions.map((instruction) => ({\n      programId: instruction.programId.toString(),\n      keys: instruction.keys.map((m) => ({\n        isSigner: m.isSigner,\n        isWritable: m.isWritable,\n        publicKey: m.pubkey.toString(),\n      })),\n      data: instruction.data.toString(\"base64\"),\n    }));\n  }\n\n  /**\n   * Returns a string representation of the {@link TransactionEnvelope}.\n   */\n  get debugStr(): string {\n    return [\n      \"=> Instructions\",\n      this.instructions\n        .map((ser, i) => {\n          return [\n            `Instruction ${i}: ${ser.programId.toString()}`,\n            ...ser.keys.map(\n              (k, i) =>\n                `  [${i}] ${k.pubkey.toString()} ${\n                  k.isWritable ? \"(mut)\" : \"\"\n                } ${k.isSigner ? \"(signer)\" : \"\"}`\n            ),\n            `  Data (base64): ${ser.data.toString(\"base64\")}`,\n          ].join(\"\\n\");\n        })\n        .join(\"\\n\"),\n      \"=> Signers\",\n      this.signers.map((sg) => sg.publicKey.toString()).join(\"\\n\"),\n    ].join(\"\\n\");\n  }\n\n  /**\n   * Creates a new {@link TransactionEnvelope}.\n   * @param provider\n   * @param instructions\n   * @param signers\n   * @returns\n   */\n  static create(\n    provider: Provider,\n    instructions: (TransactionInstruction | null | undefined | boolean)[],\n    signers: Signer[] = []\n  ): TransactionEnvelope {\n    const ixs = instructions.filter((ix): ix is TransactionInstruction => !!ix);\n    return new TransactionEnvelope(provider, ixs, signers);\n  }\n\n  /**\n   * Add a memo to each transaction envelope specified.\n   */\n  static addMemos(\n    memo: string,\n    ...txs: TransactionEnvelope[]\n  ): TransactionEnvelope[] {\n    return txs.map((tx) => tx.addMemo(memo));\n  }\n\n  /**\n   * Combines multiple TransactionEnvelopes into one.\n   */\n  static combineAll(...txs: TransactionEnvelope[]): TransactionEnvelope {\n    return txs.reduce((acc, tx) => acc.combine(tx));\n  }\n\n  /**\n   * Takes a list of {@link TransactionEnvelope}s and combines them if they\n   * are able to be combined under the maximum TX size limit.\n   *\n   * @param txs\n   * @returns\n   */\n  static pack(...txs: readonly TransactionEnvelope[]): TransactionEnvelope[] {\n    if (txs.length === 0) {\n      return [];\n    }\n    const [first, ...rest] = txs;\n    invariant(first);\n\n    const { provider } = first;\n\n    let lastTXEnv: TransactionEnvelope = first;\n    let lastEstimation: number = lastTXEnv.estimateSizeUnsafe();\n    const partition: TransactionEnvelope[] = [];\n\n    rest.forEach((addedTX, i) => {\n      if (lastEstimation > PACKET_DATA_SIZE) {\n        throw new Error(\n          `cannot construct a valid partition: instruction ${i} is too large (${lastEstimation} > ${PACKET_DATA_SIZE})`\n        );\n      }\n      const nextIXs = [...lastTXEnv.instructions, ...addedTX.instructions];\n      const nextSigners = filterRequiredSigners(nextIXs, [\n        ...lastTXEnv.signers,\n        ...addedTX.signers,\n      ]);\n      const nextTXEnv = new TransactionEnvelope(provider, nextIXs, nextSigners);\n      const nextEstimation = nextTXEnv.estimateSizeUnsafe();\n\n      // move to next tx envelope if too big\n      if (nextEstimation > PACKET_DATA_SIZE) {\n        partition.push(lastTXEnv);\n        lastTXEnv = addedTX;\n        lastEstimation = lastTXEnv.estimateSizeUnsafe();\n      } else {\n        lastTXEnv = nextTXEnv;\n        lastEstimation = nextEstimation;\n      }\n    });\n    partition.push(lastTXEnv);\n\n    return partition;\n  }\n\n  /**\n   * Combines multiple async TransactionEnvelopes into one, serially.\n   */\n  static async combineAllAsync(\n    firstTX: Promise<TransactionEnvelope>,\n    ...txs: Promise<TransactionEnvelope>[]\n  ): Promise<TransactionEnvelope> {\n    let acc: TransactionEnvelope = await firstTX;\n    for (const tx of txs) {\n      acc = acc.combine(await tx);\n    }\n    return acc;\n  }\n\n  /**\n   * Sends all of the envelopes.\n   * @returns Pending transactions\n   */\n  static async sendAll(\n    txs: TransactionEnvelope[],\n    opts?: ConfirmOptions\n  ): Promise<PendingTransaction[]> {\n    const firstTX = txs[0];\n    if (!firstTX) {\n      return [];\n    }\n    const provider = firstTX.provider;\n    return await provider.sendAll(\n      txs.map((tx) => ({ tx: tx.build(), signers: tx.signers })),\n      opts\n    );\n  }\n\n  /**\n   * Deduplicate ATA instructions inside the transaction envelope.\n   */\n  dedupeATAIXs(): TransactionEnvelope {\n    if (this.instructions.length === 0) {\n      return this;\n    }\n\n    const seenATAs = new Set<string>();\n    const instructions = this.instructions\n      .map((ix) => {\n        const programId = ix.programId;\n        if (programId.equals(ASSOCIATED_TOKEN_PROGRAM_ID)) {\n          const ataKey = ix.keys[1]?.pubkey.toString();\n          if (!ataKey) {\n            throw new Error(\"ATA key does not exist on ATA instruction\");\n          }\n          if (seenATAs.has(ataKey)) {\n            return null;\n          }\n          seenATAs.add(ataKey);\n        }\n        return ix;\n      })\n      .filter((ix): ix is TransactionInstruction => !!ix);\n    return new TransactionEnvelope(this.provider, instructions, this.signers);\n  }\n\n  /**\n   * Split out ATA instructions to a separate transaction envelope.\n   */\n  splitATAIXs(): {\n    ataIXs: TransactionEnvelope;\n    tx: TransactionEnvelope;\n  } {\n    const ataIXs = new TransactionEnvelope(this.provider, [], this.signers);\n    const newTx = new TransactionEnvelope(this.provider, [], this.signers);\n\n    for (const ix of this.instructions) {\n      if (ix.programId.equals(ASSOCIATED_TOKEN_PROGRAM_ID)) {\n        ataIXs.instructions.push(ix);\n      } else {\n        newTx.instructions.push(ix);\n      }\n    }\n\n    return {\n      ataIXs: ataIXs.dedupeATAIXs(),\n      tx: newTx,\n    };\n  }\n\n  /**\n   * Get an instruction from the transaction envelope by index.\n   */\n  getInstruction(index: number): TransactionInstruction {\n    const ix = this.instructions[index];\n    if (!ix) {\n      throw new Error(`No instruction found at index ${index}`);\n    }\n    return ix;\n  }\n\n  /**\n   * Attach a memo instruction to this transaction.\n   */\n  addMemo(memo: string): TransactionEnvelope {\n    this.instructions.push(createMemoInstruction(memo));\n    return this;\n  }\n\n  /**\n   * Request for additional compute units before processing this transaction.\n   */\n  addAdditionalComputeBudget(\n    units: number,\n    additionalFee: number\n  ): TransactionEnvelope {\n    this.instructions.unshift(\n      requestComputeUnitsInstruction(units, additionalFee)\n    );\n    return this;\n  }\n\n  /**\n   * Request a specific transaction-wide program heap region size in bytes.\n   */\n  addAdditionalHeapFrame(bytes: number): TransactionEnvelope {\n    this.instructions.unshift(requestHeapFrameInstruction(bytes));\n    return this;\n  }\n}\n","import type {\n  Commitment,\n  ConfirmOptions,\n  Connection,\n  KeyedAccountInfo,\n  PublicKey,\n  RpcResponseAndContext,\n  Signer,\n  SimulatedTransactionResponse,\n  Transaction,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { SystemProgram } from \"@solana/web3.js\";\nimport invariant from \"tiny-invariant\";\n\nimport type { Broadcaster, ReadonlyProvider } from \".\";\nimport {\n  MultipleConnectionBroadcaster,\n  PendingTransaction,\n  SignerWallet,\n} from \".\";\nimport { SingleConnectionBroadcaster } from \"./broadcaster\";\nimport type {\n  Provider,\n  SendTxRequest,\n  TransactionSigner,\n  Wallet,\n} from \"./interfaces\";\nimport { TransactionEnvelope } from \"./transaction/TransactionEnvelope\";\n\nexport const DEFAULT_PROVIDER_OPTIONS: ConfirmOptions = {\n  preflightCommitment: \"confirmed\",\n  commitment: \"confirmed\",\n};\n\nexport const DEFAULT_READONLY_PUBLIC_KEY: PublicKey = SystemProgram.programId;\n\n/**\n * Provider that can only read.\n */\nexport class SolanaReadonlyProvider implements ReadonlyProvider {\n  /**\n   * @param connection The cluster connection where the program is deployed.\n   * @param opts       Transaction confirmation options to use by default.\n   * @param publicKey  Optional public key of read-only wallet.\n   */\n  constructor(\n    readonly connection: Connection,\n    readonly opts: ConfirmOptions = DEFAULT_PROVIDER_OPTIONS,\n    readonly publicKey: PublicKey = DEFAULT_READONLY_PUBLIC_KEY\n  ) {\n    this.wallet = {\n      ...this.wallet,\n      publicKey,\n    };\n  }\n\n  wallet: Wallet = {\n    signTransaction: Promise.resolve.bind(Promise),\n    signAllTransactions: Promise.resolve.bind(Promise),\n    publicKey: DEFAULT_READONLY_PUBLIC_KEY,\n  };\n\n  /**\n   * Gets\n   * @param accountId\n   * @returns\n   */\n  async getAccountInfo(accountId: PublicKey): Promise<KeyedAccountInfo | null> {\n    const accountInfo = await this.connection.getAccountInfo(\n      accountId,\n      this.opts.commitment\n    );\n    if (!accountInfo) {\n      return null;\n    }\n    return {\n      accountId,\n      accountInfo,\n    };\n  }\n}\n\n/**\n * Signs Solana transactions.\n */\nexport class SolanaTransactionSigner implements TransactionSigner {\n  constructor(\n    readonly wallet: Wallet,\n    readonly broadcaster: Broadcaster,\n    readonly preflightCommitment: Commitment = \"confirmed\"\n  ) {}\n\n  get publicKey(): PublicKey {\n    return this.wallet.publicKey;\n  }\n\n  /**\n   * Sends the given transaction, paid for and signed by the provider's wallet.\n   *\n   * @param tx      The transaction to send.\n   * @param signers The set of signers in addition to the provdier wallet that\n   *                will sign the transaction.\n   * @param opts    Transaction confirmation options.\n   */\n  async sign(\n    tx: Transaction,\n    signers: readonly (Signer | undefined)[] = [],\n    opts: ConfirmOptions = {\n      preflightCommitment: this.preflightCommitment,\n    }\n  ): Promise<Transaction> {\n    tx.feePayer = this.wallet.publicKey;\n    tx.recentBlockhash = await this.broadcaster.getRecentBlockhash(\n      opts.preflightCommitment\n    );\n\n    await this.wallet.signTransaction(tx);\n    signers\n      .filter((s): s is Signer => s !== undefined)\n      .forEach((kp) => {\n        tx.partialSign(kp);\n      });\n\n    return tx;\n  }\n\n  /**\n   * Similar to `send`, but for an array of transactions and signers.\n   */\n  async signAll(\n    reqs: readonly SendTxRequest[],\n    opts: ConfirmOptions = {\n      preflightCommitment: this.preflightCommitment,\n    }\n  ): Promise<Transaction[]> {\n    const blockhash = await this.broadcaster.getRecentBlockhash(\n      opts.preflightCommitment\n    );\n\n    const txs = reqs.map((r) => {\n      const tx = r.tx;\n      let signers = r.signers;\n\n      if (signers === undefined) {\n        signers = [];\n      }\n\n      tx.feePayer = this.wallet.publicKey;\n      tx.recentBlockhash = blockhash;\n\n      signers\n        .filter((s): s is Signer => s !== undefined)\n        .forEach((kp) => {\n          tx.partialSign(kp);\n        });\n\n      return tx;\n    });\n\n    const signedTxs = await this.wallet.signAllTransactions(txs);\n    return signedTxs;\n  }\n}\n\n/**\n * The network and wallet context used to send transactions paid for and signed\n * by the provider.\n *\n * This implementation was taken from Anchor.\n */\nexport class SolanaProvider extends SolanaReadonlyProvider implements Provider {\n  readonly signer: TransactionSigner;\n\n  /**\n   * @param connection The cluster connection where the program is deployed.\n   * @param sendConnection The connection where transactions are sent to.\n   * @param wallet     The wallet used to pay for and sign all transactions.\n   * @param opts       Transaction confirmation options to use by default.\n   */\n  constructor(\n    override readonly connection: Connection,\n    readonly broadcaster: Broadcaster,\n    override readonly wallet: Wallet,\n    override readonly opts: ConfirmOptions = DEFAULT_PROVIDER_OPTIONS\n  ) {\n    super(connection, opts);\n    this.signer = new SolanaTransactionSigner(\n      wallet,\n      broadcaster,\n      opts.preflightCommitment\n    );\n  }\n\n  /**\n   * Creates a new SolanaProvider.\n   * @deprecated use {@link SolanaProvider.init}\n   */\n  static load({\n    connection,\n    sendConnection = connection,\n    wallet,\n    opts,\n  }: {\n    /**\n     * Connection used for general reads\n     */\n    connection: Connection;\n    /**\n     * Connection used for sending transactions\n     */\n    sendConnection?: Connection;\n    /**\n     * Wallet used for signing transactions\n     */\n    wallet: Wallet;\n    /**\n     * Confirmation options\n     */\n    opts?: ConfirmOptions;\n  }): SolanaProvider {\n    return new SolanaProvider(\n      connection,\n      new SingleConnectionBroadcaster(sendConnection, opts),\n      wallet,\n      opts\n    );\n  }\n\n  /**\n   * Initializes a new SolanaProvider.\n   */\n  static init({\n    connection,\n    broadcastConnections = [connection],\n    wallet,\n    opts = DEFAULT_PROVIDER_OPTIONS,\n  }: {\n    /**\n     * Connection used for general reads\n     */\n    readonly connection: Connection;\n    /**\n     * Connections used for broadcasting transactions. Defaults to the read connection.\n     */\n    readonly broadcastConnections?: readonly Connection[];\n    /**\n     * Wallet used for signing transactions\n     */\n    readonly wallet: Wallet;\n    /**\n     * Confirmation options\n     */\n    readonly opts?: ConfirmOptions;\n  }): SolanaProvider {\n    const firstBroadcastConnection = broadcastConnections[0];\n    invariant(\n      firstBroadcastConnection,\n      \"must have at least one broadcast connection\"\n    );\n    return new SolanaProvider(\n      connection,\n      broadcastConnections.length > 1\n        ? new MultipleConnectionBroadcaster(broadcastConnections, opts)\n        : new SingleConnectionBroadcaster(firstBroadcastConnection, opts),\n      wallet,\n      opts\n    );\n  }\n\n  /**\n   * Sends the given transaction, paid for and signed by the provider's wallet.\n   *\n   * @param tx      The transaction to send.\n   * @param signers The set of signers in addition to the provdier wallet that\n   *                will sign the transaction.\n   * @param opts    Transaction confirmation options.\n   */\n  async send(\n    tx: Transaction,\n    signers: (Signer | undefined)[] = [],\n    opts: ConfirmOptions = this.opts\n  ): Promise<PendingTransaction> {\n    const theTx = await this.signer.sign(tx, signers, opts);\n    const pending = await this.broadcaster.broadcast(theTx, opts);\n    await pending.wait();\n    return pending;\n  }\n\n  /**\n   * Similar to `send`, but for an array of transactions and signers.\n   */\n  async sendAll(\n    reqs: readonly SendTxRequest[],\n    opts: ConfirmOptions = this.opts\n  ): Promise<PendingTransaction[]> {\n    const txs = await this.signer.signAll(reqs, opts);\n    return await Promise.all(\n      txs.map(async (tx) => {\n        const pending = await this.broadcaster.broadcast(tx, opts);\n        await pending.wait();\n        return pending;\n      })\n    );\n  }\n\n  /**\n   * Simulates the given transaction, returning emitted logs from execution.\n   *\n   * @param tx      The transaction to send.\n   * @param signers The set of signers in addition to the provider wallet that\n   *                will sign the transaction. If specified, the provider will\n   *                sign the transaction.\n   * @param opts    Transaction confirmation options.\n   */\n  async simulate(\n    tx: Transaction,\n    signers: (Signer | undefined)[] | undefined,\n    opts: ConfirmOptions = this.opts\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let simTX = tx;\n    if (signers !== undefined) {\n      simTX = await this.signer.sign(tx, signers, opts);\n    }\n    return await this.broadcaster.simulate(simTX, {\n      verifySigners: signers !== undefined,\n      commitment: opts.commitment,\n    });\n  }\n}\n\n/**\n * Provider with utility functions.\n */\nexport interface AugmentedProvider extends Provider {\n  /**\n   * The {@link PublicKey} of the wallet.\n   */\n  readonly walletKey: PublicKey;\n\n  /**\n   * Creates a new transaction using this Provider.\n   * @param instructions\n   * @param signers\n   * @returns\n   */\n  newTX: (\n    instructions?: (TransactionInstruction | null | undefined | boolean)[],\n    signers?: Signer[]\n  ) => TransactionEnvelope;\n\n  /**\n   * Requests an airdrop of tokens.\n   * @param lamports Number of lamports.\n   * @returns\n   */\n  requestAirdrop: (lamports: number) => Promise<PendingTransaction>;\n\n  /**\n   * Returns this provider with a different signer.\n   * @param signer\n   * @returns\n   */\n  withSigner: (signer: Signer) => AugmentedProvider;\n}\n\n/**\n * Wrapper for a Provider containing utility functions.\n */\nexport class SolanaAugmentedProvider implements AugmentedProvider {\n  constructor(readonly provider: Provider) {}\n\n  get walletKey(): PublicKey {\n    return this.provider.wallet.publicKey;\n  }\n\n  get connection(): Connection {\n    return this.provider.connection;\n  }\n\n  get signer(): TransactionSigner {\n    return this.provider.signer;\n  }\n\n  get broadcaster(): Broadcaster {\n    return this.provider.broadcaster;\n  }\n\n  get opts(): ConfirmOptions {\n    return this.provider.opts;\n  }\n\n  get wallet(): Wallet {\n    return this.provider.wallet;\n  }\n\n  send(\n    tx: Transaction,\n    signers?: (Signer | undefined)[] | undefined,\n    opts?: ConfirmOptions | undefined\n  ): Promise<PendingTransaction> {\n    return this.provider.send(tx, signers, opts);\n  }\n\n  sendAll(\n    reqs: readonly SendTxRequest[],\n    opts?: ConfirmOptions | undefined\n  ): Promise<PendingTransaction[]> {\n    return this.provider.sendAll(reqs, opts);\n  }\n\n  simulate(\n    tx: Transaction,\n    signers?: (Signer | undefined)[] | undefined,\n    opts?: ConfirmOptions | undefined\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    return this.provider.simulate(tx, signers, opts);\n  }\n\n  getAccountInfo(accountId: PublicKey): Promise<KeyedAccountInfo | null> {\n    return this.provider.getAccountInfo(accountId);\n  }\n\n  /**\n   * Creates a new transaction using this Provider.\n   * @param instructions\n   * @param signers\n   * @returns\n   */\n  newTX(\n    instructions: (TransactionInstruction | null | undefined | boolean)[] = [],\n    signers: Signer[] = []\n  ): TransactionEnvelope {\n    return TransactionEnvelope.create(this, instructions, signers);\n  }\n\n  /**\n   * Requests an airdrop of tokens.\n   * @param amount\n   * @returns\n   */\n  async requestAirdrop(\n    lamports: number,\n    to: PublicKey = this.wallet.publicKey\n  ): Promise<PendingTransaction> {\n    return new PendingTransaction(\n      this.connection,\n      await this.connection.requestAirdrop(to, lamports)\n    );\n  }\n\n  /**\n   * Returns this provider with a different signer.\n   * @param signer\n   * @returns\n   */\n  withSigner(signer: Signer): SolanaAugmentedProvider {\n    return new SolanaAugmentedProvider(\n      new SolanaProvider(\n        this.connection,\n        this.broadcaster,\n        new SignerWallet(signer),\n        this.opts\n      )\n    );\n  }\n}\n","/**\n * Borrowed from explorer.solana.com code written by @jstarry.\n */\n\nimport type { TransactionError } from \"@solana/web3.js\";\n\n/**\n * Solana error messages built-in.\n */\nexport const BUILTIN_SOLANA_ERROR_MESSAGES: Map<string, string> = new Map([\n  [\"GenericError\", \"generic instruction error\"],\n  [\"InvalidArgument\", \"invalid program argument\"],\n  [\"InvalidInstructionData\", \"invalid instruction data\"],\n  [\"InvalidAccountData\", \"invalid account data for instruction\"],\n  [\"AccountDataTooSmall\", \"account data too small for instruction\"],\n  [\"InsufficientFunds\", \"insufficient funds for instruction\"],\n  [\"IncorrectProgramId\", \"incorrect program id for instruction\"],\n  [\"MissingRequiredSignature\", \"missing required signature for instruction\"],\n  [\n    \"AccountAlreadyInitialized\",\n    \"instruction requires an uninitialized account\",\n  ],\n  [\"UninitializedAccount\", \"instruction requires an initialized account\"],\n  [\n    \"UnbalancedInstruction\",\n    \"sum of account balances before and after instruction do not match\",\n  ],\n  [\"ModifiedProgramId\", \"instruction modified the program id of an account\"],\n  [\n    \"ExternalAccountLamportSpend\",\n    \"instruction spent from the balance of an account it does not own\",\n  ],\n  [\n    \"ExternalAccountDataModified\",\n    \"instruction modified data of an account it does not own\",\n  ],\n  [\n    \"ReadonlyLamportChange\",\n    \"instruction changed the balance of a read-only account\",\n  ],\n  [\"ReadonlyDataModified\", \"instruction modified data of a read-only account\"],\n  [\"DuplicateAccountIndex\", \"instruction contains duplicate accounts\"],\n  [\"ExecutableModified\", \"instruction changed executable bit of an account\"],\n  [\"RentEpochModified\", \"instruction modified rent epoch of an account\"],\n  [\"NotEnoughAccountKeys\", \"insufficient account keys for instruction\"],\n  [\"AccountDataSizeChanged\", \"non-system instruction changed account size\"],\n  [\"AccountNotExecutable\", \"instruction expected an executable account\"],\n  [\n    \"AccountBorrowFailed\",\n    \"instruction tries to borrow reference for an account which is already borrowed\",\n  ],\n  [\n    \"AccountBorrowOutstanding\",\n    \"instruction left account with an outstanding borrowed reference\",\n  ],\n  [\n    \"DuplicateAccountOutOfSync\",\n    \"instruction modifications of multiply-passed account differ\",\n  ],\n  [\"Custom\", \"custom program error: {0}\"],\n  [\"InvalidError\", \"program returned invalid error code\"],\n  [\"ExecutableDataModified\", \"instruction changed executable accounts data\"],\n  [\n    \"ExecutableLamportChange\",\n    \"instruction changed the balance of a executable account\",\n  ],\n  [\"ExecutableAccountNotRentExempt\", \"executable accounts must be rent exempt\"],\n  [\"UnsupportedProgramId\", \"Unsupported program id\"],\n  [\"CallDepth\", \"Cross-program invocation call depth too deep\"],\n  [\"MissingAccount\", \"An account required by the instruction is missing\"],\n  [\n    \"ReentrancyNotAllowed\",\n    \"Cross-program invocation reentrancy not allowed for this instruction\",\n  ],\n  [\n    \"MaxSeedLengthExceeded\",\n    \"Length of the seed is too long for address generation\",\n  ],\n  [\"InvalidSeeds\", \"Provided seeds do not result in a valid address\"],\n  [\"InvalidRealloc\", \"Failed to reallocate account data\"],\n  [\"ComputationalBudgetExceeded\", \"Computational budget exceeded\"],\n  [\n    \"PrivilegeEscalation\",\n    \"Cross-program invocation with unauthorized signer or writable account\",\n  ],\n  [\n    \"ProgramEnvironmentSetupFailure\",\n    \"Failed to create program execution environment\",\n  ],\n  [\"ProgramFailedToComplete\", \"Program failed to complete\"],\n  [\"ProgramFailedToCompile\", \"Program failed to compile\"],\n  [\"Immutable\", \"Account is immutable\"],\n  [\"IncorrectAuthority\", \"Incorrect authority provided\"],\n  [\"BorshIoError\", \"Failed to serialize or deserialize account data: {0}\"],\n  [\n    \"AccountNotRentExempt\",\n    \"An account does not have enough lamports to be rent-exempt\",\n  ],\n  [\"InvalidAccountOwner\", \"Invalid account owner\"],\n  [\"ArithmeticOverflow\", \"Program arithmetic overflowed\"],\n  [\"UnsupportedSysvar\", \"Unsupported sysvar\"],\n  [\"IllegalOwner\", \"Provided owner is not allowed\"],\n]);\n\nexport type ProgramError = {\n  index: number;\n  message: string;\n};\n\nexport function getTransactionInstructionError(\n  error?: TransactionError | null\n): ProgramError | undefined {\n  if (!error) {\n    return;\n  }\n\n  if (typeof error === \"object\" && \"InstructionError\" in error) {\n    const innerError = error[\"InstructionError\"];\n    const index = innerError[0] as number;\n    const instructionError = innerError[1];\n\n    return {\n      index,\n      message: getInstructionError(instructionError),\n    };\n  }\n}\n\nfunction getInstructionError(error: unknown): string {\n  let out;\n  let value: string | null = null;\n\n  if (typeof error === \"string\") {\n    const message = BUILTIN_SOLANA_ERROR_MESSAGES.get(error);\n    if (message) {\n      return message;\n    }\n  } else if (\"Custom\" in (error as Record<string, string>)) {\n    out = BUILTIN_SOLANA_ERROR_MESSAGES.get(\"Custom\");\n    value = (error as { Custom: string })[\"Custom\"];\n  } else if (\"BorshIoError\" in (error as Record<string, string>)) {\n    out = BUILTIN_SOLANA_ERROR_MESSAGES.get(\"BorshIoError\");\n    value = (error as { BorshIoError: string })[\"BorshIoError\"];\n  }\n\n  if (out && value) {\n    return out.replace(\"{0}\", value);\n  }\n\n  return \"Unknown instruction error\";\n}\n","import type {\n  Cluster,\n  Connection,\n  Finality,\n  TransactionSignature,\n} from \"@solana/web3.js\";\nimport promiseRetry from \"promise-retry\";\nimport type { WrapOptions } from \"retry\";\n\nimport { TransactionReceipt } from \"../transaction\";\n\n/**\n * Options for awaiting a transaction confirmation.\n */\nexport interface TransactionWaitOptions extends WrapOptions {\n  /**\n   * Commitment of the transaction. Defaults to `confirmed`.\n   */\n  readonly commitment?: Finality;\n  /**\n   * Whether or not to use websockets for awaiting confirmation. Defaults to `false`.\n   */\n  readonly useWebsocket?: boolean;\n}\n\n/**\n * Transaction which may or may not be confirmed.\n */\nexport class PendingTransaction {\n  private _receipt: TransactionReceipt | null = null;\n\n  constructor(\n    readonly connection: Connection,\n    readonly signature: TransactionSignature\n  ) {}\n\n  /**\n   * Gets the transaction receipt, if it has already been fetched.\n   *\n   * You probably want the async version of this function, `wait`.\n   */\n  get receipt(): TransactionReceipt | null {\n    return this._receipt;\n  }\n\n  /**\n   * Waits for the confirmation of the transaction, via polling.\n   * @returns\n   */\n  async wait({\n    commitment = \"confirmed\",\n    useWebsocket = false,\n    ...retryOpts\n  }: TransactionWaitOptions = {}): Promise<TransactionReceipt> {\n    if (this._receipt) {\n      return this._receipt;\n    }\n    if (useWebsocket) {\n      await this.awaitSignatureConfirmation(commitment);\n      return await this.pollForReceipt({ commitment });\n    }\n    return await this.pollForReceipt({ commitment, ...retryOpts });\n  }\n\n  /**\n   * Fetches the TransactionReceipt via polling.\n   * @returns\n   */\n  async pollForReceipt({\n    commitment = \"confirmed\",\n    ...retryOpts\n  }: Omit<\n    TransactionWaitOptions,\n    \"useWebsocket\"\n  > = {}): Promise<TransactionReceipt> {\n    const receipt = await promiseRetry(\n      async (retry) => {\n        const result = await this.connection.getTransaction(this.signature, {\n          commitment,\n        });\n        if (!result) {\n          retry(new Error(\"Error fetching transaction\"));\n          return;\n        }\n        return new TransactionReceipt(this.signature, result);\n      },\n      {\n        retries: 5,\n        minTimeout: 500,\n        ...retryOpts,\n      }\n    );\n    if (!receipt) {\n      throw new Error(\"transaction could not be confirmed\");\n    }\n    this._receipt = receipt;\n    return receipt;\n  }\n\n  /**\n   * Awaits the confirmation of the transaction, via onSignature subscription.\n   * @returns\n   */\n  async awaitSignatureConfirmation(\n    commitment: Finality = \"confirmed\"\n  ): Promise<TransactionSignature> {\n    const { value } = await this.connection.confirmTransaction(\n      this.signature,\n      commitment\n    );\n    if (value.err) {\n      throw value.err;\n    }\n    return this.signature;\n  }\n\n  /**\n   * Generates a link to view this {@link PendingTransaction} on the official Solana explorer.\n   * @param network\n   * @returns\n   */\n  generateSolanaExplorerLink(cluster: Cluster = \"mainnet-beta\"): string {\n    return `https://explorer.solana.com/tx/${this.signature}?cluster=${cluster}`;\n  }\n}\n","import type {\n  Cluster,\n  TransactionResponse,\n  TransactionSignature,\n} from \"@solana/web3.js\";\nimport invariant from \"tiny-invariant\";\n\nimport type { Event, EventParser } from \"../interfaces\";\n\n/**\n * A transaction that has been processed by the cluster.\n */\nexport class TransactionReceipt {\n  constructor(\n    /**\n     * Signature (id) of the transaction.\n     */\n    readonly signature: TransactionSignature,\n    /**\n     * Raw response from web3.js\n     */\n    readonly response: TransactionResponse\n  ) {}\n\n  /**\n   * Gets the events associated with this transaction.\n   */\n  getEvents<E extends Event>(eventParser: EventParser<E>): readonly E[] {\n    const logs = this.response.meta?.logMessages;\n    if (logs && logs.length > 0) {\n      return eventParser(logs);\n    }\n    return [];\n  }\n\n  /**\n   * Prints the logs associated with this transaction.\n   */\n  printLogs(): void {\n    console.log(this.response.meta?.logMessages?.join(\"\\n\"));\n  }\n\n  /**\n   * Gets the compute units used by the transaction.\n   * @returns\n   */\n  get computeUnits(): number {\n    const logs = this.response.meta?.logMessages;\n    invariant(logs, \"no logs\");\n    const consumeLog = logs[logs.length - 2];\n    invariant(consumeLog, \"no consume log\");\n    const amtStr = consumeLog.split(\" \")[3];\n    invariant(amtStr, \"no amount\");\n    return parseInt(amtStr);\n  }\n\n  /**\n   * Generates a link to view this {@link TransactionReceipt} on the official Solana explorer.\n   * @param network\n   * @returns\n   */\n  generateSolanaExplorerLink(cluster: Cluster = \"mainnet-beta\"): string {\n    return `https://explorer.solana.com/tx/${this.signature}?cluster=${cluster}`;\n  }\n}\n","import type {\n  Blockhash,\n  Commitment,\n  ConfirmOptions,\n  Connection,\n  RpcResponseAndContext,\n  SendOptions,\n  SimulatedTransactionResponse,\n  Transaction,\n} from \"@solana/web3.js\";\n\nimport { firstAggregateError } from \"./error\";\nimport type { Broadcaster } from \"./interfaces\";\nimport { DEFAULT_PROVIDER_OPTIONS } from \"./provider\";\nimport { PendingTransaction } from \"./transaction\";\nimport { suppressConsoleErrorAsync } from \"./utils\";\nimport { simulateTransactionWithCommitment } from \"./utils/simulateTransactionWithCommitment\";\n\nexport interface BroadcastOptions extends ConfirmOptions {\n  /**\n   * Prints the transaction logs as emitted by @solana/web3.js. Defaults to true.\n   */\n  printLogs?: boolean;\n}\n\n/**\n * Broadcasts transactions to a single connection.\n */\nexport class SingleConnectionBroadcaster implements Broadcaster {\n  constructor(\n    readonly sendConnection: Connection,\n    readonly opts: ConfirmOptions = DEFAULT_PROVIDER_OPTIONS\n  ) {}\n\n  /**\n   * @inheritdoc\n   */\n  async getRecentBlockhash(\n    commitment: Commitment = this.opts.commitment ?? \"confirmed\"\n  ): Promise<Blockhash> {\n    const result = await this.sendConnection.getLatestBlockhash(commitment);\n    return result.blockhash;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  async broadcast(\n    tx: Transaction,\n    { printLogs = true, ...opts }: BroadcastOptions = this.opts\n  ): Promise<PendingTransaction> {\n    if (tx.signatures.length === 0) {\n      throw new Error(\"Transaction must be signed before broadcasting.\");\n    }\n    const rawTx = tx.serialize();\n\n    if (printLogs) {\n      return new PendingTransaction(\n        this.sendConnection,\n        await this.sendConnection.sendRawTransaction(rawTx, opts)\n      );\n    }\n\n    return await suppressConsoleErrorAsync(async () => {\n      // hide the logs of TX errors if printLogs = false\n      return new PendingTransaction(\n        this.sendConnection,\n        await this.sendConnection.sendRawTransaction(rawTx, opts)\n      );\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n  async simulate(\n    tx: Transaction,\n    {\n      commitment = this.opts.preflightCommitment ?? \"confirmed\",\n      verifySigners = true,\n    }: {\n      commitment?: Commitment;\n      verifySigners?: boolean;\n    } = {\n      commitment: this.opts.preflightCommitment ?? \"confirmed\",\n      verifySigners: true,\n    }\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if (verifySigners && tx.signatures.length === 0) {\n      throw new Error(\"Transaction must be signed before simulating.\");\n    }\n    return await simulateTransactionWithCommitment(\n      this.sendConnection,\n      tx,\n      commitment\n    );\n  }\n}\n\n/**\n * Broadcasts transactions to multiple connections simultaneously.\n */\nexport class MultipleConnectionBroadcaster implements Broadcaster {\n  constructor(\n    readonly connections: readonly Connection[],\n    readonly opts: ConfirmOptions = DEFAULT_PROVIDER_OPTIONS\n  ) {}\n\n  async getRecentBlockhash(\n    commitment: Commitment = this.opts.preflightCommitment ?? \"confirmed\"\n  ): Promise<Blockhash> {\n    try {\n      const result = await Promise.any(\n        this.connections.map((conn) => conn.getLatestBlockhash(commitment))\n      );\n      return result.blockhash;\n    } catch (e) {\n      if (e instanceof AggregateError) {\n        throw firstAggregateError(e);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async _sendRawTransaction(\n    encoded: Buffer,\n    options?: SendOptions\n  ): Promise<PendingTransaction> {\n    try {\n      return await Promise.any(\n        this.connections.map(async (connection) => {\n          return new PendingTransaction(\n            connection,\n            await connection.sendRawTransaction(encoded, options)\n          );\n        })\n      );\n    } catch (e) {\n      if (e instanceof AggregateError) {\n        throw firstAggregateError(e);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Broadcasts a signed transaction.\n   *\n   * @param tx\n   * @param confirm\n   * @param opts\n   * @returns\n   */\n  async broadcast(\n    tx: Transaction,\n    { printLogs = true, ...opts }: BroadcastOptions = this.opts\n  ): Promise<PendingTransaction> {\n    if (tx.signatures.length === 0) {\n      throw new Error(\"Transaction must be signed before broadcasting.\");\n    }\n    const rawTx = tx.serialize();\n\n    if (printLogs) {\n      return await this._sendRawTransaction(rawTx, opts);\n    }\n\n    return await suppressConsoleErrorAsync(async () => {\n      // hide the logs of TX errors if printLogs = false\n      return await this._sendRawTransaction(rawTx, opts);\n    });\n  }\n\n  /**\n   * Simulates a transaction with a commitment.\n   * @param tx\n   * @param commitment\n   * @returns\n   */\n  async simulate(\n    tx: Transaction,\n    {\n      commitment = this.opts.preflightCommitment ?? \"confirmed\",\n      verifySigners = true,\n    }: {\n      commitment?: Commitment;\n      verifySigners?: boolean;\n    } = {\n      commitment: this.opts.preflightCommitment ?? \"confirmed\",\n      verifySigners: true,\n    }\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if (verifySigners && tx.signatures.length === 0) {\n      throw new Error(\"Transaction must be signed before simulating.\");\n    }\n    try {\n      return await Promise.any(\n        this.connections.map(async (connection) => {\n          return await simulateTransactionWithCommitment(\n            connection,\n            tx,\n            commitment\n          );\n        })\n      );\n    } catch (e) {\n      if (e instanceof AggregateError) {\n        throw firstAggregateError(e);\n      } else {\n        throw e;\n      }\n    }\n  }\n}\n","import type {\n  ConfirmOptions,\n  Connection,\n  PublicKey,\n  Signer,\n  Transaction,\n} from \"@solana/web3.js\";\n\nimport type { Provider, Wallet } from \"./interfaces\";\nimport { SolanaProvider } from \"./provider\";\n\n/**\n * Wallet based on a Signer.\n */\nexport class SignerWallet implements Wallet {\n  constructor(readonly signer: Signer) {}\n\n  get publicKey(): PublicKey {\n    return this.signer.publicKey;\n  }\n\n  signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    return Promise.resolve(\n      transactions.map((tx) => {\n        tx.partialSign(this.signer);\n        return tx;\n      })\n    );\n  }\n\n  signTransaction(transaction: Transaction): Promise<Transaction> {\n    transaction.partialSign(this.signer);\n    return Promise.resolve(transaction);\n  }\n\n  /**\n   * Creates a Provider from this Wallet by adding a Connection.\n   * @param connection\n   * @returns\n   */\n  createProvider(\n    connection: Connection,\n    sendConnection?: Connection,\n    opts?: ConfirmOptions\n  ): Provider {\n    return SolanaProvider.load({\n      connection,\n      sendConnection,\n      wallet: this,\n      opts,\n    });\n  }\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport {isBuffer} from 'buffer';\nimport {isPrimitive, inherits, isError, isFunction, isRegExp, isDate, inspect as utilInspect} from 'util';\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nexport default assert;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nexport function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return utilInspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nexport function fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nexport function ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\nexport {ok as assert};\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nexport function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nexport function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nexport function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nexport function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nexport function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nexport function notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nexport function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nexport function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nexport function throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nexport function doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nexport function ifError(err) {\n  if (err) throw err;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n","// @flow\n\nimport {sendAndConfirmTransaction as realSendAndConfirmTransaction} from '@solana/web3.js';\nimport type {\n  Connection,\n  Signer,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nexport function sendAndConfirmTransaction(\n  title: string,\n  connection: Connection,\n  transaction: Transaction,\n  ...signers: Array<Signer>\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(connection, transaction, signers, {\n    skipPreflight: false,\n  });\n}\n","/**\n * @flow\n */\n\nimport {Buffer} from 'buffer';\nimport assert from 'assert';\nimport BN from 'bn.js';\nimport * as BufferLayout from 'buffer-layout';\nimport {\n  Keypair,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n  SYSVAR_RENT_PUBKEY,\n} from '@solana/web3.js';\nimport type {\n  Connection,\n  Commitment,\n  Signer,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nimport * as Layout from './layout';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\n\nexport const TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nconst FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nconst INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\nfunction pubkeyToBuffer(publicKey: PublicKey): typeof Buffer {\n  return Buffer.from(publicKey.toBuffer());\n}\n\n/**\n * 64-bit value\n */\nexport class u64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n      return b;\n    }\n    assert(b.length < 8, 'u64 too large');\n\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a u64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): u64 {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new u64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\nfunction isAccount(accountOrPublicKey: any): boolean {\n  return 'publicKey' in accountOrPublicKey;\n}\n\ntype AuthorityType =\n  | 'MintTokens'\n  | 'FreezeAccount'\n  | 'AccountOwner'\n  | 'CloseAccount';\n\nconst AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3,\n};\n\n// The address of the special mint for wrapped native token.\nexport const NATIVE_MINT: PublicKey = new PublicKey(\n  'So11111111111111111111111111111111111111112',\n);\n\n/**\n * Information about the mint\n */\ntype MintInfo = {|\n  /**\n   * Optional authority used to mint new tokens. The mint authority may only be provided during\n   * mint creation. If no mint authority is present then the mint has a fixed supply and no\n   * further tokens may be minted.\n   */\n  mintAuthority: null | PublicKey,\n\n  /**\n   * Total supply of tokens\n   */\n  supply: u64,\n\n  /**\n   * Number of base 10 digits to the right of the decimal place\n   */\n  decimals: number,\n\n  /**\n   * Is this mint initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Optional authority to freeze token accounts\n   */\n  freezeAuthority: null | PublicKey,\n|};\n\nexport const MintLayout: typeof BufferLayout.Structure = BufferLayout.struct([\n  BufferLayout.u32('mintAuthorityOption'),\n  Layout.publicKey('mintAuthority'),\n  Layout.uint64('supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('isInitialized'),\n  BufferLayout.u32('freezeAuthorityOption'),\n  Layout.publicKey('freezeAuthority'),\n]);\n\n/**\n * Information about an account\n */\ntype AccountInfo = {|\n  /**\n   * The address of this account\n   */\n  address: PublicKey,\n\n  /**\n   * The mint associated with this account\n   */\n  mint: PublicKey,\n\n  /**\n   * Owner of this account\n   */\n  owner: PublicKey,\n\n  /**\n   * Amount of tokens this account holds\n   */\n  amount: u64,\n\n  /**\n   * The delegate for this account\n   */\n  delegate: null | PublicKey,\n\n  /**\n   * The amount of tokens the delegate authorized to the delegate\n   */\n  delegatedAmount: u64,\n\n  /**\n   * Is this account initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Is this account frozen\n   */\n  isFrozen: boolean,\n\n  /**\n   * Is this a native token account\n   */\n  isNative: boolean,\n\n  /**\n   * If this account is a native token, it must be rent-exempt. This\n   * value logs the rent-exempt reserve which must remain in the balance\n   * until the account is closed.\n   */\n  rentExemptReserve: null | u64,\n\n  /**\n   * Optional authority to close the account\n   */\n  closeAuthority: null | PublicKey,\n|};\n\n/**\n * @private\n */\nexport const AccountLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.publicKey('mint'),\n    Layout.publicKey('owner'),\n    Layout.uint64('amount'),\n    BufferLayout.u32('delegateOption'),\n    Layout.publicKey('delegate'),\n    BufferLayout.u8('state'),\n    BufferLayout.u32('isNativeOption'),\n    Layout.uint64('isNative'),\n    Layout.uint64('delegatedAmount'),\n    BufferLayout.u32('closeAuthorityOption'),\n    Layout.publicKey('closeAuthority'),\n  ],\n);\n\n/**\n * Information about an multisig\n */\ntype MultisigInfo = {|\n  /**\n   * The number of signers required\n   */\n  m: number,\n\n  /**\n   * Number of possible signers, corresponds to the\n   * number of `signers` that are valid.\n   */\n  n: number,\n\n  /**\n   * Is this mint initialized\n   */\n  initialized: boolean,\n\n  /**\n   * The signers\n   */\n  signer1: PublicKey,\n  signer2: PublicKey,\n  signer3: PublicKey,\n  signer4: PublicKey,\n  signer5: PublicKey,\n  signer6: PublicKey,\n  signer7: PublicKey,\n  signer8: PublicKey,\n  signer9: PublicKey,\n  signer10: PublicKey,\n  signer11: PublicKey,\n|};\n\n/**\n * @private\n */\nconst MultisigLayout = BufferLayout.struct([\n  BufferLayout.u8('m'),\n  BufferLayout.u8('n'),\n  BufferLayout.u8('is_initialized'),\n  Layout.publicKey('signer1'),\n  Layout.publicKey('signer2'),\n  Layout.publicKey('signer3'),\n  Layout.publicKey('signer4'),\n  Layout.publicKey('signer5'),\n  Layout.publicKey('signer6'),\n  Layout.publicKey('signer7'),\n  Layout.publicKey('signer8'),\n  Layout.publicKey('signer9'),\n  Layout.publicKey('signer10'),\n  Layout.publicKey('signer11'),\n]);\n\n/**\n * An ERC20-like Token\n */\nexport class Token {\n  /**\n   * @private\n   */\n  connection: Connection;\n\n  /**\n   * The public key identifying this mint\n   */\n  publicKey: PublicKey;\n\n  /**\n   * Program Identifier for the Token program\n   */\n  programId: PublicKey;\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n  associatedProgramId: PublicKey;\n\n  /**\n   * Fee payer\n   */\n  payer: Signer;\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  constructor(\n    connection: Connection,\n    publicKey: PublicKey,\n    programId: PublicKey,\n    payer: Signer,\n  ) {\n    Object.assign(this, {\n      connection,\n      publicKey,\n      programId,\n      payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID,\n    });\n  }\n\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMint(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(MintLayout.span);\n  }\n\n  /**\n   * Get the minimum balance for the account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptAccount(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      AccountLayout.span,\n    );\n  }\n\n  /**\n   * Get the minimum balance for the multsig to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMultisig(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      MultisigLayout.span,\n    );\n  }\n\n  /**\n   * Create and initialize a token.\n   *\n   * @param connection The connection to use\n   * @param payer Fee payer for transaction\n   * @param mintAuthority Account or multisig that will control minting\n   * @param freezeAuthority Optional account or multisig that can freeze token accounts\n   * @param decimals Location of the decimal place\n   * @param programId Optional token programId, uses the system programId by default\n   * @return Token object for the newly minted token\n   */\n  static async createMint(\n    connection: Connection,\n    payer: Signer,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n    decimals: number,\n    programId: PublicKey,\n  ): Promise<Token> {\n    const mintAccount = Keypair.generate();\n    const token = new Token(\n      connection,\n      mintAccount.publicKey,\n      programId,\n      payer,\n    );\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMint(\n      connection,\n    );\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: mintAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MintLayout.span,\n        programId,\n      }),\n    );\n\n    transaction.add(\n      Token.createInitMintInstruction(\n        programId,\n        mintAccount.publicKey,\n        decimals,\n        mintAuthority,\n        freezeAuthority,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMint',\n      connection,\n      transaction,\n      payer,\n      mintAccount,\n    );\n\n    return token;\n  }\n\n  /**\n   * Create and initialize a new account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new empty account\n   */\n  async createAccount(owner: PublicKey): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      this.connection,\n    );\n\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    const mintPublicKey = this.publicKey;\n    transaction.add(\n      Token.createInitAccountInstruction(\n        this.programId,\n        mintPublicKey,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeAccount',\n      this.connection,\n      transaction,\n      this.payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize the associated account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new associated account\n   */\n  async createAssociatedTokenAccount(owner: PublicKey): Promise<PublicKey> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n  }\n\n  async createAssociatedTokenAccountInternal(\n    owner: PublicKey,\n    associatedAddress: PublicKey,\n  ): Promise<PublicKey> {\n    await sendAndConfirmTransaction(\n      'CreateAssociatedTokenAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createAssociatedTokenAccountInstruction(\n          this.associatedProgramId,\n          this.programId,\n          this.publicKey,\n          associatedAddress,\n          owner,\n          this.payer.publicKey,\n        ),\n      ),\n      this.payer,\n    );\n\n    return associatedAddress;\n  }\n\n  /**\n   * Retrieve the associated account or create one if not found.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return The new associated account\n   */\n  async getOrCreateAssociatedAccountInfo(\n    owner: PublicKey,\n  ): Promise<AccountInfo> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    // This is the optimum logic, considering TX fee, client-side computation,\n    // RPC roundtrips and guaranteed idempotent.\n    // Sadly we can't do this atomically;\n    try {\n      return await this.getAccountInfo(associatedAddress);\n    } catch (err) {\n      // INVALID_ACCOUNT_OWNER can be possible if the associatedAddress has\n      // already been received some lamports (= became system accounts).\n      // Assuming program derived addressing is safe, this is the only case\n      // for the INVALID_ACCOUNT_OWNER in this code-path\n      if (\n        err.message === FAILED_TO_FIND_ACCOUNT ||\n        err.message === INVALID_ACCOUNT_OWNER\n      ) {\n        // as this isn't atomic, it's possible others can create associated\n        // accounts meanwhile\n        try {\n          await this.createAssociatedTokenAccountInternal(\n            owner,\n            associatedAddress,\n          );\n        } catch (err) {\n          // ignore all errors; for now there is no API compatible way to\n          // selectively ignore the expected instruction error if the\n          // associated account is existing already.\n        }\n\n        // Now this should always succeed\n        return await this.getAccountInfo(associatedAddress);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Create and initialize a new account on the special native token mint.\n   *\n   * In order to be wrapped, the account must have a balance of native tokens\n   * when it is initialized with the token program.\n   *\n   * This function sends lamports to the new account before initializing it.\n   *\n   * @param connection A solana web3 connection\n   * @param programId The token program ID\n   * @param owner The owner of the new token account\n   * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n   * @param amount The amount of lamports to wrap\n   * @return {Promise<PublicKey>} The new token account\n   */\n  static async createWrappedNativeAccount(\n    connection: Connection,\n    programId: PublicKey,\n    owner: PublicKey,\n    payer: Signer,\n    amount: number,\n  ): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      connection,\n    );\n\n    // Create a new account\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId,\n      }),\n    );\n\n    // Send lamports to it (these will be wrapped into native tokens by the token program)\n    transaction.add(\n      SystemProgram.transfer({\n        fromPubkey: payer.publicKey,\n        toPubkey: newAccount.publicKey,\n        lamports: amount,\n      }),\n    );\n\n    // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n    transaction.add(\n      Token.createInitAccountInstruction(\n        programId,\n        NATIVE_MINT,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the three instructions\n    await sendAndConfirmTransaction(\n      'createAccount, transfer, and initializeAccount',\n      connection,\n      transaction,\n      payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize a new multisig.\n   *\n   * This account may then be used for multisignature verification\n   *\n   * @param m Number of required signatures\n   * @param signers Full set of signers\n   * @return Public key of the new multisig account\n   */\n  async createMultisig(\n    m: number,\n    signers: Array<PublicKey>,\n  ): Promise<PublicKey> {\n    const multisigAccount = Keypair.generate();\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMultisig(\n      this.connection,\n    );\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: multisigAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MultisigLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    // create the new account\n    let keys = [\n      {pubkey: multisigAccount.publicKey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    signers.forEach(signer =>\n      keys.push({pubkey: signer, isSigner: false, isWritable: false}),\n    );\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('m'),\n    ]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 2, // InitializeMultisig instruction\n        m,\n      },\n      data,\n    );\n    transaction.add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMultisig',\n      this.connection,\n      transaction,\n      this.payer,\n      multisigAccount,\n    );\n\n    return multisigAccount.publicKey;\n  }\n\n  /**\n   * Retrieve mint information\n   */\n  async getMintInfo(): Promise<MintInfo> {\n    const info = await this.connection.getAccountInfo(this.publicKey);\n    if (info === null) {\n      throw new Error('Failed to find mint account');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid mint owner: ${JSON.stringify(info.owner)}`);\n    }\n    if (info.data.length != MintLayout.span) {\n      throw new Error(`Invalid mint size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const mintInfo = MintLayout.decode(data);\n\n    if (mintInfo.mintAuthorityOption === 0) {\n      mintInfo.mintAuthority = null;\n    } else {\n      mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n    }\n\n    mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n    mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n    if (mintInfo.freezeAuthorityOption === 0) {\n      mintInfo.freezeAuthority = null;\n    } else {\n      mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n    }\n    return mintInfo;\n  }\n\n  /**\n   * Retrieve account information\n   *\n   * @param account Public key of the account\n   */\n  async getAccountInfo(\n    account: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo> {\n    const info = await this.connection.getAccountInfo(account, commitment);\n    if (info === null) {\n      throw new Error(FAILED_TO_FIND_ACCOUNT);\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(INVALID_ACCOUNT_OWNER);\n    }\n    if (info.data.length != AccountLayout.span) {\n      throw new Error(`Invalid account size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const accountInfo = AccountLayout.decode(data);\n    accountInfo.address = account;\n    accountInfo.mint = new PublicKey(accountInfo.mint);\n    accountInfo.owner = new PublicKey(accountInfo.owner);\n    accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n    if (accountInfo.delegateOption === 0) {\n      accountInfo.delegate = null;\n      accountInfo.delegatedAmount = new u64();\n    } else {\n      accountInfo.delegate = new PublicKey(accountInfo.delegate);\n      accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n\n    if (accountInfo.isNativeOption === 1) {\n      accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n      accountInfo.isNative = true;\n    } else {\n      accountInfo.rentExemptReserve = null;\n      accountInfo.isNative = false;\n    }\n\n    if (accountInfo.closeAuthorityOption === 0) {\n      accountInfo.closeAuthority = null;\n    } else {\n      accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n    }\n\n    if (!accountInfo.mint.equals(this.publicKey)) {\n      throw new Error(\n        `Invalid account mint: ${JSON.stringify(\n          accountInfo.mint,\n        )} !== ${JSON.stringify(this.publicKey)}`,\n      );\n    }\n    return accountInfo;\n  }\n\n  /**\n   * Retrieve Multisig information\n   *\n   * @param multisig Public key of the account\n   */\n  async getMultisigInfo(multisig: PublicKey): Promise<MultisigInfo> {\n    const info = await this.connection.getAccountInfo(multisig);\n    if (info === null) {\n      throw new Error('Failed to find multisig');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid multisig owner`);\n    }\n    if (info.data.length != MultisigLayout.span) {\n      throw new Error(`Invalid multisig size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const multisigInfo = MultisigLayout.decode(data);\n    multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n    multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n    multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n    multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n    multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n    multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n    multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n    multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n    multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n    multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n    multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n\n    return multisigInfo;\n  }\n\n  /**\n   * Transfer tokens to another account\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  async transfer(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'Transfer',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferInstruction(\n          this.programId,\n          source,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  async approve(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Approve',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveInstruction(\n          this.programId,\n          account,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Remove approval for the transfer of any remaining tokens\n   *\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  async revoke(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Revoke',\n      this.connection,\n      new Transaction().add(\n        Token.createRevokeInstruction(\n          this.programId,\n          account,\n          ownerPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Assign a new authority to the account\n   *\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the account\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  async setAuthority(\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let currentAuthorityPublicKey: PublicKey;\n    let signers;\n    if (isAccount(currentAuthority)) {\n      currentAuthorityPublicKey = currentAuthority.publicKey;\n      signers = [currentAuthority];\n    } else {\n      currentAuthorityPublicKey = currentAuthority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'SetAuthority',\n      this.connection,\n      new Transaction().add(\n        Token.createSetAuthorityInstruction(\n          this.programId,\n          account,\n          newAuthority,\n          authorityType,\n          currentAuthorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  async mintTo(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintTo',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   */\n  async burn(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Burn',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Close account\n   *\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Authority which is allowed to close the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async closeAccount(\n    account: PublicKey,\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'CloseAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createCloseAccountInstruction(\n          this.programId,\n          account,\n          dest,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Freeze account\n   *\n   * @param account Account to freeze\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async freezeAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'FreezeAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createFreezeAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Thaw account\n   *\n   * @param account Account to thaw\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async thawAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ThawAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createThawAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Transfer tokens to another account, asserting the token mint and decimals\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  async transferChecked(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'TransferChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferCheckedInstruction(\n          this.programId,\n          source,\n          this.publicKey,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account,\n   * asserting the token mint and decimals\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  async approveChecked(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ApproveChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveCheckedInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens, asserting the token mint and decimals\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  async mintToChecked(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintToChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens, asserting the token mint and decimals\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   * @param decimals Number of decimals in amount to burn\n   */\n  async burnChecked(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'BurnChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Sync amount in native SPL token account to underlying lamports\n   *\n   * @param nativeAccount Account to sync\n   */\n  async syncNative(nativeAccount: PublicKey): Promise<void> {\n    await sendAndConfirmTransaction(\n      'SyncNative',\n      this.connection,\n      new Transaction().add(\n        Token.createSyncNativeInstruction(this.programId, nativeAccount),\n      ),\n      this.payer,\n    );\n  }\n\n  /**\n   * Construct an InitializeMint instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param decimals Number of decimals in token account amounts\n   * @param mintAuthority Minting authority\n   * @param freezeAuthority Optional authority that can freeze token accounts\n   */\n  static createInitMintInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    decimals: number,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n  ): TransactionInstruction {\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('decimals'),\n      Layout.publicKey('mintAuthority'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('freezeAuthority'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeMint instruction\n          decimals,\n          mintAuthority: pubkeyToBuffer(mintAuthority),\n          option: freezeAuthority === null ? 0 : 1,\n          freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an InitializeAccount instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param account New account\n   * @param owner Owner of the new account\n   */\n  static createInitAccountInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n  ): TransactionInstruction {\n    const keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 1, // InitializeAccount instruction\n      },\n      data,\n    );\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Transfer instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  static createTransferInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 3, // Transfer instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an Approve instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  static createApproveInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 4, // Approve instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Revoke instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createRevokeInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 5, // Approve instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SetAuthority instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the specified type\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  static createSetAuthorityInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('authorityType'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('newAuthority'),\n    ]);\n\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 6, // SetAuthority instruction\n          authorityType: AuthorityTypeCodes[authorityType],\n          option: newAuthority === null ? 0 : 1,\n          newAuthority: pubkeyToBuffer(newAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: currentAuthority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: currentAuthority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintTo instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  static createMintToInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 7, // MintTo instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Burn instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 8, // Burn instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Close instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Account Close authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createCloseAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    dest: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 9, // CloseAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Freeze instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to freeze\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createFreezeAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 10, // FreezeAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Thaw instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to thaw\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createThawAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 11, // ThawAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a TransferChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param mint Mint account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  static createTransferCheckedInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    mint: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 12, // TransferChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an ApproveChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param mint Mint account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  static createApproveCheckedInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 13, // ApproveChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintToChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  static createMintToCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 14, // MintToChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a BurnChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 15, // BurnChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SyncNative instruction\n   *\n   * @param programId SPL Token program account\n   * @param nativeAccount Account to sync lamports from\n   */\n  static createSyncNativeInstruction(\n    programId: PublicKey,\n    nativeAccount: PublicKey,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 17, // SyncNative instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: nativeAccount, isSigner: false, isWritable: true}];\n    return new TransactionInstruction({keys, programId: programId, data});\n  }\n\n  /**\n   * Get the address for the associated token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param owner Owner of the new account\n   * @return Public key of the associated token account\n   */\n  static async getAssociatedTokenAddress(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    owner: PublicKey,\n    allowOwnerOffCurve: boolean = false,\n  ): Promise<PublicKey> {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) {\n      throw new Error(`Owner cannot sign: ${owner.toString()}`);\n    }\n    return (\n      await PublicKey.findProgramAddress(\n        [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n        associatedProgramId,\n      )\n    )[0];\n  }\n\n  /**\n   * Construct the AssociatedTokenProgram instruction to create the associated\n   * token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param associatedAccount New associated account\n   * @param owner Owner of the new account\n   * @param payer Payer of fees\n   */\n  static createAssociatedTokenAccountInstruction(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    associatedAccount: PublicKey,\n    owner: PublicKey,\n    payer: PublicKey,\n  ): TransactionInstruction {\n    const data = Buffer.alloc(0);\n\n    let keys = [\n      {pubkey: payer, isSigner: true, isWritable: true},\n      {pubkey: associatedAccount, isSigner: false, isWritable: true},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: SystemProgram.programId, isSigner: false, isWritable: false},\n      {pubkey: programId, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n\n    return new TransactionInstruction({\n      keys,\n      programId: associatedProgramId,\n      data,\n    });\n  }\n}\n","import type { PublicKey } from \"@saberhq/solana-contrib\";\nimport { getProgramAddress } from \"@saberhq/solana-contrib\";\nimport {\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  TOKEN_PROGRAM_ID,\n} from \"@solana/spl-token\";\n\n/**\n * Gets an associated token account address.\n *\n * @deprecated use {@link getATAAddressSync}\n */\nexport const getATAAddress = async ({\n  mint,\n  owner,\n}: {\n  mint: PublicKey;\n  owner: PublicKey;\n}): Promise<PublicKey> => {\n  return Promise.resolve(getATAAddressSync({ mint, owner }));\n};\n\n/**\n * Gets an associated token account address synchronously.\n */\nexport const getATAAddressSync = ({\n  mint,\n  owner,\n}: {\n  mint: PublicKey;\n  owner: PublicKey;\n}): PublicKey => {\n  return getProgramAddress(\n    [owner.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n    ASSOCIATED_TOKEN_PROGRAM_ID\n  );\n};\n\nexport type ATAMap<K extends string> = {\n  [mint in K]: {\n    address: PublicKey;\n    mint: PublicKey;\n  };\n};\n\n/**\n * Gets multiple associated token account addresses.\n *\n * @deprecated use {@link getATAAddressesSync}\n */\nexport const getATAAddresses = <K extends string>({\n  mints,\n  owner,\n}: {\n  mints: {\n    [mint in K]: PublicKey;\n  };\n  owner: PublicKey;\n}): Promise<{\n  /**\n   * All ATAs\n   */\n  accounts: ATAMap<K>;\n}> => {\n  return Promise.resolve(getATAAddressesSync({ mints, owner }));\n};\n\n/**\n * Gets multiple associated token account addresses.\n */\nexport const getATAAddressesSync = <K extends string>({\n  mints,\n  owner,\n}: {\n  mints: {\n    [mint in K]: PublicKey;\n  };\n  owner: PublicKey;\n}): {\n  /**\n   * All ATAs\n   */\n  accounts: ATAMap<K>;\n} => {\n  const result = Object.entries(mints).map(\n    (\n      args\n    ): {\n      address: PublicKey;\n      name: string;\n      mint: PublicKey;\n    } => {\n      const [name, mint] = args as [K, PublicKey];\n      const result = getATAAddressSync({\n        mint,\n        owner: owner,\n      });\n      return {\n        address: result,\n        name,\n        mint,\n      };\n    }\n  );\n  const deduped = result.reduce(\n    (acc, { address, name, mint }) => {\n      return {\n        accounts: {\n          ...acc.accounts,\n          [name]: { address, mint },\n        },\n      };\n    },\n    { accounts: {} } as {\n      accounts: ATAMap<K>;\n    }\n  );\n  return {\n    accounts: deduped.accounts,\n  };\n};\n","import { PublicKey } from \"@saberhq/solana-contrib\";\nimport type { Layout } from \"@solana/buffer-layout\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport type { AccountInfo, MintInfo } from \"@solana/spl-token\";\nimport {\n  AccountLayout,\n  MintLayout as TokenMintLayout,\n  u64,\n} from \"@solana/spl-token\";\n\nexport {\n  Layout as TypedLayout,\n  Structure as TypedStructure,\n} from \"@solana/buffer-layout\";\n\n/**\n * Typed struct buffer layout\n * @param fields\n * @param property\n * @param decodePrefixes\n * @returns\n */\nexport const structLayout = <T>(\n  fields: Layout<T[keyof T]>[],\n  property?: string | undefined,\n  decodePrefixes?: boolean | undefined\n): BufferLayout.Structure<T> =>\n  BufferLayout.struct<T>(fields, property, decodePrefixes);\n\n/**\n * Layout for a public key\n */\nexport const PublicKeyLayout = (property = \"publicKey\"): BufferLayout.Blob => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const Uint64Layout = (property = \"uint64\"): BufferLayout.Blob => {\n  return BufferLayout.blob(8, property);\n};\n\n/**\n * Layout for a TokenAccount.\n */\nexport const TokenAccountLayout = AccountLayout as Layout<{\n  mint: Buffer;\n  owner: Buffer;\n  amount: Buffer;\n  delegateOption: number;\n  delegate: Buffer;\n  state: number;\n  delegatedAmount: Buffer;\n  isNativeOption: number;\n  isNative: Buffer;\n  closeAuthorityOption: number;\n  closeAuthority: Buffer;\n}>;\n\n/**\n * Layout for a Mint.\n */\nexport const MintLayout = TokenMintLayout as Layout<{\n  mintAuthorityOption: number;\n  mintAuthority: Buffer;\n  supply: Buffer;\n  decimals: number;\n  isInitialized: number;\n  freezeAuthorityOption: number;\n  freezeAuthority: Buffer;\n}>;\n\n/**\n * Data in an SPL token account.\n */\nexport type TokenAccountData = Omit<AccountInfo, \"address\">;\n\n/**\n * Deserializes a token account.\n * @param address\n * @param data\n * @returns\n */\nexport const deserializeAccount = (data: Buffer): TokenAccountData => {\n  const accountInfo = TokenAccountLayout.decode(data);\n\n  const mint = new PublicKey(accountInfo.mint);\n  const owner = new PublicKey(accountInfo.owner);\n  const amount = u64.fromBuffer(accountInfo.amount);\n\n  let delegate: PublicKey | null;\n  let delegatedAmount: u64;\n\n  if (accountInfo.delegateOption === 0) {\n    delegate = null;\n    delegatedAmount = new u64(0);\n  } else {\n    delegate = new PublicKey(accountInfo.delegate);\n    delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n  }\n\n  const isInitialized = accountInfo.state !== 0;\n  const isFrozen = accountInfo.state === 2;\n\n  let rentExemptReserve: u64 | null;\n  let isNative: boolean;\n\n  if (accountInfo.isNativeOption === 1) {\n    rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n    isNative = true;\n  } else {\n    rentExemptReserve = null;\n    isNative = false;\n  }\n\n  let closeAuthority: PublicKey | null;\n  if (accountInfo.closeAuthorityOption === 0) {\n    closeAuthority = null;\n  } else {\n    closeAuthority = new PublicKey(accountInfo.closeAuthority);\n  }\n\n  return {\n    mint,\n    owner,\n    amount,\n    delegate,\n    delegatedAmount,\n    isInitialized,\n    isFrozen,\n    rentExemptReserve,\n    isNative,\n    closeAuthority,\n  };\n};\n\n/**\n * Deserialize a {@link Buffer} into a {@link MintInfo}.\n * @param data\n * @returns\n */\nexport const deserializeMint = (data: Buffer): MintInfo => {\n  if (data.length !== MintLayout.span) {\n    throw new Error(\"Not a valid Mint\");\n  }\n\n  const mintInfo = MintLayout.decode(data);\n\n  let mintAuthority: PublicKey | null;\n  if (mintInfo.mintAuthorityOption === 0) {\n    mintAuthority = null;\n  } else {\n    mintAuthority = new PublicKey(mintInfo.mintAuthority);\n  }\n\n  const supply = u64.fromBuffer(mintInfo.supply);\n  const isInitialized = mintInfo.isInitialized !== 0;\n\n  let freezeAuthority: PublicKey | null;\n  if (mintInfo.freezeAuthorityOption === 0) {\n    freezeAuthority = null;\n  } else {\n    freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n  }\n\n  return {\n    mintAuthority,\n    supply,\n    decimals: mintInfo.decimals,\n    isInitialized,\n    freezeAuthority,\n  };\n};\n","import type { Provider } from \"@saberhq/solana-contrib\";\nimport {\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  Token,\n  TOKEN_PROGRAM_ID,\n} from \"@solana/spl-token\";\nimport type { TransactionInstruction } from \"@solana/web3.js\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { getATAAddress } from \"../ata\";\n\ntype GetOrCreateATAResult = {\n  /**\n   * ATA key\n   */\n  address: PublicKey;\n  /**\n   * Instruction to create the account if it doesn't exist.\n   */\n  instruction: TransactionInstruction | null;\n};\n\ntype GetOrCreateATAsResult<K extends string> = {\n  /**\n   * All accounts\n   */\n  accounts: { [mint in K]: PublicKey };\n  /**\n   * Instructions to create accounts that don't exist.\n   */\n  instructions: readonly TransactionInstruction[];\n  /**\n   * Instructions, keyed.\n   */\n  createAccountInstructions: { [mint in K]: TransactionInstruction | null };\n};\n\n/**\n * Gets an associated token account, returning a create instruction if it doesn't exist.\n * @param param0\n * @returns\n */\nexport const getOrCreateATA = async ({\n  provider,\n  mint,\n  owner = provider.wallet.publicKey,\n  payer = provider.wallet.publicKey,\n}: {\n  provider: Provider;\n  mint: PublicKey;\n  owner?: PublicKey;\n  payer?: PublicKey;\n}): Promise<GetOrCreateATAResult> => {\n  const address = await getATAAddress({ mint, owner });\n  if (await provider.getAccountInfo(address)) {\n    return { address, instruction: null };\n  } else {\n    return {\n      address,\n      instruction: createATAInstruction({\n        mint,\n        address,\n        owner,\n        payer,\n      }),\n    };\n  }\n};\n\n/**\n * Gets ATAs and creates them if they don't exist.\n * @param param0\n * @returns\n */\nexport const getOrCreateATAs = async <K extends string>({\n  provider,\n  mints,\n  owner = provider.wallet.publicKey,\n}: {\n  provider: Provider;\n  mints: {\n    [mint in K]: PublicKey;\n  };\n  owner?: PublicKey;\n}): Promise<GetOrCreateATAsResult<K>> => {\n  const result = await Promise.all(\n    Object.entries(mints).map(\n      async ([name, mint]): Promise<{\n        address: PublicKey;\n        name: string;\n        mintKey: PublicKey;\n        instruction: TransactionInstruction | null;\n      }> => {\n        const mintKey = new PublicKey(mint as PublicKey);\n        const result = await getOrCreateATA({\n          provider,\n          mint: mintKey,\n          owner: owner,\n          payer: provider.wallet.publicKey,\n        });\n        return {\n          address: result.address,\n          instruction: result.instruction,\n          name,\n          mintKey,\n        };\n      }\n    )\n  );\n\n  const deduped = result.reduce(\n    (acc, { address, name, instruction }) => {\n      return {\n        accounts: {\n          ...acc.accounts,\n          [name]: address,\n        },\n        createAccountInstructions: {\n          ...acc.createAccountInstructions,\n          [name]: instruction,\n        },\n        instructions: instruction\n          ? {\n              ...acc.instructions,\n              [address.toString()]: instruction,\n            }\n          : acc.instructions,\n      };\n    },\n    { accounts: {}, instructions: {}, createAccountInstructions: {} } as {\n      accounts: { [key in K]?: PublicKey };\n      createAccountInstructions: { [key in K]?: TransactionInstruction | null };\n      instructions: { [address: string]: TransactionInstruction };\n    }\n  );\n  return {\n    accounts: deduped.accounts,\n    createAccountInstructions: deduped.createAccountInstructions,\n    instructions: Object.values(deduped.instructions),\n  } as GetOrCreateATAsResult<K>;\n};\n\n/**\n * Instruction for creating an ATA.\n * @returns\n */\nexport const createATAInstruction = ({\n  address,\n  mint,\n  owner,\n  payer,\n}: {\n  address: PublicKey;\n  mint: PublicKey;\n  owner: PublicKey;\n  payer: PublicKey;\n}): TransactionInstruction =>\n  Token.createAssociatedTokenAccountInstruction(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    mint,\n    address,\n    owner,\n    payer\n  );\n",null,null,null,null,"/**\n * These types all come from the @solana/spl-token-registry package.\n *\n * We re-export them here so we do not have to have a hard dependency on\n * that package, which is massive.\n */\n\n/**\n * Chain ID.\n */\nexport enum ENV {\n  MainnetBeta = 101,\n  Testnet = 102,\n  Devnet = 103,\n}\n\n/**\n * A token list.\n */\nexport interface SPLTokenList {\n  readonly name: string;\n  readonly logoURI: string;\n  readonly tags: { [tag: string]: TagDetails };\n  readonly timestamp: string;\n  readonly tokens: SPLTokenInfo[];\n}\n\n/**\n * Tag details.\n */\nexport interface TagDetails {\n  readonly name: string;\n  readonly description: string;\n}\n\n/**\n * TokenExtensions.\n */\nexport interface SPLTokenExtensions {\n  readonly website?: string;\n  readonly bridgeContract?: string;\n  readonly assetContract?: string;\n  readonly address?: string;\n  readonly explorer?: string;\n  readonly twitter?: string;\n  readonly github?: string;\n  readonly medium?: string;\n  readonly tgann?: string;\n  readonly tggroup?: string;\n  readonly discord?: string;\n  readonly serumV3Usdt?: string;\n  readonly serumV3Usdc?: string;\n  readonly coingeckoId?: string;\n  readonly imageUrl?: string;\n  readonly description?: string;\n}\n\n/**\n * TokenInfo.\n */\nexport interface SPLTokenInfo {\n  readonly chainId: number;\n  readonly address: string;\n  readonly name: string;\n  readonly decimals: number;\n  readonly symbol: string;\n  readonly logoURI?: string;\n  readonly tags?: string[];\n  readonly extensions?: SPLTokenExtensions;\n}\n","import type { Network } from \"@saberhq/solana-contrib\";\nimport { PublicKey } from \"@saberhq/solana-contrib\";\nimport { NATIVE_MINT } from \"@solana/spl-token\";\nimport type { Connection } from \"@solana/web3.js\";\nimport type { Token as UToken } from \"@ubeswap/token-math\";\n\nimport { deserializeMint } from \"./layout\";\nimport type { TokenInfo } from \"./tokenList\";\n\n/**\n * Magic value representing the raw, underlying Solana native asset.\n */\nexport const RAW_SOL_MINT = new PublicKey(\n  \"RawSo11111111111111111111111111111111111112\"\n);\n\n/**\n * Token information.\n */\nexport class Token implements UToken<Token> {\n  /**\n   * The network that the Token is on.\n   */\n  readonly network: Network;\n  private _mintAccount: PublicKey | null = null;\n\n  constructor(readonly info: TokenInfo) {\n    this.network = chainIdToNetwork(info.chainId) ?? \"localnet\";\n  }\n\n  /**\n   * The mint PublicKey of the token.\n   *\n   * Avoid using this value to print it to a string, as base58\n   * strings are relatively slow to create since they require the use\n   * of hash functions.\n   */\n  get mintAccount(): PublicKey {\n    if (this._mintAccount) {\n      return this._mintAccount;\n    }\n\n    this._mintAccount = new PublicKey(this.info.address);\n    return this._mintAccount;\n  }\n\n  /**\n   * If true, this token represents unwrapped, native, \"raw\" SOL.\n   */\n  get isRawSOL(): boolean {\n    return this.mintAccount.equals(RAW_SOL_MINT);\n  }\n\n  /**\n   * The Base58 string representation of the mint address.\n   */\n  get address(): string {\n    return this.info.address;\n  }\n\n  /**\n   * The chain ID of the token.\n   */\n  get chainId(): number {\n    return this.info.chainId;\n  }\n\n  /**\n   * Number of decimals of the token.\n   */\n  get decimals(): number {\n    return this.info.decimals;\n  }\n\n  /**\n   * The name of the token.\n   */\n  get name(): string {\n    return this.info.name;\n  }\n\n  /**\n   * The symbol of the token.\n   */\n  get symbol(): string {\n    return this.info.symbol;\n  }\n\n  /**\n   * The token's icon to render.\n   */\n  get icon(): string | undefined {\n    return this.info.logoURI;\n  }\n\n  equals(other: Token): boolean {\n    return tokensEqual(this, other);\n  }\n\n  toString(): string {\n    return `Token[mint=${this.address}, decimals=${this.decimals}, network=${this.network}]`;\n  }\n\n  toJSON(): unknown {\n    return this.info;\n  }\n\n  /**\n   * Returns true if the given tag is present.\n   * @param tag The tag to check.\n   * @returns\n   */\n  hasTag(tag: string): boolean {\n    return !!this.info.tags?.includes(tag);\n  }\n\n  /**\n   * Loads a token from a Mint.\n   * @param mint\n   * @param opts\n   * @returns\n   */\n  static fromMint = (\n    mint: PublicKey | string,\n    decimals: number,\n    opts: Partial<Omit<TokenInfo, \"address\" | \"decimals\">> = {}\n  ): Token =>\n    new Token({\n      ...opts,\n\n      // required\n      address: mint.toString(),\n      decimals,\n\n      // optional\n      name: opts.name ?? `Token ${mint.toString().slice(0, 4)}`,\n      symbol: opts.symbol ?? mint.toString().slice(0, 5),\n      chainId: opts.chainId ?? ChainId.Localnet,\n    });\n\n  /**\n   * Loads a token from a Connection.\n   *\n   * @param connection\n   * @param mint\n   * @param info\n   */\n  static load = async (\n    connection: Connection,\n    mint: PublicKey,\n    info: Partial<Omit<TokenInfo, \"address\">> = {}\n  ): Promise<Token | null> => {\n    if (typeof info.decimals === \"number\") {\n      return Token.fromMint(mint, info.decimals, info);\n    }\n    const mintAccountInfo = await connection.getAccountInfo(mint);\n    if (!mintAccountInfo) {\n      return null;\n    }\n    const mintInfo = deserializeMint(mintAccountInfo.data);\n    return Token.fromMint(mint, mintInfo.decimals, info);\n  };\n}\n\n/**\n * Checks if two tokens are equal.\n * @param a\n * @param b\n * @returns\n */\nexport const tokensEqual = (\n  a: Token | undefined,\n  b: Token | undefined\n): boolean =>\n  a !== undefined &&\n  b !== undefined &&\n  a.address === b.address &&\n  a.network === b.network;\n\n/**\n * Map of network to Token\n */\nexport type TokenMap = { [c in Network]: Token };\n\nconst rawSol = {\n  address: RAW_SOL_MINT.toString(),\n  name: \"Solana\",\n  symbol: \"SOL\",\n  decimals: 9,\n  logoURI:\n    \"https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png\",\n};\n\nconst wrappedSol = {\n  address: NATIVE_MINT.toString(),\n  name: \"Wrapped SOL\",\n  symbol: \"SOL\",\n  decimals: 9,\n  logoURI:\n    \"https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png\",\n};\n\n/**\n * Creates a Token for all networks.\n */\nexport const makeTokenForAllNetworks = (\n  token: Omit<TokenInfo, \"chainId\">\n): TokenMap => ({\n  \"mainnet-beta\": new Token({ ...token, chainId: ChainId.MainnetBeta }),\n  devnet: new Token({ ...token, chainId: ChainId.Devnet }),\n  testnet: new Token({ ...token, chainId: ChainId.Testnet }),\n  localnet: new Token({ ...token, chainId: ChainId.Localnet }),\n});\n\n// comes from @solana/spl-token-registry, except we've added localnet\nexport enum ChainId {\n  MainnetBeta = 101,\n  Testnet = 102,\n  Devnet = 103,\n  Localnet = 104,\n}\n\nexport const NETWORK_TO_CHAIN_ID = {\n  \"mainnet-beta\": ChainId.MainnetBeta,\n  devnet: ChainId.Devnet,\n  testnet: ChainId.Testnet,\n  localnet: 104,\n};\n\nexport const CHAIN_ID_TO_NETWORK: { [E in ChainId]: Network } = Object.entries(\n  NETWORK_TO_CHAIN_ID\n).reduce((acc, [network, env]) => ({ ...acc, [env]: network }), {}) as {\n  [E in ChainId]: Network;\n};\n\n/**\n * Gets the chain id associated with a network.\n * @param network\n * @returns\n */\nexport const networkToChainId = (network: Network): ChainId =>\n  NETWORK_TO_CHAIN_ID[network];\n\n/**\n * Gets the Network associated with a chain id.\n * @param network\n * @returns\n */\nexport const chainIdToNetwork = (env: ChainId): Network =>\n  CHAIN_ID_TO_NETWORK[env];\n\n/**\n * Raw Solana token.\n *\n * This is a magic value. This is not a real token.\n */\nexport const RAW_SOL: TokenMap = makeTokenForAllNetworks(rawSol);\n\n/**\n * Wrapped Solana token.\n */\nexport const WRAPPED_SOL: TokenMap = makeTokenForAllNetworks(wrappedSol);\n","/**\n * This file is a port of serum-common, which was built for web3.js 0.x.\n */\n\nimport type { Provider } from \"@saberhq/solana-contrib\";\nimport type { MintInfo } from \"@solana/spl-token\";\nimport { Token as SPLToken, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport type { TransactionInstruction } from \"@solana/web3.js\";\nimport {\n  Keypair,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from \"@solana/web3.js\";\nimport type BN from \"bn.js\";\n\nimport { deserializeAccount, deserializeMint, MintLayout, Token } from \".\";\nimport type { TokenAccountData } from \"./layout\";\n\nexport * as token from \"./token\";\nexport { ProgramAccount } from \"@saberhq/solana-contrib\";\n\n/**\n * Default number of decimals of a token.\n */\nexport const DEFAULT_TOKEN_DECIMALS = 6;\n\nexport const SPL_SHARED_MEMORY_ID = new PublicKey(\n  \"shmem4EWT2sPdVGvTZCzXXRAURL9G5vpPxNwSeKhHUL\"\n);\n\nexport async function createMint(\n  provider: Provider,\n  authority?: PublicKey,\n  decimals?: number\n): Promise<PublicKey> {\n  if (authority === undefined) {\n    authority = provider.wallet.publicKey;\n  }\n  const mint = Keypair.generate();\n  const instructions = await createMintInstructions(\n    provider,\n    authority,\n    mint.publicKey,\n    decimals\n  );\n\n  const tx = new Transaction();\n  tx.add(...instructions);\n\n  await provider.send(tx, [mint]);\n\n  return mint.publicKey;\n}\n\n/**\n * Creates a Token.\n *\n * @param provider\n * @param authority The mint authority.\n * @param decimals Number of decimals.\n * @returns\n */\nexport async function createToken(\n  provider: Provider,\n  authority?: PublicKey,\n  decimals = 6\n): Promise<Token> {\n  return Token.fromMint(\n    await createMint(provider, authority, decimals),\n    decimals\n  );\n}\n\nexport async function createMintInstructions(\n  provider: Provider,\n  authority: PublicKey,\n  mint: PublicKey,\n  decimals = 6\n): Promise<TransactionInstruction[]> {\n  const instructions = [\n    SystemProgram.createAccount({\n      fromPubkey: provider.wallet.publicKey,\n      newAccountPubkey: mint,\n      space: MintLayout.span,\n      lamports: await provider.connection.getMinimumBalanceForRentExemption(\n        MintLayout.span\n      ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    SPLToken.createInitMintInstruction(\n      TOKEN_PROGRAM_ID,\n      mint,\n      decimals,\n      authority,\n      null\n    ),\n  ];\n  return instructions;\n}\n\nexport async function createMintAndVault(\n  provider: Provider,\n  amount: BN,\n  owner?: PublicKey,\n  decimals?: number\n): Promise<[PublicKey, PublicKey]> {\n  if (owner === undefined) {\n    owner = provider.wallet.publicKey;\n  }\n  const mint = Keypair.generate();\n  const vault = Keypair.generate();\n  const tx = new Transaction();\n  tx.add(\n    ...(await createMintInstructions(\n      provider,\n      provider.wallet.publicKey,\n      mint.publicKey,\n      decimals\n    )),\n    SystemProgram.createAccount({\n      fromPubkey: provider.wallet.publicKey,\n      newAccountPubkey: vault.publicKey,\n      space: 165,\n      lamports: await provider.connection.getMinimumBalanceForRentExemption(\n        165\n      ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    SPLToken.createInitAccountInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      vault.publicKey,\n      owner\n    ),\n    SPLToken.createMintToInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      vault.publicKey,\n      provider.wallet.publicKey,\n      [],\n      amount\n    )\n  );\n  await provider.send(tx, [mint, vault]);\n  return [mint.publicKey, vault.publicKey];\n}\n\nexport async function createTokenAccountInstrs(\n  provider: Provider,\n  newAccountPubkey: PublicKey,\n  mint: PublicKey,\n  owner: PublicKey,\n  lamports?: number\n): Promise<TransactionInstruction[]> {\n  if (lamports === undefined) {\n    lamports = await provider.connection.getMinimumBalanceForRentExemption(165);\n  }\n  return [\n    SystemProgram.createAccount({\n      fromPubkey: provider.wallet.publicKey,\n      newAccountPubkey,\n      space: 165,\n      lamports,\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    SPLToken.createInitAccountInstruction(\n      TOKEN_PROGRAM_ID,\n      mint,\n      newAccountPubkey,\n      owner\n    ),\n  ];\n}\n\nexport async function createAccountRentExempt(\n  provider: Provider,\n  programId: PublicKey,\n  size: number\n): Promise<Keypair> {\n  const acc = Keypair.generate();\n  const tx = new Transaction();\n  tx.add(\n    SystemProgram.createAccount({\n      fromPubkey: provider.wallet.publicKey,\n      newAccountPubkey: acc.publicKey,\n      space: size,\n      lamports: await provider.connection.getMinimumBalanceForRentExemption(\n        size\n      ),\n      programId,\n    })\n  );\n  await provider.send(tx, [acc]);\n  return acc;\n}\n\nexport async function getMintInfo(\n  provider: Provider,\n  addr: PublicKey\n): Promise<MintInfo> {\n  const depositorAccInfo = await provider.getAccountInfo(addr);\n  if (depositorAccInfo === null) {\n    throw new Error(\"Failed to find token mint account\");\n  }\n  return deserializeMint(depositorAccInfo.accountInfo.data);\n}\n\nexport async function getTokenAccount(\n  provider: Provider,\n  addr: PublicKey\n): Promise<TokenAccountData> {\n  const depositorAccInfo = await provider.getAccountInfo(addr);\n  if (depositorAccInfo === null) {\n    throw new Error(\"Failed to find token account\");\n  }\n  return deserializeAccount(depositorAccInfo.accountInfo.data);\n}\n\nexport function sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forceVisible = exports.forceCheck = exports.lazyload = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _event = require('./utils/event');\n\nvar _scrollParent = require('./utils/scrollParent');\n\nvar _scrollParent2 = _interopRequireDefault(_scrollParent);\n\nvar _debounce = require('./utils/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _throttle = require('./utils/throttle');\n\nvar _throttle2 = _interopRequireDefault(_throttle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * react-lazyload\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar defaultBoundingClientRect = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  width: 0,\n  height: 0\n};\nvar LISTEN_FLAG = 'data-lazyload-listened';\nvar listeners = [];\nvar pending = [];\n\n// try to handle passive events\nvar passiveEventSupported = false;\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      passiveEventSupported = true;\n    }\n  });\n  window.addEventListener('test', null, opts);\n} catch (e) {}\n// if they are supported, setup the optional params\n// IMPORTANT: FALSE doubles as the default CAPTURE value!\nvar passiveEvent = passiveEventSupported ? { capture: false, passive: true } : false;\n\n/**\n * Check if `component` is visible in overflow container `parent`\n * @param  {node} component React component\n * @param  {node} parent    component's scroll parent\n * @return {bool}\n */\nvar checkOverflowVisible = function checkOverflowVisible(component, parent) {\n  var node = component.ref;\n\n  var parentTop = void 0;\n  var parentLeft = void 0;\n  var parentHeight = void 0;\n  var parentWidth = void 0;\n\n  try {\n    ;\n    var _parent$getBoundingCl = parent.getBoundingClientRect();\n\n    parentTop = _parent$getBoundingCl.top;\n    parentLeft = _parent$getBoundingCl.left;\n    parentHeight = _parent$getBoundingCl.height;\n    parentWidth = _parent$getBoundingCl.width;\n  } catch (e) {\n    ;parentTop = defaultBoundingClientRect.top;\n    parentLeft = defaultBoundingClientRect.left;\n    parentHeight = defaultBoundingClientRect.height;\n    parentWidth = defaultBoundingClientRect.width;\n  }\n\n  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n  var windowInnerWidth = window.innerWidth || document.documentElement.clientWidth;\n\n  // calculate top and height of the intersection of the element's scrollParent and viewport\n  var intersectionTop = Math.max(parentTop, 0); // intersection's top relative to viewport\n  var intersectionLeft = Math.max(parentLeft, 0); // intersection's left relative to viewport\n  var intersectionHeight = Math.min(windowInnerHeight, parentTop + parentHeight) - intersectionTop; // height\n  var intersectionWidth = Math.min(windowInnerWidth, parentLeft + parentWidth) - intersectionLeft; // width\n\n  // check whether the element is visible in the intersection\n  var top = void 0;\n  var left = void 0;\n  var height = void 0;\n  var width = void 0;\n\n  try {\n    ;\n    var _node$getBoundingClie = node.getBoundingClientRect();\n\n    top = _node$getBoundingClie.top;\n    left = _node$getBoundingClie.left;\n    height = _node$getBoundingClie.height;\n    width = _node$getBoundingClie.width;\n  } catch (e) {\n    ;top = defaultBoundingClientRect.top;\n    left = defaultBoundingClientRect.left;\n    height = defaultBoundingClientRect.height;\n    width = defaultBoundingClientRect.width;\n  }\n\n  var offsetTop = top - intersectionTop; // element's top relative to intersection\n  var offsetLeft = left - intersectionLeft; // element's left relative to intersection\n\n  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API\n\n  return offsetTop - offsets[0] <= intersectionHeight && offsetTop + height + offsets[1] >= 0 && offsetLeft - offsets[0] <= intersectionWidth && offsetLeft + width + offsets[1] >= 0;\n};\n\n/**\n * Check if `component` is visible in document\n * @param  {node} component React component\n * @return {bool}\n */\nvar checkNormalVisible = function checkNormalVisible(component) {\n  var node = component.ref;\n\n  // If this element is hidden by css rules somehow, it's definitely invisible\n  if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return false;\n\n  var top = void 0;\n  var elementHeight = void 0;\n\n  try {\n    ;\n    var _node$getBoundingClie2 = node.getBoundingClientRect();\n\n    top = _node$getBoundingClie2.top;\n    elementHeight = _node$getBoundingClie2.height;\n  } catch (e) {\n    ;top = defaultBoundingClientRect.top;\n    elementHeight = defaultBoundingClientRect.height;\n  }\n\n  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n\n  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API\n\n  return top - offsets[0] <= windowInnerHeight && top + elementHeight + offsets[1] >= 0;\n};\n\n/**\n * Detect if element is visible in viewport, if so, set `visible` state to true.\n * If `once` prop is provided true, remove component as listener after checkVisible\n *\n * @param  {React} component   React component that respond to scroll and resize\n */\nvar checkVisible = function checkVisible(component) {\n  var node = component.ref;\n  if (!(node instanceof HTMLElement)) {\n    return;\n  }\n\n  var parent = (0, _scrollParent2.default)(node);\n  var isOverflow = component.props.overflow && parent !== node.ownerDocument && parent !== document && parent !== document.documentElement;\n  var visible = isOverflow ? checkOverflowVisible(component, parent) : checkNormalVisible(component);\n  if (visible) {\n    // Avoid extra render if previously is visible\n    if (!component.visible) {\n      if (component.props.once) {\n        pending.push(component);\n      }\n\n      component.visible = true;\n      component.forceUpdate();\n    }\n  } else if (!(component.props.once && component.visible)) {\n    component.visible = false;\n    if (component.props.unmountIfInvisible) {\n      component.forceUpdate();\n    }\n  }\n};\n\nvar purgePending = function purgePending() {\n  pending.forEach(function (component) {\n    var index = listeners.indexOf(component);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n  });\n\n  pending = [];\n};\n\nvar lazyLoadHandler = function lazyLoadHandler() {\n  for (var i = 0; i < listeners.length; ++i) {\n    var listener = listeners[i];\n    checkVisible(listener);\n  }\n  // Remove `once` component in listeners\n  purgePending();\n};\n\n/**\n * Forces the component to display regardless of whether the element is visible in the viewport.\n */\nvar forceVisible = function forceVisible() {\n  for (var i = 0; i < listeners.length; ++i) {\n    var listener = listeners[i];\n    listener.visible = true;\n    listener.forceUpdate();\n  }\n  // Remove `once` component in listeners\n  purgePending();\n};\n\n// Depending on component's props\nvar delayType = void 0;\nvar finalLazyLoadHandler = null;\n\nvar isString = function isString(string) {\n  return typeof string === 'string';\n};\n\nvar LazyLoad = function (_Component) {\n  _inherits(LazyLoad, _Component);\n\n  function LazyLoad(props) {\n    _classCallCheck(this, LazyLoad);\n\n    var _this = _possibleConstructorReturn(this, (LazyLoad.__proto__ || Object.getPrototypeOf(LazyLoad)).call(this, props));\n\n    _this.visible = false;\n    _this.setRef = _this.setRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(LazyLoad, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // It's unlikely to change delay type on the fly, this is mainly\n      // designed for tests\n      var scrollport = window;\n      var scrollContainer = this.props.scrollContainer;\n\n      if (scrollContainer) {\n        if (isString(scrollContainer)) {\n          scrollport = scrollport.document.querySelector(scrollContainer);\n        }\n      }\n      var needResetFinalLazyLoadHandler = this.props.debounce !== undefined && delayType === 'throttle' || delayType === 'debounce' && this.props.debounce === undefined;\n\n      if (needResetFinalLazyLoadHandler) {\n        (0, _event.off)(scrollport, 'scroll', finalLazyLoadHandler, passiveEvent);\n        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        finalLazyLoadHandler = null;\n      }\n\n      if (!finalLazyLoadHandler) {\n        if (this.props.debounce !== undefined) {\n          finalLazyLoadHandler = (0, _debounce2.default)(lazyLoadHandler, typeof this.props.debounce === 'number' ? this.props.debounce : 300);\n          delayType = 'debounce';\n        } else if (this.props.throttle !== undefined) {\n          finalLazyLoadHandler = (0, _throttle2.default)(lazyLoadHandler, typeof this.props.throttle === 'number' ? this.props.throttle : 300);\n          delayType = 'throttle';\n        } else {\n          finalLazyLoadHandler = lazyLoadHandler;\n        }\n      }\n\n      if (this.props.overflow) {\n        var parent = (0, _scrollParent2.default)(this.ref);\n        if (parent && typeof parent.getAttribute === 'function') {\n          var listenerCount = 1 + +parent.getAttribute(LISTEN_FLAG);\n          if (listenerCount === 1) {\n            parent.addEventListener('scroll', finalLazyLoadHandler, passiveEvent);\n          }\n          parent.setAttribute(LISTEN_FLAG, listenerCount);\n        }\n      } else if (listeners.length === 0 || needResetFinalLazyLoadHandler) {\n        var _props = this.props,\n            scroll = _props.scroll,\n            resize = _props.resize;\n\n\n        if (scroll) {\n          (0, _event.on)(scrollport, 'scroll', finalLazyLoadHandler, passiveEvent);\n        }\n\n        if (resize) {\n          (0, _event.on)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        }\n      }\n\n      listeners.push(this);\n      checkVisible(this);\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate() {\n      return this.visible;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.overflow) {\n        var parent = (0, _scrollParent2.default)(this.ref);\n        if (parent && typeof parent.getAttribute === 'function') {\n          var listenerCount = +parent.getAttribute(LISTEN_FLAG) - 1;\n          if (listenerCount === 0) {\n            parent.removeEventListener('scroll', finalLazyLoadHandler, passiveEvent);\n            parent.removeAttribute(LISTEN_FLAG);\n          } else {\n            parent.setAttribute(LISTEN_FLAG, listenerCount);\n          }\n        }\n      }\n\n      var index = listeners.indexOf(this);\n      if (index !== -1) {\n        listeners.splice(index, 1);\n      }\n\n      if (listeners.length === 0 && typeof window !== 'undefined') {\n        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        (0, _event.off)(window, 'scroll', finalLazyLoadHandler, passiveEvent);\n      }\n    }\n  }, {\n    key: 'setRef',\n    value: function setRef(element) {\n      if (element) {\n        this.ref = element;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          height = _props2.height,\n          children = _props2.children,\n          placeholder = _props2.placeholder,\n          className = _props2.className,\n          classNamePrefix = _props2.classNamePrefix,\n          style = _props2.style;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: classNamePrefix + '-wrapper ' + className,\n          ref: this.setRef,\n          style: style\n        },\n        this.visible ? children : placeholder ? placeholder : _react2.default.createElement('div', {\n          style: { height: height },\n          className: classNamePrefix + '-placeholder'\n        })\n      );\n    }\n  }]);\n\n  return LazyLoad;\n}(_react.Component);\n\nLazyLoad.propTypes = {\n  className: _propTypes2.default.string,\n  classNamePrefix: _propTypes2.default.string,\n  once: _propTypes2.default.bool,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  offset: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),\n  overflow: _propTypes2.default.bool,\n  resize: _propTypes2.default.bool,\n  scroll: _propTypes2.default.bool,\n  children: _propTypes2.default.node,\n  throttle: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),\n  debounce: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),\n  placeholder: _propTypes2.default.node,\n  scrollContainer: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  unmountIfInvisible: _propTypes2.default.bool,\n  style: _propTypes2.default.object\n};\n\nLazyLoad.defaultProps = {\n  className: '',\n  classNamePrefix: 'lazyload',\n  once: false,\n  offset: 0,\n  overflow: false,\n  resize: false,\n  scroll: true,\n  unmountIfInvisible: false\n};\n\nvar getDisplayName = function getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nvar decorator = function decorator() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function lazyload(WrappedComponent) {\n    return function (_Component2) {\n      _inherits(LazyLoadDecorated, _Component2);\n\n      function LazyLoadDecorated() {\n        _classCallCheck(this, LazyLoadDecorated);\n\n        var _this2 = _possibleConstructorReturn(this, (LazyLoadDecorated.__proto__ || Object.getPrototypeOf(LazyLoadDecorated)).call(this));\n\n        _this2.displayName = 'LazyLoad' + getDisplayName(WrappedComponent);\n        return _this2;\n      }\n\n      _createClass(LazyLoadDecorated, [{\n        key: 'render',\n        value: function render() {\n          return _react2.default.createElement(\n            LazyLoad,\n            options,\n            _react2.default.createElement(WrappedComponent, this.props)\n          );\n        }\n      }]);\n\n      return LazyLoadDecorated;\n    }(_react.Component);\n  };\n};\n\nexports.lazyload = decorator;\nexports.default = LazyLoad;\nexports.forceCheck = lazyLoadHandler;\nexports.forceVisible = forceVisible;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = debounce;\nfunction debounce(func, wait, immediate) {\n  var timeout = void 0;\n  var args = void 0;\n  var context = void 0;\n  var timestamp = void 0;\n  var result = void 0;\n\n  var later = function later() {\n    var last = +new Date() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) {\n          context = null;\n          args = null;\n        }\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = +new Date();\n\n    var callNow = immediate && !timeout;\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n\n    if (callNow) {\n      result = func.apply(context, args);\n      context = null;\n      args = null;\n    }\n\n    return result;\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.on = on;\nexports.off = off;\nfunction on(el, eventName, callback, opts) {\n  opts = opts || false;\n  if (el.addEventListener) {\n    el.addEventListener(eventName, callback, opts);\n  } else if (el.attachEvent) {\n    el.attachEvent(\"on\" + eventName, function (e) {\n      callback.call(el, e || window.event);\n    });\n  }\n}\n\nfunction off(el, eventName, callback, opts) {\n  opts = opts || false;\n  if (el.removeEventListener) {\n    el.removeEventListener(eventName, callback, opts);\n  } else if (el.detachEvent) {\n    el.detachEvent(\"on\" + eventName, callback);\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * @fileOverview Find scroll parent\n */\n\nexports.default = function (node) {\n  if (!(node instanceof HTMLElement)) {\n    return document.documentElement;\n  }\n\n  var excludeStaticParent = node.style.position === 'absolute';\n  var overflowRegex = /(scroll|auto|overlay)/;\n  var parent = node;\n\n  while (parent) {\n    if (!parent.parentNode) {\n      return node.ownerDocument || document.documentElement;\n    }\n\n    var style = window.getComputedStyle(parent);\n    var position = style.position;\n    var overflow = style.overflow;\n    var overflowX = style['overflow-x'];\n    var overflowY = style['overflow-y'];\n\n    if (position === 'static' && excludeStaticParent) {\n      parent = parent.parentNode;\n      continue;\n    }\n\n    if (overflowRegex.test(overflow) && overflowRegex.test(overflowX) && overflowRegex.test(overflowY)) {\n      return parent;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return node.ownerDocument || node.documentElement || document.documentElement;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = throttle;\n/*eslint-disable */\nfunction throttle(fn, threshhold, scope) {\n  threshhold || (threshhold = 250);\n  var last, deferTimer;\n  return function () {\n    var context = scope || this;\n\n    var now = +new Date(),\n        args = arguments;\n    if (last && now < last + threshhold) {\n      // hold on to it\n      clearTimeout(deferTimer);\n      deferTimer = setTimeout(function () {\n        last = now;\n        fn.apply(context, args);\n      }, threshhold);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n}","// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = require('./internal/errors'),\n    _require$codes = _require.codes,\n    ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n    ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\n\nvar AssertionError = require('./internal/assert/assertion_error');\n\nvar _require2 = require('util/'),\n    inspect = _require2.inspect;\n\nvar _require$types = require('util/').types,\n    isPromise = _require$types.isPromise,\n    isRegExp = _require$types.isRegExp;\n\nvar objectAssign = Object.assign ? Object.assign : require('es6-object-assign').assign;\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\n\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n} // Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\n\n\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\n\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\n\nvar warned = false; // The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {}; // All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\n\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n\n    if (argsLen === 2) operator = '!=';\n  }\n\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n\n  var err = new AssertionError(errArgs);\n\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n\n  throw err;\n}\n\nassert.fail = fail; // The AssertionError is defined in internal/error.\n\nassert.AssertionError = AssertionError;\n\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n} // Pure assertion tests whether a value is truthy, as determined\n// by !!value.\n\n\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\n\nassert.ok = ok; // The equality assertion tests shallow, coercive equality with ==.\n\n/* eslint-disable no-restricted-properties */\n\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n}; // The non-equality assertion tests for whether two objects are not\n// equal with !=.\n\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n}; // The equivalence assertion tests a deep equality relation.\n\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n}; // The non-equivalence assertion tests for any deep inequality.\n\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\n\nvar Comparison = function Comparison(obj, keys, actual) {\n  var _this = this;\n\n  _classCallCheck(this, Comparison);\n\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && obj[key].test(actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n};\n\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\n\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return expected.test(actual); // assert.doesNotThrow does not accept objects.\n\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    } // Handle primitives properly.\n\n\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n\n    var keys = Object.keys(expected); // Special handle errors to make sure the name and the message are compared\n    // as well.\n\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && expected[key].test(actual[key])) {\n        return;\n      }\n\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  } // Guard instanceof against arrow functions as they don't have a prototype.\n\n\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\n\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn(); // Fail in case no promise is returned.\n\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\n\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\n\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  throw actual;\n}\n\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\n\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\n\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\n\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\n\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    }); // Make sure we actually have a stack trace!\n\n    var origStack = err.stack;\n\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift(); // Filter all frames existing in err.stack.\n\n      var tmp1 = newErr.stack.split('\\n');\n\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n\n    throw newErr;\n  }\n}; // Expose a strict only variant of assert\n\n\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\n\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;","// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _require = require('util/'),\n    inspect = _require.inspect;\n\nvar _require2 = require('../errors'),\n    ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n\n\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n\n  while (count) {\n    str += str;\n    count--;\n  }\n\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\n\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n}; // Comparing short primitives should just show === / !== instead of using the\n// diff.\n\nvar kMaxShortLength = 10;\n\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\n\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\n\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = ''; // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  } // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n\n\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length; // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        } // Ignore the first characters.\n\n\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  } // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n\n\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n\n  var maxLines = Math.max(actualLines.length, expectedLines.length); // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n'); // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n\n\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the expected line to the cache.\n\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++; // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the actual line to the result.\n\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++; // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i]; // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine); // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        } // Mark the current line as the last diverging one.\n\n\n        lastPos = i; // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2; // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = ''; // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    } // Inspected object to big (Show ~20 rows max)\n\n\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\n\nvar AssertionError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(AssertionError, _Error);\n\n  function AssertionError(options) {\n    var _this;\n\n    _classCallCheck(this, AssertionError);\n\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n\n    var message = options.message,\n        operator = options.operator,\n        stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n        expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n\n    if (message != null) {\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, String(message)));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      } // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n\n\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, createErrDiff(actual, expected, operator)));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n'); // In case \"actual\" is an object, it should not be reference equal.\n\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        } // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n\n\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n\n          while (res.length > 27) {\n            res.pop();\n          }\n        } // Only print a single input.\n\n\n        if (res.length === 1) {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \" \").concat(res[0])));\n        } else {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\")));\n        }\n      } else {\n        var _res = inspectValue(actual);\n\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(_res).concat(other)));\n      }\n    }\n\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    } // Create error message including the error code in the name.\n\n\n    _this.stack; // Reset the name.\n\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: inspect.custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread({}, ctx, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n\n  return AssertionError;\n}(_wrapNativeSuper(Error));\n\nmodule.exports = AssertionError;","// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n\n/* eslint node-core/alphabetize-errors: \"error\" */\n\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n'use strict'; // The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar codes = {}; // Lazy loaded\n\nvar assert;\nvar util;\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inherits(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n\n      _classCallCheck(this, NodeError);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(NodeError).call(this, getMessage(arg1, arg2, arg3)));\n      _this.code = code;\n      return _this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\"); // determiner: 'must be' or 'must not be'\n\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } // TODO(BridgeAR): Improve the output by showing `null` and similar.\n\n\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;","// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar regexFlagsSupported = /a/g.flags !== undefined;\n\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\n\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\n\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\n\nvar _require$types = require('util/').types,\n    isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n    isArrayBufferView = _require$types.isArrayBufferView,\n    isDate = _require$types.isDate,\n    isMap = _require$types.isMap,\n    isRegExp = _require$types.isRegExp,\n    isSet = _require$types.isSet,\n    isNativeError = _require$types.isNativeError,\n    isBoxedPrimitive = _require$types.isBoxedPrimitive,\n    isNumberObject = _require$types.isNumberObject,\n    isStringObject = _require$types.isStringObject,\n    isBooleanObject = _require$types.isBooleanObject,\n    isBigIntObject = _require$types.isBigIntObject,\n    isSymbolObject = _require$types.isSymbolObject,\n    isFloat32Array = _require$types.isFloat32Array,\n    isFloat64Array = _require$types.isFloat64Array;\n\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  } // The maximum size for an array is 2 ** 32 -1.\n\n\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\n\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n} // Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3; // Check if they have the same source and flags\n\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\n\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\n\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\n\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n} // Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  } // Check more closely if val1 and val2 are equal.\n\n\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n\n      return false;\n    }\n\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  } // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n\n\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    } // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n\n\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\n\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\n\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2); // The pair must have the same number of owned properties.\n\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  } // Cheap key test\n\n\n  var i = 0;\n\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  } // Use memos to handle cycles.\n\n\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n\n    memos.position++;\n  }\n\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\n\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n\n  return false;\n} // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\n\n\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n\n    case 'symbol':\n      return false;\n\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n\n  }\n\n  return true;\n}\n\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\n\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n\n  if (altValue != null) {\n    return altValue;\n  }\n\n  var curB = b.get(altValue);\n\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\n\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i]; // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      } // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n\n\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false; // Fast path to detect missing string, symbol, undefined and null values.\n\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(val);\n    }\n  }\n\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i]; // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n        key = _aEntries$i[0],\n        item1 = _aEntries$i[1];\n\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false; // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n\n        if (set === null) {\n          set = new Set();\n        }\n\n        set.add(key);\n      }\n    }\n  }\n\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n          key = _bEntries$_i[0],\n          item = _bEntries$_i[1];\n\n      if (_typeof(key) === 'object' && key !== null) {\n        if (!mapHasEqualEntry(set, a, key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(key) || !innerDeepEqual(a.get(key), item, false, memo)) && !mapHasEqualEntry(set, a, key, item, false, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n  } // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n\n\n  for (i = 0; i < keys.length; i++) {\n    var _key = keys[i];\n\n    if (!innerDeepEqual(a[_key], b[_key], strict, memos)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\n\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\n\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};","/*\r\n *  big.js v6.1.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2021 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true) {\r\n            throw TypeError(INVALID + 'number');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd--;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (!sd--) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","/*! decimal.js-light v2.5.1 https://github.com/MikeMcl/decimal.js-light/LICENCE */\r\n;(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js-light v2.5.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js-light\r\n   *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Expat Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  var MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    Decimal = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed during run-time using `Decimal.config`.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,\r\n      // `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -MAX_E\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to MAX_E\r\n\r\n      // The natural logarithm of 10.\r\n      // 115 digits\r\n      LN10: '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286'\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    exponentOutOfRange = decimalError + 'Exponent out of range: ',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    ONE,\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n    MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE),    // 1286742750677284\r\n\r\n    // Decimal.prototype object\r\n    P = {};\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue                       abs\r\n   *  comparedTo                          cmp\r\n   *  decimalPlaces                       dp\r\n   *  dividedBy                           div\r\n   *  dividedToIntegerBy                  idiv\r\n   *  equals                              eq\r\n   *  exponent\r\n   *  greaterThan                         gt\r\n   *  greaterThanOrEqualTo                gte\r\n   *  isInteger                           isint\r\n   *  isNegative                          isneg\r\n   *  isPositive                          ispos\r\n   *  isZero\r\n   *  lessThan                            lt\r\n   *  lessThanOrEqualTo                   lte\r\n   *  logarithm                           log\r\n   *  minus                               sub\r\n   *  modulo                              mod\r\n   *  naturalExponential                  exp\r\n   *  naturalLogarithm                    ln\r\n   *  negated                             neg\r\n   *  plus                                add\r\n   *  precision                           sd\r\n   *  squareRoot                          sqrt\r\n   *  times                               mul\r\n   *  toDecimalPlaces                     todp\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toInteger                           toint\r\n   *  toNumber\r\n   *  toPower                             pow\r\n   *  toPrecision\r\n   *  toSignificantDigits                 tosd\r\n   *  toString\r\n   *  valueOf                             val\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this;\r\n\r\n    y = new x.constructor(y);\r\n\r\n    // Signs differ?\r\n    if (x.s !== y.s) return x.s || -y.s;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ x.s < 0 ? 1 : -1;\r\n\r\n    xdL = x.d.length;\r\n    ydL = y.d.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (x.d[i] !== y.d[i]) return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var x = this,\r\n      w = x.d.length - 1,\r\n      dp = (w - x.e) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = x.d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) dp--;\r\n\r\n    return dp < 0 ? 0 : dp;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return !this.cmp(y);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the (base 10) exponent value of this Decimal (this.e is the base 10000000 exponent).\r\n   *\r\n   */\r\n  P.exponent = function () {\r\n    return getBase10Exponent(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    return this.cmp(y) >= 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isint = function () {\r\n    return this.e > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isneg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.ispos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return this.s === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   * If no base is specified, return log[10](x).\r\n   *\r\n   * log[base](x) = ln(x) / ln(base)\r\n   *\r\n   * The maximum error of the result is 1 ulp (unit in the last place).\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var r,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      wpr = pr + 5;\r\n\r\n    // Default base is 10.\r\n    if (base === void 0) {\r\n      base = new Ctor(10);\r\n    } else {\r\n      base = new Ctor(base);\r\n\r\n      // log[-b](x) = NaN\r\n      // log[0](x)  = NaN\r\n      // log[1](x)  = NaN\r\n      if (base.s < 1 || base.eq(ONE)) throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    // log[b](-x) = NaN\r\n    // log[b](0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // log[b](1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    external = false;\r\n    r = divide(ln(x, wpr), ln(base, wpr), wpr);\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? subtract(x, y) : add(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // x % 0 = NaN\r\n    if (!y.s) throw Error(decimalError + 'NaN');\r\n\r\n    // Return x if x is 0.\r\n    if (!x.s) return round(new Ctor(x), pr);\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n    q = divide(x, y, 0, 1).times(y);\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return exp(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return ln(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s || 0;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? add(x, y) : subtract(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var e, sd, w,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    e = getBase10Exponent(x) + 1;\r\n    w = x.d.length - 1;\r\n    sd = w * LOG_BASE + 1;\r\n    w = x.d[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) sd--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = x.d[0]; w >= 10; w /= 10) sd++;\r\n    }\r\n\r\n    return z && e > sd ? e : sd;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var e, n, pr, r, s, t, wpr,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative or zero?\r\n    if (x.s < 1) {\r\n      if (!x.s) return new Ctor(0);\r\n\r\n      // sqrt(-x) = NaN\r\n      throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    e = getBase10Exponent(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    pr = Ctor.precision;\r\n    s = wpr = pr + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, wpr + 2)).times(0.5);\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === (n = digitsToString(r.d)).slice(0, wpr)) {\r\n        n = n.slice(wpr - 3, wpr + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (s == wpr && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          round(t, pr + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        } else if (n != '9999') {\r\n          break;\r\n        }\r\n\r\n        wpr += 4;\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal times `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    // Return 0 if either is 0.\r\n    if (!x.s || !y.s) return new Ctor(0);\r\n\r\n    y.s *= x.s;\r\n    e = x.e + y.e;\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = e;\r\n\r\n    return external ? round(y, Ctor.precision) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.todp = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return round(x, dp + getBase10Exponent(x) + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = toString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), dp + 1, rm);\r\n      str = toString(x, true, dp + 1);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) return toString(x);\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);\r\n    str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isneg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.toInteger = P.toint = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * The maximum error is 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, sign, yIsInt,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      guard = 12,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // pow(x, 0) = 1\r\n    if (!y.s) return new Ctor(ONE);\r\n\r\n    x = new Ctor(x);\r\n\r\n    // pow(0, y > 0) = 0\r\n    // pow(0, y < 0) = Infinity\r\n    if (!x.s) {\r\n      if (y.s < 1) throw Error(decimalError + 'Infinity');\r\n      return x;\r\n    }\r\n\r\n    // pow(1, y) = 1\r\n    if (x.eq(ONE)) return x;\r\n\r\n    pr = Ctor.precision;\r\n\r\n    // pow(x, 1) = x\r\n    if (y.eq(ONE)) return round(x, pr);\r\n\r\n    e = y.e;\r\n    k = y.d.length - 1;\r\n    yIsInt = e >= k;\r\n    sign = x.s;\r\n\r\n    if (!yIsInt) {\r\n\r\n      // pow(x < 0, y non-integer) = NaN\r\n      if (sign < 0) throw Error(decimalError + 'NaN');\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = new Ctor(ONE);\r\n\r\n      // Max k of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      e = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n      external = false;\r\n\r\n      for (;;) {\r\n        if (k % 2) {\r\n          r = r.times(x);\r\n          truncate(r.d, e);\r\n        }\r\n\r\n        k = mathfloor(k / 2);\r\n        if (k === 0) break;\r\n\r\n        x = x.times(x);\r\n        truncate(x.d, e);\r\n      }\r\n\r\n      external = true;\r\n\r\n      return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);\r\n    }\r\n\r\n    // Result is negative if x is negative and the last digit of integer y is odd.\r\n    sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;\r\n\r\n    x.s = 1;\r\n    external = false;\r\n    r = y.times(ln(x, pr + guard));\r\n    external = true;\r\n    r = exp(r);\r\n    r.s = sign;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var e, str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), sd, rm);\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.tosd = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return round(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = P.valueOf = P.val = P.toJSON = function () {\r\n    var x = this,\r\n      e = getBase10Exponent(x),\r\n      Ctor = x.constructor;\r\n\r\n    return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  add                 P.minus, P.plus\r\n   *  checkInt32          P.todp, P.toExponential, P.toFixed, P.toPrecision, P.tosd\r\n   *  digitsToString      P.log, P.sqrt, P.pow, toString, exp, ln\r\n   *  divide              P.div, P.idiv, P.log, P.mod, P.sqrt, exp, ln\r\n   *  exp                 P.exp, P.pow\r\n   *  getBase10Exponent   P.exponent, P.sd, P.toint, P.sqrt, P.todp, P.toFixed, P.toPrecision,\r\n   *                      P.toString, divide, round, toString, exp, ln\r\n   *  getLn10             P.log, ln\r\n   *  getZeroString       digitsToString, toString\r\n   *  ln                  P.log, P.ln, P.pow, exp\r\n   *  parseDecimal        Decimal\r\n   *  round               P.abs, P.idiv, P.log, P.minus, P.mod, P.neg, P.plus, P.toint, P.sqrt,\r\n   *                      P.times, P.todp, P.toExponential, P.toFixed, P.pow, P.toPrecision, P.tosd,\r\n   *                      divide, getLn10, exp, ln\r\n   *  subtract            P.minus, P.plus\r\n   *  toString            P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf\r\n   *  truncate            P.pow\r\n   *\r\n   *  Throws:             P.log, P.mod, P.sd, P.sqrt, P.pow,  checkInt32, divide, round,\r\n   *                      getLn10, exp, ln, parseDecimal, Decimal, config\r\n   */\r\n\r\n\r\n  function add(x, y) {\r\n    var carry, d, e, i, k, len, xd, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // If either is zero...\r\n    if (!x.s || !y.s) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!y.s) y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    k = x.e;\r\n    e = y.e;\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % BASE | 0;\r\n        carry = temp / BASE | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * BASE + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, dp) {\r\n      var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either 0?\r\n      if (!x.s) return new Ctor(x);\r\n      if (!y.s) throw Error(decimalError + 'Division by zero');\r\n\r\n      e = x.e - y.e;\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      for (i = 0; yd[i] == (xd[i] || 0); ) ++i;\r\n      if (yd[i] > (xd[i] || 0)) --e;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n      } else if (dp) {\r\n        sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) return new Ctor(0);\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / LOG_BASE + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * BASE + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= BASE/2\r\n        k = BASE / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k);\r\n          xd = multiplyInteger(xd, k);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= BASE / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * BASE + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= BASE) k = BASE - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n\r\n      q.e = e;\r\n\r\n      return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` truncated to `sd`\r\n   * significant digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   */\r\n  function exp(x, sd) {\r\n    var denominator, guard, pow, sum, t, wpr,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    if (getBase10Exponent(x) > 16) throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n\r\n    // exp(0) = 1\r\n    if (!x.s) return new Ctor(ONE);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    while (x.abs().gte(0.1)) {\r\n      x = x.times(t);    // x = x / 2^5\r\n      k += 5;\r\n    }\r\n\r\n    // Estimate the precision increase necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(ONE);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = round(pow.times(x), wpr);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        while (k--) sum = round(sum.times(sum), wpr);\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(x) {\r\n    var e = x.e * LOG_BASE,\r\n      w = x.d[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for (; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n\r\n    if (sd > Ctor.LN10.sd()) {\r\n\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(decimalError + 'LN10 precision limit exceeded');\r\n    }\r\n\r\n    return round(new Ctor(Ctor.LN10), sd);\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` truncated to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(n) is non-terminating (n != 1)\r\n   *\r\n   */\r\n  function ln(y, sd) {\r\n    var c, c0, denominator, e, numerator, sum, t, wpr, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // ln(-x) = NaN\r\n    // ln(0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // ln(1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    if (x.eq(10)) {\r\n      if (sd == null) external = true;\r\n      return getLn10(Ctor, wpr);\r\n    }\r\n\r\n    wpr += guard;\r\n    Ctor.precision = wpr;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n    e = getBase10Exponent(x);\r\n\r\n    if (Math.abs(e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = getBase10Exponent(x);\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = ln(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n\r\n      Ctor.precision = pr;\r\n      return sd == null ? (external = true, round(x, pr)) : x;\r\n    }\r\n\r\n    // x is reduced to a value near 1.\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);\r\n    x2 = round(x.times(x), wpr);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = round(numerator.times(x2), wpr);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr);\r\n\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48;) ++i;\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48;) --len;\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      e = e - i - 1;\r\n      x.e = mathfloor(e / LOG_BASE);\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + e);\r\n    } else {\r\n\r\n      // Zero.\r\n      x.s = 0;\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits, using rounding mode `rm` if present (truncate otherwise).\r\n   */\r\n   function round(x, sd, rm) {\r\n    var i, j, k, n, rd, doRound, w, xdi,\r\n      xd = x.d;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd which contains the rounding digit, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // n: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (n = 1, k = xd[0]; k >= 10; k /= 10) n++;\r\n    i = sd - n;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) return x;\r\n      w = k = xd[xdi];\r\n\r\n      // Get the number of digits of w.\r\n      for (n = 1; k >= 10; k /= 10) n++;\r\n\r\n      // Get the index of rd within w.\r\n      i %= LOG_BASE;\r\n\r\n      // Get the index of rd within w, adjusted for leading zeros.\r\n      // The number of leading zeros of w is given by LOG_BASE - n.\r\n      j = i - LOG_BASE + n;\r\n    }\r\n\r\n    if (rm !== void 0) {\r\n      k = mathpow(10, n - j - 1);\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / k % 10 | 0;\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;\r\n\r\n      // The expression `w % mathpow(10, n - j - 1)` returns all the digits of w to the right of the\r\n      // digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression will give\r\n      // 714.\r\n\r\n      doRound = rm < 4\r\n        ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, n - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n    }\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      if (doRound) {\r\n        k = getBase10Exponent(x);\r\n        xd.length = 1;\r\n\r\n        // Convert sd to decimal places.\r\n        sd = sd - k - 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = mathfloor(-sd / LOG_BASE) || 0;\r\n      } else {\r\n        xd.length = 1;\r\n\r\n        // Zero.\r\n        xd[0] = x.e = x.s = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, n - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (doRound) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n          if ((xd[0] += k) == BASE) {\r\n            xd[0] = 1;\r\n            ++x.e;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n\r\n    if (external && (x.e > MAX_E || x.e < -MAX_E)) {\r\n      throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function subtract(x, y) {\r\n    var d, e, i, j, k, len, xd, xe, xLTy, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // Return y negated if x is zero.\r\n    // Return x if y is zero and x is non-zero.\r\n    if (!x.s || !y.s) {\r\n      if (y.s) y.s = -y.s;\r\n      else y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are non-zero numbers with the same sign.\r\n\r\n    e = y.e;\r\n    xe = x.e;\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of zeros\r\n      // needing to be prepended, but this can be avoided while still ensuring correct rounding by\r\n      // limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to xd if shorter.\r\n    // Don't add zeros to yd if shorter as subtraction only needs to start at yd length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(0);\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    //return external && xd.length >= pr / LOG_BASE ? round(y, pr) : y;\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function toString(x, isExp, sd) {\r\n    var k,\r\n      e = getBase10Exponent(x),\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (e < 0 ? 'e' : 'e+') + e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  clone\r\n   *  config/set\r\n   */\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * value {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(value) {\r\n      var x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(value);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (value instanceof Decimal) {\r\n        x.s = value.s;\r\n        x.e = value.e;\r\n        x.d = (value = value.d) ? value.slice() : value;\r\n        return;\r\n      }\r\n\r\n      if (typeof value === 'number') {\r\n\r\n        // Reject Infinity/NaN.\r\n        if (value * 0 !== 0) {\r\n          throw Error(invalidArgument + value);\r\n        }\r\n\r\n        if (value > 0) {\r\n          x.s = 1;\r\n        } else if (value < 0) {\r\n          value = -value;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 0;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (value === ~~value && value < 1e7) {\r\n          x.e = 0;\r\n          x.d = [value];\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, value.toString());\r\n      } else if (typeof value !== 'string') {\r\n        throw Error(invalidArgument + value);\r\n      }\r\n\r\n      // Minus sign?\r\n      if (value.charCodeAt(0) === 45) {\r\n        value = value.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      if (isDecimal.test(value)) parseDecimal(x, value);\r\n      else throw Error(invalidArgument + value);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n\r\n    Decimal.clone = clone;\r\n    Decimal.config = Decimal.set = config;\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'LN10'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      throw Error(decimalError + 'Object expected');\r\n    }\r\n    var i, p, v,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -1 / 0, 0,\r\n        'toExpPos', 0, 1 / 0\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if ((v = obj[p = ps[i]]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if ((v = obj[p = 'LN10']) !== void 0) {\r\n        if (v == Math.LN10) this[p] = new this(v);\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(Decimal);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Internal constant.\r\n  ONE = new Decimal(1);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = Decimal;\r\n\r\n    // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self\r\n        ? self : Function('return this')();\r\n    }\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar supportsDescriptors = origDefineProperty && hasPropertyDescriptors;\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value; // eslint-disable-line no-param-reassign\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n","'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","// Copyright 2018 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the “License”);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// <https://apache.org/licenses/LICENSE-2.0>.\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an “AS IS” BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nclass JSBI extends Array {\n    constructor(length, sign) {\n        super(length);\n        this.sign = sign;\n        // Explicitly set the prototype as per\n        // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, JSBI.prototype);\n        if (length > JSBI.__kMaxLength) {\n            throw new RangeError('Maximum BigInt size exceeded');\n        }\n    }\n    static BigInt(arg) {\n        if (typeof arg === 'number') {\n            if (arg === 0)\n                return JSBI.__zero();\n            if (JSBI.__isOneDigitInt(arg)) {\n                if (arg < 0) {\n                    return JSBI.__oneDigit(-arg, true);\n                }\n                return JSBI.__oneDigit(arg, false);\n            }\n            if (!Number.isFinite(arg) || Math.floor(arg) !== arg) {\n                throw new RangeError('The number ' + arg + ' cannot be converted to ' +\n                    'BigInt because it is not an integer');\n            }\n            return JSBI.__fromDouble(arg);\n        }\n        else if (typeof arg === 'string') {\n            const result = JSBI.__fromString(arg);\n            if (result === null) {\n                throw new SyntaxError('Cannot convert ' + arg + ' to a BigInt');\n            }\n            return result;\n        }\n        else if (typeof arg === 'boolean') {\n            if (arg === true) {\n                return JSBI.__oneDigit(1, false);\n            }\n            return JSBI.__zero();\n        }\n        else if (typeof arg === 'object') {\n            if (arg.constructor === JSBI)\n                return arg;\n            const primitive = JSBI.__toPrimitive(arg);\n            return JSBI.BigInt(primitive);\n        }\n        throw new TypeError('Cannot convert ' + arg + ' to a BigInt');\n    }\n    toDebugString() {\n        const result = ['BigInt['];\n        for (const digit of this) {\n            result.push((digit ? (digit >>> 0).toString(16) : digit) + ', ');\n        }\n        result.push(']');\n        return result.join('');\n    }\n    toString(radix = 10) {\n        if (radix < 2 || radix > 36) {\n            throw new RangeError('toString() radix argument must be between 2 and 36');\n        }\n        if (this.length === 0)\n            return '0';\n        if ((radix & (radix - 1)) === 0) {\n            return JSBI.__toStringBasePowerOfTwo(this, radix);\n        }\n        return JSBI.__toStringGeneric(this, radix, false);\n    }\n    valueOf() {\n        throw new Error('Convert JSBI instances to native numbers using `toNumber`.');\n    }\n    // Equivalent of \"Number(my_bigint)\" in the native implementation.\n    // TODO: add more tests\n    static toNumber(x) {\n        const xLength = x.length;\n        if (xLength === 0)\n            return 0;\n        if (xLength === 1) {\n            const value = x.__unsignedDigit(0);\n            return x.sign ? -value : value;\n        }\n        const xMsd = x.__digit(xLength - 1);\n        const msdLeadingZeros = JSBI.__clz30(xMsd);\n        const xBitLength = xLength * 30 - msdLeadingZeros;\n        if (xBitLength > 1024)\n            return x.sign ? -Infinity : Infinity;\n        let exponent = xBitLength - 1;\n        let currentDigit = xMsd;\n        let digitIndex = xLength - 1;\n        const shift = msdLeadingZeros + 3;\n        let mantissaHigh = (shift === 32) ? 0 : currentDigit << shift;\n        mantissaHigh >>>= 12;\n        const mantissaHighBitsUnset = shift - 12;\n        let mantissaLow = (shift >= 12) ? 0 : (currentDigit << (20 + shift));\n        let mantissaLowBitsUnset = 20 + shift;\n        if (mantissaHighBitsUnset > 0 && digitIndex > 0) {\n            digitIndex--;\n            currentDigit = x.__digit(digitIndex);\n            mantissaHigh |= (currentDigit >>> (30 - mantissaHighBitsUnset));\n            mantissaLow = currentDigit << mantissaHighBitsUnset + 2;\n            mantissaLowBitsUnset = mantissaHighBitsUnset + 2;\n        }\n        while (mantissaLowBitsUnset > 0 && digitIndex > 0) {\n            digitIndex--;\n            currentDigit = x.__digit(digitIndex);\n            if (mantissaLowBitsUnset >= 30) {\n                mantissaLow |= (currentDigit << (mantissaLowBitsUnset - 30));\n            }\n            else {\n                mantissaLow |= (currentDigit >>> (30 - mantissaLowBitsUnset));\n            }\n            mantissaLowBitsUnset -= 30;\n        }\n        const rounding = JSBI.__decideRounding(x, mantissaLowBitsUnset, digitIndex, currentDigit);\n        if (rounding === 1 || (rounding === 0 && (mantissaLow & 1) === 1)) {\n            mantissaLow = (mantissaLow + 1) >>> 0;\n            if (mantissaLow === 0) {\n                // Incrementing mantissaLow overflowed.\n                mantissaHigh++;\n                if ((mantissaHigh >>> 20) !== 0) {\n                    // Incrementing mantissaHigh overflowed.\n                    mantissaHigh = 0;\n                    exponent++;\n                    if (exponent > 1023) {\n                        // Incrementing the exponent overflowed.\n                        return x.sign ? -Infinity : Infinity;\n                    }\n                }\n            }\n        }\n        const signBit = x.sign ? (1 << 31) : 0;\n        exponent = (exponent + 0x3FF) << 20;\n        JSBI.__kBitConversionInts[1] = signBit | exponent | mantissaHigh;\n        JSBI.__kBitConversionInts[0] = mantissaLow;\n        return JSBI.__kBitConversionDouble[0];\n    }\n    // Operations.\n    static unaryMinus(x) {\n        if (x.length === 0)\n            return x;\n        const result = x.__copy();\n        result.sign = !x.sign;\n        return result;\n    }\n    static bitwiseNot(x) {\n        if (x.sign) {\n            // ~(-x) == ~(~(x-1)) == x-1\n            return JSBI.__absoluteSubOne(x).__trim();\n        }\n        // ~x == -x-1 == -(x+1)\n        return JSBI.__absoluteAddOne(x, true);\n    }\n    static exponentiate(x, y) {\n        if (y.sign) {\n            throw new RangeError('Exponent must be positive');\n        }\n        if (y.length === 0) {\n            return JSBI.__oneDigit(1, false);\n        }\n        if (x.length === 0)\n            return x;\n        if (x.length === 1 && x.__digit(0) === 1) {\n            // (-1) ** even_number == 1.\n            if (x.sign && (y.__digit(0) & 1) === 0) {\n                return JSBI.unaryMinus(x);\n            }\n            // (-1) ** odd_number == -1, 1 ** anything == 1.\n            return x;\n        }\n        // For all bases >= 2, very large exponents would lead to unrepresentable\n        // results.\n        if (y.length > 1)\n            throw new RangeError('BigInt too big');\n        let expValue = y.__unsignedDigit(0);\n        if (expValue === 1)\n            return x;\n        if (expValue >= JSBI.__kMaxLengthBits) {\n            throw new RangeError('BigInt too big');\n        }\n        if (x.length === 1 && x.__digit(0) === 2) {\n            // Fast path for 2^n.\n            const neededDigits = 1 + ((expValue / 30) | 0);\n            const sign = x.sign && ((expValue & 1) !== 0);\n            const result = new JSBI(neededDigits, sign);\n            result.__initializeDigits();\n            // All bits are zero. Now set the n-th bit.\n            const msd = 1 << (expValue % 30);\n            result.__setDigit(neededDigits - 1, msd);\n            return result;\n        }\n        let result = null;\n        let runningSquare = x;\n        // This implicitly sets the result's sign correctly.\n        if ((expValue & 1) !== 0)\n            result = x;\n        expValue >>= 1;\n        for (; expValue !== 0; expValue >>= 1) {\n            runningSquare = JSBI.multiply(runningSquare, runningSquare);\n            if ((expValue & 1) !== 0) {\n                if (result === null) {\n                    result = runningSquare;\n                }\n                else {\n                    result = JSBI.multiply(result, runningSquare);\n                }\n            }\n        }\n        // TODO see if there's a way for tsc to infer this will always happen?\n        return result;\n    }\n    static multiply(x, y) {\n        if (x.length === 0)\n            return x;\n        if (y.length === 0)\n            return y;\n        let resultLength = x.length + y.length;\n        if (x.__clzmsd() + y.__clzmsd() >= 30) {\n            resultLength--;\n        }\n        const result = new JSBI(resultLength, x.sign !== y.sign);\n        result.__initializeDigits();\n        for (let i = 0; i < x.length; i++) {\n            JSBI.__multiplyAccumulate(y, x.__digit(i), result, i);\n        }\n        return result.__trim();\n    }\n    static divide(x, y) {\n        if (y.length === 0)\n            throw new RangeError('Division by zero');\n        if (JSBI.__absoluteCompare(x, y) < 0)\n            return JSBI.__zero();\n        const resultSign = x.sign !== y.sign;\n        const divisor = y.__unsignedDigit(0);\n        let quotient;\n        if (y.length === 1 && divisor <= 0x7FFF) {\n            if (divisor === 1) {\n                return resultSign === x.sign ? x : JSBI.unaryMinus(x);\n            }\n            quotient = JSBI.__absoluteDivSmall(x, divisor, null);\n        }\n        else {\n            quotient = JSBI.__absoluteDivLarge(x, y, true, false);\n        }\n        quotient.sign = resultSign;\n        return quotient.__trim();\n    }\n    static remainder(x, y) {\n        if (y.length === 0)\n            throw new RangeError('Division by zero');\n        if (JSBI.__absoluteCompare(x, y) < 0)\n            return x;\n        const divisor = y.__unsignedDigit(0);\n        if (y.length === 1 && divisor <= 0x7FFF) {\n            if (divisor === 1)\n                return JSBI.__zero();\n            const remainderDigit = JSBI.__absoluteModSmall(x, divisor);\n            if (remainderDigit === 0)\n                return JSBI.__zero();\n            return JSBI.__oneDigit(remainderDigit, x.sign);\n        }\n        const remainder = JSBI.__absoluteDivLarge(x, y, false, true);\n        remainder.sign = x.sign;\n        return remainder.__trim();\n    }\n    static add(x, y) {\n        const sign = x.sign;\n        if (sign === y.sign) {\n            // x + y == x + y\n            // -x + -y == -(x + y)\n            return JSBI.__absoluteAdd(x, y, sign);\n        }\n        // x + -y == x - y == -(y - x)\n        // -x + y == y - x == -(x - y)\n        if (JSBI.__absoluteCompare(x, y) >= 0) {\n            return JSBI.__absoluteSub(x, y, sign);\n        }\n        return JSBI.__absoluteSub(y, x, !sign);\n    }\n    static subtract(x, y) {\n        const sign = x.sign;\n        if (sign !== y.sign) {\n            // x - (-y) == x + y\n            // (-x) - y == -(x + y)\n            return JSBI.__absoluteAdd(x, y, sign);\n        }\n        // x - y == -(y - x)\n        // (-x) - (-y) == y - x == -(x - y)\n        if (JSBI.__absoluteCompare(x, y) >= 0) {\n            return JSBI.__absoluteSub(x, y, sign);\n        }\n        return JSBI.__absoluteSub(y, x, !sign);\n    }\n    static leftShift(x, y) {\n        if (y.length === 0 || x.length === 0)\n            return x;\n        if (y.sign)\n            return JSBI.__rightShiftByAbsolute(x, y);\n        return JSBI.__leftShiftByAbsolute(x, y);\n    }\n    static signedRightShift(x, y) {\n        if (y.length === 0 || x.length === 0)\n            return x;\n        if (y.sign)\n            return JSBI.__leftShiftByAbsolute(x, y);\n        return JSBI.__rightShiftByAbsolute(x, y);\n    }\n    static unsignedRightShift() {\n        throw new TypeError('BigInts have no unsigned right shift; use >> instead');\n    }\n    static lessThan(x, y) {\n        return JSBI.__compareToBigInt(x, y) < 0;\n    }\n    static lessThanOrEqual(x, y) {\n        return JSBI.__compareToBigInt(x, y) <= 0;\n    }\n    static greaterThan(x, y) {\n        return JSBI.__compareToBigInt(x, y) > 0;\n    }\n    static greaterThanOrEqual(x, y) {\n        return JSBI.__compareToBigInt(x, y) >= 0;\n    }\n    static equal(x, y) {\n        if (x.sign !== y.sign)\n            return false;\n        if (x.length !== y.length)\n            return false;\n        for (let i = 0; i < x.length; i++) {\n            if (x.__digit(i) !== y.__digit(i))\n                return false;\n        }\n        return true;\n    }\n    static notEqual(x, y) {\n        return !JSBI.equal(x, y);\n    }\n    static bitwiseAnd(x, y) {\n        if (!x.sign && !y.sign) {\n            return JSBI.__absoluteAnd(x, y).__trim();\n        }\n        else if (x.sign && y.sign) {\n            const resultLength = Math.max(x.length, y.length) + 1;\n            // (-x) & (-y) == ~(x-1) & ~(y-1) == ~((x-1) | (y-1))\n            // == -(((x-1) | (y-1)) + 1)\n            let result = JSBI.__absoluteSubOne(x, resultLength);\n            const y1 = JSBI.__absoluteSubOne(y);\n            result = JSBI.__absoluteOr(result, y1, result);\n            return JSBI.__absoluteAddOne(result, true, result).__trim();\n        }\n        // Assume that x is the positive BigInt.\n        if (x.sign) {\n            [x, y] = [y, x];\n        }\n        // x & (-y) == x & ~(y-1) == x &~ (y-1)\n        return JSBI.__absoluteAndNot(x, JSBI.__absoluteSubOne(y)).__trim();\n    }\n    static bitwiseXor(x, y) {\n        if (!x.sign && !y.sign) {\n            return JSBI.__absoluteXor(x, y).__trim();\n        }\n        else if (x.sign && y.sign) {\n            // (-x) ^ (-y) == ~(x-1) ^ ~(y-1) == (x-1) ^ (y-1)\n            const resultLength = Math.max(x.length, y.length);\n            const result = JSBI.__absoluteSubOne(x, resultLength);\n            const y1 = JSBI.__absoluteSubOne(y);\n            return JSBI.__absoluteXor(result, y1, result).__trim();\n        }\n        const resultLength = Math.max(x.length, y.length) + 1;\n        // Assume that x is the positive BigInt.\n        if (x.sign) {\n            [x, y] = [y, x];\n        }\n        // x ^ (-y) == x ^ ~(y-1) == ~(x ^ (y-1)) == -((x ^ (y-1)) + 1)\n        let result = JSBI.__absoluteSubOne(y, resultLength);\n        result = JSBI.__absoluteXor(result, x, result);\n        return JSBI.__absoluteAddOne(result, true, result).__trim();\n    }\n    static bitwiseOr(x, y) {\n        const resultLength = Math.max(x.length, y.length);\n        if (!x.sign && !y.sign) {\n            return JSBI.__absoluteOr(x, y).__trim();\n        }\n        else if (x.sign && y.sign) {\n            // (-x) | (-y) == ~(x-1) | ~(y-1) == ~((x-1) & (y-1))\n            // == -(((x-1) & (y-1)) + 1)\n            let result = JSBI.__absoluteSubOne(x, resultLength);\n            const y1 = JSBI.__absoluteSubOne(y);\n            result = JSBI.__absoluteAnd(result, y1, result);\n            return JSBI.__absoluteAddOne(result, true, result).__trim();\n        }\n        // Assume that x is the positive BigInt.\n        if (x.sign) {\n            [x, y] = [y, x];\n        }\n        // x | (-y) == x | ~(y-1) == ~((y-1) &~ x) == -(((y-1) ~& x) + 1)\n        let result = JSBI.__absoluteSubOne(y, resultLength);\n        result = JSBI.__absoluteAndNot(result, x, result);\n        return JSBI.__absoluteAddOne(result, true, result).__trim();\n    }\n    static asIntN(n, x) {\n        if (x.length === 0)\n            return x;\n        n = Math.floor(n);\n        if (n < 0) {\n            throw new RangeError('Invalid value: not (convertible to) a safe integer');\n        }\n        if (n === 0)\n            return JSBI.__zero();\n        // If {x} has less than {n} bits, return it directly.\n        if (n >= JSBI.__kMaxLengthBits)\n            return x;\n        const neededLength = ((n + 29) / 30) | 0;\n        if (x.length < neededLength)\n            return x;\n        const topDigit = x.__unsignedDigit(neededLength - 1);\n        const compareDigit = 1 << ((n - 1) % 30);\n        if (x.length === neededLength && topDigit < compareDigit)\n            return x;\n        // Otherwise truncate and simulate two's complement.\n        const hasBit = (topDigit & compareDigit) === compareDigit;\n        if (!hasBit)\n            return JSBI.__truncateToNBits(n, x);\n        if (!x.sign)\n            return JSBI.__truncateAndSubFromPowerOfTwo(n, x, true);\n        if ((topDigit & (compareDigit - 1)) === 0) {\n            for (let i = neededLength - 2; i >= 0; i--) {\n                if (x.__digit(i) !== 0) {\n                    return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);\n                }\n            }\n            if (x.length === neededLength && topDigit === compareDigit)\n                return x;\n            return JSBI.__truncateToNBits(n, x);\n        }\n        return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);\n    }\n    static asUintN(n, x) {\n        if (x.length === 0)\n            return x;\n        n = Math.floor(n);\n        if (n < 0) {\n            throw new RangeError('Invalid value: not (convertible to) a safe integer');\n        }\n        if (n === 0)\n            return JSBI.__zero();\n        // If {x} is negative, simulate two's complement representation.\n        if (x.sign) {\n            if (n > JSBI.__kMaxLengthBits) {\n                throw new RangeError('BigInt too big');\n            }\n            return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);\n        }\n        // If {x} is positive and has up to {n} bits, return it directly.\n        if (n >= JSBI.__kMaxLengthBits)\n            return x;\n        const neededLength = ((n + 29) / 30) | 0;\n        if (x.length < neededLength)\n            return x;\n        const bitsInTopDigit = n % 30;\n        if (x.length == neededLength) {\n            if (bitsInTopDigit === 0)\n                return x;\n            const topDigit = x.__digit(neededLength - 1);\n            if ((topDigit >>> bitsInTopDigit) === 0)\n                return x;\n        }\n        // Otherwise, truncate.\n        return JSBI.__truncateToNBits(n, x);\n    }\n    // Operators.\n    static ADD(x, y) {\n        x = JSBI.__toPrimitive(x);\n        y = JSBI.__toPrimitive(y);\n        if (typeof x === 'string') {\n            if (typeof y !== 'string')\n                y = y.toString();\n            return x + y;\n        }\n        if (typeof y === 'string') {\n            return x.toString() + y;\n        }\n        x = JSBI.__toNumeric(x);\n        y = JSBI.__toNumeric(y);\n        if (JSBI.__isBigInt(x) && JSBI.__isBigInt(y)) {\n            return JSBI.add(x, y);\n        }\n        if (typeof x === 'number' && typeof y === 'number') {\n            return x + y;\n        }\n        throw new TypeError('Cannot mix BigInt and other types, use explicit conversions');\n    }\n    static LT(x, y) {\n        return JSBI.__compare(x, y, 0);\n    }\n    static LE(x, y) {\n        return JSBI.__compare(x, y, 1);\n    }\n    static GT(x, y) {\n        return JSBI.__compare(x, y, 2);\n    }\n    static GE(x, y) {\n        return JSBI.__compare(x, y, 3);\n    }\n    static EQ(x, y) {\n        while (true) {\n            if (JSBI.__isBigInt(x)) {\n                if (JSBI.__isBigInt(y))\n                    return JSBI.equal(x, y);\n                return JSBI.EQ(y, x);\n            }\n            else if (typeof x === 'number') {\n                if (JSBI.__isBigInt(y))\n                    return JSBI.__equalToNumber(y, x);\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'string') {\n                if (JSBI.__isBigInt(y)) {\n                    x = JSBI.__fromString(x);\n                    if (x === null)\n                        return false;\n                    return JSBI.equal(x, y);\n                }\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'boolean') {\n                if (JSBI.__isBigInt(y))\n                    return JSBI.__equalToNumber(y, +x);\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'symbol') {\n                if (JSBI.__isBigInt(y))\n                    return false;\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'object') {\n                if (typeof y === 'object' && y.constructor !== JSBI)\n                    return x == y;\n                x = JSBI.__toPrimitive(x);\n            }\n            else {\n                return x == y;\n            }\n        }\n    }\n    static NE(x, y) {\n        return !JSBI.EQ(x, y);\n    }\n    // DataView-related functionality.\n    static DataViewGetBigInt64(dataview, byteOffset, littleEndian = false) {\n        return JSBI.asIntN(64, JSBI.DataViewGetBigUint64(dataview, byteOffset, littleEndian));\n    }\n    static DataViewGetBigUint64(dataview, byteOffset, littleEndian = false) {\n        const [h, l] = littleEndian ? [4, 0] : [0, 4];\n        const high = dataview.getUint32(byteOffset + h, littleEndian);\n        const low = dataview.getUint32(byteOffset + l, littleEndian);\n        const result = new JSBI(3, false);\n        result.__setDigit(0, low & 0x3FFFFFFF);\n        result.__setDigit(1, ((high & 0xFFFFFFF) << 2) | (low >>> 30));\n        result.__setDigit(2, high >>> 28);\n        return result.__trim();\n    }\n    static DataViewSetBigInt64(dataview, byteOffset, value, littleEndian = false) {\n        JSBI.DataViewSetBigUint64(dataview, byteOffset, value, littleEndian);\n    }\n    static DataViewSetBigUint64(dataview, byteOffset, value, littleEndian = false) {\n        value = JSBI.asUintN(64, value);\n        let high = 0;\n        let low = 0;\n        if (value.length > 0) {\n            low = value.__digit(0);\n            if (value.length > 1) {\n                const d1 = value.__digit(1);\n                low = low | d1 << 30;\n                high = d1 >>> 2;\n                if (value.length > 2) {\n                    high = high | (value.__digit(2) << 28);\n                }\n            }\n        }\n        const [h, l] = littleEndian ? [4, 0] : [0, 4];\n        dataview.setUint32(byteOffset + h, high, littleEndian);\n        dataview.setUint32(byteOffset + l, low, littleEndian);\n    }\n    // Helpers.\n    static __zero() {\n        return new JSBI(0, false);\n    }\n    static __oneDigit(value, sign) {\n        const result = new JSBI(1, sign);\n        result.__setDigit(0, value);\n        return result;\n    }\n    __copy() {\n        const result = new JSBI(this.length, this.sign);\n        for (let i = 0; i < this.length; i++) {\n            result[i] = this[i];\n        }\n        return result;\n    }\n    __trim() {\n        let newLength = this.length;\n        let last = this[newLength - 1];\n        while (last === 0) {\n            newLength--;\n            last = this[newLength - 1];\n            this.pop();\n        }\n        if (newLength === 0)\n            this.sign = false;\n        return this;\n    }\n    __initializeDigits() {\n        for (let i = 0; i < this.length; i++) {\n            this[i] = 0;\n        }\n    }\n    static __decideRounding(x, mantissaBitsUnset, digitIndex, currentDigit) {\n        if (mantissaBitsUnset > 0)\n            return -1;\n        let topUnconsumedBit;\n        if (mantissaBitsUnset < 0) {\n            topUnconsumedBit = -mantissaBitsUnset - 1;\n        }\n        else {\n            // {currentDigit} fit the mantissa exactly; look at the next digit.\n            if (digitIndex === 0)\n                return -1;\n            digitIndex--;\n            currentDigit = x.__digit(digitIndex);\n            topUnconsumedBit = 29;\n        }\n        // If the most significant remaining bit is 0, round down.\n        let mask = 1 << topUnconsumedBit;\n        if ((currentDigit & mask) === 0)\n            return -1;\n        // If any other remaining bit is set, round up.\n        mask -= 1;\n        if ((currentDigit & mask) !== 0)\n            return 1;\n        while (digitIndex > 0) {\n            digitIndex--;\n            if (x.__digit(digitIndex) !== 0)\n                return 1;\n        }\n        return 0;\n    }\n    static __fromDouble(value) {\n        const sign = value < 0;\n        JSBI.__kBitConversionDouble[0] = value;\n        const rawExponent = (JSBI.__kBitConversionInts[1] >>> 20) & 0x7FF;\n        const exponent = rawExponent - 0x3FF;\n        const digits = ((exponent / 30) | 0) + 1;\n        const result = new JSBI(digits, sign);\n        const kHiddenBit = 0x00100000;\n        let mantissaHigh = (JSBI.__kBitConversionInts[1] & 0xFFFFF) | kHiddenBit;\n        let mantissaLow = JSBI.__kBitConversionInts[0];\n        const kMantissaHighTopBit = 20;\n        // 0-indexed position of most significant bit in most significant digit.\n        const msdTopBit = exponent % 30;\n        // Number of unused bits in the mantissa. We'll keep them shifted to the\n        // left (i.e. most significant part).\n        let remainingMantissaBits = 0;\n        // Next digit under construction.\n        let digit;\n        // First, build the MSD by shifting the mantissa appropriately.\n        if (msdTopBit < kMantissaHighTopBit) {\n            const shift = kMantissaHighTopBit - msdTopBit;\n            remainingMantissaBits = shift + 32;\n            digit = mantissaHigh >>> shift;\n            mantissaHigh = (mantissaHigh << (32 - shift)) | (mantissaLow >>> shift);\n            mantissaLow = mantissaLow << (32 - shift);\n        }\n        else if (msdTopBit === kMantissaHighTopBit) {\n            remainingMantissaBits = 32;\n            digit = mantissaHigh;\n            mantissaHigh = mantissaLow;\n            mantissaLow = 0;\n        }\n        else {\n            const shift = msdTopBit - kMantissaHighTopBit;\n            remainingMantissaBits = 32 - shift;\n            digit = (mantissaHigh << shift) | (mantissaLow >>> (32 - shift));\n            mantissaHigh = mantissaLow << shift;\n            mantissaLow = 0;\n        }\n        result.__setDigit(digits - 1, digit);\n        // Then fill in the rest of the digits.\n        for (let digitIndex = digits - 2; digitIndex >= 0; digitIndex--) {\n            if (remainingMantissaBits > 0) {\n                remainingMantissaBits -= 30;\n                digit = mantissaHigh >>> 2;\n                mantissaHigh = (mantissaHigh << 30) | (mantissaLow >>> 2);\n                mantissaLow = (mantissaLow << 30);\n            }\n            else {\n                digit = 0;\n            }\n            result.__setDigit(digitIndex, digit);\n        }\n        return result.__trim();\n    }\n    static __isWhitespace(c) {\n        if (c <= 0x0D && c >= 0x09)\n            return true;\n        if (c <= 0x9F)\n            return c === 0x20;\n        if (c <= 0x01FFFF) {\n            return c === 0xA0 || c === 0x1680;\n        }\n        if (c <= 0x02FFFF) {\n            c &= 0x01FFFF;\n            return c <= 0x0A || c === 0x28 || c === 0x29 || c === 0x2F ||\n                c === 0x5F || c === 0x1000;\n        }\n        return c === 0xFEFF;\n    }\n    static __fromString(string, radix = 0) {\n        let sign = 0;\n        let leadingZero = false;\n        const length = string.length;\n        let cursor = 0;\n        if (cursor === length)\n            return JSBI.__zero();\n        let current = string.charCodeAt(cursor);\n        // Skip whitespace.\n        while (JSBI.__isWhitespace(current)) {\n            if (++cursor === length)\n                return JSBI.__zero();\n            current = string.charCodeAt(cursor);\n        }\n        // Detect radix.\n        if (current === 0x2B) { // '+'\n            if (++cursor === length)\n                return null;\n            current = string.charCodeAt(cursor);\n            sign = 1;\n        }\n        else if (current === 0x2D) { // '-'\n            if (++cursor === length)\n                return null;\n            current = string.charCodeAt(cursor);\n            sign = -1;\n        }\n        if (radix === 0) {\n            radix = 10;\n            if (current === 0x30) { // '0'\n                if (++cursor === length)\n                    return JSBI.__zero();\n                current = string.charCodeAt(cursor);\n                if (current === 0x58 || current === 0x78) { // 'X' or 'x'\n                    radix = 16;\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else if (current === 0x4F || current === 0x6F) { // 'O' or 'o'\n                    radix = 8;\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else if (current === 0x42 || current === 0x62) { // 'B' or 'b'\n                    radix = 2;\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else {\n                    leadingZero = true;\n                }\n            }\n        }\n        else if (radix === 16) {\n            if (current === 0x30) { // '0'\n                // Allow \"0x\" prefix.\n                if (++cursor === length)\n                    return JSBI.__zero();\n                current = string.charCodeAt(cursor);\n                if (current === 0x58 || current === 0x78) { // 'X' or 'x'\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else {\n                    leadingZero = true;\n                }\n            }\n        }\n        if (sign !== 0 && radix !== 10)\n            return null;\n        // Skip leading zeros.\n        while (current === 0x30) {\n            leadingZero = true;\n            if (++cursor === length)\n                return JSBI.__zero();\n            current = string.charCodeAt(cursor);\n        }\n        // Allocate result.\n        const chars = length - cursor;\n        let bitsPerChar = JSBI.__kMaxBitsPerChar[radix];\n        let roundup = JSBI.__kBitsPerCharTableMultiplier - 1;\n        if (chars > (1 << 30) / bitsPerChar)\n            return null;\n        const bitsMin = (bitsPerChar * chars + roundup) >>> JSBI.__kBitsPerCharTableShift;\n        const resultLength = ((bitsMin + 29) / 30) | 0;\n        const result = new JSBI(resultLength, false);\n        // Parse.\n        const limDigit = radix < 10 ? radix : 10;\n        const limAlpha = radix > 10 ? radix - 10 : 0;\n        if ((radix & (radix - 1)) === 0) {\n            // Power-of-two radix.\n            bitsPerChar >>= JSBI.__kBitsPerCharTableShift;\n            const parts = [];\n            const partsBits = [];\n            let done = false;\n            do {\n                let part = 0;\n                let bits = 0;\n                while (true) {\n                    let d;\n                    if (((current - 48) >>> 0) < limDigit) {\n                        d = current - 48;\n                    }\n                    else if ((((current | 32) - 97) >>> 0) < limAlpha) {\n                        d = (current | 32) - 87;\n                    }\n                    else {\n                        done = true;\n                        break;\n                    }\n                    bits += bitsPerChar;\n                    part = (part << bitsPerChar) | d;\n                    if (++cursor === length) {\n                        done = true;\n                        break;\n                    }\n                    current = string.charCodeAt(cursor);\n                    if (bits + bitsPerChar > 30)\n                        break;\n                }\n                parts.push(part);\n                partsBits.push(bits);\n            } while (!done);\n            JSBI.__fillFromParts(result, parts, partsBits);\n        }\n        else {\n            result.__initializeDigits();\n            let done = false;\n            let charsSoFar = 0;\n            do {\n                let part = 0;\n                let multiplier = 1;\n                while (true) {\n                    let d;\n                    if (((current - 48) >>> 0) < limDigit) {\n                        d = current - 48;\n                    }\n                    else if ((((current | 32) - 97) >>> 0) < limAlpha) {\n                        d = (current | 32) - 87;\n                    }\n                    else {\n                        done = true;\n                        break;\n                    }\n                    const m = multiplier * radix;\n                    if (m > 0x3FFFFFFF)\n                        break;\n                    multiplier = m;\n                    part = part * radix + d;\n                    charsSoFar++;\n                    if (++cursor === length) {\n                        done = true;\n                        break;\n                    }\n                    current = string.charCodeAt(cursor);\n                }\n                roundup = JSBI.__kBitsPerCharTableMultiplier * 30 - 1;\n                const digitsSoFar = (((bitsPerChar * charsSoFar + roundup) >>>\n                    JSBI.__kBitsPerCharTableShift) / 30) | 0;\n                result.__inplaceMultiplyAdd(multiplier, part, digitsSoFar);\n            } while (!done);\n        }\n        if (cursor !== length) {\n            if (!JSBI.__isWhitespace(current))\n                return null;\n            for (cursor++; cursor < length; cursor++) {\n                current = string.charCodeAt(cursor);\n                if (!JSBI.__isWhitespace(current))\n                    return null;\n            }\n        }\n        // Get result.\n        result.sign = (sign === -1);\n        return result.__trim();\n    }\n    static __fillFromParts(result, parts, partsBits) {\n        let digitIndex = 0;\n        let digit = 0;\n        let bitsInDigit = 0;\n        for (let i = parts.length - 1; i >= 0; i--) {\n            const part = parts[i];\n            const partBits = partsBits[i];\n            digit |= (part << bitsInDigit);\n            bitsInDigit += partBits;\n            if (bitsInDigit === 30) {\n                result.__setDigit(digitIndex++, digit);\n                bitsInDigit = 0;\n                digit = 0;\n            }\n            else if (bitsInDigit > 30) {\n                result.__setDigit(digitIndex++, digit & 0x3FFFFFFF);\n                bitsInDigit -= 30;\n                digit = part >>> (partBits - bitsInDigit);\n            }\n        }\n        if (digit !== 0) {\n            if (digitIndex >= result.length)\n                throw new Error('implementation bug');\n            result.__setDigit(digitIndex++, digit);\n        }\n        for (; digitIndex < result.length; digitIndex++) {\n            result.__setDigit(digitIndex, 0);\n        }\n    }\n    static __toStringBasePowerOfTwo(x, radix) {\n        const length = x.length;\n        let bits = radix - 1;\n        bits = ((bits >>> 1) & 0x55) + (bits & 0x55);\n        bits = ((bits >>> 2) & 0x33) + (bits & 0x33);\n        bits = ((bits >>> 4) & 0x0F) + (bits & 0x0F);\n        const bitsPerChar = bits;\n        const charMask = radix - 1;\n        const msd = x.__digit(length - 1);\n        const msdLeadingZeros = JSBI.__clz30(msd);\n        const bitLength = length * 30 - msdLeadingZeros;\n        let charsRequired = ((bitLength + bitsPerChar - 1) / bitsPerChar) | 0;\n        if (x.sign)\n            charsRequired++;\n        if (charsRequired > (1 << 28))\n            throw new Error('string too long');\n        const result = new Array(charsRequired);\n        let pos = charsRequired - 1;\n        let digit = 0;\n        let availableBits = 0;\n        for (let i = 0; i < length - 1; i++) {\n            const newDigit = x.__digit(i);\n            const current = (digit | (newDigit << availableBits)) & charMask;\n            result[pos--] = JSBI.__kConversionChars[current];\n            const consumedBits = bitsPerChar - availableBits;\n            digit = newDigit >>> consumedBits;\n            availableBits = 30 - consumedBits;\n            while (availableBits >= bitsPerChar) {\n                result[pos--] = JSBI.__kConversionChars[digit & charMask];\n                digit >>>= bitsPerChar;\n                availableBits -= bitsPerChar;\n            }\n        }\n        const current = (digit | (msd << availableBits)) & charMask;\n        result[pos--] = JSBI.__kConversionChars[current];\n        digit = msd >>> (bitsPerChar - availableBits);\n        while (digit !== 0) {\n            result[pos--] = JSBI.__kConversionChars[digit & charMask];\n            digit >>>= bitsPerChar;\n        }\n        if (x.sign)\n            result[pos--] = '-';\n        if (pos !== -1)\n            throw new Error('implementation bug');\n        return result.join('');\n    }\n    static __toStringGeneric(x, radix, isRecursiveCall) {\n        const length = x.length;\n        if (length === 0)\n            return '';\n        if (length === 1) {\n            let result = x.__unsignedDigit(0).toString(radix);\n            if (isRecursiveCall === false && x.sign) {\n                result = '-' + result;\n            }\n            return result;\n        }\n        const bitLength = length * 30 - JSBI.__clz30(x.__digit(length - 1));\n        const maxBitsPerChar = JSBI.__kMaxBitsPerChar[radix];\n        const minBitsPerChar = maxBitsPerChar - 1;\n        let charsRequired = bitLength * JSBI.__kBitsPerCharTableMultiplier;\n        charsRequired += minBitsPerChar - 1;\n        charsRequired = (charsRequired / minBitsPerChar) | 0;\n        const secondHalfChars = (charsRequired + 1) >> 1;\n        // Divide-and-conquer: split by a power of {radix} that's approximately\n        // the square root of {x}, then recurse.\n        const conqueror = JSBI.exponentiate(JSBI.__oneDigit(radix, false), JSBI.__oneDigit(secondHalfChars, false));\n        let quotient;\n        let secondHalf;\n        const divisor = conqueror.__unsignedDigit(0);\n        if (conqueror.length === 1 && divisor <= 0x7FFF) {\n            quotient = new JSBI(x.length, false);\n            quotient.__initializeDigits();\n            let remainder = 0;\n            for (let i = x.length * 2 - 1; i >= 0; i--) {\n                const input = (remainder << 15) | x.__halfDigit(i);\n                quotient.__setHalfDigit(i, (input / divisor) | 0);\n                remainder = (input % divisor) | 0;\n            }\n            secondHalf = remainder.toString(radix);\n        }\n        else {\n            const divisionResult = JSBI.__absoluteDivLarge(x, conqueror, true, true);\n            quotient = divisionResult.quotient;\n            const remainder = divisionResult.remainder.__trim();\n            secondHalf = JSBI.__toStringGeneric(remainder, radix, true);\n        }\n        quotient.__trim();\n        let firstHalf = JSBI.__toStringGeneric(quotient, radix, true);\n        while (secondHalf.length < secondHalfChars) {\n            secondHalf = '0' + secondHalf;\n        }\n        if (isRecursiveCall === false && x.sign) {\n            firstHalf = '-' + firstHalf;\n        }\n        return firstHalf + secondHalf;\n    }\n    static __unequalSign(leftNegative) {\n        return leftNegative ? -1 : 1;\n    }\n    static __absoluteGreater(bothNegative) {\n        return bothNegative ? -1 : 1;\n    }\n    static __absoluteLess(bothNegative) {\n        return bothNegative ? 1 : -1;\n    }\n    static __compareToBigInt(x, y) {\n        const xSign = x.sign;\n        if (xSign !== y.sign)\n            return JSBI.__unequalSign(xSign);\n        const result = JSBI.__absoluteCompare(x, y);\n        if (result > 0)\n            return JSBI.__absoluteGreater(xSign);\n        if (result < 0)\n            return JSBI.__absoluteLess(xSign);\n        return 0;\n    }\n    static __compareToNumber(x, y) {\n        if (JSBI.__isOneDigitInt(y)) {\n            const xSign = x.sign;\n            const ySign = (y < 0);\n            if (xSign !== ySign)\n                return JSBI.__unequalSign(xSign);\n            if (x.length === 0) {\n                if (ySign)\n                    throw new Error('implementation bug');\n                return y === 0 ? 0 : -1;\n            }\n            // Any multi-digit BigInt is bigger than an int32.\n            if (x.length > 1)\n                return JSBI.__absoluteGreater(xSign);\n            const yAbs = Math.abs(y);\n            const xDigit = x.__unsignedDigit(0);\n            if (xDigit > yAbs)\n                return JSBI.__absoluteGreater(xSign);\n            if (xDigit < yAbs)\n                return JSBI.__absoluteLess(xSign);\n            return 0;\n        }\n        return JSBI.__compareToDouble(x, y);\n    }\n    static __compareToDouble(x, y) {\n        if (y !== y)\n            return y; // NaN.\n        if (y === Infinity)\n            return -1;\n        if (y === -Infinity)\n            return 1;\n        const xSign = x.sign;\n        const ySign = (y < 0);\n        if (xSign !== ySign)\n            return JSBI.__unequalSign(xSign);\n        if (y === 0) {\n            throw new Error('implementation bug: should be handled elsewhere');\n        }\n        if (x.length === 0)\n            return -1;\n        JSBI.__kBitConversionDouble[0] = y;\n        const rawExponent = (JSBI.__kBitConversionInts[1] >>> 20) & 0x7FF;\n        if (rawExponent === 0x7FF) {\n            throw new Error('implementation bug: handled elsewhere');\n        }\n        const exponent = rawExponent - 0x3FF;\n        if (exponent < 0) {\n            // The absolute value of y is less than 1. Only 0n has an absolute\n            // value smaller than that, but we've already covered that case.\n            return JSBI.__absoluteGreater(xSign);\n        }\n        const xLength = x.length;\n        let xMsd = x.__digit(xLength - 1);\n        const msdLeadingZeros = JSBI.__clz30(xMsd);\n        const xBitLength = xLength * 30 - msdLeadingZeros;\n        const yBitLength = exponent + 1;\n        if (xBitLength < yBitLength)\n            return JSBI.__absoluteLess(xSign);\n        if (xBitLength > yBitLength)\n            return JSBI.__absoluteGreater(xSign);\n        // Same sign, same bit length. Shift mantissa to align with x and compare\n        // bit for bit.\n        const kHiddenBit = 0x00100000;\n        let mantissaHigh = (JSBI.__kBitConversionInts[1] & 0xFFFFF) | kHiddenBit;\n        let mantissaLow = JSBI.__kBitConversionInts[0];\n        const kMantissaHighTopBit = 20;\n        const msdTopBit = 29 - msdLeadingZeros;\n        if (msdTopBit !== (((xBitLength - 1) % 30) | 0)) {\n            throw new Error('implementation bug');\n        }\n        let compareMantissa; // Shifted chunk of mantissa.\n        let remainingMantissaBits = 0;\n        // First, compare most significant digit against beginning of mantissa.\n        if (msdTopBit < kMantissaHighTopBit) {\n            const shift = kMantissaHighTopBit - msdTopBit;\n            remainingMantissaBits = shift + 32;\n            compareMantissa = mantissaHigh >>> shift;\n            mantissaHigh = (mantissaHigh << (32 - shift)) | (mantissaLow >>> shift);\n            mantissaLow = mantissaLow << (32 - shift);\n        }\n        else if (msdTopBit === kMantissaHighTopBit) {\n            remainingMantissaBits = 32;\n            compareMantissa = mantissaHigh;\n            mantissaHigh = mantissaLow;\n            mantissaLow = 0;\n        }\n        else {\n            const shift = msdTopBit - kMantissaHighTopBit;\n            remainingMantissaBits = 32 - shift;\n            compareMantissa =\n                (mantissaHigh << shift) | (mantissaLow >>> (32 - shift));\n            mantissaHigh = mantissaLow << shift;\n            mantissaLow = 0;\n        }\n        xMsd = xMsd >>> 0;\n        compareMantissa = compareMantissa >>> 0;\n        if (xMsd > compareMantissa)\n            return JSBI.__absoluteGreater(xSign);\n        if (xMsd < compareMantissa)\n            return JSBI.__absoluteLess(xSign);\n        // Then, compare additional digits against remaining mantissa bits.\n        for (let digitIndex = xLength - 2; digitIndex >= 0; digitIndex--) {\n            if (remainingMantissaBits > 0) {\n                remainingMantissaBits -= 30;\n                compareMantissa = mantissaHigh >>> 2;\n                mantissaHigh = (mantissaHigh << 30) | (mantissaLow >>> 2);\n                mantissaLow = (mantissaLow << 30);\n            }\n            else {\n                compareMantissa = 0;\n            }\n            const digit = x.__unsignedDigit(digitIndex);\n            if (digit > compareMantissa)\n                return JSBI.__absoluteGreater(xSign);\n            if (digit < compareMantissa)\n                return JSBI.__absoluteLess(xSign);\n        }\n        // Integer parts are equal; check whether {y} has a fractional part.\n        if (mantissaHigh !== 0 || mantissaLow !== 0) {\n            if (remainingMantissaBits === 0)\n                throw new Error('implementation bug');\n            return JSBI.__absoluteLess(xSign);\n        }\n        return 0;\n    }\n    static __equalToNumber(x, y) {\n        if (JSBI.__isOneDigitInt(y)) {\n            if (y === 0)\n                return x.length === 0;\n            // Any multi-digit BigInt is bigger than an int32.\n            return (x.length === 1) && (x.sign === (y < 0)) &&\n                (x.__unsignedDigit(0) === Math.abs(y));\n        }\n        return JSBI.__compareToDouble(x, y) === 0;\n    }\n    // Comparison operations, chosen such that \"op ^ 2\" reverses direction:\n    // 0 - lessThan\n    // 1 - lessThanOrEqual\n    // 2 - greaterThan\n    // 3 - greaterThanOrEqual\n    static __comparisonResultToBool(result, op) {\n        switch (op) {\n            case 0: return result < 0;\n            case 1: return result <= 0;\n            case 2: return result > 0;\n            case 3: return result >= 0;\n        }\n    }\n    static __compare(x, y, op) {\n        x = JSBI.__toPrimitive(x);\n        y = JSBI.__toPrimitive(y);\n        if (typeof x === 'string' && typeof y === 'string') {\n            switch (op) {\n                case 0: return x < y;\n                case 1: return x <= y;\n                case 2: return x > y;\n                case 3: return x >= y;\n            }\n        }\n        if (JSBI.__isBigInt(x) && typeof y === 'string') {\n            y = JSBI.__fromString(y);\n            if (y === null)\n                return false;\n            return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);\n        }\n        if (typeof x === 'string' && JSBI.__isBigInt(y)) {\n            x = JSBI.__fromString(x);\n            if (x === null)\n                return false;\n            return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);\n        }\n        x = JSBI.__toNumeric(x);\n        y = JSBI.__toNumeric(y);\n        if (JSBI.__isBigInt(x)) {\n            if (JSBI.__isBigInt(y)) {\n                return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);\n            }\n            if (typeof y !== 'number')\n                throw new Error('implementation bug');\n            return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(x, y), op);\n        }\n        if (typeof x !== 'number')\n            throw new Error('implementation bug');\n        if (JSBI.__isBigInt(y)) {\n            // Note that \"op ^ 2\" reverses the op's direction.\n            return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(y, x), (op ^ 2));\n        }\n        if (typeof y !== 'number')\n            throw new Error('implementation bug');\n        switch (op) {\n            case 0: return x < y;\n            case 1: return x <= y;\n            case 2: return x > y;\n            case 3: return x >= y;\n        }\n    }\n    __clzmsd() {\n        return JSBI.__clz30(this.__digit(this.length - 1));\n    }\n    static __absoluteAdd(x, y, resultSign) {\n        if (x.length < y.length)\n            return JSBI.__absoluteAdd(y, x, resultSign);\n        if (x.length === 0)\n            return x;\n        if (y.length === 0)\n            return x.sign === resultSign ? x : JSBI.unaryMinus(x);\n        let resultLength = x.length;\n        if (x.__clzmsd() === 0 || (y.length === x.length && y.__clzmsd() === 0)) {\n            resultLength++;\n        }\n        const result = new JSBI(resultLength, resultSign);\n        let carry = 0;\n        let i = 0;\n        for (; i < y.length; i++) {\n            const r = x.__digit(i) + y.__digit(i) + carry;\n            carry = r >>> 30;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        for (; i < x.length; i++) {\n            const r = x.__digit(i) + carry;\n            carry = r >>> 30;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        if (i < result.length) {\n            result.__setDigit(i, carry);\n        }\n        return result.__trim();\n    }\n    static __absoluteSub(x, y, resultSign) {\n        if (x.length === 0)\n            return x;\n        if (y.length === 0)\n            return x.sign === resultSign ? x : JSBI.unaryMinus(x);\n        const result = new JSBI(x.length, resultSign);\n        let borrow = 0;\n        let i = 0;\n        for (; i < y.length; i++) {\n            const r = x.__digit(i) - y.__digit(i) - borrow;\n            borrow = (r >>> 30) & 1;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        for (; i < x.length; i++) {\n            const r = x.__digit(i) - borrow;\n            borrow = (r >>> 30) & 1;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        return result.__trim();\n    }\n    static __absoluteAddOne(x, sign, result = null) {\n        const inputLength = x.length;\n        if (result === null) {\n            result = new JSBI(inputLength, sign);\n        }\n        else {\n            result.sign = sign;\n        }\n        let carry = 1;\n        for (let i = 0; i < inputLength; i++) {\n            const r = x.__digit(i) + carry;\n            carry = r >>> 30;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        if (carry !== 0) {\n            result.__setDigitGrow(inputLength, 1);\n        }\n        return result;\n    }\n    static __absoluteSubOne(x, resultLength) {\n        const length = x.length;\n        resultLength = resultLength || length;\n        const result = new JSBI(resultLength, false);\n        let borrow = 1;\n        for (let i = 0; i < length; i++) {\n            const r = x.__digit(i) - borrow;\n            borrow = (r >>> 30) & 1;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        if (borrow !== 0)\n            throw new Error('implementation bug');\n        for (let i = length; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteAnd(x, y, result = null) {\n        let xLength = x.length;\n        let yLength = y.length;\n        let numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n            const tmp = x;\n            const tmpLength = xLength;\n            x = y;\n            xLength = yLength;\n            y = tmp;\n            yLength = tmpLength;\n        }\n        let resultLength = numPairs;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        let i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) & y.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteAndNot(x, y, result = null) {\n        const xLength = x.length;\n        const yLength = y.length;\n        let numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n        }\n        let resultLength = xLength;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        let i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) & ~y.__digit(i));\n        }\n        for (; i < xLength; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteOr(x, y, result = null) {\n        let xLength = x.length;\n        let yLength = y.length;\n        let numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n            const tmp = x;\n            const tmpLength = xLength;\n            x = y;\n            xLength = yLength;\n            y = tmp;\n            yLength = tmpLength;\n        }\n        let resultLength = xLength;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        let i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) | y.__digit(i));\n        }\n        for (; i < xLength; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteXor(x, y, result = null) {\n        let xLength = x.length;\n        let yLength = y.length;\n        let numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n            const tmp = x;\n            const tmpLength = xLength;\n            x = y;\n            xLength = yLength;\n            y = tmp;\n            yLength = tmpLength;\n        }\n        let resultLength = xLength;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        let i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) ^ y.__digit(i));\n        }\n        for (; i < xLength; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteCompare(x, y) {\n        const diff = x.length - y.length;\n        if (diff !== 0)\n            return diff;\n        let i = x.length - 1;\n        while (i >= 0 && x.__digit(i) === y.__digit(i))\n            i--;\n        if (i < 0)\n            return 0;\n        return x.__unsignedDigit(i) > y.__unsignedDigit(i) ? 1 : -1;\n    }\n    static __multiplyAccumulate(multiplicand, multiplier, accumulator, accumulatorIndex) {\n        if (multiplier === 0)\n            return;\n        const m2Low = multiplier & 0x7FFF;\n        const m2High = multiplier >>> 15;\n        let carry = 0;\n        let high = 0;\n        for (let i = 0; i < multiplicand.length; i++, accumulatorIndex++) {\n            let acc = accumulator.__digit(accumulatorIndex);\n            const m1 = multiplicand.__digit(i);\n            const m1Low = m1 & 0x7FFF;\n            const m1High = m1 >>> 15;\n            const rLow = JSBI.__imul(m1Low, m2Low);\n            const rMid1 = JSBI.__imul(m1Low, m2High);\n            const rMid2 = JSBI.__imul(m1High, m2Low);\n            const rHigh = JSBI.__imul(m1High, m2High);\n            acc += high + rLow + carry;\n            carry = acc >>> 30;\n            acc &= 0x3FFFFFFF;\n            acc += ((rMid1 & 0x7FFF) << 15) + ((rMid2 & 0x7FFF) << 15);\n            carry += acc >>> 30;\n            high = rHigh + (rMid1 >>> 15) + (rMid2 >>> 15);\n            accumulator.__setDigit(accumulatorIndex, acc & 0x3FFFFFFF);\n        }\n        for (; carry !== 0 || high !== 0; accumulatorIndex++) {\n            let acc = accumulator.__digit(accumulatorIndex);\n            acc += carry + high;\n            high = 0;\n            carry = acc >>> 30;\n            accumulator.__setDigit(accumulatorIndex, acc & 0x3FFFFFFF);\n        }\n    }\n    static __internalMultiplyAdd(source, factor, summand, n, result) {\n        let carry = summand;\n        let high = 0;\n        for (let i = 0; i < n; i++) {\n            const digit = source.__digit(i);\n            const rx = JSBI.__imul(digit & 0x7FFF, factor);\n            const ry = JSBI.__imul(digit >>> 15, factor);\n            const r = rx + ((ry & 0x7FFF) << 15) + high + carry;\n            carry = r >>> 30;\n            high = ry >>> 15;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        if (result.length > n) {\n            result.__setDigit(n++, carry + high);\n            while (n < result.length) {\n                result.__setDigit(n++, 0);\n            }\n        }\n        else {\n            if (carry + high !== 0)\n                throw new Error('implementation bug');\n        }\n    }\n    __inplaceMultiplyAdd(multiplier, summand, length) {\n        if (length > this.length)\n            length = this.length;\n        const mLow = multiplier & 0x7FFF;\n        const mHigh = multiplier >>> 15;\n        let carry = 0;\n        let high = summand;\n        for (let i = 0; i < length; i++) {\n            const d = this.__digit(i);\n            const dLow = d & 0x7FFF;\n            const dHigh = d >>> 15;\n            const pLow = JSBI.__imul(dLow, mLow);\n            const pMid1 = JSBI.__imul(dLow, mHigh);\n            const pMid2 = JSBI.__imul(dHigh, mLow);\n            const pHigh = JSBI.__imul(dHigh, mHigh);\n            let result = high + pLow + carry;\n            carry = result >>> 30;\n            result &= 0x3FFFFFFF;\n            result += ((pMid1 & 0x7FFF) << 15) + ((pMid2 & 0x7FFF) << 15);\n            carry += result >>> 30;\n            high = pHigh + (pMid1 >>> 15) + (pMid2 >>> 15);\n            this.__setDigit(i, result & 0x3FFFFFFF);\n        }\n        if (carry !== 0 || high !== 0) {\n            throw new Error('implementation bug');\n        }\n    }\n    static __absoluteDivSmall(x, divisor, quotient = null) {\n        if (quotient === null)\n            quotient = new JSBI(x.length, false);\n        let remainder = 0;\n        for (let i = x.length * 2 - 1; i >= 0; i -= 2) {\n            let input = ((remainder << 15) | x.__halfDigit(i)) >>> 0;\n            const upperHalf = (input / divisor) | 0;\n            remainder = (input % divisor) | 0;\n            input = ((remainder << 15) | x.__halfDigit(i - 1)) >>> 0;\n            const lowerHalf = (input / divisor) | 0;\n            remainder = (input % divisor) | 0;\n            quotient.__setDigit(i >>> 1, (upperHalf << 15) | lowerHalf);\n        }\n        return quotient;\n    }\n    static __absoluteModSmall(x, divisor) {\n        let remainder = 0;\n        for (let i = x.length * 2 - 1; i >= 0; i--) {\n            const input = ((remainder << 15) | x.__halfDigit(i)) >>> 0;\n            remainder = (input % divisor) | 0;\n        }\n        return remainder;\n    }\n    static __absoluteDivLarge(dividend, divisor, wantQuotient, wantRemainder) {\n        const n = divisor.__halfDigitLength();\n        const n2 = divisor.length;\n        const m = dividend.__halfDigitLength() - n;\n        let q = null;\n        if (wantQuotient) {\n            q = new JSBI((m + 2) >>> 1, false);\n            q.__initializeDigits();\n        }\n        const qhatv = new JSBI((n + 2) >>> 1, false);\n        qhatv.__initializeDigits();\n        // D1.\n        const shift = JSBI.__clz15(divisor.__halfDigit(n - 1));\n        if (shift > 0) {\n            divisor = JSBI.__specialLeftShift(divisor, shift, 0 /* add no digits*/);\n        }\n        const u = JSBI.__specialLeftShift(dividend, shift, 1 /* add one digit */);\n        // D2.\n        const vn1 = divisor.__halfDigit(n - 1);\n        let halfDigitBuffer = 0;\n        for (let j = m; j >= 0; j--) {\n            // D3.\n            let qhat = 0x7FFF;\n            const ujn = u.__halfDigit(j + n);\n            if (ujn !== vn1) {\n                const input = ((ujn << 15) | u.__halfDigit(j + n - 1)) >>> 0;\n                qhat = (input / vn1) | 0;\n                let rhat = (input % vn1) | 0;\n                const vn2 = divisor.__halfDigit(n - 2);\n                const ujn2 = u.__halfDigit(j + n - 2);\n                while ((JSBI.__imul(qhat, vn2) >>> 0) > (((rhat << 16) | ujn2) >>> 0)) {\n                    qhat--;\n                    rhat += vn1;\n                    if (rhat > 0x7FFF)\n                        break;\n                }\n            }\n            // D4.\n            JSBI.__internalMultiplyAdd(divisor, qhat, 0, n2, qhatv);\n            let c = u.__inplaceSub(qhatv, j, n + 1);\n            if (c !== 0) {\n                c = u.__inplaceAdd(divisor, j, n);\n                u.__setHalfDigit(j + n, (u.__halfDigit(j + n) + c) & 0x7FFF);\n                qhat--;\n            }\n            if (wantQuotient) {\n                if (j & 1) {\n                    halfDigitBuffer = qhat << 15;\n                }\n                else {\n                    // TODO make this statically determinable\n                    q.__setDigit(j >>> 1, halfDigitBuffer | qhat);\n                }\n            }\n        }\n        if (wantRemainder) {\n            u.__inplaceRightShift(shift);\n            if (wantQuotient) {\n                return { quotient: q, remainder: u };\n            }\n            return u;\n        }\n        if (wantQuotient)\n            return q;\n        // TODO find a way to make this statically unreachable?\n        throw new Error('unreachable');\n    }\n    static __clz15(value) {\n        return JSBI.__clz30(value) - 15;\n    }\n    // TODO: work on full digits, like __inplaceSub?\n    __inplaceAdd(summand, startIndex, halfDigits) {\n        let carry = 0;\n        for (let i = 0; i < halfDigits; i++) {\n            const sum = this.__halfDigit(startIndex + i) +\n                summand.__halfDigit(i) +\n                carry;\n            carry = sum >>> 15;\n            this.__setHalfDigit(startIndex + i, sum & 0x7FFF);\n        }\n        return carry;\n    }\n    __inplaceSub(subtrahend, startIndex, halfDigits) {\n        const fullSteps = (halfDigits - 1) >>> 1;\n        let borrow = 0;\n        if (startIndex & 1) {\n            // this:   [..][..][..]\n            // subtr.:   [..][..]\n            startIndex >>= 1;\n            let current = this.__digit(startIndex);\n            let r0 = current & 0x7FFF;\n            let i = 0;\n            for (; i < fullSteps; i++) {\n                const sub = subtrahend.__digit(i);\n                const r15 = (current >>> 15) - (sub & 0x7FFF) - borrow;\n                borrow = (r15 >>> 15) & 1;\n                this.__setDigit(startIndex + i, ((r15 & 0x7FFF) << 15) | (r0 & 0x7FFF));\n                current = this.__digit(startIndex + i + 1);\n                r0 = (current & 0x7FFF) - (sub >>> 15) - borrow;\n                borrow = (r0 >>> 15) & 1;\n            }\n            // Unrolling the last iteration gives a 5% performance benefit!\n            const sub = subtrahend.__digit(i);\n            const r15 = (current >>> 15) - (sub & 0x7FFF) - borrow;\n            borrow = (r15 >>> 15) & 1;\n            this.__setDigit(startIndex + i, ((r15 & 0x7FFF) << 15) | (r0 & 0x7FFF));\n            const subTop = sub >>> 15;\n            if (startIndex + i + 1 >= this.length) {\n                throw new RangeError('out of bounds');\n            }\n            if ((halfDigits & 1) === 0) {\n                current = this.__digit(startIndex + i + 1);\n                r0 = (current & 0x7FFF) - subTop - borrow;\n                borrow = (r0 >>> 15) & 1;\n                this.__setDigit(startIndex + subtrahend.length, (current & 0x3FFF8000) | (r0 & 0x7FFF));\n            }\n        }\n        else {\n            startIndex >>= 1;\n            let i = 0;\n            for (; i < subtrahend.length - 1; i++) {\n                const current = this.__digit(startIndex + i);\n                const sub = subtrahend.__digit(i);\n                const r0 = (current & 0x7FFF) - (sub & 0x7FFF) - borrow;\n                borrow = (r0 >>> 15) & 1;\n                const r15 = (current >>> 15) - (sub >>> 15) - borrow;\n                borrow = (r15 >>> 15) & 1;\n                this.__setDigit(startIndex + i, ((r15 & 0x7FFF) << 15) | (r0 & 0x7FFF));\n            }\n            const current = this.__digit(startIndex + i);\n            const sub = subtrahend.__digit(i);\n            const r0 = (current & 0x7FFF) - (sub & 0x7FFF) - borrow;\n            borrow = (r0 >>> 15) & 1;\n            let r15 = 0;\n            if ((halfDigits & 1) === 0) {\n                r15 = (current >>> 15) - (sub >>> 15) - borrow;\n                borrow = (r15 >>> 15) & 1;\n            }\n            this.__setDigit(startIndex + i, ((r15 & 0x7FFF) << 15) | (r0 & 0x7FFF));\n        }\n        return borrow;\n    }\n    __inplaceRightShift(shift) {\n        if (shift === 0)\n            return;\n        let carry = this.__digit(0) >>> shift;\n        const last = this.length - 1;\n        for (let i = 0; i < last; i++) {\n            const d = this.__digit(i + 1);\n            this.__setDigit(i, ((d << (30 - shift)) & 0x3FFFFFFF) | carry);\n            carry = d >>> shift;\n        }\n        this.__setDigit(last, carry);\n    }\n    static __specialLeftShift(x, shift, addDigit) {\n        const n = x.length;\n        const resultLength = n + addDigit;\n        const result = new JSBI(resultLength, false);\n        if (shift === 0) {\n            for (let i = 0; i < n; i++)\n                result.__setDigit(i, x.__digit(i));\n            if (addDigit > 0)\n                result.__setDigit(n, 0);\n            return result;\n        }\n        let carry = 0;\n        for (let i = 0; i < n; i++) {\n            const d = x.__digit(i);\n            result.__setDigit(i, ((d << shift) & 0x3FFFFFFF) | carry);\n            carry = d >>> (30 - shift);\n        }\n        if (addDigit > 0) {\n            result.__setDigit(n, carry);\n        }\n        return result;\n    }\n    static __leftShiftByAbsolute(x, y) {\n        const shift = JSBI.__toShiftAmount(y);\n        if (shift < 0)\n            throw new RangeError('BigInt too big');\n        const digitShift = (shift / 30) | 0;\n        const bitsShift = shift % 30;\n        const length = x.length;\n        const grow = bitsShift !== 0 &&\n            (x.__digit(length - 1) >>> (30 - bitsShift)) !== 0;\n        const resultLength = length + digitShift + (grow ? 1 : 0);\n        const result = new JSBI(resultLength, x.sign);\n        if (bitsShift === 0) {\n            let i = 0;\n            for (; i < digitShift; i++)\n                result.__setDigit(i, 0);\n            for (; i < resultLength; i++) {\n                result.__setDigit(i, x.__digit(i - digitShift));\n            }\n        }\n        else {\n            let carry = 0;\n            for (let i = 0; i < digitShift; i++)\n                result.__setDigit(i, 0);\n            for (let i = 0; i < length; i++) {\n                const d = x.__digit(i);\n                result.__setDigit(i + digitShift, ((d << bitsShift) & 0x3FFFFFFF) | carry);\n                carry = d >>> (30 - bitsShift);\n            }\n            if (grow) {\n                result.__setDigit(length + digitShift, carry);\n            }\n            else {\n                if (carry !== 0)\n                    throw new Error('implementation bug');\n            }\n        }\n        return result.__trim();\n    }\n    static __rightShiftByAbsolute(x, y) {\n        const length = x.length;\n        const sign = x.sign;\n        const shift = JSBI.__toShiftAmount(y);\n        if (shift < 0)\n            return JSBI.__rightShiftByMaximum(sign);\n        const digitShift = (shift / 30) | 0;\n        const bitsShift = shift % 30;\n        let resultLength = length - digitShift;\n        if (resultLength <= 0)\n            return JSBI.__rightShiftByMaximum(sign);\n        // For negative numbers, round down if any bit was shifted out (so that\n        // e.g. -5n >> 1n == -3n and not -2n). Check now whether this will happen\n        // and whether itc an cause overflow into a new digit. If we allocate the\n        // result large enough up front, it avoids having to do grow it later.\n        let mustRoundDown = false;\n        if (sign) {\n            const mask = (1 << bitsShift) - 1;\n            if ((x.__digit(digitShift) & mask) !== 0) {\n                mustRoundDown = true;\n            }\n            else {\n                for (let i = 0; i < digitShift; i++) {\n                    if (x.__digit(i) !== 0) {\n                        mustRoundDown = true;\n                        break;\n                    }\n                }\n            }\n        }\n        // If bitsShift is non-zero, it frees up bits, preventing overflow.\n        if (mustRoundDown && bitsShift === 0) {\n            // Overflow cannot happen if the most significant digit has unset bits.\n            const msd = x.__digit(length - 1);\n            const roundingCanOverflow = ~msd === 0;\n            if (roundingCanOverflow)\n                resultLength++;\n        }\n        let result = new JSBI(resultLength, sign);\n        if (bitsShift === 0) {\n            // Zero out any overflow digit (see \"roundingCanOverflow\" above).\n            result.__setDigit(resultLength - 1, 0);\n            for (let i = digitShift; i < length; i++) {\n                result.__setDigit(i - digitShift, x.__digit(i));\n            }\n        }\n        else {\n            let carry = x.__digit(digitShift) >>> bitsShift;\n            const last = length - digitShift - 1;\n            for (let i = 0; i < last; i++) {\n                const d = x.__digit(i + digitShift + 1);\n                result.__setDigit(i, ((d << (30 - bitsShift)) & 0x3FFFFFFF) | carry);\n                carry = d >>> bitsShift;\n            }\n            result.__setDigit(last, carry);\n        }\n        if (mustRoundDown) {\n            // Since the result is negative, rounding down means adding one to its\n            // absolute value. This cannot overflow.\n            result = JSBI.__absoluteAddOne(result, true, result);\n        }\n        return result.__trim();\n    }\n    static __rightShiftByMaximum(sign) {\n        if (sign) {\n            return JSBI.__oneDigit(1, true);\n        }\n        return JSBI.__zero();\n    }\n    static __toShiftAmount(x) {\n        if (x.length > 1)\n            return -1;\n        const value = x.__unsignedDigit(0);\n        if (value > JSBI.__kMaxLengthBits)\n            return -1;\n        return value;\n    }\n    static __toPrimitive(obj, hint = 'default') {\n        if (typeof obj !== 'object')\n            return obj;\n        if (obj.constructor === JSBI)\n            return obj;\n        if (typeof Symbol !== 'undefined' &&\n            typeof Symbol.toPrimitive === 'symbol') {\n            const exoticToPrim = obj[Symbol.toPrimitive];\n            if (exoticToPrim) {\n                const primitive = exoticToPrim(hint);\n                if (typeof primitive !== 'object')\n                    return primitive;\n                throw new TypeError('Cannot convert object to primitive value');\n            }\n        }\n        const valueOf = obj.valueOf;\n        if (valueOf) {\n            const primitive = valueOf.call(obj);\n            if (typeof primitive !== 'object')\n                return primitive;\n        }\n        const toString = obj.toString;\n        if (toString) {\n            const primitive = toString.call(obj);\n            if (typeof primitive !== 'object')\n                return primitive;\n        }\n        throw new TypeError('Cannot convert object to primitive value');\n    }\n    static __toNumeric(value) {\n        if (JSBI.__isBigInt(value))\n            return value;\n        return +value;\n    }\n    static __isBigInt(value) {\n        return typeof value === 'object' && value !== null &&\n            value.constructor === JSBI;\n    }\n    static __truncateToNBits(n, x) {\n        const neededDigits = ((n + 29) / 30) | 0;\n        const result = new JSBI(neededDigits, x.sign);\n        const last = neededDigits - 1;\n        for (let i = 0; i < last; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        let msd = x.__digit(last);\n        if ((n % 30) !== 0) {\n            const drop = 32 - (n % 30);\n            msd = (msd << drop) >>> drop;\n        }\n        result.__setDigit(last, msd);\n        return result.__trim();\n    }\n    static __truncateAndSubFromPowerOfTwo(n, x, resultSign) {\n        const neededDigits = ((n + 29) / 30) | 0;\n        const result = new JSBI(neededDigits, resultSign);\n        let i = 0;\n        const last = neededDigits - 1;\n        let borrow = 0;\n        const limit = Math.min(last, x.length);\n        for (; i < limit; i++) {\n            const r = 0 - x.__digit(i) - borrow;\n            borrow = (r >>> 30) & 1;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        for (; i < last; i++) {\n            result.__setDigit(i, (-borrow & 0x3FFFFFFF) | 0);\n        }\n        let msd = last < x.length ? x.__digit(last) : 0;\n        const msdBitsConsumed = n % 30;\n        let resultMsd;\n        if (msdBitsConsumed === 0) {\n            resultMsd = 0 - msd - borrow;\n            resultMsd &= 0x3FFFFFFF;\n        }\n        else {\n            const drop = 32 - msdBitsConsumed;\n            msd = (msd << drop) >>> drop;\n            const minuendMsd = 1 << (32 - drop);\n            resultMsd = minuendMsd - msd - borrow;\n            resultMsd &= (minuendMsd - 1);\n        }\n        result.__setDigit(last, resultMsd);\n        return result.__trim();\n    }\n    // Digit helpers.\n    __digit(i) {\n        return this[i];\n    }\n    __unsignedDigit(i) {\n        return this[i] >>> 0;\n    }\n    __setDigit(i, digit) {\n        this[i] = digit | 0;\n    }\n    __setDigitGrow(i, digit) {\n        this[i] = digit | 0;\n    }\n    __halfDigitLength() {\n        const len = this.length;\n        if (this.__unsignedDigit(len - 1) <= 0x7FFF)\n            return len * 2 - 1;\n        return len * 2;\n    }\n    __halfDigit(i) {\n        return (this[i >>> 1] >>> ((i & 1) * 15)) & 0x7FFF;\n    }\n    __setHalfDigit(i, value) {\n        const digitIndex = i >>> 1;\n        const previous = this.__digit(digitIndex);\n        const updated = (i & 1) ? (previous & 0x7FFF) | (value << 15)\n            : (previous & 0x3FFF8000) | (value & 0x7FFF);\n        this.__setDigit(digitIndex, updated);\n    }\n    static __digitPow(base, exponent) {\n        let result = 1;\n        while (exponent > 0) {\n            if (exponent & 1)\n                result *= base;\n            exponent >>>= 1;\n            base *= base;\n        }\n        return result;\n    }\n    static __isOneDigitInt(x) {\n        return (x & 0x3FFFFFFF) === x;\n    }\n}\nJSBI.__kMaxLength = 1 << 25;\nJSBI.__kMaxLengthBits = JSBI.__kMaxLength << 5;\n// Lookup table for the maximum number of bits required per character of a\n// base-N string representation of a number. To increase accuracy, the array\n// value is the actual value multiplied by 32. To generate this table:\n//\n// for (let i = 0; i <= 36; i++) {\n//   console.log(Math.ceil(Math.log2(i) * 32) + ',');\n// }\nJSBI.__kMaxBitsPerChar = [\n    0, 0, 32, 51, 64, 75, 83, 90, 96,\n    102, 107, 111, 115, 119, 122, 126, 128,\n    131, 134, 136, 139, 141, 143, 145, 147,\n    149, 151, 153, 154, 156, 158, 159, 160,\n    162, 163, 165, 166, // 33..36\n];\nJSBI.__kBitsPerCharTableShift = 5;\nJSBI.__kBitsPerCharTableMultiplier = 1 << JSBI.__kBitsPerCharTableShift;\nJSBI.__kConversionChars = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');\nJSBI.__kBitConversionBuffer = new ArrayBuffer(8);\nJSBI.__kBitConversionDouble = new Float64Array(JSBI.__kBitConversionBuffer);\nJSBI.__kBitConversionInts = new Int32Array(JSBI.__kBitConversionBuffer);\n// For IE11 compatibility.\n// Note that the custom replacements are tailored for JSBI's needs, and as\n// such are not reusable as general-purpose polyfills.\nJSBI.__clz30 = Math.clz32 ? function (x) {\n    return Math.clz32(x) - 2;\n} : function (x) {\n    if (x === 0)\n        return 30;\n    return 29 - (Math.log(x >>> 0) / Math.LN2 | 0) | 0;\n};\nJSBI.__imul = Math.imul || function (a, b) {\n    return (a * b) | 0;\n};\nexport default JSBI;\n//# sourceMappingURL=jsbi.js.map","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsAstral = '[' + rsAstralRange + ']',\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = camelCase;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    result[key] = iteratee(value, key, object);\n  });\n  return result;\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = mapValues;\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v8.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    hasSymbol = typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol',\r\n\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (hasSymbol) {\r\n      P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n      // Node.js v10.12.0+\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n    }\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nmodule.exports = {\n    languageTag: \"en-US\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    spaceSeparated: false,\n    ordinal: function(number) {\n        let b = number % 10;\n        return (~~(number % 100 / 10) === 1) ? \"th\" : (b === 1) ? \"st\" : (b === 2) ? \"nd\" : (b === 3) ? \"rd\" : \"th\";\n    },\n    bytes: {\n        binarySuffixes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"],\n        decimalSuffixes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n    },\n    currency: {\n        symbol: \"$\",\n        position: \"prefix\",\n        code: \"USD\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            mantissa: 2\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            thousandSeparated: true,\n            mantissa: 2\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst globalState = require(\"./globalState\");\nconst validating = require(\"./validating\");\nconst parsing = require(\"./parsing\");\nconst BigNumber = require(\"bignumber.js\");\n\nconst powers = {\n    trillion: Math.pow(10, 12),\n    billion: Math.pow(10, 9),\n    million: Math.pow(10, 6),\n    thousand: Math.pow(10, 3)\n};\n\nconst defaultOptions = {\n    totalLength: 0,\n    characteristic: 0,\n    forceAverage: false,\n    average: false,\n    mantissa: -1,\n    optionalMantissa: true,\n    thousandSeparated: false,\n    spaceSeparated: false,\n    negative: \"sign\",\n    forceSign: false,\n    roundingFunction: Math.round,\n    spaceSeparatedAbbreviation: false\n};\n\nconst { binarySuffixes, decimalSuffixes } = globalState.currentBytes();\n\nconst bytes = {\n    general: { scale: 1024, suffixes: decimalSuffixes, marker: \"bd\" },\n    binary: { scale: 1024, suffixes: binarySuffixes, marker: \"b\" },\n    decimal: { scale: 1000, suffixes: decimalSuffixes, marker: \"d\" }\n};\n\n/**\n * Entry point. Format the provided INSTANCE according to the PROVIDEDFORMAT.\n * This method ensure the prefix and postfix are added as the last step.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {NumbroFormat|string} [providedFormat] - specification for formatting\n * @param numbro - the numbro singleton\n * @return {string}\n */\nfunction format(instance, providedFormat = {}, numbro) {\n    if (typeof providedFormat === \"string\") {\n        providedFormat = parsing.parseFormat(providedFormat);\n    }\n\n    let valid = validating.validateFormat(providedFormat);\n\n    if (!valid) {\n        return \"ERROR: invalid format\";\n    }\n\n    let prefix = providedFormat.prefix || \"\";\n    let postfix = providedFormat.postfix || \"\";\n\n    let output = formatNumbro(instance, providedFormat, numbro);\n    output = insertPrefix(output, prefix);\n    output = insertPostfix(output, postfix);\n    return output;\n}\n\n/**\n * Format the provided INSTANCE according to the PROVIDEDFORMAT.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param numbro - the numbro singleton\n * @return {string}\n */\nfunction formatNumbro(instance, providedFormat, numbro) {\n    switch (providedFormat.output) {\n        case \"currency\": {\n            providedFormat = formatOrDefault(providedFormat, globalState.currentCurrencyDefaultFormat());\n            return formatCurrency(instance, providedFormat, globalState, numbro);\n        }\n        case \"percent\": {\n            providedFormat = formatOrDefault(providedFormat, globalState.currentPercentageDefaultFormat());\n            return formatPercentage(instance, providedFormat, globalState, numbro);\n        }\n        case \"byte\":\n            providedFormat = formatOrDefault(providedFormat, globalState.currentByteDefaultFormat());\n            return formatByte(instance, providedFormat, globalState, numbro);\n        case \"time\":\n            providedFormat = formatOrDefault(providedFormat, globalState.currentTimeDefaultFormat());\n            return formatTime(instance, providedFormat, globalState, numbro);\n        case \"ordinal\":\n            providedFormat = formatOrDefault(providedFormat, globalState.currentOrdinalDefaultFormat());\n            return formatOrdinal(instance, providedFormat, globalState, numbro);\n        case \"number\":\n        default:\n            return formatNumber({\n                instance,\n                providedFormat,\n                numbro\n            });\n    }\n}\n\n/**\n * Get the decimal byte unit (MB) for the provided numbro INSTANCE.\n * We go from one unit to another using the decimal system (1000).\n *\n * @param {Numbro} instance - numbro instance to compute\n * @return {String}\n */\nfunction getDecimalByteUnit(instance) {\n    let data = bytes.decimal;\n    return getFormatByteUnits(instance._value, data.suffixes, data.scale).suffix;\n}\n\n/**\n * Get the binary byte unit (MiB) for the provided numbro INSTANCE.\n * We go from one unit to another using the decimal system (1024).\n *\n * @param {Numbro} instance - numbro instance to compute\n * @return {String}\n */\nfunction getBinaryByteUnit(instance) {\n    let data = bytes.binary;\n    return getFormatByteUnits(instance._value, data.suffixes, data.scale).suffix;\n}\n\n/**\n * Get the decimal byte unit (MB) for the provided numbro INSTANCE.\n * We go from one unit to another using the decimal system (1024).\n *\n * @param {Numbro} instance - numbro instance to compute\n * @return {String}\n */\nfunction getByteUnit(instance) {\n    let data = bytes.general;\n    return getFormatByteUnits(instance._value, data.suffixes, data.scale).suffix;\n}\n\n/**\n * Return the value and the suffix computed in byte.\n * It uses the SUFFIXES and the SCALE provided.\n *\n * @param {number} value - Number to format\n * @param {[String]} suffixes - List of suffixes\n * @param {number} scale - Number in-between two units\n * @return {{value: Number, suffix: String}}\n */\nfunction getFormatByteUnits(value, suffixes, scale) {\n    let suffix = suffixes[0];\n    let abs = Math.abs(value);\n\n    if (abs >= scale) {\n        for (let power = 1; power < suffixes.length; ++power) {\n            let min = Math.pow(scale, power);\n            let max = Math.pow(scale, power + 1);\n\n            if (abs >= min && abs < max) {\n                suffix = suffixes[power];\n                value = value / min;\n                break;\n            }\n        }\n\n        // values greater than or equal to [scale] YB never set the suffix\n        if (suffix === suffixes[0]) {\n            value = value / Math.pow(scale, suffixes.length - 1);\n            suffix = suffixes[suffixes.length - 1];\n        }\n    }\n\n    return { value, suffix };\n}\n\n/**\n * Format the provided INSTANCE as bytes using the PROVIDEDFORMAT, and STATE.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param {globalState} state - shared state of the library\n * @param numbro - the numbro singleton\n * @return {string}\n */\nfunction formatByte(instance, providedFormat, state, numbro) {\n    let base = providedFormat.base || \"binary\";\n    let options = Object.assign({}, defaultOptions, providedFormat);\n\n    const { binarySuffixes: localBinarySuffixes, decimalSuffixes: localDecimalSuffixes } = state.currentBytes();\n\n    const localBytes = {\n        general: { scale: 1024, suffixes: localDecimalSuffixes || decimalSuffixes, marker: \"bd\" },\n        binary: { scale: 1024, suffixes: localBinarySuffixes || binarySuffixes, marker: \"b\" },\n        decimal: { scale: 1000, suffixes: localDecimalSuffixes || decimalSuffixes, marker: \"d\" }\n    };\n    let baseInfo = localBytes[base];\n\n    let { value, suffix } = getFormatByteUnits(instance._value, baseInfo.suffixes, baseInfo.scale);\n\n    let output = formatNumber({\n        instance: numbro(value),\n        providedFormat,\n        state,\n        defaults: state.currentByteDefaultFormat()\n    });\n\n    return `${output}${options.spaceSeparated ? \" \" : \"\"}${suffix}`;\n}\n\n/**\n * Format the provided INSTANCE as an ordinal using the PROVIDEDFORMAT,\n * and the STATE.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param {globalState} state - shared state of the library\n * @return {string}\n */\nfunction formatOrdinal(instance, providedFormat, state) {\n    let ordinalFn = state.currentOrdinal();\n    let options = Object.assign({}, defaultOptions, providedFormat);\n\n    let output = formatNumber({\n        instance,\n        providedFormat,\n        state\n    });\n    let ordinal = ordinalFn(instance._value);\n\n    return `${output}${options.spaceSeparated ? \" \" : \"\"}${ordinal}`;\n}\n\n/**\n * Format the provided INSTANCE as a time HH:MM:SS.\n *\n * @param {Numbro} instance - numbro instance to format\n * @return {string}\n */\nfunction formatTime(instance) {\n    let hours = Math.floor(instance._value / 60 / 60);\n    let minutes = Math.floor((instance._value - (hours * 60 * 60)) / 60);\n    let seconds = Math.round(instance._value - (hours * 60 * 60) - (minutes * 60));\n    return `${hours}:${(minutes < 10) ? \"0\" : \"\"}${minutes}:${(seconds < 10) ? \"0\" : \"\"}${seconds}`;\n}\n\n/**\n * Format the provided INSTANCE as a percentage using the PROVIDEDFORMAT,\n * and the STATE.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param {globalState} state - shared state of the library\n * @param numbro - the numbro singleton\n * @return {string}\n */\nfunction formatPercentage(instance, providedFormat, state, numbro) {\n    let prefixSymbol = providedFormat.prefixSymbol;\n\n    let output = formatNumber({\n        instance: numbro(instance._value * 100),\n        providedFormat,\n        state\n    });\n    let options = Object.assign({}, defaultOptions, providedFormat);\n\n    if (prefixSymbol) {\n        return `%${options.spaceSeparated ? \" \" : \"\"}${output}`;\n    }\n\n    return `${output}${options.spaceSeparated ? \" \" : \"\"}%`;\n}\n\n/**\n * Format the provided INSTANCE as a percentage using the PROVIDEDFORMAT,\n * and the STATE.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param {globalState} state - shared state of the library\n * @return {string}\n */\nfunction formatCurrency(instance, providedFormat, state) {\n    const currentCurrency = state.currentCurrency();\n    let clonedFormat = Object.assign({}, providedFormat);\n    let options = Object.assign({}, defaultOptions, clonedFormat);\n    let decimalSeparator = undefined;\n    let space = \"\";\n    let average = !!options.totalLength || !!options.forceAverage || options.average;\n    let position = clonedFormat.currencyPosition || currentCurrency.position;\n    let symbol = clonedFormat.currencySymbol || currentCurrency.symbol;\n    const spaceSeparatedCurrency = options.spaceSeparatedCurrency !== void 0\n        ? options.spaceSeparatedCurrency : options.spaceSeparated;\n\n    if (clonedFormat.lowPrecision === undefined) {\n        clonedFormat.lowPrecision = false;\n    }\n\n    if (spaceSeparatedCurrency) {\n        space = \" \";\n    }\n\n    if (position === \"infix\") {\n        decimalSeparator = space + symbol + space;\n    }\n\n    let output = formatNumber({\n        instance,\n        providedFormat: clonedFormat,\n        state,\n        decimalSeparator\n    });\n\n    if (position === \"prefix\") {\n        if (instance._value < 0 && options.negative === \"sign\") {\n            output = `-${space}${symbol}${output.slice(1)}`;\n        } else if (instance._value > 0 && options.forceSign) {\n            output = `+${space}${symbol}${output.slice(1)}`;\n        } else {\n            output = symbol + space + output;\n        }\n    }\n\n    if (!position || position === \"postfix\") {\n        space = !options.spaceSeparatedAbbreviation && average ? \"\" : space;\n        output = output + space + symbol;\n    }\n\n    return output;\n}\n\n/**\n * Compute the average value out of VALUE.\n * The other parameters are computation options.\n *\n * @param {number} value - value to compute\n * @param {string} [forceAverage] - forced unit used to compute\n * @param {boolean} [lowPrecision=true] - reduce average precision\n * @param {{}} abbreviations - part of the language specification\n * @param {boolean} spaceSeparated - `true` if a space must be inserted between the value and the abbreviation\n * @param {number} [totalLength] - total length of the output including the characteristic and the mantissa\n * @param {function} roundingFunction - function used to round numbers\n * @return {{value: number, abbreviation: string, mantissaPrecision: number}}\n */\nfunction computeAverage({ value, forceAverage, lowPrecision = true, abbreviations, spaceSeparated = false, totalLength = 0, roundingFunction = Math.round }) {\n    let abbreviation = \"\";\n    let abs = Math.abs(value);\n    let mantissaPrecision = -1;\n\n    if (forceAverage && abbreviations[forceAverage] && powers[forceAverage]) {\n        abbreviation = abbreviations[forceAverage];\n        value = value / powers[forceAverage];\n    } else {\n        if (abs >= powers.trillion || (lowPrecision && roundingFunction(abs / powers.trillion) === 1)) {\n            // trillion\n            abbreviation = abbreviations.trillion;\n            value = value / powers.trillion;\n        } else if (abs < powers.trillion && abs >= powers.billion || (lowPrecision && roundingFunction(abs / powers.billion) === 1)) {\n            // billion\n            abbreviation = abbreviations.billion;\n            value = value / powers.billion;\n        } else if (abs < powers.billion && abs >= powers.million || (lowPrecision && roundingFunction(abs / powers.million) === 1)) {\n            // million\n            abbreviation = abbreviations.million;\n            value = value / powers.million;\n        } else if (abs < powers.million && abs >= powers.thousand || (lowPrecision && roundingFunction(abs / powers.thousand) === 1)) {\n            // thousand\n            abbreviation = abbreviations.thousand;\n            value = value / powers.thousand;\n        }\n    }\n\n    let optionalSpace = spaceSeparated ? \" \" : \"\";\n\n    if (abbreviation) {\n        abbreviation = optionalSpace + abbreviation;\n    }\n\n    if (totalLength) {\n        let isNegative = value < 0;\n        let characteristic = value.toString().split(\".\")[0];\n\n        let characteristicLength = isNegative\n            ? characteristic.length - 1\n            : characteristic.length;\n\n        mantissaPrecision = Math.max(totalLength - characteristicLength, 0);\n    }\n\n    return { value, abbreviation, mantissaPrecision };\n}\n\n/**\n * Compute an exponential form for VALUE, taking into account CHARACTERISTIC\n * if provided.\n * @param {number} value - value to compute\n * @param {number} [characteristicPrecision] - optional characteristic length\n * @return {{value: number, abbreviation: string}}\n */\nfunction computeExponential({ value, characteristicPrecision = 0 }) {\n    let [numberString, exponential] = value.toExponential().split(\"e\");\n    let number = +numberString;\n\n    if (!characteristicPrecision) {\n        return {\n            value: number,\n            abbreviation: `e${exponential}`\n        };\n    }\n\n    let characteristicLength = 1; // see `toExponential`\n\n    if (characteristicLength < characteristicPrecision) {\n        number = number * Math.pow(10, characteristicPrecision - characteristicLength);\n        exponential = +exponential - (characteristicPrecision - characteristicLength);\n        exponential = exponential >= 0 ? `+${exponential}` : exponential;\n    }\n\n    return {\n        value: number,\n        abbreviation: `e${exponential}`\n    };\n}\n\n/**\n * Return a string of NUMBER zero.\n *\n * @param {number} number - Length of the output\n * @return {string}\n */\nfunction zeroes(number) {\n    let result = \"\";\n    for (let i = 0; i < number; i++) {\n        result += \"0\";\n    }\n\n    return result;\n}\n\n/**\n * Return a string representing VALUE with a PRECISION-long mantissa.\n * This method is for large/small numbers only (a.k.a. including a \"e\").\n *\n * @param {number} value - number to precise\n * @param {number} precision - desired length for the mantissa\n * @return {string}\n */\nfunction toFixedLarge(value, precision) {\n    let result = value.toString();\n\n    let [base, exp] = result.split(\"e\");\n\n    let [characteristic, mantissa = \"\"] = base.split(\".\");\n\n    if (+exp > 0) {\n        result = characteristic + mantissa + zeroes(exp - mantissa.length);\n    } else {\n        let prefix = \".\";\n\n        if (+characteristic < 0) {\n            prefix = `-0${prefix}`;\n        } else {\n            prefix = `0${prefix}`;\n        }\n\n        let suffix = (zeroes(-exp - 1) + Math.abs(characteristic) + mantissa).substr(0, precision);\n        if (suffix.length < precision) {\n            suffix += zeroes(precision - suffix.length);\n        }\n        result = prefix + suffix;\n    }\n\n    if (+exp > 0 && precision > 0) {\n        result += `.${zeroes(precision)}`;\n    }\n\n    return result;\n}\n\n/**\n * Return a string representing VALUE with a PRECISION-long mantissa.\n *\n * @param {number} value - number to precise\n * @param {number} precision - desired length for the mantissa\n * @param {function} roundingFunction - rounding function to be used\n * @return {string}\n */\nfunction toFixed(value, precision, roundingFunction = Math.round) {\n    if (value.toString().indexOf(\"e\") !== -1) {\n        return toFixedLarge(value, precision);\n    }\n\n    const n = new BigNumber(roundingFunction(+`${value}e+${precision}`) / (Math.pow(10, precision)));\n    return n.toFixed(precision);\n}\n\n/**\n * Return the current OUTPUT with a mantissa precision of PRECISION.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {number} value - number being currently formatted\n * @param {boolean} optionalMantissa - if `true`, the mantissa is omitted when it's only zeroes\n * @param {number} precision - desired precision of the mantissa\n * @param {boolean} trim - if `true`, trailing zeroes are removed from the mantissa\n * @return {string}\n */\nfunction setMantissaPrecision(output, value, optionalMantissa, precision, trim, roundingFunction) {\n    if (precision === -1) {\n        return output;\n    }\n\n    let result = toFixed(value, precision, roundingFunction);\n    let [currentCharacteristic, currentMantissa = \"\"] = result.toString().split(\".\");\n\n    if (currentMantissa.match(/^0+$/) && (optionalMantissa || trim)) {\n        return currentCharacteristic;\n    }\n\n    let hasTrailingZeroes = currentMantissa.match(/0+$/);\n    if (trim && hasTrailingZeroes) {\n        return `${currentCharacteristic}.${currentMantissa.toString().slice(0, hasTrailingZeroes.index)}`;\n    }\n\n    return result.toString();\n}\n\n/**\n * Return the current OUTPUT with a characteristic precision of PRECISION.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {number} value - number being currently formatted\n * @param {boolean} optionalCharacteristic - `true` if the characteristic is omitted when it's only zeroes\n * @param {number} precision - desired precision of the characteristic\n * @return {string}\n */\nfunction setCharacteristicPrecision(output, value, optionalCharacteristic, precision) {\n    let result = output;\n    let [currentCharacteristic, currentMantissa] = result.toString().split(\".\");\n\n    if (currentCharacteristic.match(/^-?0$/) && optionalCharacteristic) {\n        if (!currentMantissa) {\n            return currentCharacteristic.replace(\"0\", \"\");\n        }\n\n        return `${currentCharacteristic.replace(\"0\", \"\")}.${currentMantissa}`;\n    }\n\n    const hasNegativeSign = value < 0 && currentCharacteristic.indexOf(\"-\") === 0;\n    if (hasNegativeSign) {\n            // Remove the negative sign\n            currentCharacteristic = currentCharacteristic.slice(1);\n            result = result.slice(1);\n    }\n\n    if (currentCharacteristic.length < precision) {\n        let missingZeros = precision - currentCharacteristic.length;\n        for (let i = 0; i < missingZeros; i++) {\n            result = `0${result}`;\n        }\n    }\n\n    if (hasNegativeSign) {\n        // Add back the minus sign\n        result = `-${result}`;\n    }\n    return result.toString();\n}\n\n/**\n * Return the indexes where are the group separations after splitting\n * `totalLength` in group of `groupSize` size.\n * Important: we start grouping from the right hand side.\n *\n * @param {number} totalLength - total length of the characteristic to split\n * @param {number} groupSize - length of each group\n * @return {[number]}\n */\nfunction indexesOfGroupSpaces(totalLength, groupSize) {\n    let result = [];\n    let counter = 0;\n    for (let i = totalLength; i > 0; i--) {\n        if (counter === groupSize) {\n            result.unshift(i);\n            counter = 0;\n        }\n        counter++;\n    }\n\n    return result;\n}\n\n/**\n * Replace the decimal separator with DECIMALSEPARATOR and insert thousand\n * separators.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {number} value - number being currently formatted\n * @param {boolean} thousandSeparated - `true` if the characteristic must be separated\n * @param {globalState} state - shared state of the library\n * @param {string} decimalSeparator - string to use as decimal separator\n * @return {string}\n */\nfunction replaceDelimiters(output, value, thousandSeparated, state, decimalSeparator) {\n    let delimiters = state.currentDelimiters();\n    let thousandSeparator = delimiters.thousands;\n    decimalSeparator = decimalSeparator || delimiters.decimal;\n    let thousandsSize = delimiters.thousandsSize || 3;\n\n    let result = output.toString();\n    let characteristic = result.split(\".\")[0];\n    let mantissa = result.split(\".\")[1];\n    const hasNegativeSign = value < 0 && characteristic.indexOf(\"-\") === 0;\n\n    if (thousandSeparated) {\n        if (hasNegativeSign) {\n            // Remove the negative sign\n            characteristic = characteristic.slice(1);\n        }\n\n        let indexesToInsertThousandDelimiters = indexesOfGroupSpaces(characteristic.length, thousandsSize);\n        indexesToInsertThousandDelimiters.forEach((position, index) => {\n            characteristic = characteristic.slice(0, position + index) + thousandSeparator + characteristic.slice(position + index);\n        });\n\n        if (hasNegativeSign) {\n            // Add back the negative sign\n            characteristic = `-${characteristic}`;\n        }\n    }\n\n    if (!mantissa) {\n        result = characteristic;\n    } else {\n        result = characteristic + decimalSeparator + mantissa;\n    }\n    return result;\n}\n\n/**\n * Insert the provided ABBREVIATION at the end of OUTPUT.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {string} abbreviation - abbreviation to append\n * @return {*}\n */\nfunction insertAbbreviation(output, abbreviation) {\n    return output + abbreviation;\n}\n\n/**\n * Insert the positive/negative sign according to the NEGATIVE flag.\n * If the value is negative but still output as 0, the negative sign is removed.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {number} value - number being currently formatted\n * @param {string} negative - flag for the negative form (\"sign\" or \"parenthesis\")\n * @return {*}\n */\nfunction insertSign(output, value, negative) {\n    if (value === 0) {\n        return output;\n    }\n\n    if (+output === 0) {\n        return output.replace(\"-\", \"\");\n    }\n\n    if (value > 0) {\n        return `+${output}`;\n    }\n\n    if (negative === \"sign\") {\n        return output;\n    }\n\n    return `(${output.replace(\"-\", \"\")})`;\n}\n\n/**\n * Insert the provided PREFIX at the start of OUTPUT.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {string} prefix - abbreviation to prepend\n * @return {*}\n */\nfunction insertPrefix(output, prefix) {\n    return prefix + output;\n}\n\n/**\n * Insert the provided POSTFIX at the end of OUTPUT.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {string} postfix - abbreviation to append\n * @return {*}\n */\nfunction insertPostfix(output, postfix) {\n    return output + postfix;\n}\n\n/**\n * Format the provided INSTANCE as a number using the PROVIDEDFORMAT,\n * and the STATE.\n * This is the key method of the framework!\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} [providedFormat] - specification for formatting\n * @param {globalState} state - shared state of the library\n * @param {string} decimalSeparator - string to use as decimal separator\n * @param {{}} defaults - Set of default values used for formatting\n * @return {string}\n */\nfunction formatNumber({ instance, providedFormat, state = globalState, decimalSeparator, defaults = state.currentDefaults() }) {\n    let value = instance._value;\n\n    if (value === 0 && state.hasZeroFormat()) {\n        return state.getZeroFormat();\n    }\n\n    if (!isFinite(value)) {\n        return value.toString();\n    }\n\n    let options = Object.assign({}, defaultOptions, defaults, providedFormat);\n\n    let totalLength = options.totalLength;\n    let characteristicPrecision = totalLength ? 0 : options.characteristic;\n    let optionalCharacteristic = options.optionalCharacteristic;\n    let forceAverage = options.forceAverage;\n    let lowPrecision = options.lowPrecision;\n    let average = !!totalLength || !!forceAverage || options.average;\n\n    // default when averaging is to chop off decimals\n    let mantissaPrecision = totalLength ? -1 : (average && providedFormat.mantissa === undefined ? 0 : options.mantissa);\n    let optionalMantissa = totalLength ? false : (providedFormat.optionalMantissa === undefined ? mantissaPrecision === -1 : options.optionalMantissa);\n    let trimMantissa = options.trimMantissa;\n    let thousandSeparated = options.thousandSeparated;\n    let spaceSeparated = options.spaceSeparated;\n    let negative = options.negative;\n    let forceSign = options.forceSign;\n    let exponential = options.exponential;\n    let roundingFunction = options.roundingFunction;\n\n    let abbreviation = \"\";\n    if (average) {\n        let data = computeAverage({\n            value,\n            forceAverage,\n            lowPrecision,\n            abbreviations: state.currentAbbreviations(),\n            spaceSeparated,\n            roundingFunction,\n            totalLength\n        });\n\n        value = data.value;\n        abbreviation += data.abbreviation;\n\n        if (totalLength) {\n            mantissaPrecision = data.mantissaPrecision;\n        }\n    }\n\n    if (exponential) {\n        let data = computeExponential({\n            value,\n            characteristicPrecision\n        });\n\n        value = data.value;\n        abbreviation = data.abbreviation + abbreviation;\n    }\n\n    let output = setMantissaPrecision(value.toString(), value, optionalMantissa, mantissaPrecision, trimMantissa, roundingFunction);\n    output = setCharacteristicPrecision(output, value, optionalCharacteristic, characteristicPrecision);\n    output = replaceDelimiters(output, value, thousandSeparated, state, decimalSeparator);\n\n    if (average || exponential) {\n        output = insertAbbreviation(output, abbreviation);\n    }\n\n    if (forceSign || value < 0) {\n        output = insertSign(output, value, negative);\n    }\n\n    return output;\n}\n\n/**\n * If FORMAT is non-null and not just an output, return FORMAT.\n * Return DEFAULTFORMAT otherwise.\n *\n * @param providedFormat\n * @param defaultFormat\n */\nfunction formatOrDefault(providedFormat, defaultFormat) {\n    if (!providedFormat) {\n        return defaultFormat;\n    }\n\n    let keys = Object.keys(providedFormat);\n    if (keys.length === 1 && keys[0] === \"output\") {\n        return defaultFormat;\n    }\n\n    return providedFormat;\n}\n\nmodule.exports = (numbro) => ({\n    format: (...args) => format(...args, numbro),\n    getByteUnit: (...args) => getByteUnit(...args, numbro),\n    getBinaryByteUnit: (...args) => getBinaryByteUnit(...args, numbro),\n    getDecimalByteUnit: (...args) => getDecimalByteUnit(...args, numbro),\n    formatOrDefault\n});\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst enUS = require(\"./en-US\");\nconst validating = require(\"./validating\");\nconst parsing = require(\"./parsing\");\n\nlet state = {};\n\nlet currentLanguageTag = undefined;\nlet languages = {};\n\nlet zeroFormat = null;\n\nlet globalDefaults = {};\n\nfunction chooseLanguage(tag) { currentLanguageTag = tag; }\n\nfunction currentLanguageData() { return languages[currentLanguageTag]; }\n\n/**\n * Return all the register languages\n *\n * @return {{}}\n */\nstate.languages = () => Object.assign({}, languages);\n\n//\n// Current language accessors\n//\n\n/**\n * Return the current language tag\n *\n * @return {string}\n */\nstate.currentLanguage = () => currentLanguageTag;\n\n/**\n * Return the current language bytes data\n *\n * @return {{}}\n */\nstate.currentBytes = () => currentLanguageData().bytes || {};\n\n/**\n * Return the current language currency data\n *\n * @return {{}}\n */\nstate.currentCurrency = () => currentLanguageData().currency;\n\n/**\n * Return the current language abbreviations data\n *\n * @return {{}}\n */\nstate.currentAbbreviations = () => currentLanguageData().abbreviations;\n\n/**\n * Return the current language delimiters data\n *\n * @return {{}}\n */\nstate.currentDelimiters = () => currentLanguageData().delimiters;\n\n/**\n * Return the current language ordinal function\n *\n * @return {function}\n */\nstate.currentOrdinal = () => currentLanguageData().ordinal;\n\n//\n// Defaults\n//\n\n/**\n * Return the current formatting defaults.\n * First use the current language default, then fallback to the globally defined defaults.\n *\n * @return {{}}\n */\nstate.currentDefaults = () => Object.assign({}, currentLanguageData().defaults, globalDefaults);\n\n/**\n * Return the ordinal default-format.\n * First use the current language ordinal default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentOrdinalDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().ordinalFormat);\n\n/**\n * Return the byte default-format.\n * First use the current language byte default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentByteDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().byteFormat);\n\n/**\n * Return the percentage default-format.\n * First use the current language percentage default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentPercentageDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().percentageFormat);\n\n/**\n * Return the currency default-format.\n * First use the current language currency default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentCurrencyDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().currencyFormat);\n\n/**\n * Return the time default-format.\n * First use the current language currency default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentTimeDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().timeFormat);\n\n/**\n * Set the global formatting defaults.\n *\n * @param {{}|string} format - formatting options to use as defaults\n */\nstate.setDefaults = (format) => {\n    format = parsing.parseFormat(format);\n    if (validating.validateFormat(format)) {\n        globalDefaults = format;\n    }\n};\n\n//\n// Zero format\n//\n\n/**\n * Return the format string for 0.\n *\n * @return {string}\n */\nstate.getZeroFormat = () => zeroFormat;\n\n/**\n * Set a STRING to output when the value is 0.\n *\n * @param {{}|string} string - string to set\n */\nstate.setZeroFormat = (string) => zeroFormat = typeof(string) === \"string\" ? string : null;\n\n/**\n * Return true if a format for 0 has been set already.\n *\n * @return {boolean}\n */\nstate.hasZeroFormat = () => zeroFormat !== null;\n\n//\n// Getters/Setters\n//\n\n/**\n * Return the language data for the provided TAG.\n * Return the current language data if no tag is provided.\n *\n * Throw an error if the tag doesn't match any registered language.\n *\n * @param {string} [tag] - language tag of a registered language\n * @return {{}}\n */\nstate.languageData = (tag) => {\n    if (tag) {\n        if (languages[tag]) {\n            return languages[tag];\n        }\n        throw new Error(`Unknown tag \"${tag}\"`);\n    }\n\n    return currentLanguageData();\n};\n\n/**\n * Register the provided DATA as a language if and only if the data is valid.\n * If the data is not valid, an error is thrown.\n *\n * When USELANGUAGE is true, the registered language is then used.\n *\n * @param {{}} data - language data to register\n * @param {boolean} [useLanguage] - `true` if the provided data should become the current language\n */\nstate.registerLanguage = (data, useLanguage = false) => {\n    if (!validating.validateLanguage(data)) {\n        throw new Error(\"Invalid language data\");\n    }\n\n    languages[data.languageTag] = data;\n\n    if (useLanguage) {\n        chooseLanguage(data.languageTag);\n    }\n};\n\n/**\n * Set the current language according to TAG.\n * If TAG doesn't match a registered language, another language matching\n * the \"language\" part of the tag (according to BCP47: https://tools.ietf.org/rfc/bcp/bcp47.txt).\n * If none, the FALLBACKTAG is used. If the FALLBACKTAG doesn't match a register language,\n * `en-US` is finally used.\n *\n * @param tag\n * @param fallbackTag\n */\nstate.setLanguage = (tag, fallbackTag = enUS.languageTag) => {\n    if (!languages[tag]) {\n        let suffix = tag.split(\"-\")[0];\n\n        let matchingLanguageTag = Object.keys(languages).find(each => {\n            return each.split(\"-\")[0] === suffix;\n        });\n\n        if (!languages[matchingLanguageTag]) {\n            chooseLanguage(fallbackTag);\n            return;\n        }\n\n        chooseLanguage(matchingLanguageTag);\n        return;\n    }\n\n    chooseLanguage(tag);\n};\n\nstate.registerLanguage(enUS);\ncurrentLanguageTag = enUS.languageTag;\n\nmodule.exports = state;\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Load languages matching TAGS. Silently pass over the failing load.\n *\n * We assume here that we are in a node environment, so we don't check for it.\n * @param {[String]} tags - list of tags to load\n * @param {Numbro} numbro - the numbro singleton\n */\nfunction loadLanguagesInNode(tags, numbro) {\n    tags.forEach((tag) => {\n        let data = undefined;\n        try {\n            data = require(`../languages/${tag}`);\n        } catch (e) {\n            console.error(`Unable to load \"${tag}\". No matching language file found.`); // eslint-disable-line no-console\n        }\n\n        if (data) {\n            numbro.registerLanguage(data);\n        }\n    });\n}\n\nmodule.exports = (numbro) => ({\n    loadLanguagesInNode: (tags) => loadLanguagesInNode(tags, numbro)\n});\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst BigNumber = require(\"bignumber.js\");\n\n/**\n * Add a number or a numbro to N.\n *\n * @param {Numbro} n - augend\n * @param {number|Numbro} other - addend\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction add(n, other, numbro) {\n    let value = new BigNumber(n._value);\n    let otherValue = other;\n\n    if (numbro.isNumbro(other)) {\n        otherValue = other._value;\n    }\n\n    otherValue = new BigNumber(otherValue);\n\n    n._value = value.plus(otherValue).toNumber();\n    return n;\n}\n\n/**\n * Subtract a number or a numbro from N.\n *\n * @param {Numbro} n - minuend\n * @param {number|Numbro} other - subtrahend\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction subtract(n, other, numbro) {\n    let value = new BigNumber(n._value);\n    let otherValue = other;\n\n    if (numbro.isNumbro(other)) {\n        otherValue = other._value;\n    }\n\n    otherValue = new BigNumber(otherValue);\n\n    n._value = value.minus(otherValue).toNumber();\n    return n;\n}\n\n/**\n * Multiply N by a number or a numbro.\n *\n * @param {Numbro} n - multiplicand\n * @param {number|Numbro} other - multiplier\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction multiply(n, other, numbro) {\n    let value = new BigNumber(n._value);\n    let otherValue = other;\n\n    if (numbro.isNumbro(other)) {\n        otherValue = other._value;\n    }\n\n    otherValue = new BigNumber(otherValue);\n\n    n._value = value.times(otherValue).toNumber();\n    return n;\n}\n\n/**\n * Divide N by a number or a numbro.\n *\n * @param {Numbro} n - dividend\n * @param {number|Numbro} other - divisor\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction divide(n, other, numbro) {\n    let value = new BigNumber(n._value);\n    let otherValue = other;\n\n    if (numbro.isNumbro(other)) {\n        otherValue = other._value;\n    }\n\n    otherValue = new BigNumber(otherValue);\n\n    n._value = value.dividedBy(otherValue).toNumber();\n    return n;\n}\n\n/**\n * Set N to the OTHER (or the value of OTHER when it's a numbro instance).\n *\n * @param {Numbro} n - numbro instance to mutate\n * @param {number|Numbro} other - new value to assign to N\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction set (n, other, numbro) {\n    let value = other;\n\n    if (numbro.isNumbro(other)) {\n        value = other._value;\n    }\n\n    n._value = value;\n    return n;\n}\n\n/**\n * Return the distance between N and OTHER.\n *\n * @param {Numbro} n\n * @param {number|Numbro} other\n * @param {numbro} numbro - numbro singleton\n * @return {number}\n */\nfunction difference(n, other, numbro) {\n    let clone = numbro(n._value);\n    subtract(clone, other, numbro);\n\n    return Math.abs(clone._value);\n}\n\nmodule.exports = numbro => ({\n    add: (n, other) => add(n, other, numbro),\n    subtract: (n, other) => subtract(n, other, numbro),\n    multiply: (n, other) => multiply(n, other, numbro),\n    divide: (n, other) => divide(n, other, numbro),\n    set: (n, other) => set(n, other, numbro),\n    difference: (n, other) => difference(n, other, numbro),\n    BigNumber: BigNumber\n});\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst VERSION = \"2.3.6\";\n\nconst globalState = require(\"./globalState\");\nconst validator = require(\"./validating\");\nconst loader = require(\"./loading\")(numbro);\nconst unformatter = require(\"./unformatting\");\nlet formatter = require(\"./formatting\")(numbro);\nlet manipulate = require(\"./manipulating\")(numbro);\nconst parsing = require(\"./parsing\");\n\nclass Numbro {\n    constructor(number) {\n        this._value = number;\n    }\n\n    clone() { return numbro(this._value); }\n\n    format(format = {}) { return formatter.format(this, format); }\n\n    formatCurrency(format) {\n        if (typeof format === \"string\") {\n            format = parsing.parseFormat(format);\n        }\n        format = formatter.formatOrDefault(format, globalState.currentCurrencyDefaultFormat());\n        format.output = \"currency\";\n        return formatter.format(this, format);\n    }\n\n    formatTime(format = {}) {\n        format.output = \"time\";\n        return formatter.format(this, format);\n    }\n\n    binaryByteUnits() { return formatter.getBinaryByteUnit(this);}\n\n    decimalByteUnits() { return formatter.getDecimalByteUnit(this);}\n\n    byteUnits() { return formatter.getByteUnit(this);}\n\n    difference(other) { return manipulate.difference(this, other); }\n\n    add(other) { return manipulate.add(this, other); }\n\n    subtract(other) { return manipulate.subtract(this, other); }\n\n    multiply(other) { return manipulate.multiply(this, other); }\n\n    divide(other) { return manipulate.divide(this, other); }\n\n    set(input) { return manipulate.set(this, normalizeInput(input)); }\n\n    value() { return this._value; }\n\n    valueOf() { return this._value; }\n}\n\n/**\n * Make its best to convert input into a number.\n *\n * @param {numbro|string|number} input - Input to convert\n * @return {number}\n */\nfunction normalizeInput(input) {\n    let result = input;\n    if (numbro.isNumbro(input)) {\n        result = input._value;\n    } else if (typeof input === \"string\") {\n        result = numbro.unformat(input);\n    } else if (isNaN(input)) {\n        result = NaN;\n    }\n\n    return result;\n}\n\nfunction numbro(input) {\n    return new Numbro(normalizeInput(input));\n}\n\nnumbro.version = VERSION;\n\nnumbro.isNumbro = function(object) {\n    return object instanceof Numbro;\n};\n\n//\n// `numbro` static methods\n//\n\nnumbro.language = globalState.currentLanguage;\nnumbro.registerLanguage = globalState.registerLanguage;\nnumbro.setLanguage = globalState.setLanguage;\nnumbro.languages = globalState.languages;\nnumbro.languageData = globalState.languageData;\nnumbro.zeroFormat = globalState.setZeroFormat;\nnumbro.defaultFormat = globalState.currentDefaults;\nnumbro.setDefaults = globalState.setDefaults;\nnumbro.defaultCurrencyFormat = globalState.currentCurrencyDefaultFormat;\nnumbro.validate = validator.validate;\nnumbro.loadLanguagesInNode = loader.loadLanguagesInNode;\nnumbro.unformat = unformatter.unformat;\nnumbro.BigNumber = manipulate.BigNumber;\n\nmodule.exports = numbro;\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Parse the format STRING looking for a prefix. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parsePrefix(string, result) {\n    let match = string.match(/^{([^}]*)}/);\n    if (match) {\n        result.prefix = match[1];\n        return string.slice(match[0].length);\n    }\n\n    return string;\n}\n\n/**\n * Parse the format STRING looking for a postfix. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parsePostfix(string, result) {\n    let match = string.match(/{([^}]*)}$/);\n    if (match) {\n        result.postfix = match[1];\n\n        return string.slice(0, -match[0].length);\n    }\n\n    return string;\n}\n\n/**\n * Parse the format STRING looking for the output value. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n */\nfunction parseOutput(string, result) {\n    if (string.indexOf(\"$\") !== -1) {\n        result.output = \"currency\";\n        return;\n    }\n\n    if (string.indexOf(\"%\") !== -1) {\n        result.output = \"percent\";\n        return;\n    }\n\n    if (string.indexOf(\"bd\") !== -1) {\n        result.output = \"byte\";\n        result.base = \"general\";\n        return;\n    }\n\n    if (string.indexOf(\"b\") !== -1) {\n        result.output = \"byte\";\n        result.base = \"binary\";\n        return;\n\n    }\n\n    if (string.indexOf(\"d\") !== -1) {\n        result.output = \"byte\";\n        result.base = \"decimal\";\n        return;\n\n    }\n\n    if (string.indexOf(\":\") !== -1) {\n        result.output = \"time\";\n        return;\n    }\n\n    if (string.indexOf(\"o\") !== -1) {\n        result.output = \"ordinal\";\n    }\n}\n\n/**\n * Parse the format STRING looking for the thousand separated value. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseThousandSeparated(string, result) {\n    if (string.indexOf(\",\") !== -1) {\n        result.thousandSeparated = true;\n    }\n}\n\n/**\n * Parse the format STRING looking for the space separated value. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseSpaceSeparated(string, result) {\n    if (string.indexOf(\" \") !== -1) {\n        result.spaceSeparated = true;\n        result.spaceSeparatedCurrency = true;\n\n        if (result.average || result.forceAverage) {\n            result.spaceSeparatedAbbreviation = true;\n        }\n    }\n}\n\n/**\n * Parse the format STRING looking for the total length. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseTotalLength(string, result) {\n    let match = string.match(/[1-9]+[0-9]*/);\n\n    if (match) {\n        result.totalLength = +match[0];\n    }\n}\n\n/**\n * Parse the format STRING looking for the characteristic length. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseCharacteristic(string, result) {\n    let characteristic = string.split(\".\")[0];\n    let match = characteristic.match(/0+/);\n    if (match) {\n        result.characteristic = match[0].length;\n    }\n}\n\n/**\n * Parse the format STRING looking for the mantissa length. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseMantissa(string, result) {\n    let mantissa = string.split(\".\")[1];\n    if (mantissa) {\n        let match = mantissa.match(/0+/);\n        if (match) {\n            result.mantissa = match[0].length;\n        }\n    }\n}\n\n/**\n * Parse the format STRING looking for a trimmed mantissa. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n */\nfunction parseTrimMantissa(string, result) {\n    const mantissa = string.split(\".\")[1];\n    if (mantissa) {\n        result.trimMantissa = mantissa.indexOf(\"[\") !== -1;\n    }\n}\n\n/**\n * Parse the format STRING looking for the average value. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseAverage(string, result) {\n    if (string.indexOf(\"a\") !== -1) {\n        result.average = true;\n    }\n}\n\n/**\n * Parse the format STRING looking for a forced average precision. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseForceAverage(string, result) {\n    if (string.indexOf(\"K\") !== -1) {\n        result.forceAverage = \"thousand\";\n    } else if (string.indexOf(\"M\") !== -1) {\n        result.forceAverage = \"million\";\n    } else if (string.indexOf(\"B\") !== -1) {\n        result.forceAverage = \"billion\";\n    } else if (string.indexOf(\"T\") !== -1) {\n        result.forceAverage = \"trillion\";\n    }\n}\n\n/**\n * Parse the format STRING finding if the mantissa is optional. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseOptionalMantissa(string, result) {\n    if (string.match(/\\[\\.]/)) {\n        result.optionalMantissa = true;\n    } else if (string.match(/\\./)) {\n        result.optionalMantissa = false;\n    }\n}\n\n/**\n * Parse the format STRING finding if the characteristic is optional. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseOptionalCharacteristic(string, result) {\n    if (string.indexOf(\".\") !== -1) {\n        let characteristic = string.split(\".\")[0];\n        result.optionalCharacteristic = characteristic.indexOf(\"0\") === -1;\n    }\n}\n\n/**\n * Parse the format STRING looking for the negative format. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseNegative(string, result) {\n    if (string.match(/^\\+?\\([^)]*\\)$/)) {\n        result.negative = \"parenthesis\";\n    }\n    if (string.match(/^\\+?-/)) {\n        result.negative = \"sign\";\n    }\n}\n\n/**\n * Parse the format STRING finding if the sign is mandatory. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n */\nfunction parseForceSign(string, result) {\n    if (string.match(/^\\+/)) {\n        result.forceSign = true;\n    }\n}\n\n/**\n * Parse the format STRING and accumulating the values ie RESULT.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {NumbroFormat} - format\n */\nfunction parseFormat(string, result = {}) {\n    if (typeof string !== \"string\") {\n        return string;\n    }\n\n    string = parsePrefix(string, result);\n    string = parsePostfix(string, result);\n    parseOutput(string, result);\n    parseTotalLength(string, result);\n    parseCharacteristic(string, result);\n    parseOptionalCharacteristic(string, result);\n    parseAverage(string, result);\n    parseForceAverage(string, result);\n    parseMantissa(string, result);\n    parseOptionalMantissa(string, result);\n    parseTrimMantissa(string, result);\n    parseThousandSeparated(string, result);\n    parseSpaceSeparated(string, result);\n    parseNegative(string, result);\n    parseForceSign(string, result);\n\n    return result;\n}\n\nmodule.exports = {\n    parseFormat\n};\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst allSuffixes = [\n    {key: \"ZiB\", factor: Math.pow(1024, 7)},\n    {key: \"ZB\", factor: Math.pow(1000, 7)},\n    {key: \"YiB\", factor: Math.pow(1024, 8)},\n    {key: \"YB\", factor: Math.pow(1000, 8)},\n    {key: \"TiB\", factor: Math.pow(1024, 4)},\n    {key: \"TB\", factor: Math.pow(1000, 4)},\n    {key: \"PiB\", factor: Math.pow(1024, 5)},\n    {key: \"PB\", factor: Math.pow(1000, 5)},\n    {key: \"MiB\", factor: Math.pow(1024, 2)},\n    {key: \"MB\", factor: Math.pow(1000, 2)},\n    {key: \"KiB\", factor: Math.pow(1024, 1)},\n    {key: \"KB\", factor: Math.pow(1000, 1)},\n    {key: \"GiB\", factor: Math.pow(1024, 3)},\n    {key: \"GB\", factor: Math.pow(1000, 3)},\n    {key: \"EiB\", factor: Math.pow(1024, 6)},\n    {key: \"EB\", factor: Math.pow(1000, 6)},\n    {key: \"B\", factor: 1}\n];\n\n/**\n * Generate a RegExp where S get all RegExp specific characters escaped.\n *\n * @param {string} s - string representing a RegExp\n * @return {string}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\n\n/**\n * Recursively compute the unformatted value.\n *\n * @param {string} inputString - string to unformat\n * @param {*} delimiters - Delimiters used to generate the inputString\n * @param {string} [currencySymbol] - symbol used for currency while generating the inputString\n * @param {function} ordinal - function used to generate an ordinal out of a number\n * @param {string} zeroFormat - string representing zero\n * @param {*} abbreviations - abbreviations used while generating the inputString\n * @param {NumbroFormat} format - format used while generating the inputString\n * @return {number|undefined}\n */\nfunction computeUnformattedValue(inputString, delimiters, currencySymbol = \"\", ordinal, zeroFormat, abbreviations, format) {\n    if (!isNaN(+inputString)) {\n        return +inputString;\n    }\n\n    let stripped = \"\";\n    // Negative\n\n    let newInput = inputString.replace(/(^[^(]*)\\((.*)\\)([^)]*$)/, \"$1$2$3\");\n\n    if (newInput !== inputString) {\n        return -1 * computeUnformattedValue(newInput, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format);\n    }\n\n    // Byte\n\n    for (let i = 0; i < allSuffixes.length; i++) {\n        let suffix = allSuffixes[i];\n        stripped = inputString.replace(RegExp(`([0-9 ])(${suffix.key})$`), \"$1\");\n\n        if (stripped !== inputString) {\n            return computeUnformattedValue(stripped, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format) * suffix.factor;\n        }\n    }\n\n    // Percent\n\n    stripped = inputString.replace(\"%\", \"\");\n\n    if (stripped !== inputString) {\n        return computeUnformattedValue(stripped, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format) / 100;\n    }\n\n    // Ordinal\n\n    let possibleOrdinalValue = parseFloat(inputString);\n\n    if (isNaN(possibleOrdinalValue)) {\n        return undefined;\n    }\n\n    let ordinalString = ordinal(possibleOrdinalValue);\n    if (ordinalString && ordinalString !== \".\") { // if ordinal is \".\" it will be caught next round in the +inputString\n        stripped = inputString.replace(new RegExp(`${escapeRegExp(ordinalString)}$`), \"\");\n\n        if (stripped !== inputString) {\n            return computeUnformattedValue(stripped, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format);\n        }\n    }\n\n    // Average\n\n    let inversedAbbreviations = {};\n    Object.keys(abbreviations).forEach((key) => {\n        inversedAbbreviations[abbreviations[key]] = key;\n    });\n\n    let abbreviationValues = Object.keys(inversedAbbreviations).sort().reverse();\n    let numberOfAbbreviations = abbreviationValues.length;\n\n    for (let i = 0; i < numberOfAbbreviations; i++) {\n        let value = abbreviationValues[i];\n        let key = inversedAbbreviations[value];\n\n        stripped = inputString.replace(value, \"\");\n        if (stripped !== inputString) {\n            let factor = undefined;\n            switch (key) { // eslint-disable-line default-case\n                case \"thousand\":\n                    factor = Math.pow(10, 3);\n                    break;\n                case \"million\":\n                    factor = Math.pow(10, 6);\n                    break;\n                case \"billion\":\n                    factor = Math.pow(10, 9);\n                    break;\n                case \"trillion\":\n                    factor = Math.pow(10, 12);\n                    break;\n            }\n            return computeUnformattedValue(stripped, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format) * factor;\n        }\n    }\n\n    return undefined;\n}\n\n/**\n * Removes in one pass all formatting symbols.\n *\n * @param {string} inputString - string to unformat\n * @param {*} delimiters - Delimiters used to generate the inputString\n * @param {string} [currencySymbol] - symbol used for currency while generating the inputString\n * @return {string}\n */\nfunction removeFormattingSymbols(inputString, delimiters, currencySymbol = \"\") {\n    // Currency\n\n    let stripped = inputString.replace(currencySymbol, \"\");\n\n    // Thousand separators\n\n    stripped = stripped.replace(new RegExp(`([0-9])${escapeRegExp(delimiters.thousands)}([0-9])`, \"g\"), \"$1$2\");\n\n    // Decimal\n\n    stripped = stripped.replace(delimiters.decimal, \".\");\n\n    return stripped;\n}\n\n/**\n * Unformat a numbro-generated string to retrieve the original value.\n *\n * @param {string} inputString - string to unformat\n * @param {*} delimiters - Delimiters used to generate the inputString\n * @param {string} [currencySymbol] - symbol used for currency while generating the inputString\n * @param {function} ordinal - function used to generate an ordinal out of a number\n * @param {string} zeroFormat - string representing zero\n * @param {*} abbreviations - abbreviations used while generating the inputString\n * @param {NumbroFormat} format - format used while generating the inputString\n * @return {number|undefined}\n */\nfunction unformatValue(inputString, delimiters, currencySymbol = \"\", ordinal, zeroFormat, abbreviations, format) {\n    if (inputString === \"\") {\n        return undefined;\n    }\n\n    // Zero Format\n\n    if (inputString === zeroFormat) {\n        return 0;\n    }\n\n    let value = removeFormattingSymbols(inputString, delimiters, currencySymbol);\n    return computeUnformattedValue(value, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format);\n}\n\n/**\n * Check if the INPUTSTRING represents a time.\n *\n * @param {string} inputString - string to check\n * @param {*} delimiters - Delimiters used while generating the inputString\n * @return {boolean}\n */\nfunction matchesTime(inputString, delimiters) {\n    let separators = inputString.indexOf(\":\") && delimiters.thousands !== \":\";\n\n    if (!separators) {\n        return false;\n    }\n\n    let segments = inputString.split(\":\");\n    if (segments.length !== 3) {\n        return false;\n    }\n\n    let hours = +segments[0];\n    let minutes = +segments[1];\n    let seconds = +segments[2];\n\n    return !isNaN(hours) && !isNaN(minutes) && !isNaN(seconds);\n}\n\n/**\n * Unformat a numbro-generated string representing a time to retrieve the original value.\n *\n * @param {string} inputString - string to unformat\n * @return {number}\n */\nfunction unformatTime(inputString) {\n    let segments = inputString.split(\":\");\n\n    let hours = +segments[0];\n    let minutes = +segments[1];\n    let seconds = +segments[2];\n\n    return seconds + 60 * minutes + 3600 * hours;\n}\n\n/**\n * Unformat a numbro-generated string to retrieve the original value.\n *\n * @param {string} inputString - string to unformat\n * @param {NumbroFormat} format - format used  while generating the inputString\n * @return {number}\n */\nfunction unformat(inputString, format) {\n    // Avoid circular references\n    const globalState = require(\"./globalState\");\n\n    let delimiters = globalState.currentDelimiters();\n    let currencySymbol = globalState.currentCurrency().symbol;\n    let ordinal = globalState.currentOrdinal();\n    let zeroFormat = globalState.getZeroFormat();\n    let abbreviations = globalState.currentAbbreviations();\n\n    let value = undefined;\n\n    if (typeof inputString === \"string\") {\n        if (matchesTime(inputString, delimiters)) {\n            value = unformatTime(inputString);\n        } else {\n            value = unformatValue(inputString, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format);\n        }\n    } else if (typeof inputString === \"number\") {\n        value = inputString;\n    } else {\n        return undefined;\n    }\n\n    if (value === undefined) {\n        return undefined;\n    }\n\n    return value;\n}\n\nmodule.exports = {\n    unformat\n};\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nlet unformatter = require(\"./unformatting\");\n\n// Simplified regexp supporting only `language`, `script`, and `region`\nconst bcp47RegExp = /^[a-z]{2,3}(-[a-zA-Z]{4})?(-([A-Z]{2}|[0-9]{3}))?$/;\n\nconst validOutputValues = [\n    \"currency\",\n    \"percent\",\n    \"byte\",\n    \"time\",\n    \"ordinal\",\n    \"number\"\n];\n\nconst validForceAverageValues = [\n    \"trillion\",\n    \"billion\",\n    \"million\",\n    \"thousand\"\n];\n\nconst validCurrencyPosition = [\n    \"prefix\",\n    \"infix\",\n    \"postfix\"\n];\n\nconst validNegativeValues = [\n    \"sign\",\n    \"parenthesis\"\n];\n\nconst validMandatoryAbbreviations = {\n    type: \"object\",\n    children: {\n        thousand: {\n            type: \"string\",\n            mandatory: true\n        },\n        million: {\n            type: \"string\",\n            mandatory: true\n        },\n        billion: {\n            type: \"string\",\n            mandatory: true\n        },\n        trillion: {\n            type: \"string\",\n            mandatory: true\n        }\n    },\n    mandatory: true\n};\n\nconst validAbbreviations = {\n    type: \"object\",\n    children: {\n        thousand: \"string\",\n        million: \"string\",\n        billion: \"string\",\n        trillion: \"string\"\n    }\n};\n\nconst validBaseValues = [\n    \"decimal\",\n    \"binary\",\n    \"general\"\n];\n\nconst validFormat = {\n    output: {\n        type: \"string\",\n        validValues: validOutputValues\n    },\n    base: {\n        type: \"string\",\n        validValues: validBaseValues,\n        restriction: (number, format) => format.output === \"byte\",\n        message: \"`base` must be provided only when the output is `byte`\",\n        mandatory: (format) => format.output === \"byte\"\n    },\n    characteristic: {\n        type: \"number\",\n        restriction: (number) => number >= 0,\n        message: \"value must be positive\"\n    },\n    prefix: \"string\",\n    postfix: \"string\",\n    forceAverage: {\n        type: \"string\",\n        validValues: validForceAverageValues\n    },\n    average: \"boolean\",\n    lowPrecision: {\n        type: \"boolean\",\n        restriction: (number, format) => format.average === true,\n        message: \"`lowPrecision` must be provided only when the option `average` is set\"\n    },\n    currencyPosition: {\n        type: \"string\",\n        validValues: validCurrencyPosition\n    },\n    currencySymbol: \"string\",\n    totalLength: {\n        type: \"number\",\n        restrictions: [\n            {\n                restriction: (number) => number >= 0,\n                message: \"value must be positive\"\n            },\n            {\n                restriction: (number, format) => !format.exponential,\n                message: \"`totalLength` is incompatible with `exponential`\"\n            }\n        ]\n    },\n    mantissa: {\n        type: \"number\",\n        restriction: (number) => number >= 0,\n        message: \"value must be positive\"\n    },\n    optionalMantissa: \"boolean\",\n    trimMantissa: \"boolean\",\n    roundingFunction: \"function\",\n    optionalCharacteristic: \"boolean\",\n    thousandSeparated: \"boolean\",\n    spaceSeparated: \"boolean\",\n    spaceSeparatedCurrency: \"boolean\",\n    spaceSeparatedAbbreviation: \"boolean\",\n    abbreviations: validAbbreviations,\n    negative: {\n        type: \"string\",\n        validValues: validNegativeValues\n    },\n    forceSign: \"boolean\",\n    exponential: {\n        type: \"boolean\"\n    },\n    prefixSymbol: {\n        type: \"boolean\",\n        restriction: (number, format) => format.output === \"percent\",\n        message: \"`prefixSymbol` can be provided only when the output is `percent`\"\n    }\n};\n\nconst validLanguage = {\n    languageTag: {\n        type: \"string\",\n        mandatory: true,\n        restriction: (tag) => {\n            return tag.match(bcp47RegExp);\n        },\n        message: \"the language tag must follow the BCP 47 specification (see https://tools.ieft.org/html/bcp47)\"\n    },\n    delimiters: {\n        type: \"object\",\n        children: {\n            thousands: \"string\",\n            decimal: \"string\",\n            thousandsSize: \"number\"\n        },\n        mandatory: true\n    },\n    abbreviations: validMandatoryAbbreviations,\n    spaceSeparated: \"boolean\",\n    spaceSeparatedCurrency: \"boolean\",\n    ordinal: {\n        type: \"function\",\n        mandatory: true\n    },\n    bytes: {\n        type: \"object\",\n        children: {\n            binarySuffixes: \"object\",\n            decimalSuffixes: \"object\"\n        }\n    },\n    currency: {\n        type: \"object\",\n        children: {\n            symbol: \"string\",\n            position: \"string\",\n            code: \"string\"\n        },\n        mandatory: true\n    },\n    defaults: \"format\",\n    ordinalFormat: \"format\",\n    byteFormat: \"format\",\n    percentageFormat: \"format\",\n    currencyFormat: \"format\",\n    timeDefaults: \"format\",\n    formats: {\n        type: \"object\",\n        children: {\n            fourDigits: {\n                type: \"format\",\n                mandatory: true\n            },\n            fullWithTwoDecimals: {\n                type: \"format\",\n                mandatory: true\n            },\n            fullWithTwoDecimalsNoCurrency: {\n                type: \"format\",\n                mandatory: true\n            },\n            fullWithNoDecimals: {\n                type: \"format\",\n                mandatory: true\n            }\n        }\n    }\n};\n\n/**\n * Check the validity of the provided input and format.\n * The check is NOT lazy.\n *\n * @param {string|number|Numbro} input - input to check\n * @param {NumbroFormat} format - format to check\n * @return {boolean} True when everything is correct\n */\nfunction validate(input, format) {\n    let validInput = validateInput(input);\n    let isFormatValid = validateFormat(format);\n\n    return validInput && isFormatValid;\n}\n\n/**\n * Check the validity of the numbro input.\n *\n * @param {string|number|Numbro} input - input to check\n * @return {boolean} True when everything is correct\n */\nfunction validateInput(input) {\n    let value = unformatter.unformat(input);\n\n    return value !== undefined;\n}\n\n/**\n * Check the validity of the provided format TOVALIDATE against SPEC.\n *\n * @param {NumbroFormat} toValidate - format to check\n * @param {*} spec - specification against which to check\n * @param {string} prefix - prefix use for error messages\n * @param {boolean} skipMandatoryCheck - `true` when the check for mandatory key must be skipped\n * @return {boolean} True when everything is correct\n */\nfunction validateSpec(toValidate, spec, prefix, skipMandatoryCheck = false) {\n    let results = Object.keys(toValidate).map((key) => {\n        if (!spec[key]) {\n            console.error(`${prefix} Invalid key: ${key}`); // eslint-disable-line no-console\n            return false;\n        }\n\n        let value = toValidate[key];\n        let data = spec[key];\n\n        if (typeof data === \"string\") {\n            data = {type: data};\n        }\n\n        if (data.type === \"format\") { // all formats are partial (a.k.a will be merged with some default values) thus no need to check mandatory values\n            let valid = validateSpec(value, validFormat, `[Validate ${key}]`, true);\n\n            if (!valid) {\n                return false;\n            }\n        } else if (typeof value !== data.type) {\n            console.error(`${prefix} ${key} type mismatched: \"${data.type}\" expected, \"${typeof value}\" provided`); // eslint-disable-line no-console\n            return false;\n        }\n\n        if (data.restrictions && data.restrictions.length) {\n            let length = data.restrictions.length;\n            for (let i = 0; i < length; i++) {\n                let {restriction, message} = data.restrictions[i];\n                if (!restriction(value, toValidate)) {\n                    console.error(`${prefix} ${key} invalid value: ${message}`); // eslint-disable-line no-console\n                    return false;\n                }\n            }\n        }\n\n        if (data.restriction && !data.restriction(value, toValidate)) {\n            console.error(`${prefix} ${key} invalid value: ${data.message}`); // eslint-disable-line no-console\n            return false;\n        }\n\n        if (data.validValues && data.validValues.indexOf(value) === -1) {\n            console.error(`${prefix} ${key} invalid value: must be among ${JSON.stringify(data.validValues)}, \"${value}\" provided`); // eslint-disable-line no-console\n            return false;\n        }\n\n        if (data.children) {\n            let valid = validateSpec(value, data.children, `[Validate ${key}]`);\n\n            if (!valid) {\n                return false;\n            }\n        }\n\n        return true;\n    });\n\n    if (!skipMandatoryCheck) {\n        results.push(...Object.keys(spec).map((key) => {\n            let data = spec[key];\n            if (typeof data === \"string\") {\n                data = {type: data};\n            }\n\n            if (data.mandatory) {\n                let mandatory = data.mandatory;\n                if (typeof mandatory === \"function\") {\n                    mandatory = mandatory(toValidate);\n                }\n\n                if (mandatory && toValidate[key] === undefined) {\n                    console.error(`${prefix} Missing mandatory key \"${key}\"`); // eslint-disable-line no-console\n                    return false;\n                }\n            }\n\n            return true;\n        }));\n    }\n\n    return results.reduce((acc, current) => {\n        return acc && current;\n    }, true);\n}\n\n/**\n * Check the provided FORMAT.\n *\n * @param {NumbroFormat} format - format to check\n * @return {boolean}\n */\nfunction validateFormat(format) {\n    return validateSpec(format, validFormat, \"[Validate format]\");\n}\n\n/**\n * Check the provided LANGUAGE.\n *\n * @param {NumbroLanguage} language - language to check\n * @return {boolean}\n */\nfunction validateLanguage(language) {\n    return validateSpec(language, validLanguage, \"[Validate language]\");\n}\n\nmodule.exports = {\n    validate,\n    validateFormat,\n    validateInput,\n    validateLanguage\n};\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","/* @license\nPapa Parse\nv5.3.2\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=n&&/blob:/i.test((f.location||{}).protocol),a={},h=0,b={parse:function(e,t){var i=(t=t||{}).dynamicTyping||!1;M(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!M(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var r=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(i=f.URL||f.webkitURL||null,r=s.toString(),b.BLOB_URL||(b.BLOB_URL=i.createObjectURL(new Blob([\"(\",r,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var i,r;return t.onmessage=_,t.id=h++,a[t.id]=t}();return r.userStep=t.step,r.userChunk=t.chunk,r.userComplete=t.complete,r.userError=t.error,t.step=M(t.step),t.chunk=M(t.chunk),t.complete=M(t.complete),t.error=M(t.error),delete t.worker,void r.postMessage({input:e,config:t,workerId:r.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?n=t.download?new l(t):new p(t):!0===e.readable&&M(e.read)&&M(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=\",\",y=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null,o=!1;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);(\"boolean\"==typeof t.quotes||\"function\"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines);\"string\"==typeof t.newline&&(y=t.newline);\"string\"==typeof t.quoteChar&&(s=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s);(\"boolean\"==typeof t.escapeFormulae||t.escapeFormulae instanceof RegExp)&&(o=t.escapeFormulae instanceof RegExp?t.escapeFormulae:/^[=+\\-@\\t\\r].*$/)}();var h=new RegExp(j(s),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||Object.keys(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||r),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:\"object\"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function u(e,t,i){var r=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=v(e[a],a);0<t.length&&(r+=y)}for(var o=0;o<t.length;o++){var h=n?e.length:t[o].length,u=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var d=[],l=0;l<h;l++){var c=s?e[l]:l;d.push(t[o][c])}u=\"\"===d.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!f&&(r+=m);var g=n&&s?e[p]:p;r+=v(t[o][g],p)}o<t.length-1&&(!i||0<h&&!f)&&(r+=y)}}return r}function v(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var i=!1;o&&\"string\"==typeof e&&o.test(e)&&(e=\"'\"+e,i=!0);var r=e.toString().replace(h,a);return(i=i||!0===n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1}(r,b.BAD_DELIMITERS)||-1<r.indexOf(m)||\" \"===r.charAt(0)||\" \"===r.charAt(r.length-1))?s+r+s:r}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=E,b.ParserHandle=i,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0!==h.length){var e,t,i,r,n=h[0];if(M(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(M(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){M(a)&&a(e,n.file,n.inputElem),u()},b.parse(n.file,n.instanceConfig)}else M(o.complete)&&o.complete()}function u(){h.splice(0,1),e()}}}function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=w(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&M(this._config.beforeFirstChunk)){var i=this._config.beforeFirstChunk(e);void 0!==i&&(e=i)}this.isFirstChunk=!1,this._halted=!1;var r=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(r,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=r.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(M(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!M(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){M(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var r;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),u.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),n||(r.onload=v(this._chunkLoaded,this),r.onerror=v(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)r.setRequestHeader(t,e[t])}if(this._config.chunkSize){var i=this._start+this._config.chunkSize-1;r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i)}try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:r.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf(\"/\")+1))}(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){var t=r.statusText||e;this._sendError(new Error(t))}}function c(e){var r,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),u.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((r=new FileReader).onload=v(this._chunkLoaded,this),r.onerror=v(this._chunkError,this)):r=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var i=r.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:i}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(r.error)}}function p(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=i.substring(0,t),i=i.substring(t)):(e=i,i=\"\"),this._finished=!i,this.parseChunk(e)}}}function g(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=v(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=v(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=v(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=v(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var a,o,h,r=Math.pow(2,53),n=-r,s=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,u=/^(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))$/,t=this,i=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(M(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;i+=e.data.length,m.preview&&i>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function y(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){return c&&h&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),h=!1),m.skipEmptyLines&&(c.data=c.data.filter(function(e){return!y(e)})),_()&&function(){if(!c)return;function e(e,t){M(m.transformHeader)&&(e=m.transformHeader(e,t)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var i,r=m.header?{}:[];for(i=0;i<e.length;i++){var n=i,s=e[i];m.header&&(n=i>=l.length?\"__parsed_extra\":l[i]),m.transform&&(s=m.transform(s,n)),s=v(n,s),\"__parsed_extra\"===n?(r[n]=r[n]||[],r[n].push(s)):r[n]=s}return m.header&&(i>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+i,f+t):i<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+i,f+t)),r}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function v(e,t){return i=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[i]&&(m.dynamicTyping[i]=m.dynamicTypingFunction(i)),!0===(m.dynamicTyping[i]||m.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<r)return!0}return!1}(t)?parseFloat(t):u.test(t)?new Date(t):\"\"===t?null:t):t;var i}function k(e,t,i,r){var n={type:e,code:t,message:i};void 0!==r&&(n.row=r),c.errors.push(n)}this.parse=function(e,t,i){var r=m.quoteChar||'\"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var i=new RegExp(j(t)+\"([^]*?)\"+j(t),\"gm\"),r=(e=e.replace(i,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<r[0].length;if(1===r.length||s)return\"\\n\";for(var a=0,o=0;o<r.length;o++)\"\\n\"===r[o][0]&&a++;return a>=r.length/2?\"\\r\\n\":\"\\r\"}(e,r)),h=!1,m.delimiter)M(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,i,r,n){var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var u=0;u<n.length;u++){var f=n[u],d=0,l=0,c=0;o=void 0;for(var p=new E({comments:r,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(i&&y(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===h||h<l)&&1.99<l&&(a=d,s=f,h=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(h=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=w(m);return m.preview&&m.header&&s.preview++,a=e,o=new E(s),c=o.parse(a,t,i),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=M(m.chunk)?\"\":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,M(m.complete)&&m.complete(c),a=\"\"}}function j(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(e){var S,O=(e=e||{}).delimiter,x=e.newline,I=e.comments,T=e.step,D=e.preview,A=e.fastMode,L=S=void 0===e.quoteChar||null===e.quoteChar?'\"':e.quoteChar;if(void 0!==e.escapeChar&&(L=e.escapeChar),(\"string\"!=typeof O||-1<b.BAD_DELIMITERS.indexOf(O))&&(O=\",\"),I===O)throw new Error(\"Comment character same as delimiter\");!0===I?I=\"#\":(\"string\"!=typeof I||-1<b.BAD_DELIMITERS.indexOf(I))&&(I=!1),\"\\n\"!==x&&\"\\r\"!==x&&\"\\r\\n\"!==x&&(x=\"\\n\");var F=0,z=!1;this.parse=function(r,t,i){if(\"string\"!=typeof r)throw new Error(\"Input must be a string\");var n=r.length,e=O.length,s=x.length,a=I.length,o=M(T),h=[],u=[],f=[],d=F=0;if(!r)return C();if(A||!1!==A&&-1===r.indexOf(S)){for(var l=r.split(x),c=0;c<l.length;c++){if(f=l[c],F+=f.length,c!==l.length-1)F+=x.length;else if(i)return C();if(!I||f.substring(0,a)!==I){if(o){if(h=[],k(f.split(O)),R(),z)return C()}else k(f.split(O));if(D&&D<=c)return h=h.slice(0,D),C(!0)}}return C()}for(var p=r.indexOf(O,F),g=r.indexOf(x,F),_=new RegExp(j(L)+j(S),\"g\"),m=r.indexOf(S,F);;)if(r[F]!==S)if(I&&0===f.length&&r.substring(F,F+a)===I){if(-1===g)return C();F=g+s,g=r.indexOf(x,F),p=r.indexOf(O,F)}else if(-1!==p&&(p<g||-1===g))f.push(r.substring(F,p)),F=p+e,p=r.indexOf(O,F);else{if(-1===g)break;if(f.push(r.substring(F,g)),w(g+s),o&&(R(),z))return C();if(D&&h.length>=D)return C(!0)}else for(m=F,F++;;){if(-1===(m=r.indexOf(S,m+1)))return i||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:F}),E();if(m===n-1)return E(r.substring(F,m).replace(_,S));if(S!==L||r[m+1]!==L){if(S===L||0===m||r[m-1]!==L){-1!==p&&p<m+1&&(p=r.indexOf(O,m+1)),-1!==g&&g<m+1&&(g=r.indexOf(x,m+1));var y=b(-1===g?p:Math.min(p,g));if(r.substr(m+1+y,e)===O){f.push(r.substring(F,m).replace(_,S)),r[F=m+1+y+e]!==S&&(m=r.indexOf(S,F)),p=r.indexOf(O,F),g=r.indexOf(x,F);break}var v=b(g);if(r.substring(m+1+v,m+1+v+s)===x){if(f.push(r.substring(F,m).replace(_,S)),w(m+1+v+s),p=r.indexOf(O,F),m=r.indexOf(S,F),o&&(R(),z))return C();if(D&&h.length>=D)return C(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:F}),m++}}else m++}return E();function k(e){h.push(e),d=F}function b(e){var t=0;if(-1!==e){var i=r.substring(m+1,e);i&&\"\"===i.trim()&&(t=i.length)}return t}function E(e){return i||(void 0===e&&(e=r.substring(F)),f.push(e),F=n,k(f),o&&R()),C()}function w(e){F=e,k(f),f=[],g=r.indexOf(x,F)}function C(e){return{data:h,errors:u,meta:{delimiter:O,linebreak:x,aborted:z,truncated:!!e,cursor:d+(t||0)}}}function R(){T(C()),h=[],u=[]}},this.abort=function(){z=!0},this.getCharIndex=function(){return F}}function _(e){var t=e.data,i=a[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:y,resume:y};if(M(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else M(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&m(t.workerId,t.results)}function m(e,t){var i=a[e];M(i.userComplete)&&i.userComplete(t),i.terminate(),delete a[e]}function y(){throw new Error(\"Not implemented.\")}function w(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var i in e)t[i]=w(e[i]);return t}function v(e,t){return function(){e.apply(t,arguments)}}function M(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var i=b.parse(t.input,t.config);i&&f.postMessage({workerId:b.WORKER_ID,results:i,finished:!0})}}),(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(u.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(u.prototype)).constructor=g,b});","'use strict';\n\nvar errcode = require('err-code');\nvar retry = require('retry');\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction isRetryError(err) {\n    return err && err.code === 'EPROMISERETRY' && hasOwn.call(err, 'retried');\n}\n\nfunction promiseRetry(fn, options) {\n    var temp;\n    var operation;\n\n    if (typeof fn === 'object' && typeof options === 'function') {\n        // Swap options and fn when using alternate signature (options, fn)\n        temp = options;\n        options = fn;\n        fn = temp;\n    }\n\n    operation = retry.operation(options);\n\n    return new Promise(function (resolve, reject) {\n        operation.attempt(function (number) {\n            Promise.resolve()\n            .then(function () {\n                return fn(function (err) {\n                    if (isRetryError(err)) {\n                        err = err.retried;\n                    }\n\n                    throw errcode(new Error('Retrying'), 'EPROMISERETRY', { retried: err });\n                }, number);\n            })\n            .then(resolve, function (err) {\n                if (isRetryError(err)) {\n                    err = err.retried;\n\n                    if (operation.retry(err || new Error())) {\n                        return;\n                    }\n                }\n\n                reject(err);\n            });\n        });\n    });\n}\n\nmodule.exports = promiseRetry;\n","'use strict';\n\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = undefined;\n    }\n\n    if (code != null) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        return assign(new ErrClass(), props);\n    }\n}\n\nmodule.exports = createError;\n","module.exports = require('./lib/retry');","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && options.forever,\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * opts.minTimeout * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts;\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(this._errors.length - 1, this._errors.length);\n      this._timeouts = this._cachedTimeouts.slice(0);\n      timeout = this._timeouts.shift();\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  var timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\n\nvar _excluded = [\"text\", \"onCopy\", \"options\", \"children\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CopyToClipboard = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CopyToClipboard, _React$PureComponent);\n\n  var _super = _createSuper(CopyToClipboard);\n\n  function CopyToClipboard() {\n    var _this;\n\n    _classCallCheck(this, CopyToClipboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onCopy = _this$props.onCopy,\n          children = _this$props.children,\n          options = _this$props.options;\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      var result = (0, _copyToClipboard[\"default\"])(text, options);\n\n      if (onCopy) {\n        onCopy(text, result);\n      } // Bypass onClick if it was present\n\n\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CopyToClipboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _text = _this$props2.text,\n          _onCopy = _this$props2.onCopy,\n          _options = _this$props2.options,\n          children = _this$props2.children,\n          props = _objectWithoutProperties(_this$props2, _excluded);\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      return /*#__PURE__*/_react[\"default\"].cloneElement(elem, _objectSpread(_objectSpread({}, props), {}, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n\n  return CopyToClipboard;\n}(_react[\"default\"].PureComponent);\n\nexports.CopyToClipboard = CopyToClipboard;\n\n_defineProperty(CopyToClipboard, \"defaultProps\", {\n  onCopy: undefined,\n  options: undefined\n});","\"use strict\";\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nCopyToClipboard.CopyToClipboard = CopyToClipboard;\nmodule.exports = CopyToClipboard;","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? prefix + \": \" + provided : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","/*\r\n *  toFormat v2.0.0\r\n *  Adds a toFormat instance method to big.js or decimal.js\r\n *  Copyright (c) 2017 Michael Mclaughlin\r\n *  MIT Licence\r\n */\r\n\r\n /*\r\n * Adds a `toFormat` method to `Ctor.prototype` and a `format` object to `Ctor`, where `Ctor` is\r\n * a big number constructor such as `Decimal` (decimal.js) or `Big` (big.js).\r\n */\r\nfunction toFormat(Ctor) {\r\n  'use strict';\r\n\r\n  /*\r\n   *  Returns a string representing the value of this big number in fixed-point notation to `dp`\r\n   *  decimal places using rounding mode `rm`, and formatted according to the properties of the\r\n   * `fmt`, `this.format` and `this.constructor.format` objects, in that order of precedence.\r\n   *\r\n   *  Example:\r\n   *\r\n   *  x = new Decimal('123456789.987654321')\r\n   *\r\n   *  // Add a format object to the constructor...\r\n   *  Decimal.format = {\r\n   *    decimalSeparator: '.',\r\n   *    groupSeparator: ',',\r\n   *    groupSize: 3,\r\n   *    secondaryGroupSize: 0,\r\n   *    fractionGroupSeparator: '',     // '\\xA0' non-breaking space\r\n   *    fractionGroupSize : 0\r\n   *  }\r\n   *\r\n   *  x.toFormat();                // 123,456,789.987654321\r\n   *  x.toFormat(2, 1);            // 123,456,789.98\r\n   *\r\n   *  // And/or add a format object to the big number itself...\r\n   *  x.format = {\r\n   *    decimalSeparator: ',',\r\n   *    groupSeparator: '',\r\n   *  }\r\n   *\r\n   *  x.toFormat();                // 123456789,987654321\r\n   *\r\n   *  format = {\r\n   *    decimalSeparator: '.',\r\n   *    groupSeparator: ' ',\r\n   *    groupSize: 3,\r\n   *    fractionGroupSeparator: ' ',     // '\\xA0' non-breaking space\r\n   *    fractionGroupSize : 5\r\n   *  }\r\n\r\n   *  // And/or pass a format object to the method call.\r\n   *  x.toFormat(format);          // 123 456 789.98765 4321\r\n   *  x.toFormat(4, format);       // 123 456 789.9877\r\n   *  x.toFormat(2, 1, format);    // 123 456 789.98\r\n   *\r\n   *  [dp] {number} Decimal places. Integer.\r\n   *  [rm] {number} Rounding mode. Integer, 0 to 8. (Ignored if using big.js.)\r\n   *  [fmt] {Object} A format object.\r\n   *\r\n   */\r\n  Ctor.prototype.toFormat = function toFormat(dp, rm, fmt) {\r\n\r\n    if (!this.e && this.e !== 0) return this.toString();   // Infinity/NaN\r\n\r\n    var arr, g1, g2, i,\r\n      u,                             // undefined\r\n      nd,                            // number of integer digits\r\n      intd,                          // integer digits\r\n      intp,                          // integer part\r\n      fracp,                         // fraction part\r\n      dsep,                          // decimalSeparator\r\n      gsep,                          // groupSeparator\r\n      gsize,                         // groupSize\r\n      sgsize,                        // secondaryGroupSize\r\n      fgsep,                         // fractionGroupSeparator\r\n      fgsize,                        // fractionGroupSize\r\n      tfmt = this.format || {},\r\n      cfmt = this.constructor.format || {};\r\n\r\n    if (dp != u) {\r\n      if (typeof dp == 'object') {\r\n        fmt = dp;\r\n        dp = u;\r\n      } else if (rm != u) {\r\n        if (typeof rm == 'object') {\r\n          fmt = rm;\r\n          rm = u;\r\n        } else if (typeof fmt != 'object') {\r\n          fmt = {};\r\n        }\r\n      } else {\r\n        fmt = {};\r\n      }\r\n    } else {\r\n      fmt = {};\r\n    }\r\n\r\n    arr = this.toFixed(dp, rm).split('.');\r\n    intp = arr[0];\r\n    fracp = arr[1];\r\n    intd = this.s < 0 ? intp.slice(1) : intp;\r\n    nd = intd.length;\r\n\r\n    dsep = fmt.decimalSeparator;\r\n    if (dsep == u) {\r\n      dsep = tfmt.decimalSeparator;\r\n      if (dsep == u) {\r\n        dsep = cfmt.decimalSeparator;\r\n        if (dsep == u) dsep = '.';\r\n      }\r\n    }\r\n\r\n    gsep = fmt.groupSeparator;\r\n    if (gsep == u) {\r\n      gsep = tfmt.groupSeparator;\r\n      if (gsep == u) gsep = cfmt.groupSeparator;\r\n    }\r\n\r\n    if (gsep) {\r\n      gsize = fmt.groupSize;\r\n      if (gsize == u) {\r\n        gsize = tfmt.groupSize;\r\n        if (gsize == u) {\r\n          gsize = cfmt.groupSize;\r\n          if (gsize == u) gsize = 0;\r\n        }\r\n      }\r\n\r\n      sgsize = fmt.secondaryGroupSize;\r\n      if (sgsize == u) {\r\n        sgsize = tfmt.secondaryGroupSize;\r\n        if (sgsize == u) {\r\n          sgsize = cfmt.secondaryGroupSize;\r\n          if (sgsize == u) sgsize = 0;\r\n        }\r\n      }\r\n\r\n      if (sgsize) {\r\n        g1 = +sgsize;\r\n        g2 = +gsize;\r\n        nd -= g2;\r\n      } else {\r\n        g1 = +gsize;\r\n        g2 = +sgsize;\r\n      }\r\n\r\n      if (g1 > 0 && nd > 0) {\r\n        i = nd % g1 || g1;\r\n        intp = intd.substr(0, i);\r\n        for (; i < nd; i += g1) intp += gsep + intd.substr(i, g1);\r\n        if (g2 > 0) intp += gsep + intd.slice(i);\r\n        if (this.s < 0) intp = '-' + intp;\r\n      }\r\n    }\r\n\r\n    if (fracp) {\r\n      fgsep = fmt.fractionGroupSeparator;\r\n      if (fgsep == u) {\r\n        fgsep = tfmt.fractionGroupSeparator;\r\n        if (fgsep == u) fgsep = cfmt.fractionGroupSeparator;\r\n      }\r\n\r\n      if (fgsep) {\r\n        fgsize = fmt.fractionGroupSize;\r\n        if (fgsize == u) {\r\n          fgsize = tfmt.fractionGroupSize;\r\n          if (fgsize == u) {\r\n            fgsize = cfmt.fractionGroupSize;\r\n            if (fgsize == u) fgsize = 0;\r\n          }\r\n        }\r\n\r\n        fgsize = +fgsize;\r\n\r\n        if (fgsize) {\r\n          fracp = fracp.replace(new RegExp('\\\\d{' + fgsize + '}\\\\B', 'g'), '$&' + fgsep);\r\n        }\r\n      }\r\n\r\n      return intp + dsep + fracp;\r\n    } else {\r\n\r\n      return intp;\r\n    }\r\n  };\r\n\r\n  Ctor.format = {\r\n    decimalSeparator: '.',\r\n    groupSeparator: ',',\r\n    groupSize: 3,\r\n    secondaryGroupSize: 0,\r\n    fractionGroupSeparator: '',\r\n    fractionGroupSize: 0\r\n  };\r\n\r\n  return Ctor;\r\n}\r\n\r\nif (typeof module !== 'undefined' && module.exports) module.exports = toFormat;\r\n"],"names":["zero$1","buf","len","length","LITERALS$1","L_CODES$1","D_CODES$1","MAX_BITS$1","extra_lbits","Uint8Array","extra_dbits","extra_blbits","bl_order","static_ltree","Array","static_dtree","_dist_code","_length_code","MAX_MATCH$1","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","this","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","s","w","pending_buf","pending","send_bits","value","bi_valid","bi_buf","send_code","c","tree","bi_reverse","code","res","gen_codes","bl_count","next_code","bits","n","init_block","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","last_lit","matches","bi_windup","smaller","m","depth","_n2","_m2","pqdownheap","k","v","heap","j","heap_len","compress_block","ltree","dtree","lc","extra","lx","d_buf","l_buf","build_tree","desc","stree","node","heap_max","base","h","xbits","f","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","count","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","last","header","set","window","subarray","copy_block","_tr_flush_block_1","opt_lenb","static_lenb","max_blindex","level","strm","data_type","black_mask","detect_data_type","l_desc","d_desc","bl_desc","BL_CODES$1","build_bl_tree","strategy","lcodes","dcodes","blcodes","rank","send_all_trees","trees","_tr_init","LENGTH_CODES$1","tr_static_init","_tr_stored_block","_tr_flush_block","_tr_tally","lit_bufsize","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","pos","s1","s2","crcTable","Uint32Array","table","makeTable","crc32_1","crc","t","end","i","messages","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","HCRC_STATE","BUSY_STATE","FINISH_STATE","err","errorCode","msg","zero","HASH","prev","data","hash_shift","hash_mask","flush_pending","state","avail_out","output","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","b","putShortMSB","read_buf","start","size","avail_in","input","next_in","wrap","total_in","longest_match","cur_match","match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","p","more","str","window_size","hash_size","head","insert","ins_h","deflate_fast","flush","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","configuration_table","max_block_size","pending_buf_size","max_start","DeflateState","status","gzhead","gzindex","method","last_flush","w_bits","hash_bits","Uint16Array","HEAP_SIZE","MAX_BITS","deflateResetKeep","deflateReset","ret","deflateInit2","windowBits","memLevel","deflate_1$2","deflateInit","deflateSetHeader","deflate","beg","val","old_flush","text","hcrc","name","comment","time","os","level_flags","charCodeAt","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","next","deflateInfo","_has","obj","key","Object","prototype","hasOwnProperty","call","common","sources","slice","arguments","source","shift","TypeError","chunks","l","result","chunk","STR_APPLY_UIA_OK","String","fromCharCode","apply","__","_utf8len","q","strings","TextEncoder","encode","c2","m_pos","str_len","buf_len","max","TextDecoder","decode","out","utf16buf","c_len","buf2binstring","zstream","toString$1","toString","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","options","chunkSize","opt","raw","gzip","ended","Error","dict","_dict_set","deflate$1","deflator","push","flush_mode","_flush_mode","onData","onEnd","deflate_1$1","Deflate","deflateRaw","constants","inffast","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from","from_source","lencode","distcode","lenbits","distbits","top","dolen","mode","dodist","sane","MAXBITS","lbase","lext","dbase","dext","inftrees","type","lens","lens_index","codes","table_index","work","opts","incr","fill","low","mask","sym","min","root","curr","drop","left","used","huff","base_index","offs","here_bits","here_op","here_val","extra_index","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","TYPE","BAD","zswap32","InflateState","havedict","flags","check","total","wbits","offset","ncode","nlen","ndist","have","lendyn","distdyn","back","was","inflateResetKeep","Int32Array","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","src","copy","inflate_1$2","inflateInit","inflate","put","last_bits","last_op","last_val","hbuf","order","inf_leave","done","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","inflateInfo","gzheader","Inflate$1","to","inflate$1","inflator","last_avail_out","next_out_utf8","tail","utf8str","join","inflate_1$1","Inflate","inflateRaw","ungzip","inflate_1","reduce","byte","padStart","indexOf","substr","Buffer","map","parseInt","array","bs58","base64","Provider","constructor","connection","wallet","static","preflightCommitment","commitment","url","async","tx","signers","feePayer","publicKey","recentBlockhash","getRecentBlockhash","blockhash","signTransaction","filter","forEach","kp","partialSign","rawTx","serialize","sendAndConfirmRawTransaction","ConfirmError","failedTx","getTransaction","bs58.encode","signature","logs","meta","logMessages","SendTransactionError","message","reqs","txs","r","signedTxs","signAllTransactions","sigs","transaction","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","args","_serialize","encoding","_rpcRequest","error","rawTransaction","sendOptions","skipPreflight","sendRawTransaction","confirmTransaction","JSON","stringify","super","setProvider","provider","_provider","getProvider","local","_AVAILABLE_FEATURES","Set","_FEATURES","Map","isSet","get","has","IdlError","ProgramErrorStack","stack","programKeyRegex","successRegex","programStack","exec","pop","programKey","PublicKey","AnchorError","errorMessage","errorLogs","origin","comparedValues","replace","_programErrorStack","parse","anchorErrorLogIndex","findIndex","log","startsWith","anchorErrorLog","pubkeyRegex","leftPubkey","rightPubkey","valueRegex","leftValue","rightValue","noInfoAnchorErrorLog","fileLineAnchorErrorLog","accountNameAnchorErrorLog","errorCodeString","errorNumber","number","file","line","fileLine","accountName","program","programErrorStack","ProgramError","idlErrors","errString","unparsedErrorCode","includes","components","split","parseErr","errorMsg","LangErrorMessage","translateError","features.isSet","console","anchorError","programError","handler","target","prop","Reflect","Proxy","__assign","assign","lowerCase","toLowerCase","DEFAULT_SPLIT_REGEXP","DEFAULT_STRIP_REGEXP","re","RegExp","IdlCoder","field","types","fieldName","camelCase","borsh","fieldLayout","vec","option","defined","filtered","typeDefLayout","arrayTy","arrayLen","innerLayout","typeDef","kind","fieldLayouts","fields","variants","variant","replicate","BorshInstructionCoder","idl","ixLayout","parseIxLayout","sighashLayouts","instructions","ix","sh","sighash","layout","methods","ixName","_encode","encodeState","nameSpace","buffer","methodName","ixLayouts","arg","accounts","concat","decoder","format","accountMetas","InstructionFormatter","idlIx","idlField","formatIdlType","formatIdlData","flatIdlAccounts","flattenIdlAccounts","idx","idlType","d","formatIdlDataDefined","struct","keys","enumType","namedFields","fieldData","variantName","pascalCase","prefix","account","accName","charAt","toUpperCase","newPrefix","flat","preimage","_a","splitRegexp","_b","stripRegexp","_c","transform","_d","delimiter","dotCase","sha256","accountSize","idlAccount","variantSizes","typeSize","a","Math","ty","coption","arraySize","ACCOUNT_DISCRIMINATOR_SIZE","BorshAccountsCoder","accountLayouts","layouts","acc","accountData","discriminator","accountDiscriminator","compare","decodeUnchecked","memcmp","appendData","bytes","camelcase","BorshEventCoder","events","event","eventTypeDef","discriminators","e","eventDiscriminator","logArr","disc","eventName","BorshStateCoder","stateDiscriminator","accData","ns","BorshCoder","instruction","Layout","span","property","Number","isInteger","makeDestinationObject","getSpan","RangeError","rv","create","fromArray","values","ExternalLayout","isCount","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","V2E32","pow","NearUInt64","lo32","readUInt32LE","hi32","floor","writeUInt32LE","Structure","decodePrefixes","isArray","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","upv","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","VariantLayout","vb","isBuffer","union","Blob","write","SplTokenInstructionCoder","_","freezeAuthority","decimals","mintAuthority","encodeData","initializeMint","toBuffer","freezeAuthorityOption","initializeAccount","initializeMultisig","amount","transfer","approve","revoke","newAuthority","authorityType","setAuthority","mintTo","burn","closeAccount","freezeAccount","thawAccount","transferChecked","approveChecked","mintToChecked","burnChecked","authority","initilaizeAccount2","syncNative","initializeAccount3","initializeMultisig2","encodeInitializeMint2","_ixName","_ix","LAYOUT","BufferLayout.u8","BufferLayout.blob","alloc","instructionMaxSpan","BufferLayout.struct","BufferLayout.nu64","SplTokenStateCoder","_idl","_name","_account","uint64","WrappedLayout","u64","fromBuffer","COptionLayout","encoder","decodeBool","encodeBool","BN","toArray","reverse","zeroPad","SplTokenAccountsCoder","TOKEN_ACCOUNT_LAYOUT","MINT_ACCOUNT_LAYOUT","_appendData","dataSize","SplTokenEventsCoder","_log","SplTokenCoder","parseIdlErrors","errors","toInstruction","ixArg","validateAccounts","ixAccounts","translateAddress","address","getMultipleAccounts","publicKeys","getMultipleAccountsCore","batches","ceil","index","Promise","all","batch","commitmentOverride","toBase58","assert","executable","owner","lamports","programId","Transaction","add","TransactionInstruction","send","createWithSeedSync","fromPublicKey","seed","hash","sha256Sync","createProgramAddressSync","seeds","publicKeyBytes","findProgramAddressSync","nonce","arr","byteOffset","byteLength","associated","assoc","TOKEN_PROGRAM_ID","ASSOCIATED_PROGRAM_ID","__proto__","associatedAddress","mint","pe","exports","global","self","__self__","F","fetch","DOMException","support","Symbol","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","test","normalizeValue","iteratorFor","items","iterator","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","resolve","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","arrayBuffer","then","readAsText","chars","formData","json","oldValue","delete","callback","thisArg","entries","Request","upcased","credentials","signal","referrer","form","trim","decodeURIComponent","Response","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","location","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","polyfill","defineProperty","ponyfill","ctx","module","fetchData","accountInfo","getAccountInfo","decodeUpgradeableLoaderState","programdataAccountInfo","programdataAddress","programData","UPGRADEABLE_LOADER_STATE_LAYOUT","u32","latestBuildsResp","latestBuilds","verified","build","slot","toNumber","verified_slot","IDL_ACCOUNT_LAYOUT","splitArgsAndCtx","inputLen","InstructionNamespaceFactory","encodeFn","ixArgs","remainingAccounts","accs","accountsArray","rpcAccs","pubkey","isWritable","isMut","isSigner","RpcFactory","txFn","TransactionFactory","ixFn","preInstructions","postInstructions","StateClient","coder","_programId","_address","programStateAddress","_sub","rpc","ixItem","programSigner","SystemProgram","txItem","TransactionNamespaceFactory","rpcItem","RpcNamespaceFactory","addr","subscribe","ee","EventEmitter","listener","onAccountChange","emit","unsubscribe","removeAccountChangeListener","catch","registrySigner","AccountClient","_idlAccount","_coder","_size","fetchNullable","addresses","rpcUtil.getMultipleAccounts","filters","getProgramAccounts","sub","subscriptions","warn","signer","sizeOverride","fromPubkey","newAccountPubkey","space","getMinimumBalanceForRentExemption","pubkeyUtil.associated","PROGRAM_LOG_START_INDEX","PROGRAM_DATA_START_INDEX","EventManager","_eventParser","EventParser","_eventCallbacks","_eventListeners","_listenerIdCount","_onLogsSubscriptionId","onLogs","parseLogs","allListeners","listenerCb","listeners","removeOnLogsListener","undefined","logScanner","LogScanner","execution","ExecutionContext","newProgram","didPop","handleLog","handleProgramLog","handleSystemLog","logStr","logStart","IDL","version","AccountsResolver","_args","_accounts","_idlIx","_accountNamespace","_accountStore","AccountStore","accountDesc","accountDescName","pda","autoPopulatePda","CONST_ACCOUNTS","seedDesc","parseProgramId","toBufferConst","argValue","accountValue","toBufferArg","toBufferAccount","toBufferValue","seedArgName","path","idlArgPosition","argDesc","pathComponents","fieldPubkey","fetchAccount","parseAccountValue","accountField","writeUInt16LE","bU64","writeBigUInt64LE","BigInt","utf8.encode","systemProgram","tokenProgram","associatedTokenProgram","rent","SYSVAR_RENT_PUBKEY","_cache","MethodsBuilderFactory","rpcFn","simulateFn","accountNamespace","MethodsBuilder","_ixFn","_txFn","_rpcFn","_simulateFn","_accountsResolver","_signers","_remainingAccounts","ixs","_preInstructions","_postInstructions","Program","_events","simulate","accountFns","InstructionFactory","simulateItem","resp","methodItem","fetchIdl","idlAddr","inflatedIdl","utf8.decode","Spl","web3_js_1","features","error_js_1","enumerable","BNLayout","buffer_layout_1","signed","num","bn_js_1","fromTwos","toTwos","toArrayLike","OptionLayout","vecU8","elementLayout","wrappedLayout","receivedTag","eq","discriminant","unionLayout","MapEntryLayout","keyLayout","valueLayout","keyBytes","generateErrorMap","generateAccountParsersFromCoder","accountNames","parsers","anchorModule","anchor","AnchorProviderClass","AnchorProvider","makeAnchorProvider","saberProvider","SuperCoder","eventParser","programID","generateAnchorAccounts","errorMap","accountsList","accountTypeDefs","accountParsers","el","discriminatorsByAccount","makeGPAFilter","utils","parseProgramLogEvents","encodeIX","find","encoded","parseInstruction","txInstruction","decoded","fmt","getProgram","MerkleDistributorJSON","PROGRAM_ID","__awaiter","_arguments","P","generator","fulfilled","step","findClaimStatusKey","distributor","toBytes","MerkleTree","elements","_elements","sort","equals","bufDedup","_bufferElementPositionIndex","memo","_layers","getLayers","layers","nextLayerIndex","invariant","getNextLayer","layer","pairEl","combinedHash","first","second","keccak_256","sortAndConcat","getRoot","getHexRoot","getProof","initialIdx","proof","pairElement","pairIdx","getPairElement","getHexProof","some","bufArrToHexArr","BalanceTree","balances","_tree","toNode","pair","item","toBytes32Array","parseBalanceMap","dataByAddress","earnings","parsedNum","lte","sortedAddresses","addressData","claims","tokenTotal","merkleRoot","MerkleDistributorWrapper","sdk","distributorATA","merkleDistributor","getATAAddress","tokenMint","baseKey","Keypair","bump","newDistributor","maxTotalClaim","maxNumNodes","payer","getOrCreateATA","TransactionEnvelope","claimIX","claimant","claimStatus","claim","unshift","getClaimStatus","reload","MerkleDistributorSDK","withSigner","load","aug","SolanaAugmentedProvider","loadDistributor","createDistributor","firstAggregateError","firstError","remErrors","RequestUnitsLayout","BufferLayout","RequestHeapFrameLayout","COMPUTE_BUDGET_PROGRAM","MEMO_PROGRAM_ID","noop","suppressConsoleErrorAsync","oldConsoleError","fn","TXSizeEstimationError","underlyingError","EstimatedTXTooBigError","estimateTransactionSize","txEnvelope","estimateSize","simpleInstruction","fs","getFakeSigner","toPubkey","isolatedInstructionSize","randomProvider","marginalInstructionSize","previousInstructions","previousTxSize","instructionsSize","instructionedTx","fakeSigner","pubkeyCache","CachedPublicKey","_base58","other","getOrCreatePublicKey","pk","cached","gpaCache","getProgramAddress","normalizedSeeds","concatSeeds","cacheKey","simulateTransactionWithCommitment","connectionInner","transactionTyped","wireTransaction","encodedTransaction","config","calculateTxSizeUnsafe","hasFeePayerSigned","signatures","numSigners","signatureCount","rem_len","elem","shortvecEncodeLength","RECENT_BLOCKHASH_STUB","generateInspectLinkFromBase64","cluster","base64TX","encodeURIComponent","PACKET_DATA_SIZE","ASSOCIATED_TOKEN_PROGRAM_ID","filterRequiredSigners","requiredSigners","flatMap","rs","prepend","addInstructions","addSigners","estimateSizeUnsafe","builtTx","suppressConsoleError","buildPartition","partition","env","lastTXEnv","_filterRequiredSigners","lastEstimation","nextIXs","nextSigners","nextTXEnv","nextEstimation","generateInspectLink","verifySigners","simulateUnchecked","simulateTable","simulation","transactionLogs","computeUnitLogStack","cpiLogStack","currentIndex","cpiMatch","cur","computeMatch","instructionTable","computeUnitLog","computeUnitMatch","quota","iso","mar","cum","CPI","printTXTable","sign","broadcaster","broadcast","wait","combine","writableKeys","inst","instructionsJSON","debugStr","ser","sg","addMemo","rest","addedTX","firstTX","sendAll","dedupeATAIXs","seenATAs","ataKey","splitATAIXs","ataIXs","newTx","getInstruction","createMemoInstruction","addAdditionalComputeBudget","units","additionalFee","requestComputeUnitsInstruction","addAdditionalHeapFrame","requestHeapFrameInstruction","DEFAULT_PROVIDER_OPTIONS","DEFAULT_READONLY_PUBLIC_KEY","SolanaTransactionSigner","SolanaProvider","accountId","sendConnection","SingleConnectionBroadcaster","broadcastConnections","firstBroadcastConnection","MultipleConnectionBroadcaster","theTx","signAll","simTX","walletKey","newTX","PendingTransaction","requestAirdrop","SignerWallet","_receipt","receipt","useWebsocket","retryOpts","awaitSignatureConfirmation","pollForReceipt","promiseRetry","TransactionReceipt","retry","retries","minTimeout","generateSolanaExplorerLink","getEvents","printLogs","computeUnits","consumeLog","amtStr","getLatestBlockhash","connections","any","conn","AggregateError","_sendRawTransaction","transactions","createProvider","b64","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","rt","abs","isNaN","LN2","require$$0","ieee754","require$$1","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","setPrototypeOf","encodingOrOffset","allocUnsafe","string","isEncoding","actual","fromString","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","hi","lo","utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","poolSize","allocUnsafeSlow","_isBuffer","x","y","list","swap16","swap32","swap64","toLocaleString","inspect","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeUInt32BE","writeBigUInt64BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","E","getMessage","Base","writable","configurable","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","INVALID_BASE64_RE","leadSurrogate","toByteArray","base64clean","dst","alphabet","i16","BufferBigIntNotDefined","ctor","superCtor","super_","TempCtor","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","isString","primitive","simple","isNull","formatPrimitive","visibleKeys","arrayToHash","isError","formatError","isRegExp","isDate","Date","ar","braces","toUTCString","formatProperty","formatArray","reduceToSingleString","getOwnPropertyDescriptor","isObject","objectToString","isPrimitive","o","_functionsHaveNames","hasOwn","objectKeys","pSlice","functionsHaveNames","pToString","arrbuf","fail","regex","getName","AssertionError","expected","operator","generatedMessage","truncate","stackStartFunction","captureStackTrace","fn_name","next_line","substring","something","utilInspect","rawname","_deepEqual","strict","memos","getTime","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","actualVisitedObjects","getPrototypeOf","aIsArgs","isArguments","bIsArgs","ka","kb","objEquiv","object","expectedException","_throws","shouldThrow","block","_tryBlock","userProvidedMessage","isUnexpectedException","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","nameWithProperty","Class","layout_","boundConstructor_","GreedyCount","elementSpan","rem","Int","IntBE","divmodInt64","roundedInt64","NearUInt64BE","NearInt64","NearInt64BE","Float","FloatBE","Double","DoubleBE","Sequence","elo","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","CString","srcb","UTF8","maxSpan","Constant","sendAndConfirmTransaction","title","realSendAndConfirmTransaction","FAILED_TO_FIND_ACCOUNT","INVALID_ACCOUNT_OWNER","pubkeyToBuffer","isAccount","accountOrPublicKey","AuthorityTypeCodes","MintTokens","FreezeAccount","AccountOwner","CloseAccount","NATIVE_MINT","MintLayout","AccountLayout","MultisigLayout","Token","_defineProperty","associatedProgramId","mintAccount","token","balanceNeeded","getMinBalanceRentForExemptMint","createInitMintInstruction","getMinBalanceRentForExemptAccount","newAccount","mintPublicKey","createInitAccountInstruction","getAssociatedTokenAddress","createAssociatedTokenAccountInternal","createAssociatedTokenAccountInstruction","multisigAccount","getMinBalanceRentForExemptMultisig","dataLayout","info","mintInfo","mintAuthorityOption","supply","isInitialized","delegateOption","delegate","delegatedAmount","isFrozen","isNativeOption","rentExemptReserve","isNative","closeAuthorityOption","closeAuthority","multisig","multisigInfo","signer1","signer2","signer3","signer4","signer5","signer6","signer7","signer8","signer9","signer10","signer11","destination","multiSigners","ownerPublicKey","createTransferInstruction","createApproveInstruction","createRevokeInstruction","currentAuthority","currentAuthorityPublicKey","createSetAuthorityInstruction","createMintToInstruction","createBurnInstruction","authorityPublicKey","createCloseAccountInstruction","createFreezeAccountInstruction","createThawAccountInstruction","createTransferCheckedInstruction","createApproveCheckedInstruction","createMintToCheckedInstruction","createBurnCheckedInstruction","nativeAccount","createSyncNativeInstruction","commandDataLayout","encodeLength","associatedAccount","getATAAddressSync","TokenMintLayout","deserializeMint","createATAInstruction","ZERO","JSBI","ONE","Rounding","parseBigintIsh","bigintIsh","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","toFixedRounding","roundDown","roundHalfUp","roundUp","Fraction","numerator","denominator","compareTo","equalTo","greaterThan","multiplier","fractionish","isFraction","quotient","remainder","invert","otherParsed","tryParseFraction","subtract","lessThan","multiply","divide","toSignificant","significantDigits","groupSeparator","rounding","precision","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","asFraction","asNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","parseFloat","isZero","isNonZero","ONE_HUNDRED","toPercent","fraction","Percent","frac","bps","isPercent","getSeparator","separatorType","locale","NumberFormat","formatToParts","part","ENV","RAW_SOL_MINT","_mintAccount","network","chainIdToNetwork","chainId","isRawSOL","symbol","icon","logoURI","tokensEqual","hasTag","tags","ChainId","Localnet","fromMint","mintAccountInfo","rawSol","wrappedSol","makeTokenForAllNetworks","MainnetBeta","devnet","Devnet","testnet","Testnet","localnet","NETWORK_TO_CHAIN_ID","CHAIN_ID_TO_NETWORK","_createClass","defineProperties","props","descriptor","Constructor","protoProps","staticProps","_react","require","_react2","_interopRequireDefault","_propTypes2","_event","_scrollParent2","_debounce2","_throttle2","__esModule","default","_classCallCheck","instance","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","defaultBoundingClientRect","LISTEN_FLAG","passiveEventSupported","passiveEvent","capture","passive","checkVisible","component","ref","HTMLElement","parent","visible","ownerDocument","document","documentElement","parentTop","parentLeft","parentHeight","parentWidth","_parent$getBoundingCl","getBoundingClientRect","height","width","windowInnerHeight","innerHeight","clientHeight","windowInnerWidth","innerWidth","clientWidth","intersectionTop","intersectionLeft","intersectionHeight","intersectionWidth","_node$getBoundingClie","offsetTop","offsetLeft","offsets","checkOverflowVisible","offsetWidth","offsetHeight","getClientRects","elementHeight","_node$getBoundingClie2","checkNormalVisible","once","forceUpdate","unmountIfInvisible","purgePending","splice","lazyLoadHandler","delayType","finalLazyLoadHandler","LazyLoad","_Component","_this","setRef","scrollport","scrollContainer","querySelector","needResetFinalLazyLoadHandler","debounce","off","throttle","getAttribute","listenerCount","setAttribute","_props","scroll","resize","on","removeAttribute","element","_props2","children","placeholder","className","classNamePrefix","createElement","Component","propTypes","bool","oneOfType","arrayOf","defaultProps","getDisplayName","WrappedComponent","displayName","immediate","timeout","context","timestamp","later","setTimeout","callNow","attachEvent","detachEvent","excludeStaticParent","position","overflowRegex","parentNode","getComputedStyle","overflowX","overflowY","threshhold","scope","deferTimer","now","clearTimeout","_typeof","isDeepEqual","isDeepStrictEqual","_require$codes","ERR_AMBIGUOUS_ARGUMENT","ERR_INVALID_ARG_VALUE","ERR_INVALID_RETURN_VALUE","ERR_MISSING_ARGS","_require$types","isPromise","objectAssign","objectIs","is","lazyLoadComparison","comparison","warned","NO_EXCEPTION_SENTINEL","innerFail","innerOk","argLen","stackStartFn","_len","_key","internalMessage","argsLen","process","emitWarning","errArgs","Comparison","compareExceptionKey","getActual","checkIsPromise","waitForActual","promiseFn","resultPromise","expectsError","details","fnType","expectsNoError","_len6","_key6","_len2","_key2","rejects","_len3","_key3","_len4","_key4","doesNotReject","_len5","_key5","newErr","origStack","tmp2","tmp1","_defineProperties","_assertThisInitialized","_wrapNativeSuper","Function","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","isNativeReflectConstruct","construct","sham","Parent","endsWith","search","this_len","blue","green","red","white","kReadableOperator","strictEqualObject","notStrictEqualObject","notIdentical","copyError","inspectValue","compact","maxArrayLength","breakLength","showProxy","sorted","getters","createErrDiff","lastPos","skipped","actualInspected","actualLines","expectedLines","indicator","inputLength","stderr","isTTY","columns","maxCount","repeat","maxLines","_actualLines","printedLines","skippedMsg","expectedLine","actualLine","divergingLines","_Error","stackTraceLimit","getColorDepth","_res","knownOperators","custom","ownKeys","getOwnPropertySymbols","_objectSpread","util","createErrorType","NodeError","_Base","arg1","arg2","arg3","oneOf","thing","determiner","reason","inspected","_slicedToArray","_arrayWithHoles","_n","_e","_s","_i","_iterableToArrayLimit","_nonIterableRest","regexFlagsSupported","arrayFromSet","arrayFromMap","objectGetOwnPropertySymbols","uncurryThis","propertyIsEnumerable","isAnyArrayBuffer","isMap","isNativeError","isBoxedPrimitive","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isFloat32Array","isFloat64Array","isNonIndex","getOwnNonIndexProperties","innerDeepEqual","val1","val2","buf1","buf2","val1Tag","keys1","keys2","keyCheck","areSimilarTypedArrays","areSimilarFloatArrays","_keys","_keys2","isEqualBoxedPrimitive","getEnumerables","iterationType","aKeys","bKeys","symbolKeysA","symbolKeysB","_symbolKeysB","val2MemoA","val2MemoB","areEq","setHasEqualElement","setValues","findLooseMatchingPrimitives","prim","setMightHaveLoosePrim","altValue","mapMightHaveLoosePrim","curB","mapHasEqualEntry","key1","item1","key2","aValues","bValues","_val","setEquiv","aEntries","_aEntries$i","item2","bEntries","_i2","_bEntries$_i","mapEquiv","keysA","GLOBAL","MAX_DP","MAX_POWER","NAME","INVALID","INVALID_DP","DIV_BY_ZERO","UNDEFINED","NUMERIC","round","sd","rm","xc","doExponential","isNonzero","cmp","isneg","yc","dp","bl","bt","ri","bz","ai","al","rl","qc","qi","gt","gte","lt","minus","xlty","plus","xe","ye","mod","ygtx","times","one","prec","sqrt","half","toExponential","NE","PE","toPrecision","_Big_","nl","roundHalfEven","define","bindConstructorLayout","greedy","u8","u16","u24","u40","u48","nu64","u16be","u24be","u32be","u40be","u48be","nu64be","s8","s16","s24","s32","s40","s48","ns64","s16be","s24be","s32be","s40be","s48be","ns64be","f32","f32be","f64","f64be","seq","unionLayoutDiscriminator","cstr","utf8","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","globalScope","MAX_DIGITS","toExpNeg","toExpPos","LN10","external","decimalError","invalidArgument","exponentOutOfRange","mathfloor","mathpow","isDecimal","BASE","MAX_SAFE_INTEGER","MAX_E","carry","xd","yd","Ctor","pr","checkInt32","digitsToString","ws","indexOfLastWord","getZeroString","absoluteValue","comparedTo","xdL","ydL","dividedBy","dividedToIntegerBy","idiv","exponent","getBase10Exponent","greaterThanOrEqualTo","isint","isNegative","isPositive","ispos","lessThanOrEqualTo","logarithm","wpr","ln","modulo","naturalExponential","exp","naturalLogarithm","negated","neg","z","squareRoot","rL","toDecimalPlaces","todp","toInteger","toint","toPower","yIsInt","yn","tosd","multiplyInteger","temp","aL","bL","prod","prodL","qd","remL","rem0","xi","xL","yd0","yL","yz","getLn10","zs","c0","x2","parseDecimal","rd","doRound","xdi","xLTy","isExp","ps","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","hasSymbols","toStr","origDefineProperty","hasPropertyDescriptors","supportsDescriptors","predicate","predicates","firstSource","nextSource","keysArray","nextIndex","nextKey","$defineProperty","GetIntrinsic","hasArrayLengthDefineBug","callBind","implementation","getPolyfill","shim","filename","mime","bom","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","display","href","download","appendChild","click","removeChild","revokeObjectURL","ERROR","WINDOW","JS_SHA256_NO_WINDOW","WEB_WORKER","NODE_JS","JS_SHA256_NO_NODE_JS","versions","COMMON_JS","JS_SHA256_NO_COMMON_JS","AMD","ARRAY_BUFFER","JS_SHA256_NO_ARRAY_BUFFER","HEX_CHARS","EXTRA","SHIFT","K","OUTPUT_TYPES","blocks","JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW","createOutputMethod","outputType","is224","Sha256","update","createMethod","nodeWrap","crypto","eval","algorithm","nodeMethod","createHash","digest","createHmacOutputMethod","HmacSha256","createHmacMethod","sharedMemory","h0","h1","h2","h3","h4","h5","h6","h7","hBytes","finalized","hashed","oKeyPad","iKeyPad","inner","notString","lastByteIndex","finalize","s0","maj","t1","ab","da","cd","bc","g","hex","dataView","setUint32","innerHash","sha224","hmac","imul","clz32","__kMaxLength","digit","radix","__toStringBasePowerOfTwo","__toStringGeneric","newLength","__clz30","__digit","summand","mLow","mHigh","high","dLow","dHigh","pLow","__imul","pMid1","pMid2","__setDigit","startIndex","halfDigits","__halfDigit","__setHalfDigit","subtrahend","borrow","current","r0","r15","D","__unsignedDigit","digitIndex","previous","updated","__zero","__isOneDigitInt","__oneDigit","__fromDouble","__fromString","SyntaxError","__toPrimitive","xLength","xMsd","msdLeadingZeros","xBitLength","currentDigit","mantissaHigh","mantissaHighBitsUnset","mantissaLow","mantissaLowBitsUnset","u","__decideRounding","signBit","__kBitConversionInts","__kBitConversionDouble","__copy","__absoluteSubOne","__trim","__absoluteAddOne","unaryMinus","expValue","__kMaxLengthBits","neededDigits","__initializeDigits","msd","runningSquare","resultLength","__clzmsd","__multiplyAccumulate","__absoluteCompare","resultSign","divisor","__absoluteDivSmall","__absoluteDivLarge","remainderDigit","__absoluteModSmall","__absoluteAdd","__absoluteSub","__rightShiftByAbsolute","__leftShiftByAbsolute","__compareToBigInt","__absoluteAnd","y1","__absoluteOr","__absoluteAndNot","__absoluteXor","neededLength","topDigit","compareDigit","__truncateToNBits","__truncateAndSubFromPowerOfTwo","bitsInTopDigit","__toNumeric","__isBigInt","__compare","EQ","__equalToNumber","dataview","asIntN","DataViewGetBigUint64","getUint32","DataViewSetBigUint64","asUintN","d1","mantissaBitsUnset","topUnconsumedBit","digits","kMantissaHighTopBit","msdTopBit","remainingMantissaBits","cursor","__isWhitespace","bitsPerChar","__kMaxBitsPerChar","roundup","__kBitsPerCharTableMultiplier","__kBitsPerCharTableShift","limDigit","limAlpha","partsBits","__fillFromParts","charsSoFar","digitsSoFar","__inplaceMultiplyAdd","bitsInDigit","partBits","charMask","charsRequired","availableBits","newDigit","__kConversionChars","consumedBits","isRecursiveCall","secondHalf","bitLength","minBitsPerChar","secondHalfChars","conqueror","exponentiate","divisionResult","firstHalf","leftNegative","bothNegative","xSign","__unequalSign","__absoluteGreater","__absoluteLess","ySign","yAbs","xDigit","__compareToDouble","rawExponent","yBitLength","compareMantissa","__comparisonResultToBool","__compareToNumber","__setDigitGrow","yLength","numPairs","tmpLength","diff","multiplicand","accumulator","accumulatorIndex","m2Low","m2High","m1","m1Low","m1High","rLow","rMid1","rMid2","factor","rx","ry","upperHalf","lowerHalf","dividend","wantQuotient","wantRemainder","__halfDigitLength","n2","qhatv","__clz15","__specialLeftShift","vn1","halfDigitBuffer","qhat","ujn","rhat","vn2","ujn2","__internalMultiplyAdd","__inplaceSub","__inplaceAdd","__inplaceRightShift","addDigit","__toShiftAmount","digitShift","bitsShift","grow","__rightShiftByMaximum","mustRoundDown","hint","exoticToPrim","resultMsd","msdBitsConsumed","minuendMsd","__kBitConversionBuffer","S","symbolTag","reAsciiWord","reLatin","rsComboMarksRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsOptVar","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","freeGlobal","freeSelf","deburrLetter","hasUnicode","stringToArray","unicodeToArray","asciiToArray","symbolProto","symbolToString","baseToString","isObjectLike","isSymbol","castSlice","baseSlice","upperFirst","iteratee","initAccum","arrayReduce","pattern","guard","hasUnicodeWord","unicodeWords","asciiWords","words","deburr","strSymbols","chr","trailing","HASH_UNDEFINED","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","reIsUint","typedArrayTags","freeExports","nodeType","freeModule","freeProcess","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arraySome","isHostObject","mapToArray","setToArray","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","uid","IE_PROTO","funcToString","reIsNative","nativeKeys","getNative","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolValueOf","Hash","clear","entry","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","baseTimes","skipIndexes","isIndex","assocIndexOf","getMapData","cache","pairs","LARGE_ARRAY_SIZE","fromRight","baseFor","keysFunc","iterable","baseGet","isKey","castPath","toKey","baseHasIn","baseIsEqual","customizer","bitmask","equalFunc","objIsArr","othIsArr","objTag","othTag","getTag","objIsObj","othIsObj","isSameTag","equalArrays","convert","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","othLength","skipCtor","objValue","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","isMasked","baseIteratee","identity","srcValue","isStrictComparable","matchesStrictComparable","defaultValue","hasFunc","isLength","hasPath","hasIn","UNORDERED_COMPARE_FLAG","baseMatchesProperty","matchData","getMatchData","noCustomizer","baseIsMatch","baseMatches","basePropertyDeep","baseKeys","isPrototype","stringToPath","arrValue","othIndex","isKeyable","getValue","ctorString","memoize","quote","resolver","memoized","Cache","isArrayLike","isArrayLikeObject","baseUnary","baseForOwn","1","isNumeric","hasSymbol","mathceil","bignumberError","tooManyDigits","LOG_BASE","POWS_TEN","SQRT_BASE","MAX","BigNumber","pow2_53","random53bitInt","decimal","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","groupSize","secondaryGroupSize","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","intCheck","isNum","caseChanged","arrL","klo","khi","xlo","xhi","ne","toFixedPoint","pows10","ni","getRandomValues","EXPONENTIAL_AT","RANGE","rand","convertBase","baseOut","yc0","parseNumeric","nIsBig","nIsNeg","isModExp","nIsOdd","isOdd","normalise","sqrtBase","xcL","ycL","zc","ylo","yhi","coeffToString","rep","g1","g2","intPart","fractionPart","isNeg","intDigits","n1","md","n0","d2","d0","globalObject","languageTag","delimiters","thousands","abbreviations","thousand","million","billion","trillion","spaceSeparated","ordinal","binarySuffixes","decimalSuffixes","currency","currencyFormat","thousandSeparated","totalLength","spaceSeparatedCurrency","formats","fourDigits","fullWithTwoDecimals","mantissa","fullWithTwoDecimalsNoCurrency","fullWithNoDecimals","globalState","validating","parsing","powers","defaultOptions","characteristic","forceAverage","average","optionalMantissa","negative","forceSign","roundingFunction","spaceSeparatedAbbreviation","currentBytes","general","scale","suffixes","marker","binary","_format","providedFormat","numbro","parseFormat","validateFormat","postfix","currentCurrency","clonedFormat","currencyPosition","currencySymbol","lowPrecision","formatNumber","_value","formatOrDefault","currentCurrencyDefaultFormat","prefixSymbol","currentPercentageDefaultFormat","_state$currentBytes","localBinarySuffixes","localDecimalSuffixes","baseInfo","_getFormatByteUnits","getFormatByteUnits","defaults","currentByteDefaultFormat","currentTimeDefaultFormat","hours","minutes","seconds","ordinalFn","currentOrdinal","currentOrdinalDefaultFormat","power","zeroes","_result$split2","_base$split2","_base$split2$","replaceDelimiters","currentDelimiters","thousandSeparator","thousandsSize","hasNegativeSign","counter","_ref3","_ref3$state","_ref3$defaults","currentDefaults","hasZeroFormat","getZeroFormat","_ref2","_ref2$characteristicP","characteristicPrecision","_value$toExponential$2","numberString","exponential","optionalCharacteristic","mantissaPrecision","trimMantissa","abbreviation","_ref","_ref$lowPrecision","_ref$spaceSeparated","_ref$totalLength","_ref$roundingFunction","characteristicLength","currentAbbreviations","_data","_result$toString$spli2","currentCharacteristic","_result$toString$spli3","currentMantissa","hasTrailingZeroes","_result$toString$spli5","missingZeros","defaultFormat","getByteUnit","getBinaryByteUnit","getDecimalByteUnit","enUS","currentLanguageTag","languages","zeroFormat","globalDefaults","chooseLanguage","currentLanguageData","currentLanguage","ordinalFormat","byteFormat","percentageFormat","timeFormat","setDefaults","setZeroFormat","languageData","registerLanguage","useLanguage","validateLanguage","setLanguage","fallbackTag","matchingLanguageTag","each","loadLanguagesInNode","_subtract","otherValue","isNumbro","difference","validator","loader","unformatter","formatter","manipulate","Numbro","normalizeInput","unformat","language","defaultCurrencyFormat","validate","allSuffixes","escapeRegExp","unformatValue","inputString","computeUnformattedValue","stripped","newInput","possibleOrdinalValue","ordinalString","inversedAbbreviations","abbreviationValues","numberOfAbbreviations","segments","bcp47RegExp","validFormat","validValues","restriction","mandatory","restrictions","validLanguage","timeDefaults","validateInput","validateSpec","toValidate","spec","skipMandatoryCheck","results","_data$restrictions$i","_toConsumableArray","validInput","isFormatValid","keysShim","isArgs","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","keysWorksWithArguments","callee","postMessage","protocol","dynamicTyping","M","dynamicTypingFunction","worker","WORKERS_SUPPORTED","BLOB_URL","Worker","onmessage","id","userStep","userChunk","userComplete","complete","userError","workerId","NODE_STREAM_INPUT","readable","File","stream","unparse","BAD_DELIMITERS","quotes","skipEmptyLines","newline","quoteChar","escapeChar","escapeFormulae","RECORD_SEP","UNIT_SEP","BYTE_ORDER_MARK","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","jQuery","attr","files","inputElem","instanceConfig","extend","before","action","_handle","_finished","_completed","_halted","_input","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","streamer","_config","parseChunk","beforeFirstChunk","paused","preview","WORKER_ID","finished","_sendError","_readChunk","_chunkLoaded","_chunkError","downloadRequestBody","downloadRequestHeaders","getResponseHeader","webkitSlice","mozSlice","FileReaderSync","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","_streamCleanUp","removeListener","transformHeader","row","comments","successful","bestDelimiter","delimitersToGuess","getCharIndex","O","I","T","A","fastMode","L","C","R","linebreak","truncated","terminate","errcode","isRetryError","operation","attempt","retried","ErrClass","RetryOperation","timeouts","forever","unref","maxRetryTime","maxTimeout","randomize","createTimeout","random","original","mainError","_originalTimeouts","_timeouts","_options","_maxRetryTime","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_cachedTimeouts","reset","stop","currentTime","timer","timeoutOps","cb","try","attempts","counts","mainErrorCount","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","bigint","elementType","instanceOf","objectOf","shape","exact","checkPropTypes","PropTypes","CopyToClipboard","_copyToClipboard","_excluded","enumerableOnly","symbols","getOwnPropertyDescriptors","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","NewTarget","_React$PureComponent","_super","_this$props","onCopy","Children","only","onClick","_this$props2","cloneElement","PureComponent","condition","nd","intd","intp","fracp","dsep","gsep","gsize","sgsize","fgsep","fgsize","tfmt","cfmt"],"sourceRoot":""}