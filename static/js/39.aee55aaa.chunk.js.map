{"version":3,"file":"static/js/39.aee55aaa.chunk.js","mappings":"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","sources":["os/configs/sol.config.ts","os/configs/register.config.ts","os/configs/stat.config.ts","os/configs/index.ts","os/providers/ui.provider.tsx","os/providers/pool.provider.tsx","os/providers/wallet.provider.tsx","os/providers/account.provider.tsx","shared/tokenProvider/supplementary.ts","shared/tokenProvider/index.ts","os/providers/mint.provider.tsx","os/store/accounts.reducer.ts","os/store/flags.reducer.ts","os/store/index.ts","os/store/mints.reducer.ts","os/store/page.reducer.ts","os/store/pools.reducer.ts","os/store/search.reducer.ts","os/store/ui.reducer.ts","os/store/walkthrough.reducer.ts","os/store/wallet.reducer.ts","os/view/wallet/lib/baseWallet.ts","os/view/wallet/lib/guestWallet.ts","shared/session.ts"],"sourcesContent":["import { Net } from 'shared/runtime'\n\nconst SOLVARS = {\n  spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n  splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n}\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  sntrAddress: string\n  sntrPoolAddress: string\n  swapAddress: string\n  taxmanAddress: string\n} & typeof SOLVARS\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    ...SOLVARS,\n    node: 'https://api.devnet.solana.com',\n    sntrAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    sntrPoolAddress: '3EUPL7YQLbU6DNU5LZeQeHPXTf1MigJ2yASXA9rH5Ku4',\n    swapAddress: '4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    ...SOLVARS,\n    node: 'https://api.testnet.solana.com',\n    sntrAddress: '',\n    sntrPoolAddress: '',\n    swapAddress: '',\n    taxmanAddress: '',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    ...SOLVARS,\n    node: 'https://sentre.genesysgo.net',\n    sntrAddress: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    sntrPoolAddress: 'Aa3WZX7Xunfebp2MuAcz9CNw8TYTDL7mVrmb11rjyVm6',\n    swapAddress: 'SSW7ooZ1EbEognq5GosbygA3uWW1Hq1NsFq6TsftCFV',\n    taxmanAddress: '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_NAME !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error(\n    'Please add REACT_APP_ID, REACT_APP_NAME, REACT_APP_URL in .env.local!',\n  )\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  defaultAppId: string\n  extra: SenReg\n  senreg: string\n}\n\nconst DEFAULT_APP_ID = process.env.REACT_APP_ID\nconst devApp = {\n  [DEFAULT_APP_ID]: {\n    url: process.env.REACT_APP_URL,\n    appId: DEFAULT_APP_ID,\n    name: process.env.REACT_APP_NAME,\n    author: {\n      name: process.env.REACT_APP_AUTHOR_NAME || '',\n      email: process.env.REACT_APP_AUTHOR_EMAIL || '',\n    },\n    tags: (process.env.REACT_APP_TAGS || '')\n      .split(',')\n      .map((tag) => tag.trim()),\n    description: process.env.REACT_APP_DESCRIPTION || '',\n    verified: false,\n  },\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    defaultAppId: DEFAULT_APP_ID,\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    defaultAppId: DEFAULT_APP_ID,\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    defaultAppId: DEFAULT_APP_ID,\n    extra: {},\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net } from 'shared/runtime'\n\n/**\n * Contructor\n */\ntype Config = {\n  baseURL: string\n}\n\nconst config: Record<Net, Config> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    baseURL: 'https://stat-dev.sentre.io',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    baseURL: 'https://stat-dev.sentre.io',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    baseURL: 'https://stat.sentre.io',\n  },\n}\n\n/**\n * Module exports\n */\nexport default config\n","import { net, env } from 'shared/runtime'\nimport sol from './sol.config'\nimport register from './register.config'\nimport stat from './stat.config'\n\nconst configs = {\n  sol: sol[net],\n  register: register[env],\n  stat: stat[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n  CSSProperties,\n  useCallback,\n} from 'react'\n\nimport { ConfigProvider } from 'antd'\n\nimport {\n  useRootSelector,\n  RootState,\n  useRootDispatch,\n  RootDispatch,\n} from 'os/store'\nimport {\n  UIState,\n  setBackground as _setBackground,\n  Background,\n} from 'os/store/ui.reducer'\nimport { ConfigProviderProps } from 'antd/lib/config-provider'\n\nconst Context = createContext<UIProvider>({} as UIProvider)\n\nexport type UIProvider = {\n  ui: UIState\n  setBackground: (\n    ...args: Parameters<typeof _setBackground>\n  ) => Promise<{ background: Background }>\n}\n\n/**\n * UI Context Provider\n */\nconst UIContextProvider = ({\n  children,\n  appId,\n  style = {},\n  antd = false,\n}: {\n  children: ReactNode\n  appId: string\n  style?: CSSProperties\n  antd?: boolean | ConfigProviderProps\n}) => {\n  const dispatch = useRootDispatch<RootDispatch>()\n  const { ui } = useRootSelector((state: RootState) => state)\n  const setBackground = useCallback(\n    async (...args: Parameters<typeof _setBackground>) =>\n      await dispatch(_setBackground(...args)).unwrap(),\n    [dispatch],\n  )\n  const provider = useMemo(() => ({ ui, setBackground }), [ui, setBackground])\n  const configProvider = antd\n    ? {\n        getPopupContainer: () => document.getElementById(appId) as HTMLElement,\n        ...(typeof antd === 'object' ? antd : {}),\n      }\n    : undefined\n\n  return (\n    <Context.Provider value={provider}>\n      <section\n        id={appId}\n        style={{ height: '100%', backgroundColor: 'transparent', ...style }}\n      >\n        {configProvider ? (\n          <ConfigProvider {...configProvider}>{children}</ConfigProvider>\n        ) : (\n          children\n        )}\n      </section>\n    </Context.Provider>\n  )\n}\nexport default UIContextProvider\n\n/**\n * UI Context Consumer\n */\nconst UIComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * UI HOC\n */\nexport const withUI = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <UIComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </UIComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * UI Hook\n */\nexport const useUI = () => {\n  return useContext<UIProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { PoolsState } from 'os/store/pools.reducer'\n\nconst Context = createContext<PoolProvider>({} as PoolProvider)\n\nexport type PoolProvider = {\n  pools: PoolsState\n}\n\n/**\n * Pool Context Provider\n */\nconst PoolContextProvider = ({ children }: { children: ReactNode }) => {\n  const { pools } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ pools }), [pools])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default PoolContextProvider\n\n/**\n * Pool Context Consumer\n */\nconst PoolContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Pool HOC\n */\nexport const withPool = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <PoolContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </PoolContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Pool Hook\n */\nexport const usePool = () => {\n  return useContext<PoolProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { WalletState } from 'os/store/wallet.reducer'\n\nconst Context = createContext<WalletProvider>({} as WalletProvider)\n\nexport type WalletProvider = {\n  wallet: WalletState\n}\n\n/**\n * Wallet Context Provider\n */\nconst WalletContextProvider = ({ children }: { children: ReactNode }) => {\n  const { wallet } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ wallet }), [wallet])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default WalletContextProvider\n\n/**\n * Wallet Context Consumer\n */\nconst WalletContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Wallet HOC\n */\nexport const withWallet = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <WalletContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </WalletContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Wallet Hook\n */\nexport const useWallet = () => {\n  return useContext<WalletProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { AccountsState } from 'os/store/accounts.reducer'\n\nconst Context = createContext<AccountProvider>({} as AccountProvider)\n\nexport type AccountProvider = {\n  accounts: AccountsState\n}\n\n/**\n * Account Context Provider\n */\nconst AccountContextProvider = ({ children }: { children: ReactNode }) => {\n  const { accounts } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ accounts }), [accounts])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default AccountContextProvider\n\n/**\n * Account Context Consumer\n */\nconst AccountContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Account HOC\n */\nexport const withAccount = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <AccountContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </AccountContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Account Hook\n */\nexport const useAccount = () => {\n  return useContext<AccountProvider>(Context)\n}\n","// Pseudo native sol info\n// It's for all networks\nexport const sol = (chainId: 101 | 102 | 103) => ({\n  symbol: 'SOL',\n  name: 'Solana',\n  address: '11111111111111111111111111111111',\n  decimals: 9,\n  chainId,\n  extensions: {\n    coingeckoId: 'solana',\n  },\n  logoURI:\n    'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png',\n})\n\n// Pseudo SNTR info\n// Only for devnet and testnet\nexport const sntr = (chainId: 102 | 103) => ({\n  symbol: 'SNTR',\n  name: 'Sentre',\n  address: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n  decimals: 9,\n  chainId,\n  extensions: {\n    coingeckoId: 'sentre',\n  },\n  logoURI:\n    'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M/logo.png',\n})\n\n// Pseudo token infos for devnet\nconst supplementary = [\n  sol(103),\n  sntr(103),\n  {\n    symbol: 'wBTC',\n    name: 'Wrapped Bitcoin',\n    address: '8jk4eJymMfNZV9mkRNxJEt2VJ3pRvdJvD5FE94GXGBPM',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'bitcoin',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/qfnqNqs3nCAHjnyCgLRDbBtq4p2MtHZxw8YjSyYhPoL/logo.png',\n  },\n  {\n    symbol: 'wETH',\n    name: 'Ethereum',\n    address: '27hdcZv7RtuMp75vupThR3T4KLsL61t476eosMdoec4c',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'ethereum',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/FeGn77dhg1KXRRFeSwwMiykZnZPw5JXW6naf2aQgZDQf/logo.png',\n  },\n  {\n    symbol: 'UNI',\n    name: 'Uniswap',\n    address: 'FVZFSXu3yn17YdcxLD72TFDUqkdE5xZvcW18EUpRQEbe',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'uniswap',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/3MVa4e32PaKmPxYUQ6n8vFkWtCma68Ld7e7fTktWDueQ/logo.png',\n  },\n  {\n    symbol: 'USDC',\n    name: 'USD Coin',\n    address: '2z6Ci38Cx6PyL3tFrT95vbEeB3izqpoLdxxBkJk2euyj',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'usd-coin',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v/logo.png',\n  },\n]\n\nexport default supplementary\n","import lunr, { Index } from 'lunr'\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry'\n\nimport { net, chainId, ChainId, Net } from 'shared/runtime'\nimport supplementary, { sntr, sol } from './supplementary'\n\nclass TokenProvider {\n  private tokenMap: Map<string, TokenInfo>\n  private engine: Index | undefined\n  readonly chainId: ChainId\n  readonly cluster: Net\n  private loading: boolean\n  private queue: Array<any>\n\n  constructor() {\n    this.tokenMap = new Map<string, TokenInfo>()\n    this.engine = undefined\n    this.chainId = chainId\n    this.cluster = net\n    this.loading = false\n    this.queue = []\n    // Init\n    this._init()\n  }\n\n  private _init = async (): Promise<[Map<string, TokenInfo>, Index]> => {\n    if (this.tokenMap.size && this.engine) return [this.tokenMap, this.engine]\n    return new Promise(async (resolve) => {\n      // Queue of getters to avoid race condition of multiple _init calling\n      if (this.loading) return this.queue.push(resolve)\n      // Start\n      this.loading = true\n      // Build token list\n      let tokenList = await (await new TokenListProvider().resolve())\n        .filterByChainId(this.chainId)\n        .getList()\n      if (this.cluster === 'devnet') tokenList = tokenList.concat(supplementary)\n      if (this.cluster === 'testnet')\n        tokenList = tokenList.concat([sntr(102), sol(102)])\n      else tokenList = tokenList.concat([sol(101)])\n      // Build token map\n      tokenList.forEach((token) => this.tokenMap.set(token.address, token))\n      // Build search engine\n      this.engine = lunr(function () {\n        this.ref('address')\n        this.field('symbol')\n        this.field('name')\n        tokenList.forEach((doc) => this.add(doc))\n      })\n      // Resolve the main getter\n      resolve([this.tokenMap, this.engine])\n      // Resolve the rest of getters\n      while (this.queue.length) this.queue.shift()([this.tokenMap, this.engine])\n      // Finish\n      this.loading = false\n    })\n  }\n\n  all = async (): Promise<TokenInfo[]> => {\n    const [tokenMap] = await this._init()\n    return Array.from(tokenMap.values())\n  }\n\n  findByAddress = async (addr: string): Promise<TokenInfo | undefined> => {\n    const [tokenMap] = await this._init()\n    return tokenMap.get(addr)\n  }\n\n  find = async (keyword: string, limit = 10): Promise<TokenInfo[]> => {\n    const [tokenMap, engine] = await this._init()\n    let tokens: TokenInfo[] = []\n    if (!keyword) return []\n    const fuzzy = keyword + '~1'\n    console.log('Debug OS Isolation:', process.env.REACT_APP_ID, fuzzy)\n    engine.search(fuzzy).forEach(({ ref }) => {\n      if (tokens.findIndex(({ address }) => address === ref) < 0) {\n        const token = tokenMap.get(ref)\n        if (token) tokens.push(token)\n      }\n    })\n    return tokens.slice(0, limit)\n  }\n}\n\nexport default TokenProvider\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  useCallback,\n  ReactNode,\n  useMemo,\n} from 'react'\nimport { account } from '@senswap/sen-js'\n\nimport {\n  useRootDispatch,\n  useRootSelector,\n  RootState,\n  RootDispatch,\n} from 'os/store'\nimport { getMint as _getMint, MintsState } from 'os/store/mints.reducer'\nimport TokenProvider from 'shared/tokenProvider'\n\nconst tokenProvider = new TokenProvider()\nconst Context = createContext<MintProvider>({} as MintProvider)\n\nexport type MintProvider = {\n  mints: MintsState\n  getMint: (...args: Parameters<typeof _getMint>) => Promise<MintsState>\n  getDecimals: (mintAddress: string) => Promise<number>\n  tokenProvider: TokenProvider\n}\n\n/**\n * Mint Context Provider\n */\nconst MintContextProvider = ({ children }: { children: ReactNode }) => {\n  const dispatch = useRootDispatch<RootDispatch>()\n  const { mints, pools } = useRootSelector((state: RootState) => state)\n  const getMint = useCallback(\n    async (...args: Parameters<typeof _getMint>) =>\n      await dispatch(_getMint(...args)).unwrap(),\n    [dispatch],\n  )\n  const getDecimals = useCallback(\n    async (mintAddress: string) => {\n      if (!account.isAddress(mintAddress))\n        throw new Error('Invalid mint address')\n      // If the token is in token provider, return its decimals\n      const tokenInfo = await tokenProvider.findByAddress(mintAddress)\n      if (tokenInfo?.decimals) return tokenInfo.decimals\n      // If the token is lp, return 9 as default\n      const index = Object.values(pools).findIndex(\n        ({ mint_lpt }) => mint_lpt === mintAddress,\n      )\n      if (index >= 0) return 9\n      // Fetch from the clustters\n      const mintData = await getMint({ address: mintAddress })\n      if (mintData[mintAddress]?.decimals) return mintData[mintAddress].decimals\n      throw new Error('Cannot find mint decimals')\n    },\n    [getMint, pools],\n  )\n  const provider = useMemo(\n    () => ({ mints, getMint, getDecimals, tokenProvider }),\n    [mints, getMint, getDecimals],\n  )\n  // Context provider\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default MintContextProvider\n\n/**\n * Mint Context Consumer\n */\nconst MintContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Mint HOC\n */\nexport const withMint = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <MintContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </MintContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Mint Hook\n */\nexport const useMint = () => {\n  return useContext<MintProvider>(Context)\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, AccountData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type AccountsState = Record<string, AccountData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'accounts'\nconst initialState: AccountsState = {}\n\n/**\n * Actions\n */\n\nexport const getAccounts = createAsyncThunk(\n  `${NAME}/getAccounts`,\n  async ({ owner }: { owner: string }) => {\n    if (!account.isAddress(owner))\n      throw new Error('Invalid owner/wallet address')\n    const { splt } = window.sentre\n    const ownerPublicKey = account.fromAddress(owner)\n    const { value } = await splt.connection.getTokenAccountsByOwner(\n      ownerPublicKey,\n      { programId: splt.spltProgramId },\n    )\n    let bulk: AccountsState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = splt.parseAccountData(buf)\n      return (bulk[address] = data)\n    })\n    return bulk\n  },\n)\n\nexport const getAccount = createAsyncThunk<\n  AccountsState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getAccount`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid account address')\n  const {\n    accounts: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { splt } = window.sentre\n  const raw = await splt.getAccountData(address)\n  return { [address]: raw }\n})\n\nexport const upsetAccount = createAsyncThunk<\n  AccountsState,\n  { address: string; data: AccountData },\n  { state: any }\n>(`${NAME}/upsetAccount`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteAccount = createAsyncThunk(\n  `${NAME}/deleteAccount`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getAccounts.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteAccount.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\nimport PDB from 'shared/pdb'\n\n/**\n * Interface & Utility\n */\n\ntype FlagsState = {\n  visited: boolean\n  loading: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'flags'\nconst initialState: FlagsState = {\n  visited: true,\n  loading: true,\n}\n\n/**\n * Actions\n */\n\nexport const loadVisited = createAsyncThunk<\n  Partial<FlagsState>,\n  void,\n  { state: any }\n>(`${NAME}/loadVisited`, async (_, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet')\n  const db = new PDB(walletAddress).createInstance('sentre')\n  const visited: boolean = (await db.getItem('visited')) || false\n  return { visited }\n})\n\nexport const updateVisited = createAsyncThunk<\n  Partial<FlagsState>,\n  boolean,\n  { state: any }\n>(`${NAME}/updateVisited`, async (visited, { getState }) => {\n  const {\n    wallet: { address },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  const db = new PDB(address).createInstance('sentre')\n  await db.setItem('visited', visited)\n  return { visited }\n})\n\nexport const updateLoading = createAsyncThunk(\n  `${NAME}/updateLoading`,\n  async (loading: boolean) => {\n    return { loading }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        loadVisited.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateVisited.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import {\n  createDispatchHook,\n  createSelectorHook,\n  createStoreHook,\n  useDispatch,\n  useSelector,\n} from 'react-redux'\nimport { configureStore } from '@reduxjs/toolkit'\nimport { RootContext } from '@senhub/context'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport ui from './ui.reducer'\nimport flags from './flags.reducer'\nimport page from './page.reducer'\nimport wallet from './wallet.reducer'\nimport accounts from './accounts.reducer'\nimport mints from './mints.reducer'\nimport pools from './pools.reducer'\nimport search from './search.reducer'\nimport walkthrough from './walkthrough.reducer'\n\n/**\n * Root types\n */\nexport type RootState = ReturnType<typeof store.getState>\nexport type RootDispatch = typeof store.dispatch\n\n/**\n * Root hooks\n */\nexport const useRootStore = createStoreHook(RootContext)\nexport const useRootDispatch: typeof useDispatch =\n  createDispatchHook(RootContext)\nexport const useRootSelector: typeof useSelector =\n  createSelectorHook(RootContext)\n\n/**\n * Root store\n */\nconst store = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools('sentre'),\n  reducer: {\n    ui,\n    flags,\n    page,\n    wallet,\n    accounts,\n    mints,\n    pools,\n    search,\n    walkthrough,\n  },\n})\n\nexport default store\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, MintData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type MintsState = Record<string, MintData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'mints'\nconst initialState: MintsState = {}\n\n/**\n * Actions\n */\n\nexport const getMint = createAsyncThunk<\n  MintsState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getMint`, async ({ address, force = false }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid mint address')\n  if (!force) {\n    const {\n      accounts: { [address]: data },\n    } = getState()\n    if (data) return { [address]: data }\n  }\n  const { splt } = window.sentre\n  const raw = await splt.getMintData(address)\n  return { [address]: raw }\n})\n\nexport const upsetMint = createAsyncThunk<\n  MintsState,\n  { address: string; data: MintData },\n  { state: any }\n>(`${NAME}/upsetMint`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteMint = createAsyncThunk(\n  `${NAME}/deleteMint`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteMint.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\nimport PDB from 'shared/pdb'\nimport configs from 'os/configs'\n\nconst {\n  register: { senreg, extra },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type PageState = {\n  register: SenReg\n  appIds: AppIds\n}\n\nconst troubleshoot = (register: SenReg, appIds?: AppIds): AppIds => {\n  if (!appIds || !Array.isArray(appIds)) return []\n  return appIds.filter((appId) => register[appId])\n}\nconst fetchRegister = async () => {\n  try {\n    const res = await fetch(senreg)\n    return await res.json()\n  } catch (er) {\n    return {}\n  }\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'page'\nconst initialState: PageState = {\n  register: {},\n  appIds: [],\n}\n\n/**\n * Actions\n */\n\n// Must fetch register at very first of the process\nexport const loadRegister = createAsyncThunk(\n  `${NAME}/loadRegister`,\n  async () => {\n    const register = await fetchRegister()\n    return { register: { ...register, ...extra } }\n  },\n)\n\n// For sandbox only\nexport const installManifest = createAsyncThunk<\n  Partial<PageState>,\n  ComponentManifest,\n  { state: any }\n>(`${NAME}/installManifest`, async (manifest, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { appIds, register },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (appIds.includes(manifest.appId))\n    throw new Error('Cannot run sandbox for an installed application.')\n  const newAppIds: AppIds = [...appIds]\n  newAppIds.push(manifest.appId)\n  const newRegister: SenReg = { ...register }\n  newRegister[manifest.appId] = manifest\n  return { appIds: newAppIds, register: newRegister }\n})\n\n/**\n * App Actions\n */\nexport const loadPage = createAsyncThunk<\n  Partial<PageState>,\n  void,\n  { state: any }\n>(`${NAME}/loadPage`, async (_, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { register },\n  } = getState()\n\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  // Fetch user's apps\n  const db = new PDB(walletAddress).createInstance('sentre')\n  const appIds = troubleshoot(\n    register,\n    (await db.getItem('appIds')) || initialState.appIds,\n  )\n  return { appIds }\n})\n\nexport const updatePage = createAsyncThunk<\n  Partial<PageState>,\n  AppIds,\n  { state: any }\n>(`${NAME}/updatePage`, async (appIds, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { register },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  appIds = troubleshoot(register, appIds)\n  const db = new PDB(walletAddress).createInstance('sentre')\n  await db.setItem('appIds', appIds)\n  return { appIds }\n})\n\nexport const installApp = createAsyncThunk<\n  Partial<PageState>,\n  string,\n  { state: any }\n>(`${NAME}/installApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { appIds },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (appIds.includes(appId)) return {}\n  const newAppIds: AppIds = [...appIds]\n  newAppIds.push(appId)\n  const db = new PDB(walletAddress).createInstance('sentre')\n  await db.setItem('appIds', newAppIds)\n  return { appIds: newAppIds }\n})\n\nexport const uninstallApp = createAsyncThunk<\n  Partial<PageState>,\n  string,\n  { state: any }\n>(`${NAME}/uninstallApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { appIds },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (!appIds.includes(appId)) return {}\n  const newAppIds = appIds.filter((_appId: string) => _appId !== appId)\n  const pdb = new PDB(walletAddress)\n  const db = pdb.createInstance('sentre')\n  await db.setItem('appIds', newAppIds)\n  await pdb.dropInstance(appId)\n  return { appIds: newAppIds }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        loadRegister.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        installManifest.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        loadPage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updatePage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        installApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        uninstallApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, PoolData } from '@senswap/sen-js'\nimport configs from 'os/configs'\n\nconst {\n  sol: { taxmanAddress },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type PoolsState = Record<string, PoolData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'pools'\nconst initialState: PoolsState = {}\n\n/**\n * Actions\n */\n\nexport const getPools = createAsyncThunk(`${NAME}/getPools`, async () => {\n  const { swap } = window.sentre\n  // Get all pools\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await swap.connection.getProgramAccounts(swap.swapProgramId, {\n      filters: [\n        { dataSize: 257 },\n        { memcmp: { bytes: taxmanAddress, offset: 65 } },\n      ],\n    })\n  let bulk: PoolsState = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = swap.parsePoolData(buf)\n    bulk[address] = data\n  })\n  return bulk\n})\n\nexport const getPool = createAsyncThunk<\n  PoolsState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getPool`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  const {\n    pools: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { swap } = window.sentre\n  const raw = await swap.getPoolData(address)\n  return { [address]: raw }\n})\n\nexport const upsetPool = createAsyncThunk<\n  PoolsState,\n  { address: string; data: PoolData },\n  { state: any }\n>(`${NAME}/upsetPool`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getPools.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\ntype SearchState = {\n  visible: boolean\n  value: string\n  loading: boolean\n  disabled: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'search'\nconst initialState: SearchState = {\n  visible: false,\n  value: '',\n  loading: false,\n  disabled: false,\n}\n\n/**\n * Actions\n */\n\nexport const setVisible = createAsyncThunk(\n  `${NAME}/setVisible`,\n  async (visible: boolean) => {\n    return { visible }\n  },\n)\n\nexport const setValue = createAsyncThunk(\n  `${NAME}/setValue`,\n  async (value: string) => {\n    return { value }\n  },\n)\n\nexport const setLoading = createAsyncThunk(\n  `${NAME}/setLoading`,\n  async (loading: boolean) => {\n    return { loading }\n  },\n)\n\nexport const setDisabled = createAsyncThunk(\n  `${NAME}/setDisabled`,\n  async (disabled: boolean) => {\n    return { disabled }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setVisible.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setValue.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setDisabled.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type Infix = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\nexport type Theme = 'light' | 'dark'\nexport type Background = Record<Theme, string | undefined>\n\nexport type UIState = {\n  theme: Theme\n  width: number\n  infix: Infix\n  touchable: boolean\n  visibleActionCenter: boolean\n  visibleInstaller: boolean\n  background: Background\n}\n\nconst getInfix = (): Infix => {\n  const width = window.innerWidth\n  if (width < 576) return 'xs'\n  if (width < 768) return 'sm'\n  if (width < 992) return 'md'\n  if (width < 1200) return 'lg'\n  if (width < 1400) return 'xl'\n  return 'xxl'\n}\nconst isTouchable = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0\n}\nconst getTheme = (): Theme => {\n  if (window.matchMedia('(prefers-color-scheme: light)').matches) return 'light'\n  return 'dark'\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'ui'\nconst initialState: UIState = {\n  theme: getTheme(),\n  width: window.innerWidth,\n  infix: getInfix(),\n  touchable: isTouchable(),\n  visibleActionCenter: false,\n  visibleInstaller: false,\n  background: {\n    light: '',\n    dark: '',\n  },\n}\n\n/**\n * Actions\n */\n\nexport const setTheme = createAsyncThunk(\n  `${NAME}/setTheme`,\n  async (theme: Theme) => {\n    return { theme }\n  },\n)\n\nexport const resize = createAsyncThunk(`${NAME}/resize`, async () => {\n  const width = window.innerWidth\n  const infix = getInfix()\n  return { width, infix }\n})\n\nexport const setVisibleActionCenter = createAsyncThunk(\n  `${NAME}/setVisibleActionCenter`,\n  async (visible: boolean) => {\n    return { visibleActionCenter: visible }\n  },\n)\n\nexport const setVisibleInstaller = createAsyncThunk(\n  `${NAME}/setVisibleInstaller`,\n  async (visible: boolean) => {\n    return { visibleInstaller: visible }\n  },\n)\n\nexport const setBackground = createAsyncThunk(\n  `${NAME}/setBackground`,\n  async (background: Background) => {\n    return { background }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setTheme.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        resize.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisibleActionCenter.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisibleInstaller.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setBackground.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\nexport enum WalkThroughType {\n  Default,\n  NewComer,\n}\n\ntype WalkThorughState = {\n  type: WalkThroughType\n  run: boolean\n  step: number\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'walkthrough'\nconst initialState: WalkThorughState = {\n  type: WalkThroughType.Default,\n  run: false,\n  step: 0,\n}\n\n/**\n * Actions\n */\n\nexport const setWalkthrough = createAsyncThunk<\n  Partial<WalkThorughState>,\n  Partial<WalkThorughState>,\n  { state: any }\n>(`${NAME}/setWalkthrough`, async (state) => {\n  return { ...state }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setWalkthrough.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { Lamports, SPLT, Swap, WalletInterface } from '@senswap/sen-js'\n\nimport configs from 'os/configs'\nimport { GuestWallet } from 'os/view/wallet/lib'\n\n/**\n * Interface & Utility\n */\n\nexport type WalletState = {\n  visible: boolean\n  address: string\n  lamports: bigint\n}\n\nconst initializeWindow = async (wallet?: WalletInterface) => {\n  const {\n    sol: { node, spltAddress, splataAddress, swapAddress },\n  } = configs\n  window.sentre = {\n    wallet: wallet || new GuestWallet(),\n    lamports: new Lamports(node),\n    splt: new SPLT(spltAddress, splataAddress, node),\n    swap: new Swap(swapAddress, spltAddress, splataAddress, node),\n  }\n}\n\nconst destroyWindow = async () => {\n  if (window.sentre?.wallet) window.sentre.wallet.disconnect()\n  await initializeWindow()\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'wallet'\nconst initialState: WalletState = {\n  visible: false,\n  address: '',\n  lamports: BigInt(0),\n}\n\n/**\n * Actions\n */\n\nexport const openWallet = createAsyncThunk(`${NAME}/openWallet`, async () => {\n  return { visible: true }\n})\n\nexport const closeWallet = createAsyncThunk(`${NAME}/closeWallet`, async () => {\n  return { visible: false }\n})\n\nexport const connectWallet = createAsyncThunk(\n  `${NAME}/connectWallet`,\n  async (wallet: any) => {\n    if (!wallet) throw new Error('Invalid wallet instance')\n    await initializeWindow(wallet)\n    const address = await wallet.getAddress()\n    const lamports = await window.sentre.lamports.getLamports(address)\n    return { address, lamports: BigInt(lamports), visible: false }\n  },\n)\n\nexport const updateWallet = createAsyncThunk(\n  `${NAME}/updateWallet`,\n  async ({ lamports }: Partial<WalletState>) => {\n    return { lamports }\n  },\n)\n\nexport const disconnectWallet = createAsyncThunk(\n  `${NAME}/disconnectWallet`,\n  async () => {\n    await destroyWindow()\n    window.location.reload() // Reset all redux store\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        openWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        closeWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        connectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        disconnectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Transaction } from '@solana/web3.js'\nimport {\n  WalletInterface,\n  Provider,\n  Signature,\n  SignedMessage,\n} from '@senswap/sen-js'\n\nimport session from 'shared/session'\n\nclass BaseWallet implements WalletInterface {\n  readonly walletType: string\n\n  constructor(walletType: string) {\n    this.walletType = walletType\n    session.set('WalletType', this.walletType)\n  }\n\n  getProvider = async (): Promise<Provider> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  getAddress = async (): Promise<string> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  signTransaction = async (transaction: Transaction): Promise<Transaction> => {\n    const { signature, publicKey } = await this.rawSignTransaction(transaction)\n    transaction.addSignature(publicKey, signature)\n    return transaction\n  }\n\n  rawSignTransaction = async (transaction: Transaction): Promise<Signature> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  signMessage = async (message: string): Promise<SignedMessage> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ): Promise<boolean> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  disconnect = async (): Promise<void> => {\n    session.clear('WalletType')\n    const provider = await this.getProvider()\n    provider.disconnect()\n  }\n}\n\nexport default BaseWallet\n","import { Transaction } from '@solana/web3.js'\nimport { Provider } from '@senswap/sen-js'\n\nimport BaseWallet from './baseWallet'\n\nexport const GUEST_ADDRESS = 'GuestAccount11111111111111111111111111111111'\n\ntype ExpanedProvider = Provider & { address: string }\n\nclass GuestWallet extends BaseWallet {\n  constructor(callback: () => void = () => {}) {\n    super('Guest')\n\n    this._callback = callback\n  }\n\n  private _callback = () => {}\n  private _error = () => {\n    throw new Error(\n      'You are in the Guest Mode. Please connect your personal wallet to proceed the action.',\n    )\n  }\n\n  getProvider = async (): Promise<ExpanedProvider> => {\n    const provider = {\n      address: GUEST_ADDRESS,\n      disconnect: () => {},\n    }\n    return provider\n  }\n\n  getAddress = async () => {\n    const { address } = await this.getProvider()\n    return address\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    await this._callback()\n    return this._error()\n  }\n\n  signMessage = async (message: string) => {\n    await this._callback()\n    return this._error()\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    await this._callback()\n    return this._error()\n  }\n}\n\nexport default GuestWallet\n","const KEY = 'sentre'\nconst driver = window.sessionStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return false\n  }\n}\n\nconst session = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n\n  clear: (key: string) => {\n    session.set(key, null)\n  },\n}\n\nexport default session\n"],"names":["SOLVARS","spltAddress","splataAddress","devnet","node","sntrAddress","sntrPoolAddress","swapAddress","taxmanAddress","testnet","mainnet","DEFAULT_APP_ID","process","devApp","url","appId","name","author","email","tags","split","map","tag","trim","description","verified","development","defaultAppId","extra","senreg","staging","production","baseURL","sol","net","register","env","stat","Context","createContext","children","style","antd","dispatch","useRootDispatch","ui","useRootSelector","state","setBackground","useCallback","async","_setBackground","unwrap","provider","useMemo","configProvider","getPopupContainer","document","getElementById","undefined","Provider","value","id","height","backgroundColor","ConfigProvider","UIComsumer","Consumer","Children","child","cloneElement","withUI","WrappedComponent","HOC","Component","render","forwardedRef","rest","this","props","ref","forwardRef","useUI","useContext","pools","PoolContextComsumer","withPool","usePool","wallet","WalletContextComsumer","withWallet","useWallet","accounts","AccountContextComsumer","withAccount","useAccount","chainId","symbol","address","decimals","extensions","coingeckoId","logoURI","sntr","tokenProvider","constructor","tokenMap","engine","cluster","loading","queue","_init","size","Promise","push","resolve","tokenList","TokenListProvider","filterByChainId","getList","concat","supplementary","forEach","token","set","lunr","field","doc","add","length","shift","all","Array","from","values","findByAddress","get","addr","find","keyword","limit","tokens","fuzzy","console","log","search","findIndex","slice","Map","mints","getMint","_getMint","getDecimals","account","mintAddress","Error","tokenInfo","Object","mint_lpt","mintData","MintContextComsumer","withMint","useMint","NAME","getAccounts","createAsyncThunk","owner","splt","window","sentre","ownerPublicKey","connection","getTokenAccountsByOwner","programId","spltProgramId","bulk","pubkey","data","buf","toBase58","parseAccountData","getAccount","getState","getAccountData","upsetAccount","deleteAccount","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","payload","assign","loadVisited","_","walletAddress","db","PDB","createInstance","visited","getItem","updateVisited","setItem","updateLoading","createStoreHook","RootContext","createDispatchHook","createSelectorHook","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","reducer","flags","page","walkthrough","force","getMintData","upsetMint","deleteMint","configs","troubleshoot","appIds","isArray","filter","loadRegister","res","fetch","json","er","fetchRegister","installManifest","manifest","includes","newAppIds","newRegister","loadPage","updatePage","installApp","uninstallApp","_appId","pdb","dropInstance","getPools","swap","getProgramAccounts","swapProgramId","filters","dataSize","memcmp","bytes","offset","parsePoolData","getPool","getPoolData","upsetPool","setVisible","visible","setValue","setLoading","setDisabled","disabled","getInfix","width","innerWidth","theme","matchMedia","matches","infix","touchable","navigator","maxTouchPoints","visibleActionCenter","visibleInstaller","background","light","dark","setTheme","resize","setVisibleActionCenter","setVisibleInstaller","WalkThroughType","type","Default","run","step","setWalkthrough","initializeWindow","GuestWallet","lamports","Lamports","SPLT","Swap","BigInt","openWallet","closeWallet","connectWallet","getAddress","getLamports","updateWallet","disconnectWallet","disconnect","destroyWindow","location","reload","walletType","getProvider","signTransaction","signature","publicKey","rawSignTransaction","transaction","addSignature","signMessage","verifySignature","message","session","BaseWallet","callback","super","_callback","_error","KEY","driver","sessionStorage","convert","JSON","parse","e","key","stringify","clear"],"sourceRoot":""}